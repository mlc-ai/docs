Search.setIndex({"docnames": ["deep_dive/tensor_ir/abstraction", "deep_dive/tensor_ir/index", "deep_dive/tensor_ir/learning", "deep_dive/tensor_ir/tutorials/creation", "deep_dive/tensor_ir/tutorials/sg_execution_times", "deep_dive/tensor_ir/tutorials/transformation", "get_started/install", "get_started/tutorials/ir_module", "get_started/tutorials/quick_start", "get_started/tutorials/sg_execution_times", "index", "reference/api/dlight", "reference/api/error", "reference/api/index", "reference/api/instrument", "reference/api/ir", "reference/api/meta_schedule", "reference/api/relax/analysis", "reference/api/relax/block_builder", "reference/api/relax/frontend", "reference/api/relax/op", "reference/api/relax/relax", "reference/api/relax/transform", "reference/api/rpc", "reference/api/runtime/disco", "reference/api/runtime/ndarray", "reference/api/runtime/profiling", "reference/api/runtime/relax_vm", "reference/api/runtime/runtime", "reference/api/target", "reference/api/te", "reference/api/tir/analysis", "reference/api/tir/schedule", "reference/api/tir/stmt_functor", "reference/api/tir/tir", "reference/api/tir/transform", "reference/api/topi", "reference/api/transform", "reference/publications"], "filenames": ["deep_dive/tensor_ir/abstraction.rst", "deep_dive/tensor_ir/index.rst", "deep_dive/tensor_ir/learning.rst", "deep_dive/tensor_ir/tutorials/creation.rst", "deep_dive/tensor_ir/tutorials/sg_execution_times.rst", "deep_dive/tensor_ir/tutorials/transformation.rst", "get_started/install.rst", "get_started/tutorials/ir_module.rst", "get_started/tutorials/quick_start.rst", "get_started/tutorials/sg_execution_times.rst", "index.rst", "reference/api/dlight.rst", "reference/api/error.rst", "reference/api/index.rst", "reference/api/instrument.rst", "reference/api/ir.rst", "reference/api/meta_schedule.rst", "reference/api/relax/analysis.rst", "reference/api/relax/block_builder.rst", "reference/api/relax/frontend.rst", "reference/api/relax/op.rst", "reference/api/relax/relax.rst", "reference/api/relax/transform.rst", "reference/api/rpc.rst", "reference/api/runtime/disco.rst", "reference/api/runtime/ndarray.rst", "reference/api/runtime/profiling.rst", "reference/api/runtime/relax_vm.rst", "reference/api/runtime/runtime.rst", "reference/api/target.rst", "reference/api/te.rst", "reference/api/tir/analysis.rst", "reference/api/tir/schedule.rst", "reference/api/tir/stmt_functor.rst", "reference/api/tir/tir.rst", "reference/api/tir/transform.rst", "reference/api/topi.rst", "reference/api/transform.rst", "reference/publications.rst"], "titles": ["Tensor Program Abstraction", "TensorIR", "Understand TensorIR Abstraction", "TensorIR Creation", "Computation times", "Transformation", "Installing Apache TVM Unity", "IRModule", "Quick Start", "Computation times", "\ud83d\udea7 Apache TVM Unity Documentation", "tvm.dlight", "tvm.error", "API Reference", "tvm.instrument", "tvm.ir", "tvm.meta_schedule", "tvm.relax.analysis", "tvm.relax.block_builder", "tvm.relax.frontend", "tvm.relax.op", "tvm.relax", "tvm.relax.transform", "tvm.rpc", "tvm.runtime.disco", "tvm.runtime.ndarray", "tvm.runtime.profiling", "tvm.runtime.relax_vm", "tvm.runtime", "tvm.target", "tvm.te", "tvm.tir.analysis", "tvm.tir.schedule", "tvm.tir.stmt_functor", "tvm.tir", "tvm.tir.transform", "tvm.topi", "tvm.transform", "Publications"], "terms": {"befor": [0, 2, 5, 8, 14, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 31, 32, 33, 35, 36], "we": [0, 2, 3, 5, 7, 8, 12, 15, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "dive": 0, "detail": [0, 2, 7, 12, 18, 20, 21, 22, 27, 28, 32, 34, 36], "let": [0, 2, 3, 5, 7, 8, 15, 31, 34, 35], "": [0, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 38], "first": [0, 5, 6, 7, 8, 15, 17, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 34, 36], "introduc": [0, 2, 3, 18, 22, 32, 34, 35], "what": [0, 3, 19, 36], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "primit": [0, 1, 2, 5, 15, 20, 21, 22, 32], "function": [0, 1, 5, 7, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "ar": [0, 2, 3, 7, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38], "correspond": [0, 2, 7, 8, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 34, 35, 36], "singl": [0, 2, 5, 15, 19, 20, 21, 22, 26, 28, 29, 30, 31, 32, 35, 36], "unit": [0, 2, 15, 18, 19, 20, 28, 29, 32, 34], "comput": [0, 1, 3, 7, 8, 15, 18, 19, 20, 21, 22, 28, 29, 30, 32, 34, 35, 36, 38], "oper": [0, 5, 7, 8, 12, 15, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 34, 35, 36, 38], "For": [0, 2, 3, 6, 7, 8, 15, 16, 17, 19, 20, 21, 22, 28, 30, 31, 32, 34, 35, 36], "exampl": [0, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "convolut": [0, 19, 20, 31, 36], "can": [0, 2, 3, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "fuse": [0, 7, 8, 20, 22, 31, 32, 36], "relu": [0, 2, 7, 8, 18, 19, 20, 22, 36], "also": [0, 2, 3, 5, 6, 7, 8, 12, 15, 17, 18, 21, 22, 23, 27, 28, 29, 30, 32, 35, 36, 37], "usual": [0, 8, 19, 22, 26, 34, 35, 36], "typic": [0, 2, 28, 32], "implement": [0, 2, 5, 12, 14, 19, 20, 21, 22, 23, 28, 32, 34, 35, 36, 37, 38], "contain": [0, 2, 7, 8, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "follow": [0, 2, 3, 5, 6, 8, 15, 16, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38], "multi": [0, 20, 23, 24, 34, 35], "dimension": [0, 19, 20, 34, 35, 36], "buffer": [0, 1, 3, 5, 7, 8, 17, 19, 20, 22, 25, 28, 30, 31, 32, 33, 34, 35, 36], "loop": [0, 1, 3, 11, 22, 31, 32, 34, 35], "nest": [0, 2, 3, 17, 19, 21, 22, 27, 31, 32], "drive": 0, "final": [0, 19, 21, 28, 29, 36], "statement": [0, 2, 21, 28, 30, 31, 32, 33, 34, 35, 36], "themselv": 0, "from": [0, 2, 3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "tvm": [0, 1, 2, 3, 5, 7, 38], "script": [0, 2, 3, 5, 7, 8, 18, 19, 22, 28, 30, 32], "import": [0, 3, 5, 6, 18, 19, 22, 23, 28, 29, 30], "tir": [0, 3, 5, 7, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 28, 30, 36], "t": [0, 2, 3, 5, 7, 8, 15, 18, 20, 22, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37], "prim_func": [0, 2, 3, 5, 7, 8, 18, 20, 21, 22, 30, 32, 34], "def": [0, 2, 3, 5, 7, 8, 11, 14, 16, 17, 18, 19, 21, 22, 23, 27, 29, 30, 31, 32, 34, 35, 37], "main": [0, 5, 7, 8, 10, 16, 17, 18, 19, 20, 21, 22, 31, 32, 36], "A": [0, 2, 3, 5, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38], "128": [0, 2, 3, 5, 18, 19, 29, 30, 32], "float32": [0, 2, 3, 5, 7, 8, 15, 18, 19, 20, 21, 22, 25, 28, 32, 34, 35, 36, 37], "b": [0, 2, 3, 5, 6, 7, 17, 18, 19, 20, 22, 28, 30, 32, 34, 35, 36], "c": [0, 2, 3, 5, 6, 12, 14, 15, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 32, 34, 35, 36], "none": [0, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "rang": [0, 2, 3, 5, 7, 8, 15, 20, 30, 32, 34, 35, 36], "block": [0, 1, 3, 5, 7, 8, 11, 15, 16, 17, 18, 21, 22, 23, 28, 29, 30, 31, 32, 34, 35, 36, 37], "vi": [0, 2, 3, 5, 30, 32, 34], "axi": [0, 1, 3, 5, 7, 8, 15, 18, 19, 20, 22, 28, 30, 32, 34, 35, 36], "spatial": [0, 2, 3, 5, 8, 11, 18, 19, 28, 31, 32, 36], "The": [0, 2, 3, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "demonstr": [0, 3, 7, 17, 25], "calcul": [0, 15, 19, 20, 22, 31, 34, 36], "wise": [0, 17, 19, 20, 22, 30, 34, 36], "sum": [0, 3, 19, 20, 22, 24, 26, 28, 30, 32, 34, 36], "two": [0, 2, 3, 5, 7, 8, 15, 17, 19, 20, 22, 26, 30, 31, 32, 34, 35, 36, 37], "vector": [0, 20, 29, 30, 32, 34, 35, 36], "accept": [0, 19, 20, 22, 30, 34, 35, 36], "three": [0, 2, 17, 30, 31, 36], "paramet": [0, 1, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "gener": [0, 2, 3, 5, 6, 7, 15, 16, 18, 19, 20, 21, 22, 26, 28, 29, 30, 32, 33, 34, 35, 36], "one": [0, 1, 2, 3, 8, 15, 16, 19, 20, 21, 22, 27, 28, 31, 32, 34, 35, 36], "output": [0, 3, 5, 7, 8, 15, 17, 18, 19, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 36], "incorpor": [0, 2, 3, 7], "solitari": 0, "facilit": [0, 5, 21, 27], "featur": [0, 16, 22, 28, 36], "singular": 0, "crucial": [0, 2, 5], "unabl": 0, "execut": [0, 3, 4, 5, 8, 9, 12, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 32, 34, 35, 37], "arbitrari": [0, 11, 15, 32, 34, 36], "transform": [0, 1, 4, 10, 13, 14, 15, 17, 19, 20, 21, 30, 31, 32, 33, 34, 36], "certain": [0, 12, 20, 22, 32, 34, 36, 37], "reli": [0, 17], "sequenc": [0, 2, 3, 7, 15, 19, 21, 22, 24, 25, 26, 28, 32, 34, 36, 37], "fortun": 0, "major": [0, 28, 34, 36], "focu": 0, "possess": [0, 5], "favor": [0, 3], "properti": [0, 1, 11, 15, 17, 19, 21, 24, 25, 28, 29, 30, 32, 36, 37], "independ": [0, 2], "among": [0, 17], "iter": [0, 1, 3, 11, 16, 19, 26, 30, 32, 34], "instanc": [0, 2, 3, 15, 20, 22, 29, 32, 34, 35, 36, 37], "aforement": [0, 3], "includ": [0, 2, 7, 8, 15, 17, 19, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37], "annot": [0, 3, 7, 8, 15, 17, 18, 20, 21, 22, 28, 32, 34, 35], "signifi": [0, 2], "fundament": [0, 2, 3, 7], "design": [0, 2, 7, 16, 20, 21, 22, 36, 37, 38], "schedul": [0, 1, 3, 11, 13, 15, 16, 22, 29, 30, 35, 36], "mai": [0, 6, 8, 15, 17, 19, 20, 21, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "encompass": [0, 2, 7], "multipl": [0, 2, 5, 15, 19, 20, 22, 26, 28, 30, 31, 32, 34, 35, 36, 37], "opaqu": [0, 21, 31, 32, 35], "intrins": [0, 15, 20, 21, 22, 30, 32, 34, 35, 36], "core": [0, 1, 7, 16, 20, 34], "instruct": [0, 2, 6, 11, 21, 24, 27, 29, 32, 34, 35], "indic": [0, 15, 17, 18, 19, 20, 22, 30, 31, 32, 34, 35, 36, 37], "variabl": [0, 5, 6, 15, 17, 18, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37], "map": [0, 2, 11, 15, 16, 17, 18, 19, 21, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36], "all": [0, 5, 7, 8, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36, 37], "while": [0, 3, 6, 14, 19, 20, 21, 23, 28, 32, 34, 36], "thi": [0, 2, 3, 5, 6, 7, 8, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "inform": [0, 1, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 29, 30, 32, 35, 36, 37, 38], "isn": 0, "specif": [0, 2, 3, 8, 12, 15, 16, 19, 20, 21, 22, 28, 29, 30, 32, 34, 35, 36, 37], "prove": [0, 17], "us": [0, 1, 2, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "when": [0, 2, 6, 12, 14, 15, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "consequ": 0, "confid": 0, "parallel": [0, 6, 32, 34, 35], "reorder": [0, 5, 20, 21, 32, 35], "associ": [0, 2, 5, 15, 18, 20, 21, 29, 32, 34, 36, 38], "provid": [0, 2, 5, 6, 7, 8, 11, 15, 18, 19, 20, 21, 22, 24, 28, 30, 34, 35, 36, 37], "travers": 0, "index": [0, 3, 5, 7, 15, 17, 19, 20, 21, 22, 30, 32, 34, 35, 36], "0": [0, 2, 3, 4, 5, 6, 7, 8, 9, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37], "abstract": [1, 3, 7, 8, 10, 15, 16, 21, 38], "apach": [1, 2, 3, 7, 32, 38], "uniti": [1, 3, 7], "stack": [1, 3, 15, 23, 34, 36, 37], "which": [1, 2, 6, 7, 8, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36], "repres": [1, 2, 3, 8, 15, 18, 19, 20, 21, 22, 28, 29, 30, 32, 34, 35, 36], "optim": [1, 5, 7, 14, 15, 16, 19, 20, 22, 32, 35, 36, 37, 38], "tensor": [1, 2, 5, 7, 10, 15, 18, 19, 20, 21, 22, 25, 30, 31, 32, 34, 35, 36, 38], "program": [1, 2, 7, 8, 10, 15, 19, 21, 23, 26, 28, 29, 32, 38], "kei": [1, 2, 15, 18, 19, 20, 21, 22, 23, 28, 29, 31, 32, 34, 35], "element": [1, 2, 3, 5, 15, 19, 20, 23, 30, 32, 34, 36], "extra": [1, 7, 19, 21, 27, 28, 32, 36], "structur": [1, 12, 15, 16, 17, 19, 20, 21, 22, 25, 28, 30, 31, 32, 34, 36], "understand": [1, 3, 5, 10], "why": 1, "sugar": [1, 28, 32, 36], "ax": [1, 7, 8, 19, 20, 34, 36], "bind": [1, 3, 7, 15, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 34, 35, 36], "creation": [1, 4, 10, 19, 34, 36, 37], "creat": [1, 6, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "tvmscript": [1, 2, 8, 18, 28, 30, 32], "express": [1, 15, 17, 18, 19, 20, 21, 22, 28, 30, 31, 32, 34, 35, 36], "initi": [1, 3, 7, 18, 19, 21, 23, 24, 27, 28, 30, 34, 36, 37], "tile": [1, 20, 32, 36], "leverag": 1, "local": [1, 3, 6, 7, 8, 16, 17, 21, 22, 23, 32, 34, 35, 36], "rewrit": [1, 21, 22, 35, 36], "reduct": [1, 2, 8, 11, 20, 30, 32, 34, 35, 36], "trace": [1, 8, 16, 19, 30, 32, 34, 37], "standard": [2, 20, 29, 35, 36], "machin": [2, 8, 21, 23, 27, 38], "learn": [2, 11, 38], "compil": [2, 3, 6, 7, 11, 15, 19, 20, 21, 22, 23, 26, 28, 29, 30, 34, 36, 38], "framework": [2, 6, 7, 8], "princip": 2, "object": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37], "depict": 2, "hardwar": 2, "acceler": 2, "option": [2, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "thread": [2, 7, 8, 16, 24, 28, 29, 30, 32, 34, 35], "applic": [2, 5, 11, 15, 21, 36], "special": [2, 16, 19, 22, 29, 30, 32, 34, 36, 37], "memori": [2, 7, 15, 16, 17, 22, 25, 28, 31, 32, 34, 35, 36], "access": [2, 7, 15, 19, 21, 27, 28, 30, 31, 32, 34, 35, 36, 37], "To": [2, 6, 12, 14, 21, 23, 28, 32], "help": [2, 6, 7, 15, 18, 19, 20, 21, 22, 23, 28, 34, 36, 37], "our": [2, 6, 8, 32], "explan": 2, "u": [2, 8, 32], "motiv": 2, "time": [2, 3, 5, 7, 8, 14, 15, 16, 19, 20, 21, 22, 23, 27, 28, 29, 32, 35, 36], "matric": [2, 19, 20, 34, 36], "perform": [2, 5, 7, 8, 17, 19, 20, 22, 24, 25, 26, 30, 32, 34, 35, 36], "step": [2, 5, 7, 8, 20, 28, 32, 36], "y_": [2, 3, 36], "j": [2, 3, 5, 18, 20, 30, 32, 34, 35, 36], "sum_k": [2, 3], "a_": [2, 3], "k": [2, 3, 5, 7, 8, 16, 19, 20, 30, 32, 34, 36, 38], "b_": [2, 3], "c_": 2, "mathbb": 2, "max": [2, 3, 5, 7, 8, 19, 20, 24, 28, 29, 30, 32, 34, 36], "abov": [2, 17, 19, 20, 32, 36], "resembl": 2, "commonli": [2, 22], "seen": [2, 19, 20], "neural": [2, 18, 19, 20, 36, 38], "network": [2, 18, 19, 20, 36, 38], "linear": [2, 7, 8, 18, 19, 20, 36], "layer": [2, 8, 19, 20, 36], "activ": [2, 14, 19, 20, 21, 22, 27, 28, 36], "invok": [2, 8, 20, 21, 22, 23, 27, 28, 32, 35, 37], "nativ": [2, 3], "python": [2, 5, 6, 7, 8, 12, 15, 19, 20, 21, 23, 26, 28, 29, 32, 34], "code": [2, 3, 5, 6, 7, 8, 12, 15, 16, 18, 19, 21, 22, 23, 28, 29, 30, 32, 34, 35, 36, 37], "numpi": [2, 3, 5, 7, 8, 19, 20, 21, 24, 25, 30, 32, 34, 36], "show": [2, 3, 5, 6, 7, 8, 19, 21, 22, 27, 28, 32], "lnumpy_mm_relu": 2, "np": [2, 3, 5, 7, 8, 16, 19, 20, 21, 22, 27, 32, 34, 36], "ndarrai": [2, 13, 16, 19, 21, 22, 24, 27, 28, 30, 34, 35, 36], "y": [2, 3, 5, 8, 15, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32, 34, 35, 36], "empti": [2, 21, 22, 24, 25, 28, 30, 31, 32, 34, 35, 36, 37], "dtype": [2, 3, 5, 7, 8, 15, 18, 19, 20, 21, 22, 24, 25, 28, 30, 32, 34, 35, 36], "With": [2, 20, 21, 27, 36], "low": [2, 8, 15, 16, 22, 31, 34, 35, 36], "level": [2, 8, 15, 16, 17, 20, 21, 22, 31, 34, 35, 36, 37], "mind": 2, "now": [2, 3, 5, 7, 8, 15, 16, 20, 22, 25, 32, 35, 36, 37], "readi": 2, "below": [2, 6, 7, 14, 19, 20, 21, 27, 28, 30, 32, 34, 35, 36], "mm_relu": [2, 3, 5], "particular": [2, 8, 20, 28, 35, 36], "languag": [2, 3, 5, 30, 32, 38], "call": [2, 7, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "domain": [2, 3, 11, 30, 32, 34, 36], "dialect": [2, 3], "embed": [2, 19], "ast": [2, 3, 18, 21, 22, 28, 31, 32, 33], "ir_modul": [2, 3, 5, 7, 8, 9, 16, 18, 22], "class": [2, 3, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37], "mymodul": [2, 3, 5, 19], "alloc_buff": [2, 3, 5, 7, 8, 32, 34, 35], "grid": [2, 3, 5, 7, 8, 18, 22, 30, 32, 34, 36], "vj": [2, 3, 5, 30, 32, 34], "vk": [2, 3, 5, 30, 32], "reduc": [2, 3, 5, 8, 20, 22, 24, 30, 32, 34, 35, 36], "init": [2, 3, 5, 6, 7, 8, 30, 31, 32, 34, 35], "next": [2, 7, 8, 16, 34], "invest": 2, "same": [2, 3, 5, 7, 12, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "set": [2, 6, 7, 8, 15, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37], "here": [2, 3, 5, 7, 8, 10, 17, 22, 23, 32, 34, 35, 36, 37], "take": [2, 3, 5, 7, 8, 11, 12, 19, 20, 21, 22, 26, 27, 28, 30, 34, 35, 36], "type": [2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "name": [2, 3, 5, 7, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "shape": [2, 7, 8, 15, 17, 18, 19, 20, 21, 22, 24, 25, 28, 30, 32, 34, 35, 36], "argument": [2, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36], "data": [2, 3, 7, 8, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 34, 35, 36, 37], "addit": [2, 5, 15, 19, 20, 21, 22, 23, 28, 29, 30, 32, 34, 36, 37], "possibl": [2, 11, 15, 20, 21, 22, 23, 27, 32, 34, 35, 36], "mlc": [2, 5, 6], "process": [2, 5, 7, 8, 16, 20, 23, 24, 32, 36, 38], "similarli": [2, 20, 21, 29], "intermedi": [2, 8, 20, 21, 22, 28, 32, 36], "result": [2, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "alloc": [2, 7, 15, 17, 20, 22, 31, 32, 34, 35], "There": [2, 8, 15, 30, 31, 32, 34, 36], "direct": [2, 20, 21, 22, 27, 31, 35], "syntact": 2, "write": [2, 3, 5, 8, 11, 15, 18, 21, 22, 23, 31, 32, 34, 35], "signific": 2, "distinct": [2, 20, 32], "li": 2, "an": [2, 3, 5, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38], "construct": [2, 3, 7, 15, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 32, 34, 36], "term": [2, 32, 34, 36], "within": [2, 3, 5, 7, 18, 19, 22, 32, 35, 36, 37], "importantli": 2, "more": [2, 3, 6, 7, 8, 12, 14, 15, 17, 19, 20, 21, 22, 27, 28, 31, 32, 34, 35, 36, 37], "than": [2, 5, 15, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37], "It": [2, 5, 6, 8, 16, 17, 19, 20, 21, 22, 23, 24, 27, 28, 29, 32, 34, 35, 36, 37], "compris": [2, 3], "delin": [2, 3], "around": [2, 35, 36], "them": [2, 7, 8, 15, 17, 20, 22, 24, 32, 35], "line": [2, 15, 26, 28, 35], "declar": [2, 3, 17, 21, 30, 32, 34, 36], "about": [2, 11, 15, 20, 21, 29, 30, 34, 36], "syntax": [2, 3, 7, 8, 28, 30, 32], "block_axi": 2, "axis_typ": 2, "axis_rang": 2, "mapped_valu": 2, "These": [2, 6, 7, 8, 36], "convei": 2, "thei": [2, 7, 15, 17, 19, 20, 21, 22, 27, 28, 30, 32, 35, 36, 37], "specifi": [2, 3, 6, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 32, 33, 34, 35, 36], "origin": [2, 5, 8, 19, 20, 21, 22, 25, 32, 34, 35, 36], "intend": [2, 20, 22, 28, 29, 36], "announc": 2, "delv": [2, 5], "deeper": 2, "relationship": [2, 32], "progress": 2, "meanwhil": [2, 7], "read": [2, 3, 5, 7, 8, 11, 15, 18, 22, 31, 32, 34, 35], "writ": 2, "strictli": [2, 19, 25], "speak": 2, "updat": [2, 5, 6, 15, 16, 18, 20, 21, 22, 30, 32, 35, 36, 37], "label": [2, 19, 20, 36], "being": [2, 3, 14, 15, 18, 20, 21, 22, 27, 28, 32, 34], "don": [2, 22, 23, 37], "requir": [2, 6, 7, 12, 17, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "valu": [2, 3, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36], "anoth": [2, 7, 15, 17, 21, 22, 23, 25, 32, 34, 35], "significantli": 2, "fix": [2, 36], "yield": [2, 5, 19, 20], "point": [2, 8, 15, 21, 24, 29, 32, 34, 35, 36], "locat": [2, 15, 16, 23, 28, 30, 32, 34, 35, 36, 38], "other": [2, 8, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 34, 35, 36], "differ": [2, 3, 5, 6, 7, 8, 15, 20, 21, 22, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37], "refer": [2, 3, 5, 7, 8, 12, 15, 17, 18, 19, 20, 21, 24, 25, 29, 32, 36], "sinc": [2, 7, 17, 28, 35], "directli": [2, 7, 8, 14, 19, 20, 21, 22, 23, 28, 29, 32, 34, 35, 36, 37], "start": [2, 7, 9, 15, 18, 20, 22, 23, 32, 34, 36], "region": [2, 11, 20, 22, 31, 32, 34, 35, 36], "involv": [2, 5, 7, 8, 35], "One": [2, 7, 32], "observ": 2, "make": [2, 8, 12, 15, 34, 35, 36, 37], "self": [2, 7, 8, 14, 16, 17, 19, 21, 22, 25, 28, 29, 35, 37], "come": [2, 17, 20, 22, 30, 34], "suppos": [2, 11, 19, 20, 32, 36], "carri": [2, 30, 36], "out": [2, 6, 8, 11, 16, 18, 19, 20, 22, 30, 31, 32, 34, 35, 36], "extern": [2, 7, 19, 21, 22, 28, 30, 34, 35, 36], "valid": [2, 12, 16, 19, 21, 22, 27, 29, 32, 34, 35, 36], "correct": [2, 5, 7, 8, 23, 32, 34], "error": [2, 5, 13, 15, 19, 20, 21, 27, 29, 30, 31, 32, 34, 36, 37], "becaus": [2, 15, 23, 29, 32, 35, 37], "expect": [2, 15, 20, 22, 34, 35, 36], "size": [2, 3, 5, 15, 17, 19, 20, 21, 22, 28, 29, 30, 31, 32, 34, 35, 36, 37], "onli": [2, 3, 7, 8, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "bound": [2, 15, 17, 18, 19, 20, 21, 22, 30, 31, 32, 34, 35, 36], "127": [2, 32], "wrong": 2, "due": [2, 6, 17, 21, 31], "mismatch": 2, "In": [2, 3, 5, 7, 8, 14, 19, 20, 21, 22, 23, 24, 27, 28, 30, 32, 34, 35, 36, 37], "situat": [2, 22], "where": [2, 3, 8, 11, 15, 17, 19, 20, 21, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37], "each": [2, 3, 5, 7, 8, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "outer": [2, 5, 17, 22, 32, 35, 36], "remap": [2, 3, 5, 7, 8, 15, 18, 21, 22, 30, 31, 32, 34], "ssr": [2, 3, 5, 7, 8, 30, 32], "mean": [2, 5, 7, 8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 34, 36], "equival": [2, 3, 19, 30, 34, 36], "range_of_i": 2, "range_of_j": 2, "range_of_k": 2, "so": [2, 12, 15, 17, 20, 21, 23, 27, 28, 32, 36], "mymodulewithaxisremapsugar": 2, "ss": [2, 3, 5, 7, 8, 18, 22, 30, 32, 34], "tutori": [3, 5, 7, 8, 32], "googl": [3, 5, 7, 8], "colab": [3, 5, 7, 8], "you": [3, 5, 6, 7, 8, 12, 15, 20, 23, 28, 29, 30, 34], "click": [3, 5, 7, 8], "run": [3, 5, 6, 7, 14, 15, 16, 17, 20, 21, 22, 23, 26, 27, 28, 31, 35, 36, 37], "jupyt": [3, 5, 7, 8], "notebook": [3, 5, 7, 8], "section": [3, 5, 8, 12, 15, 19, 20], "method": [3, 8, 11, 14, 16, 18, 19, 20, 21, 25, 28, 29, 32, 34, 36, 37], "presum": 3, "familiar": 3, "concept": 3, "If": [3, 6, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "alreadi": [3, 5, 18, 19], "acquaint": 3, "pleas": [3, 6, 7, 8, 12, 18, 20, 25, 32, 35, 36], "concentr": 3, "standalon": [3, 15], "techniqu": [3, 5, 38], "present": [3, 7, 21, 22, 27, 28, 32, 34, 36, 38], "requisit": [3, 5], "end": [3, 15, 18, 20, 21, 22, 23, 34, 36, 38], "user": [3, 6, 7, 14, 15, 19, 20, 21, 22, 24, 26, 28, 29, 32, 34, 35, 36, 37], "relax": [3, 6, 8, 15, 27, 28, 37], "model": [3, 16, 18, 19, 20, 22, 29], "convert": [3, 7, 8, 15, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 32, 35, 36], "todo": 3, "add": [3, 7, 8, 15, 16, 18, 19, 20, 21, 22, 28, 30, 32, 34, 35, 36], "link": [3, 6, 21, 23, 28, 29, 32, 36], "most": [3, 7, 17, 19, 20, 21, 32, 34, 35], "straightforward": 3, "wai": [3, 5, 7, 8, 22, 30, 34], "via": [3, 5, 6, 15, 21, 23, 26, 27, 28, 30, 32, 34, 36], "emploi": [3, 5, 38], "ensur": [3, 7, 17, 19, 32, 34, 35], "full": [3, 19, 20, 32, 36], "compat": [3, 8, 19, 20, 21, 35, 36], "tool": [3, 19], "like": [3, 7, 8, 15, 17, 19, 22, 25, 26, 28, 29, 30, 34, 35, 36], "auto": [3, 16, 21, 28, 31, 32, 35, 36], "complet": [3, 18, 22, 28, 32, 34], "lint": 3, "cannot": [3, 11, 15, 17, 19, 20, 21, 27, 28, 30, 32, 34, 36], "interpret": [3, 19, 20, 21], "precis": [3, 19, 20, 22, 36], "decor": [3, 8, 11, 14, 16, 22, 23, 30, 35, 37], "extract": [3, 16, 19, 20, 22, 35, 36], "subsequ": [3, 5, 7, 8], "pars": [3, 7, 15], "ir": [3, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 36, 37], "eas": 3, "streamlin": 3, "util": [3, 5, 8, 20, 31, 33], "condens": 3, "abbrevi": 3, "exclud": [3, 20, 36], "whose": [3, 17, 19, 20, 21, 22, 27, 30, 32, 34, 36], "content": [3, 15, 19, 21, 28, 30, 34, 35], "infer": [3, 15, 18, 19, 20, 21, 22, 28, 29, 32, 34, 35, 36], "bodi": [3, 5, 17, 18, 21, 22, 30, 31, 32, 34, 35], "concisemodul": 3, "verifi": [3, 6, 8, 23, 31, 32, 35, 36], "modul": [3, 5, 8, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 36, 37], "print": [3, 5, 6, 7, 8, 15, 16, 19, 20, 21, 22, 28, 29, 30, 32, 34, 37], "structural_equ": [3, 15, 31], "true": [3, 5, 7, 8, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "despit": 3, "limit": [3, 8, 22, 28, 29, 35, 36], "feasibl": 3, "ascertain": 3, "m": [3, 5, 8, 18, 20, 22, 23, 30, 32, 34, 35, 36, 37], "n": [3, 15, 18, 19, 20, 22, 26, 28, 30, 32, 34, 35, 36], "irmodul": [3, 5, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 29, 31, 32, 34, 35, 37], "concisemodulefrompython": 3, "cast": [3, 18, 19, 20, 21, 22, 32, 34, 36], "check": [3, 5, 7, 15, 16, 17, 18, 19, 20, 21, 22, 25, 28, 30, 31, 32, 34, 35, 36], "dynamicshapemodul": 3, "handl": [3, 7, 12, 18, 22, 28, 30, 31, 32, 34, 35, 36, 37], "definit": [3, 14, 15, 16, 17, 20, 21, 22, 28, 33], "int32": [3, 15, 18, 20, 21, 28, 30, 32, 34, 35, 36], "input": [3, 5, 7, 8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "match_buff": [3, 18, 30, 32, 34], "runtim": [3, 7, 8, 15, 19, 20, 21, 22, 23, 29, 30, 34, 35], "evaluate_dynamic_shap": 3, "lib": [3, 5, 21, 23, 28, 29], "int": [3, 11, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "nd": [3, 5, 7, 8, 19, 21, 25, 30, 34, 35, 36], "arrai": [3, 5, 7, 8, 15, 19, 20, 21, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36], "random": [3, 5, 7, 8, 16, 19, 22, 32, 34, 35, 36], "uniform": [3, 5, 28, 34, 36], "astyp": [3, 5, 7, 8, 19, 20, 34, 36], "zero": [3, 5, 7, 15, 19, 20, 21, 22, 23, 28, 30, 32, 34, 36], "return": [3, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "onc": [3, 6, 14, 17, 33], "dyn_shape_lib": 3, "build": [3, 5, 7, 8, 14, 16, 18, 19, 21, 25, 27, 28, 29, 34, 35, 36], "target": [3, 5, 7, 8, 11, 13, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 32, 34, 35, 36], "llvm": [3, 5, 6, 7, 14, 16, 19, 21, 27, 28, 29, 30, 34, 36], "abl": [3, 7], "4": [3, 5, 19, 20, 21, 28, 29, 32, 34, 35, 36], "64": [3, 16, 32, 34], "74369144": 3, "1": [3, 5, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38], "2857096": 3, "9312536": 3, "4938402": 3, "8457197": 3, "1344357": 3, "0167718": 3, "4015458": 3, "6215172": 3, "8697282": 3, "73780996": 3, "08859": 3, "8444467": 3, "4817338": 3, "0255342": 3, "6752933": 3, "31": [3, 16, 36], "81367": 3, "29": 3, "322643": 3, "33": [3, 36], "46643": 3, "32": [3, 5, 18, 30, 34, 35], "066936": 3, "843338": 3, "997297": 3, "34": [3, 36], "21587": 3, "761692": 3, "985676": 3, "975616": 3, "30": 3, "549124": 3, "943256": 3, "36": 3, "668354": 3, "35": [3, 38], "634075": 3, "37": [3, 36], "476894": 3, "07737": 3, "93837": 3, "803913": 3, "620438": 3, "921883": 3, "284283": 3, "45535": 3, "221395": 3, "307842": 3, "393274": 3, "27": [3, 36], "178171": 3, "224554": 3, "862112": 3, "953592": 3, "040247": 3, "58329": 3, "312542": 3, "833471": 3, "808777": 3, "16594": 3, "481743": 3, "often": [3, 36], "disregard": 3, "succinctli": 3, "lead": [3, 32, 34], "pragmat": 3, "te": [3, 18, 19, 20, 21, 34, 36], "becom": [3, 22, 32, 34, 36], "relev": 3, "serv": [3, 20, 23, 32, 36, 37], "through": [3, 21, 22, 27, 28, 29, 32, 35, 37], "api": [3, 7, 8, 10, 15, 18, 19, 20, 21, 24, 25, 27, 28, 29, 32, 35, 37], "compon": [3, 7, 19, 32, 36], "embodi": 3, "pattern": [3, 7, 8, 17, 22, 32, 34, 35, 36], "re": [3, 25, 30, 32, 33, 34, 36], "address": [3, 15, 23, 28, 32, 34, 38], "convers": [3, 21, 22, 27, 31, 32, 34], "legaci": [3, 29, 32, 35, 36], "ha": [3, 8, 12, 15, 16, 17, 19, 20, 21, 22, 27, 28, 31, 32, 35, 36, 37], "been": [3, 5, 15, 17, 18, 20, 21, 22, 27, 35, 36], "supersed": 3, "last": [3, 15, 19, 20, 22, 30, 32, 34, 36], "subsect": 3, "placehold": [3, 15, 18, 19, 30, 34, 36], "reduce_axi": [3, 30, 32, 34], "lambda": [3, 18, 30, 32, 34, 36], "signatur": [3, 17, 21, 22, 27, 30, 32, 33, 34, 35, 36], "output_shap": [3, 36], "fcomput": [3, 30, 36], "And": [3, 8, 20, 22, 34, 35], "describ": [3, 15, 19, 20, 22, 32, 34, 36], "how": [3, 5, 6, 7, 8, 19, 20, 22, 25, 28, 29, 32, 34, 36], "want": [3, 21, 22, 27, 28, 30, 32, 34, 36, 37], "given": [3, 5, 11, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "encapsul": 3, "upon": [3, 19, 32], "defin": [3, 8, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "formul": 3, "pertin": 3, "interest": [3, 8, 20, 36], "aim": 3, "te_func": [3, 18], "create_prim_func": [3, 30], "with_attr": [3, 15], "global_symbol": [3, 21, 22], "temodul": 3, "func_attr": [3, 5, 7, 8, 18, 22], "noalia": [3, 5, 7, 8, 18, 22], "bool": [3, 5, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "root": [3, 5, 6, 7, 8, 18, 19, 20, 21, 28, 30, 32, 34, 36], "v_i": 3, "v_j": 3, "v_k": [3, 7, 8], "need": [3, 5, 6, 7, 8, 15, 16, 17, 19, 20, 21, 22, 23, 28, 30, 31, 34, 36, 37], "symbol": [3, 6, 8, 15, 17, 18, 20, 21, 22, 27, 28, 30, 32, 34, 35, 36], "var": [3, 7, 11, 15, 17, 18, 19, 20, 21, 22, 30, 31, 32, 33, 34, 35, 36, 37], "dyn_te_func": 3, "dynamictemodul": 3, "var_a": 3, "var_b": 3, "var_c": 3, "k_1": [3, 32], "total": [3, 4, 5, 7, 8, 9, 17, 21, 22, 27, 28, 32], "minut": [3, 5, 7, 8], "123": [3, 4], "second": [3, 5, 7, 8, 16, 19, 20, 21, 22, 23, 27, 28, 31, 32, 34, 36], "download": [3, 5, 7, 8, 23, 29], "sourc": [3, 5, 7, 8, 15, 19, 20, 21, 25, 27, 28, 30, 32, 34, 36], "py": [3, 4, 5, 7, 8, 9, 16, 17, 20, 22, 26, 31, 35], "ipynb": [3, 5, 7, 8], "00": [4, 9], "367": 4, "deep_dive_tensor_ir_tutori": 4, "file": [4, 9, 16, 21, 23, 24, 28, 32, 38], "244": [4, 5], "mb": [4, 9], "tensorir": [4, 5, 7, 8, 10, 30, 32, 38], "interact": [5, 7, 8, 21, 24, 34, 37], "get": [5, 7, 8, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32, 34, 36, 37], "ingredi": 5, "flow": [5, 7, 8, 17, 21, 34], "previou": [5, 7, 8, 36], "have": [5, 7, 8, 17, 18, 19, 20, 21, 22, 23, 25, 27, 30, 31, 32, 34, 35, 36], "practic": 5, "primarili": 5, "illustr": [5, 32], "rather": [5, 20, 32, 35, 36], "look": [5, 8, 15, 17, 21, 30, 34, 35], "evalu": [5, 8, 20, 21, 27, 28, 32, 34, 36, 37], "a_np": 5, "b_np": 5, "c_np": 5, "a_nd": 5, "b_nd": 5, "c_nd": 5, "mod": [5, 7, 8, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 28, 31, 32, 34, 35, 36, 37], "test": [5, 8, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 31, 34, 36], "assert_allclos": [5, 8, 34, 36], "rtol": [5, 8], "1e": [5, 7, 8, 19, 20, 36], "5": [5, 6, 8, 15, 19, 20, 23, 32, 34, 36], "f_timer": 5, "time_evalu": [5, 8, 21, 27, 28], "cpu": [5, 16, 19, 21, 23, 25, 27, 28, 29, 34, 35, 36], "summari": [5, 8, 23], "median": [5, 8], "min": [5, 8, 15, 20, 24, 30, 32, 34, 36], "std": [5, 8, 20, 24], "2": [5, 7, 8, 15, 16, 17, 19, 20, 22, 23, 29, 30, 31, 32, 34, 35, 36, 37, 38], "1481": 5, "0000": [5, 8, 36], "establish": 5, "helper": [5, 19], "sch": [5, 11, 16, 30, 32], "acquir": 5, "its": [5, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 31, 32, 34, 35, 36], "block_i": 5, "get_block": [5, 32], "get_loop": [5, 32], "proce": [5, 33], "modif": 5, "split": [5, 19, 20, 22, 23, 30, 32, 34, 35, 36], "separ": [5, 10, 19, 20, 22, 23, 32, 34, 35, 36], "inner": [5, 18, 32, 36], "length": [5, 15, 19, 20, 28, 32, 34, 36], "procedur": 5, "thu": [5, 15, 20, 36], "inadvert": 5, "twice": [5, 7], "state": [5, 16, 19, 20, 21, 23, 27, 28, 32, 36], "non": [5, 15, 19, 20, 21, 22, 28, 30, 32, 34, 35, 36], "exist": [5, 20, 24, 25, 28, 29, 31, 32, 34, 36, 37], "j0": 5, "j1": 5, "factor": [5, 19, 20, 32, 34, 36], "8": [5, 6, 19, 20, 25, 32, 35, 36], "outcom": [5, 16, 19], "examin": [5, 17, 22, 35], "retain": 5, "j_0": [5, 32], "j_1": [5, 32], "16": [5, 8, 32, 34, 35, 36], "phase": [5, 32], "supplementari": 5, "respect": [5, 19, 20, 22, 34, 36], "action": [5, 21, 27, 30, 34], "6714": 5, "achiev": 5, "variant": [5, 14, 15, 35, 37], "known": [5, 15, 21, 30, 32, 34, 36], "reverse_compute_at": [5, 32], "reloc": 5, "block_c": 5, "ax0": [5, 7, 8, 22, 32], "until": [5, 10, 16, 18, 24, 28], "maintain": [5, 20, 32, 36], "togeth": [5, 7, 8, 21, 27, 36], "amalgam": 5, "form": [5, 11, 17, 21, 22, 29, 30, 31, 32, 35, 36], "remain": [5, 11, 22, 28, 36], "synchron": [5, 24, 25, 28, 34], "segreg": 5, "decompose_reduct": [5, 32], "j_1_init": 5, "y_init": 5, "y_updat": 5, "2610": 5, "manner": [5, 37], "histori": 5, "ve": 5, "see": [5, 6, 12, 14, 16, 17, 18, 20, 21, 22, 23, 27, 28, 30, 32, 34, 35, 36], "apply_trac": 5, "b0": 5, "func_nam": [5, 12, 18, 19, 21, 22, 26, 27, 28, 29, 32, 34], "l1": 5, "l2": [5, 28], "l3": 5, "l4": 5, "l5": 5, "preserve_unit_it": [5, 32], "b6": 5, "preserve_unit_loop": [5, 32], "fals": [5, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37], "b7": 5, "altern": [5, 7, 32], "conjunct": 5, "histor": 5, "commun": [6, 24, 34], "nightli": 6, "develop": [6, 8, 10, 12, 18], "visit": [6, 15, 17, 21, 33], "page": [6, 38], "http": [6, 19, 20, 30, 32, 34, 36, 38], "ai": 6, "recommend": [6, 12, 26, 34], "alwai": [6, 17, 19, 23, 28, 31, 35, 36], "custom": [6, 14, 16, 21, 22, 23, 32, 35, 37], "cmake": 6, "24": [6, 19, 20, 22], "15": [6, 20, 35, 36], "git": 6, "recent": [6, 34], "support": [6, 7, 8, 12, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 29, 32, 35, 36, 38], "17": 6, "minimum": [6, 15, 19, 20, 21, 27, 28, 30, 34, 36], "gcc": 6, "7": [6, 19, 20, 32, 35, 36], "clang": 6, "appl": 6, "9": [6, 20, 25, 28, 32, 36], "visual": 6, "studio": 6, "2019": [6, 19, 20], "v16": 6, "conda": 6, "strongli": 6, "ubuntu": 6, "debian": 6, "apt": 6, "repositori": 6, "kitwar": 6, "com": [6, 19, 20, 30, 34], "org": [6, 19, 20, 32, 34, 36, 38], "choos": [6, 8, 21, 27, 28], "clone": [6, 16], "repo": [6, 10], "host": [6, 10, 20, 21, 23, 27, 28, 29, 31, 35], "under": [6, 8, 10, 16, 17, 19, 21, 27, 29, 32], "branch": [6, 10, 21, 22, 30, 32, 34, 35], "recurs": [6, 15, 17, 19, 33], "checkout": 6, "Or": [6, 34], "switch": [6, 32, 37], "after": [6, 7, 8, 14, 15, 16, 17, 19, 20, 21, 22, 27, 28, 32, 33, 34, 35, 36], "flag": [6, 11, 17, 19, 20, 23, 32, 34, 35, 37], "automat": [6, 15, 20, 21, 22, 27, 28, 30, 32, 34, 35, 36, 38], "submodul": [6, 19], "forget": [6, 36], "manual": [6, 20, 30], "directori": [6, 16, 21, 22, 23, 28], "cd": 6, "rm": [6, 19], "rf": [6, 32], "mkdir": 6, "cp": [6, 34], "config": [6, 35, 36, 37], "Then": [6, 8, 20, 34, 37], "control": [6, 17, 19, 20, 21, 24, 28, 29, 34, 35, 36], "default": [6, 7, 8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37], "candid": [6, 16, 32, 35, 37], "releas": [6, 25, 28], "debug": [6, 19, 24, 26, 32], "relwithdebinfo": 6, "echo": 6, "cmake_build_typ": 6, "must": [6, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 30, 32, 34, 36], "use_llvm": 6, "ignor": [6, 16, 17, 19, 20, 22, 29, 30, 34, 36], "libllvm": 6, "static": [6, 11, 14, 15, 16, 17, 18, 19, 21, 22, 29, 30, 32, 34, 35, 37], "hide_private_symbol": 6, "ON": 6, "gpu": [6, 8, 23, 25, 28, 29, 32, 35, 36], "sdk": [6, 28], "turn": [6, 22, 35], "use_cuda": 6, "off": [6, 22, 35], "use_met": 6, "use_vulkan": 6, "use_opencl": 6, "cubla": 6, "cudnn": 6, "cutlass": [6, 22], "use_cubla": 6, "use_cudnn": 6, "use_cutlass": 6, "enabl": [6, 15, 16, 19, 21, 22, 23, 28, 29, 30, 32, 33, 35, 36], "fvisibl": 6, "hidden": [6, 36], "prevent": 6, "potenti": [6, 7, 16, 17, 21, 27, 32], "conflict": [6, 32], "between": [6, 11, 19, 20, 21, 22, 27, 28, 30, 32, 34, 35, 36], "pytorch": [6, 7, 8, 19, 20, 36], "aris": [6, 22], "ship": 6, "version": [6, 22, 28, 29, 34, 36], "edit": 6, "accordingli": [6, 20, 22, 32, 35], "kick": 6, "command": [6, 24], "nproc": 6, "success": 6, "should": [6, 15, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "produc": [6, 17, 19, 20, 22, 25, 28, 30, 32, 34, 35], "libtvm": [6, 23], "libtvm_runtim": 6, "environ": [6, 15, 21, 23, 28, 29, 32, 35], "pip": 6, "project": [6, 25, 36], "export": [6, 19, 21, 23, 28], "tvm_home": 6, "path": [6, 8, 16, 21, 23, 24, 28, 36], "pythonpath": 6, "e": [6, 7, 11, 15, 16, 18, 19, 20, 21, 22, 27, 28, 29, 32, 34, 35, 36], "__file__": 6, "ok": 6, "entireti": 7, "ml": 7, "graph": [7, 8, 15, 19, 20, 21, 22, 36], "librari": [7, 21, 23, 24, 25, 28, 29, 36], "variou": [7, 24, 36], "few": [7, 22], "torch": [7, 8, 20], "fx": [7, 8, 19], "frontend": [7, 8, 12, 13], "from_fx": [7, 8, 19], "common": [7, 8, 14, 15, 17, 19, 22, 28, 31, 32, 35, 36, 37], "accommod": 7, "onnx": [7, 8, 20, 36], "sole": [7, 8], "dummi": [7, 20], "torchmodel": 7, "__init__": [7, 8, 14, 16, 19, 22, 35, 37], "super": [7, 8, 19], "fc1": [7, 8], "784": [7, 8, 18], "256": [7, 8, 28, 32], "relu1": [7, 8], "fc2": [7, 8], "10": [7, 8, 15, 18, 19, 20, 21, 26, 27, 28, 30, 32, 34, 36, 37, 38], "forward": [7, 8, 19, 32, 36], "x": [7, 8, 15, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37], "give": [7, 12, 20, 21, 23, 36], "input_info": [7, 8, 19], "no_grad": [7, 8, 20], "torch_fx_model": [7, 8], "symbolic_trac": [7, 8, 19], "mod_from_torch": 7, "keep_params_as_input": [7, 19], "params_from_torch": 7, "detach_param": [7, 19], "r": [7, 8, 11, 18, 20, 21, 22, 28, 31, 34], "inp_0": [7, 8], "fc1_bia": 7, "fc1_weight": 7, "fc2_bia": 7, "fc2_weight": 7, "num_input": [7, 15, 21, 22], "dataflow": [7, 8, 17, 18, 21, 22, 32], "lv": [7, 8], "permute_dim": [7, 8, 19, 20], "lv1": [7, 8, 18, 19, 20, 22], "matmul": [7, 8, 19, 20, 22, 30, 32, 36], "out_dtyp": [7, 8, 19, 20, 22, 36], "lv2": [7, 8, 19, 20, 22], "lv3": [7, 8], "lv4": [7, 8], "lv5": [7, 8], "lv6": [7, 8], "gv": [7, 8, 18, 37], "relaxmodel": 7, "mod_from_relax": 7, "params_from_relax": 7, "export_tvm": [7, 19], "spec": [7, 19], "void": [7, 28, 34], "permute_dims1": 7, "matmul1": 7, "add1": 7, "base": [7, 8, 12, 15, 17, 19, 20, 21, 22, 23, 24, 28, 29, 32, 34, 35, 36, 37], "dsl": 7, "obtain": [7, 21, 27], "tvmscriptmodul": 7, "mod_from_script": 7, "collect": [7, 15, 24, 26, 28, 29, 32, 35, 36], "globalvar": [7, 15, 17, 18, 20, 21, 32, 34, 37], "get_global_var": [7, 15], "global": [7, 15, 16, 17, 18, 20, 21, 22, 24, 28, 29, 32, 34, 35, 36], "assert": [7, 12, 15, 20, 21, 22, 25, 28, 34, 35, 37], "appli": [7, 11, 14, 16, 17, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37], "new": [7, 8, 15, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "That": [7, 19, 20, 32], "legalizeop": [7, 8, 22], "mix": [7, 19, 20, 22, 36], "stage": [7, 20, 32, 35], "both": [7, 8, 15, 19, 20, 21, 23, 31, 32, 34, 35, 36], "call_tir": [7, 8, 18, 20, 21, 22, 34], "privat": [7, 8, 18], "int64": [7, 8, 18, 22, 34, 36], "t_add": [7, 8, 22], "ax1": [7, 8, 22, 32], "v_ax0": [7, 8, 22], "v_ax1": [7, 8, 22], "matmul_1": 7, "i0": [7, 8, 18, 32], "i1": [7, 8, 18, 30, 32], "v_i0": [7, 8], "v_i1": [7, 8], "transpos": [7, 19, 20, 36], "t_transpos": 7, "transpose1": 7, "cl": [7, 8, 12, 16, 21, 23, 25, 28], "out_sinfo": [7, 8, 20, 21], "much": [7, 19, 32], "insid": [7, 17, 21, 31, 32, 34, 35], "again": [7, 23, 35], "pipelin": [7, 19, 21, 32, 35, 37], "simplifi": [7, 8, 22, 32, 35, 36], "veri": [7, 34, 36], "annotatetiroppattern": [7, 8, 22], "prepar": [7, 16], "fusion": [7, 8, 22, 32, 35], "foldconst": [7, 8, 22, 37], "pass": [7, 8, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37], "constant": [7, 8, 15, 19, 20, 21, 22, 28, 30, 31, 32, 34, 35, 36], "fold": [7, 8, 19, 22, 32, 35, 36], "fuseop": [7, 8, 22], "fusetir": [7, 8, 22], "work": [7, 8, 16, 21, 22, 27, 28, 32, 33, 35, 37], "useless": 7, "harmless": 7, "everi": [7, 17, 20, 21, 22, 27, 32, 35, 36], "duplic": [7, 22, 32, 33, 36], "legal": [7, 20, 22, 35, 36], "own": [7, 22, 25, 32, 34, 36], "get_pipelin": [7, 8, 21], "fused_matmul1_add1": [7, 8], "var_t_add_intermedi": [7, 8], "var_matmul_intermedi": [7, 8], "fused_matmul_add_relu": [7, 8], "var_compute_intermedi": [7, 8], "op_pattern": 7, "lv_1": 7, "notabl": [7, 30, 34], "abil": [7, 8], "deploy": 7, "emerg": 7, "exec": [7, 8], "dev": [7, 8, 18, 21, 23, 25, 26, 27, 28, 29, 34, 36], "vm": [7, 8, 21, 22, 24, 27], "virtualmachin": [7, 8, 21, 27], "raw_data": 7, "rand": [7, 8, 22], "cpu_out": 7, "00802883": 7, "08132102": 7, "0258463": 7, "11876436": 7, "07522465": 7, "10993191": 7, "20047541": 7, "2686859": 7, "17526586": 7, "16982672": 7, "besid": [7, 20, 32, 36], "share": [7, 21, 22, 28, 32, 34, 35], "further": [7, 22, 28, 29, 32, 33], "dlight": [7, 8], "won": [7, 32, 33], "go": [7, 19], "dl": [7, 8], "cuda": [7, 8, 16, 21, 22, 23, 25, 28, 29, 34, 35], "gpu_mod": 7, "applydefaultschedul": [7, 8, 11], "fallback": [7, 8], "similar": [7, 19, 20, 22, 23, 32, 36], "did": 7, "devic": [7, 8, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35], "param": [7, 15, 16, 17, 18, 19, 20, 21, 22, 28, 30, 34, 35, 36], "gpu_param": 7, "p": [7, 20, 36], "gpu_out": 7, "allclos": 7, "atol": [7, 8], "3": [7, 8, 19, 20, 21, 22, 29, 30, 32, 34, 36, 38], "0080288": 7, "08132105": 7, "02584626": 7, "11876432": 7, "07522468": 7, "10993197": 7, "20047544": 7, "26868594": 7, "17526585": 7, "16982669": 7, "kind": [7, 8, 11, 15, 16, 21, 22, 29, 32, 34], "metal": [7, 23, 25, 28, 29], "rocm": [7, 23, 25, 28, 29], "vulkan": [7, 23, 25, 28, 29, 36], "opencl": [7, 23, 25, 28, 29], "x86": 7, "arm": [7, 29], "g": [7, 15, 21, 22, 28, 29, 32, 35, 36], "webassembli": 7, "801": [7, 9], "peopl": 8, "who": [8, 32], "simpl": [8, 19, 20, 22, 23, 32, 33, 37], "thing": [8, 19, 26], "mlp": [8, 16], "try": [8, 11, 19, 21, 22, 32, 34, 35], "real": [8, 15, 22, 36], "jump": 8, "nn": [8, 18, 22, 30], "mlpmodel": 8, "torch_model": [8, 19], "toolkit": 8, "represent": [8, 19, 20, 25, 28, 29, 31, 34, 36], "huggingfac": 8, "As": 8, "doe": [8, 15, 17, 19, 20, 21, 23, 28, 29, 30, 31, 32, 34, 35, 36], "ourselv": 8, "list": [8, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "tupl": [8, 15, 18, 19, 20, 21, 22, 23, 24, 27, 30, 32, 34, 36, 37], "combin": [8, 15, 20, 21, 22, 27, 34, 35, 36], "gather": [8, 19, 20, 24, 26, 28, 36], "metadata": [8, 32, 34, 37], "expr": [8, 15, 17, 18, 19, 20, 21, 22, 28, 30, 32, 33, 34, 36], "omit": [8, 15, 32], "show_meta": [8, 28], "up": [8, 15, 20, 21, 22, 23, 27, 28, 34], "successfulli": [8, 16], "mention": 8, "central": 8, "hold": [8, 15, 19, 32], "high": [8, 16, 22, 31, 34, 36], "current": [8, 15, 16, 18, 19, 21, 22, 24, 28, 29, 30, 32, 35, 36, 37], "consist": [8, 15, 22, 26, 28, 31, 32], "mark": [8, 18, 20, 21, 22, 32, 34, 35], "varieti": 8, "predefin": [8, 15], "usag": [8, 15, 17, 21, 23, 28, 34, 36], "By": [8, 17, 19, 20, 21, 22, 27, 28, 29, 30, 32, 36], "order": [8, 15, 16, 17, 19, 20, 21, 22, 26, 28, 30, 31, 32, 33, 36], "param_0": 8, "param_1": 8, "chang": [8, 19, 21, 22, 32, 34, 35, 36], "note": [8, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 32, 34, 36, 37], "gemv": [8, 11], "generalreduct": 8, "is_schedul": 8, "var_matmul_intermediate_loc": 8, "scope": [8, 15, 16, 18, 19, 20, 21, 25, 30, 31, 32, 34, 35, 36], "var_matmul_intermediate_rf_loc": 8, "ax0_fused_0": 8, "thread_bind": [8, 32, 34], "blockidx": [8, 32, 35], "ax0_fused_1": 8, "threadidx": [8, 28, 32, 35], "ax1_fused_1": 8, "matmul_rf_init": 8, "vax1_fused_1": 8, "v0": [8, 25, 32], "ax1_fused_0": 8, "matmul_rf_upd": 8, "vax1_fused_0": 8, "ax1_fus": 8, "ax0_fused_0_1": 8, "49": 8, "still": [8, 17, 21, 22, 35, 37], "backend": [8, 19, 22, 28, 34, 36, 37], "llm": 8, "would": [8, 15, 17, 21, 22, 28, 36], "improv": 8, "futur": [8, 16, 21], "virtual": [8, 19, 20, 21, 22, 27, 35], "str": [8, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "tvm_data": [8, 36], "tvm_out": [8, 36], "compar": [8, 15, 25, 31], "torch_out": 8, "timing_r": [8, 21, 27], "0076": 8, "594": [8, 9, 38], "quick_start": [8, 9], "04": 9, "394": 9, "get_started_tutori": 9, "quick": [9, 10, 25, 28, 30, 34], "03": 9, "github": [10, 19, 20], "merg": [10, 15, 22, 32, 35], "instal": 10, "public": 10, "packag": [11, 16, 21, 27], "effici": [11, 32], "box": [11, 36], "deep": [11, 16, 22, 38], "workload": [11, 16, 36], "rule": [11, 15, 16, 19, 20, 21, 22, 30, 34, 36, 37], "schedulerul": [11, 16], "primfunc": [11, 16, 17, 18, 20, 21, 22, 26, 30, 31, 32, 33, 34, 35], "blockinfo": 11, "iterinfo": 11, "block_rv": 11, "blockrv": [11, 16, 32], "reduction_block": 11, "dom": [11, 30, 34], "union": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37], "primexpr": [11, 15, 17, 19, 20, 21, 22, 30, 31, 32, 33, 34, 35, 36], "dom_kind": 11, "ssss": [11, 32], "sssr": 11, "is_elementwis": 11, "whether": [11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37], "elementwis": [11, 20, 36], "trivial": [11, 32], "is_gemm": 11, "gemm": [11, 22, 31], "is_gemv": 11, "is_inject": 11, "inject": [11, 32, 35], "is_reduct": 11, "liter": [11, 16, 21, 34], "o": [11, 19, 22, 25, 28, 36], "loop_rv": 11, "looprv": [11, 32], "thin": [11, 35], "wrapper": [11, 14, 19, 35, 37], "tunabl": 11, "either": [11, 14, 19, 20, 21, 28, 32, 34, 36], "allow": [11, 15, 17, 21, 22, 23, 24, 29, 30, 31, 32, 34, 35, 36], "func": [11, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37], "built": [11, 16, 18, 21, 29, 35], "from_cal": 11, "callabl": [11, 16, 17, 18, 19, 20, 21, 22, 23, 27, 32, 34, 35, 36, 37], "myrul": 11, "my_rul": 11, "do": [11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 28, 29, 30, 32, 33, 34, 35, 36], "someth": [11, 26], "normalize_prim_func": 11, "normal": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 34, 36], "try_inlin": 11, "inlin": [11, 30, 32], "mani": [11, 35], "try_inline_contiguous_spati": 11, "block_info": [11, 32], "contigu": [11, 32], "messag": [12, 20, 34], "suggest": [12, 17], "convent": [12, 15, 20, 21, 24, 27, 29, 32, 36], "readabl": [12, 16, 26, 28], "copi": [12, 15, 19, 20, 21, 22, 24, 25, 32, 34, 35, 36], "rais": [12, 15, 16, 19, 21, 29, 31, 32, 34, 36], "guid": [12, 32], "except": [12, 15, 19, 20, 32, 34, 36], "diagnosticerror": 12, "diagnost": 12, "were": 12, "report": [12, 17, 21, 23, 26, 27, 28, 37], "dure": [12, 15, 16, 20, 21, 22, 23, 26, 28, 31, 32, 34, 35, 36, 37], "configur": [12, 21, 26, 28, 35, 37], "render": [12, 14], "internalerror": 12, "msg": [12, 18], "intern": [12, 17, 21, 23, 27, 28, 32, 34, 35, 36, 38], "system": [12, 15, 20, 21, 23, 28, 29, 38], "log": [12, 16, 20, 23, 30, 34, 36], "fatal": 12, "opattributeinvalid": 12, "attribut": [12, 15, 18, 19, 20, 21, 22, 25, 28, 29, 30, 31, 32, 34, 35, 36], "invalid": [12, 36], "format": [12, 15, 16, 19, 20, 21, 23, 26, 27, 28, 29, 32, 34, 36], "attr_nam": [12, 15, 29], "op_nam": [12, 15, 20, 22, 36], "opattributerequir": 12, "found": [12, 15, 16, 20, 31, 34, 36], "opattributeunimpl": 12, "operror": 12, "opnotimpl": 12, "missing_op": 12, "frontend_nam": 12, "rpcerror": 12, "thrown": [12, 19, 20], "remot": [12, 21, 23, 24, 27, 28], "server": [12, 23], "rpc": [12, 13, 16, 21, 27, 28], "rpcsessiontimeouterror": 12, "session": [12, 23, 24], "expir": 12, "tvmerror": [12, 15, 21], "ani": [12, 15, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 32, 34, 35, 36], "register_error": 12, "regist": [12, 15, 16, 18, 20, 21, 22, 23, 24, 28, 29, 32, 34, 37], "recogn": [12, 29], "ffi": 12, "handler": 12, "fregist": [12, 15], "f": [12, 15, 20, 21, 23, 28, 30, 32, 34, 36], "myerror": 12, "runtimeerror": [12, 19], "err_inst": 12, "create_ffi_error": 12, "xyz": 12, "isinst": [12, 15, 22, 35, 37], "instrument": [13, 21, 27, 35, 37], "relax_vm": 13, "disco": 13, "profil": [13, 14, 16, 21, 27, 28, 34, 35], "topi": [13, 20, 22, 30], "analysi": [13, 15, 16, 22, 32, 35, 37], "stmt_functor": 13, "block_build": 13, "op": [13, 14, 15, 17, 19, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36], "across": [14, 15, 20, 21, 36, 37], "passinstru": [14, 37], "subclass": [14, 16, 19, 28, 36], "pass_instru": 14, "case": [14, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 32, 34, 35, 36, 37], "enter_pass_ctx": [14, 37], "exit_pass_ctx": [14, 37], "should_run": 14, "run_before_pass": 14, "run_after_pass": 14, "adjust": [14, 15, 19, 21, 27, 28, 35], "behavior": [14, 20, 22, 28, 30, 32, 33, 34, 35, 36, 37], "enter": 14, "context": [14, 16, 17, 22, 28, 29, 30, 35, 37], "exit": 14, "info": [14, 15, 17, 18, 19, 20, 21, 22, 34, 35, 37], "passinfo": [14, 37], "determin": [14, 20, 22, 28, 31, 32, 34, 36], "skip": [14, 15, 32, 35], "passtiminginstru": 14, "retriev": [14, 16, 31, 32, 34], "string": [14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36], "rtype": [14, 34, 37], "timing_inst": 14, "passcontext": [14, 22, 35, 37], "relay_mod": 14, "relai": [14, 15, 17, 20, 31, 36, 37], "infertyp": 14, "foldscaleaxi": 14, "pi_cl": 14, "pi_class": 14, "skippass": 14, "skip_pass_nam": 14, "uncom": 14, "keyword": [14, 18, 20, 21, 29, 36, 38], "pass_info": 14, "skip_annot": 14, "annotatespan": 14, "explicitli": [15, 28, 32], "attr": [15, 18, 19, 21, 30, 32, 34, 35, 36], "node": [15, 17, 18, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35], "mainli": [15, 22, 32], "side": [15, 17, 19, 20, 21, 24, 28, 31, 32, 35], "alter_layout": 15, "get_int": 15, "get_int_tupl": 15, "get_str": 15, "list_field_info": 15, "field": [15, 17, 19, 20, 21, 27, 34, 36], "attrfieldinfo": 15, "baseexpr": 15, "basefunc": [15, 18], "member": [15, 17, 20, 35, 36, 37], "attr_key_or_dict": 15, "attr_valu": 15, "dict": [15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37], "pair": [15, 22, 28, 32, 36], "attr_map": 15, "dictattr": [15, 20, 21], "without_attr": 15, "attr_kei": [15, 34, 35], "without": [15, 17, 21, 22, 27, 28, 32, 34, 35, 36], "delet": 15, "attrubt": 15, "callingconv": 15, "constantmemorypool": 15, "pool": [15, 20, 36], "constantpoolinfo": 15, "pool_nam": 15, "constant_info_arr": 15, "pool_info_properti": 15, "relat": [15, 17, 20, 22, 23, 32, 35], "ro": 15, "could": [15, 16, 17, 19, 21, 22, 27, 32, 35, 37], "poolinfoproperti": 15, "constructor": [15, 21, 23, 29], "name_hint": [15, 18, 19, 21, 34], "belong_to": 15, "adt": 15, "hint": [15, 18, 19, 20, 21, 30, 32, 34, 35, 36], "globaltypevar": 15, "denot": [15, 20, 21, 22, 31, 36], "belong": [15, 24], "dictionari": [15, 19, 21, 27, 28, 29, 30, 36], "item": [15, 20, 21, 22, 32, 36], "dummyglobalinfo": 15, "envfunc": [15, 21], "serial": [15, 18, 26, 28, 32, 35], "env": [15, 23], "functyp": [15, 31], "arg_typ": 15, "ret_typ": [15, 34, 36], "type_param": 15, "type_constraint": 15, "constraint": [15, 31, 34], "foral": 15, "typevar": 15, "typeconstraint": 15, "globalinfo": 15, "appear": [15, 17, 31, 32, 35, 36], "same_a": [15, 21, 25, 31], "overload": [15, 21, 34], "equal": [15, 16, 17, 19, 20, 21, 25, 28, 34, 36], "typekind": 15, "adthandl": 15, "alias": [15, 20], "act": 15, "type_annot": [15, 34], "store": [15, 16, 20, 29, 32, 34, 35], "astext": 15, "show_meta_data": [15, 37], "text": [15, 19, 20, 21, 23, 28], "meta": [15, 16, 28, 29, 34, 36, 37], "comment": 15, "necessari": [15, 16, 35, 36], "fulli": [15, 19, 31, 34, 36], "howev": [15, 22, 28, 31], "dump": [15, 16, 37], "big": [15, 22], "weight": [15, 16, 19, 20, 22, 35, 36], "type_definit": 15, "global_info": 15, "basic": [15, 35, 36], "from_expr": 15, "type_def": 15, "relayexpr": [15, 20, 21, 34], "global_func": 15, "entri": [15, 19, 20, 22, 28, 35, 36], "wrap": [15, 17, 19, 22, 26, 29, 31, 35, 36], "get_attr": 15, "get_constructor": 15, "tag": [15, 29, 30, 34, 35, 36], "get_global_type_var": 15, "global_type_var": 15, "find": [15, 17, 20, 31, 36], "global_var": [15, 34], "insert": [15, 19, 20, 21, 22, 32, 35, 36], "update_func": [15, 18], "update_global_info": 15, "remov": [15, 17, 19, 20, 21, 22, 23, 25, 28, 32, 35, 36], "incompletetyp": 15, "incomplet": 15, "add_argu": 15, "descript": [15, 17, 29, 30], "add_type_rel": 15, "rel_nam": 15, "type_rel_func": 15, "attach": [15, 22, 23, 24, 35], "arg": [15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 34, 36], "back": [15, 21, 23, 24, 28, 32, 36], "solv": 15, "opaddtyperel": 15, "typereport": 15, "accord": [15, 17, 18, 22, 30, 31, 32, 34, 35, 36], "type_rel": 15, "has_attr": 15, "list_op_nam": 15, "registri": [15, 29, 35], "reset_attr": 15, "reset": [15, 20], "set_attr": 15, "plevel": 15, "prioriti": [15, 20, 22, 23], "set_attrs_type_kei": 15, "set_num_input": 15, "number": [15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37], "set_support_level": 15, "pointertyp": 15, "element_typ": 15, "storage_scop": [15, 20, 32, 34, 35], "pointer": [15, 25, 34, 36], "storag": [15, 17, 20, 22, 31, 32, 34, 35, 36], "poolinfo": 15, "workspacepoolinfo": 15, "size_hint_byt": 15, "clock_frequency_hz": 15, "read_bandwidth_bytes_per_cycl": 15, "write_bandwidth_bytes_per_cycl": 15, "read_latency_cycl": 15, "write_latency_cycl": 15, "target_burst_byt": 15, "restrict": [15, 31], "clock": [15, 28], "frequenc": [15, 19, 28, 36], "hz": 15, "hasn": 15, "bandwidth": 15, "byte": [15, 23, 28, 29, 31, 34, 36], "cycl": [15, 17], "latenc": 15, "burst": 15, "per": [15, 16, 17, 21, 22, 26, 27, 28, 31, 35, 36], "assum": [15, 17, 19, 20, 21, 22, 32, 34, 35, 36], "integ": [15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 32, 34, 35, 36], "primtyp": 15, "begin": [15, 18, 19, 20, 34, 36], "span": [15, 19, 21, 22, 28, 30, 34, 35, 36], "otherwis": [15, 16, 19, 20, 21, 22, 28, 29, 31, 32, 34, 35, 36, 37], "itervar": [15, 28, 30, 32, 34, 35], "from_min_ext": 15, "min_valu": [15, 30, 34], "extent": [15, 32, 34, 35], "rng": 15, "checked_typ": 15, "struct_info": [15, 18, 19, 21], "structinfo": [15, 17, 18, 19, 20, 21, 22], "struct": [15, 17, 18, 19, 20, 21, 34], "avail": [15, 16, 18, 19, 22, 23, 24, 28, 29, 36], "relayreftyp": 15, "sequentialspan": 15, "sourcenam": 15, "identifi": [15, 19, 21, 22, 23, 32], "source_nam": 15, "end_lin": 15, "column": [15, 20, 26, 28, 34, 36], "end_column": 15, "lineno": 15, "col_offset": 15, "offset": [15, 19, 20, 32, 34, 36], "tensoraffinetyp": 15, "scale": [15, 19, 20, 36], "zero_point": [15, 20], "quantiz": [15, 20, 36], "datatyp": [15, 19, 20, 21, 28, 35, 36], "space": [15, 16, 19, 20, 22, 28, 34, 35, 36], "x_q": 15, "channel": [15, 19, 20, 34, 36], "tensortyp": [15, 37], "concret": [15, 19], "assign": [15, 19, 21, 24], "concrete_shap": 15, "typeerror": 15, "tupleaffinetyp": 15, "affin": [15, 32, 36], "tupletyp": 15, "referenti": 15, "typecal": 15, "type_cal": 15, "typedata": 15, "header": [15, 37], "type_var": 15, "algebra": [15, 32], "treat": [15, 19, 20, 21, 29], "typerel": 15, "fill": [15, 19, 20, 21, 32, 34, 35, 36], "later": [15, 17, 28, 32], "over": [15, 17, 19, 20, 21, 26, 27, 28, 30, 32, 34, 36], "vdevic": [15, 19, 20, 21, 22], "vdevice_id": 15, "memory_scop": [15, 29], "workspacememorypool": 15, "workspac": [15, 22, 31, 34], "rw": [15, 34], "assert_structural_equ": 15, "lh": [15, 17, 20, 21, 22, 30, 31, 32, 34, 36], "rh": [15, 17, 20, 21, 22, 30, 31, 32, 34, 36], "map_free_var": 15, "left": [15, 16, 17, 20, 30, 31, 34, 36], "operand": [15, 17, 20, 30, 31, 34, 36], "shall": 15, "free": [15, 17, 20, 22, 28, 34], "valueerror": [15, 29], "load_json": 15, "json_str": 15, "load": [15, 16, 21, 22, 23, 24, 28, 29, 32, 34], "json": [15, 16, 26, 28, 32], "make_nod": 15, "type_kei": [15, 28], "kwarg": [15, 16, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32], "attrsnod": 15, "creator": 15, "setup": [15, 18, 21], "intimm": [15, 29, 34, 36], "register_intrin_low": 15, "lower": [15, 20, 22, 31, 32, 34, 35, 36], "register_op_attr": 15, "save_json": 15, "save": [15, 16, 19, 20, 21, 27, 28, 32], "dag": 15, "irnod": 15, "condit": [15, 20, 21, 30, 31, 32, 34, 35, 36], "varnod": [15, 21], "occur": [15, 34, 35, 36], "site": [15, 21, 22, 35], "comparison": [15, 31, 34], "structural_hash": 15, "assert_strucural_equ": 15, "hash": [15, 16], "uniqu": [15, 18, 20, 21, 24, 32, 36], "made": [15, 20, 21, 32, 34], "concist": 15, "well": [15, 17, 21, 22, 31, 36, 37], "highli": 15, "rare": [15, 23], "collison": 15, "occurr": [15, 21], "structrual_equ": 15, "infrastructur": [16, 37], "builder": [16, 17, 18, 19, 21], "interfac": [16, 21, 23, 26, 27, 28, 29], "build_input": 16, "builderinput": 16, "builderresult": 16, "build_result": 16, "costmodel": 16, "cost": [16, 21, 22, 27, 28], "xgb": 16, "cost_model": 16, "predict": [16, 20, 36], "tunecontext": 16, "measurecandid": 16, "score": [16, 20], "tune": [16, 22, 29, 35, 37], "measur": [16, 21, 27, 28], "runnerresult": 16, "databas": [16, 22, 37], "commit_tuning_record": 16, "record": [16, 37], "tuningrecord": 16, "commit": [16, 34], "commit_workload": 16, "miss": [16, 19, 34], "search": [16, 22, 23, 28, 32, 35, 36], "ad": [16, 18, 19, 20, 22, 32, 35, 36, 37], "ordered_union": 16, "dump_prun": 16, "destin": [16, 19, 20, 21, 32, 34, 35, 36], "prune": 16, "jsondatabas": [16, 37], "get_all_tuning_record": 16, "tuning_record": 16, "get_top_k": 16, "top_k": 16, "top": [16, 19, 32, 36, 37], "top_k_record": 16, "has_workload": 16, "queri": [16, 19, 20, 28, 32, 34], "workload_nam": 16, "best": [16, 18, 22], "query_ir_modul": 16, "query_schedul": 16, "query_tuning_record": 16, "extractedtask": 16, "task_nam": 16, "dispatch": [16, 21, 29], "task": [16, 22], "featureextractor": 16, "extractor": 16, "extract_from": 16, "measurecallback": 16, "task_schedul": 16, "taskschedul": 16, "task_id": 16, "measure_candid": 16, "builder_result": 16, "runner_result": 16, "callback": [16, 18, 22, 28, 32, 34, 35, 37], "id": [16, 21, 24, 25, 28, 34], "runner": [16, 22], "args_info": 16, "arginfo": 16, "mutat": [16, 20, 21, 32, 33], "explor": 16, "fail": [16, 17, 19, 20, 32], "tensorcor": [16, 35], "hexagon": [16, 23, 25, 29], "float": [16, 19, 20, 21, 23, 24, 26, 28, 29, 30, 31, 32, 34, 36], "postproc": 16, "postprocessor": 16, "post": [16, 17, 21, 33], "wa": [16, 31], "cloned_postproc": 16, "tabl": [16, 18, 26, 28, 32], "timeit": 16, "runner_input": 16, "runnerinput": 16, "runnerfutur": 16, "artifact": [16, 21, 28], "runner_futur": 16, "modifi": [16, 20, 21, 22, 35, 36], "design_spac": 16, "cloned_rul": 16, "searchstrategi": 16, "strategi": 16, "evolutionari": 16, "replai": 16, "generate_measure_candid": 16, "finish": [16, 24, 28, 35], "notify_runner_result": 16, "post_tun": 16, "pre_tun": 16, "max_trial": 16, "num_trials_per_it": 16, "pre": [16, 20, 21, 29, 32, 33, 34], "maximum": [16, 19, 20, 22, 23, 28, 30, 32, 34, 35, 36], "trial": [16, 21, 22, 27], "spacegener": 16, "cloned_sg": 16, "generate_design_spac": 16, "round": [16, 20, 30, 34, 36], "robin": 16, "gradient": [16, 18, 19, 20, 21, 22, 30, 36], "join_running_task": 16, "wait": [16, 24, 34], "join": [16, 26, 28, 36], "next_task_id": 16, "fetch": [16, 21, 24, 27], "print_tuning_statist": 16, "human": [16, 26, 28], "statist": [16, 20, 21], "terminate_task": 16, "termin": [16, 23, 34], "touch_task": 16, "touch": 16, "statu": 16, "task_weight": 16, "max_trials_glob": [16, 22], "max_trials_per_task": [16, 22], "measure_callback": 16, "space_gener": 16, "spacegeneratortyp": 16, "search_strategi": 16, "searchstrategytyp": 16, "rand_stat": 16, "num_thread": [16, 28], "physic": [16, 28], "logic": [16, 19, 20, 36], "logger": 16, "resourc": [16, 23, 34], "schedulefntyp": 16, "blank": 16, "count": [16, 19, 20, 22, 26, 30, 31, 34, 36], "cloned_context": 16, "deleg": 16, "batch": [16, 19, 20, 22, 31, 36], "cleanup": 16, "evolutionarysearch": 16, "memorydatabas": 16, "randommodel": 16, "derived_object": 16, "deriv": [16, 17, 21, 31], "register_object": 16, "pyrunn": 16, "_pyrunn": 16, "f_run": 16, "__init_handle_by_constructor__": 16, "_ffi_api": 16, "runnerpyrunn": 16, "_tvm_metadata": [16, 21], "notimplementederror": 16, "localrunn": 16, "is_meta_schedule_en": 16, "tune_task": 16, "work_dir": [16, 22], "module_equ": 16, "buildertyp": 16, "runnertyp": 16, "databasetyp": 16, "costmodeltyp": 16, "callbacklisttyp": 16, "taskschedulertyp": 16, "structuralequ": [16, 31], "raw": [16, 32, 35, 36], "anchor": [16, 31], "varint": 16, "tune_tir": 16, "num_tuning_cor": 16, "seed": [16, 32], "special_spac": 16, "basecheckresult": 17, "fine": 17, "grain": 17, "fail_l0": 17, "intersect": [17, 30, 34], "fail_l1": 17, "failur": 17, "fail_l2": 17, "unknown": [17, 21, 28, 29], "all_global_var": 17, "ret": [17, 18, 19, 20, 21, 22, 25, 27, 34, 35, 36], "df": [17, 18, 33], "all_var": 17, "bound_var": 17, "contains_impure_cal": 17, "own_nam": 17, "impur": [17, 21], "puriti": [17, 21, 22], "visibl": [17, 18, 21, 31], "effect": [17, 19, 20, 21, 22, 26, 34], "defined_symbolic_var": 17, "dedupl": 17, "analyz": [17, 36], "derive_call_ret_struct_info": 17, "func_sinfo": 17, "funcstructinfo": [17, 21], "ctx": [17, 20, 22, 35, 37], "blockbuild": [17, 18, 19, 20, 22], "depend": [17, 19, 20, 22, 23, 26, 28, 32, 34, 35, 36, 37], "detect_recurs": 17, "mutual": 17, "some": [17, 19, 20, 21, 22, 28, 30, 32, 34, 36, 37], "even": [17, 20, 21, 27], "simpli": [17, 28, 30, 33, 34], "group": [17, 19, 20, 21, 22, 34, 36], "itself": [17, 23, 24, 34], "singleton": [17, 19, 20, 28], "erase_to_well_defin": 17, "sinfo": 17, "shape_var_map": 17, "var_map": 17, "eras": [17, 28], "estimate_memory_usag": 17, "estim": [17, 31], "plan": [17, 20, 22, 35], "might": [17, 25], "consid": [17, 20, 21, 31, 34, 36], "cross": [17, 19, 20, 23, 28, 29, 35], "accumul": [17, 20, 22, 32, 34, 36], "alloc_tensor": [17, 20, 22], "alloc_storag": [17, 20, 22], "est": 17, "regard": [17, 20, 32], "free_symbolic_var": 17, "free_var": 17, "varbind": [17, 21, 22], "get_static_typ": 17, "get_var2v": 17, "has_reshape_pattern": 17, "essenti": 17, "reshap": [17, 19, 20, 22, 35, 36], "expand_dim": [17, 20, 22, 36], "squeez": [17, 19, 20, 36], "flatten": [17, 19, 20, 22, 34, 35, 36], "etc": [17, 19, 21, 22, 32, 36, 37], "l_0": 17, "l_1": [17, 32], "l_b": 17, "r_0": [17, 36], "r_1": [17, 36], "r_a": 17, "boolean": [17, 18, 19, 20, 22, 23, 30, 32, 34, 35, 36, 37], "neg": [17, 19, 20, 30, 32, 34, 36], "posit": [17, 19, 20, 23, 28, 30, 32, 34, 35, 36], "whenev": 17, "guarante": [17, 20, 21, 32, 33], "safeti": 17, "name_to_bind": 17, "post_order_visit": [17, 33], "fvisit": [17, 33], "visitor": [17, 21, 33], "remove_all_unus": [17, 21, 22], "unus": [17, 21, 22], "dataflowblock": [17, 18, 21, 22], "dce": [17, 22], "deadcodeelimin": [17, 22], "struct_info_base_check": 17, "subsum": 17, "struct_info_lca": 17, "unifi": [17, 35], "least": [17, 19, 20, 32], "ancestor": [17, 31, 32], "right": [17, 20, 30, 31, 32, 34, 36], "lca": [17, 31, 32, 35], "suggest_layout_transform": 17, "write_buffer_transform": 17, "indexmap": [17, 20, 22, 32, 34, 35], "layout": [17, 19, 20, 22, 30, 32, 34, 35, 36], "match": [17, 18, 19, 21, 22, 23, 29, 32, 34, 35, 36], "tir_vars_in_struct_info": 17, "udchain": 17, "dfb": [17, 21], "chain": [17, 22, 32], "well_form": 17, "check_struct_info": 17, "rx": [18, 19], "tensorstructinfo": [18, 19, 20, 21, 22], "float16": [18, 20, 32, 35], "bb": [18, 19, 20, 22, 34, 36], "lv0": [18, 22], "emit": [18, 19, 21, 22], "multipli": [18, 19, 20, 22, 30, 34, 36], "gv0": [18, 22], "emit_output": 18, "emit_func_output": 18, "input_s": 18, "hidden_s": [18, 19], "output_s": [18, 20, 36], "sequenti": [18, 36, 37], "logsoftmax": 18, "add_func": 18, "gvar": [18, 20, 21], "begin_scop": 18, "seq": [18, 34, 36], "properli": 18, "track": [18, 22, 32, 34], "effort": [18, 22], "deduct": [18, 19, 20], "call_t": [18, 22], "emit_t": 18, "reserv": [18, 20, 25, 28], "primfunc_name_hint": 18, "primfunc_attr": 18, "newli": 18, "call_te_with_grad": 18, "te_grad_nam": [18, 20, 21], "te_grad_kwarg": [18, 20, 21], "call_tir_with_grad": [18, 20, 21], "current_block_is_dataflow": 18, "dataflowscop": 18, "emit_norm": 18, "args_dict": 18, "rx_func": 18, "hello": 18, "var_rxplacehold": 18, "var_rxplaceholder_1": 18, "var_comput": 18, "rxplacehold": 18, "rxplaceholder_1": 18, "x1": [18, 19, 20, 34], "ndim": [18, 19, 20, 21, 30, 32, 34, 36], "end_scop": 18, "functionscop": 18, "defer": 18, "get_unique_nam": 18, "name_prefix": 18, "prefix": [18, 19, 22, 28, 30, 36], "lookup_bind": [18, 21], "lookup": [18, 19, 21, 27, 28], "match_cast": 18, "matchcast": [18, 21], "testing_scop": 18, "def_var": 18, "testingscop": 18, "purpos": [18, 20, 22, 24, 34, 35], "updated_func": 18, "auxiliari": [18, 20, 30, 32, 36, 37], "detach": 19, "detached_mod": 19, "params_dict": 19, "conv1d": [19, 20, 36], "in_channel": [19, 20, 36], "out_channel": [19, 20, 36], "kernel_s": [19, 36], "stride": [19, 20, 32, 34, 35, 36], "pad": [19, 20, 32, 34, 36], "dilat": [19, 20, 36], "bia": [19, 20, 22, 36], "convtranspose1d": 19, "output_pad": [19, 20, 36], "face": [19, 21, 32], "implicit": [19, 20, 36], "emit_init": 19, "dataflowvar": [19, 21], "num": [19, 34, 37], "dim": [19, 22, 28, 36], "externmodul": 19, "module_spec": 19, "_spec": 19, "externmodulespec": 19, "your": [19, 28, 36], "tree": [19, 22, 32], "regular": [19, 36], "get_extern_func": 19, "funciton": 19, "prebuilt": 19, "ret_func": 19, "gelu": [19, 20, 22], "ioeffect": 19, "io": 19, "screen": 19, "breakpoint": 19, "print_": 19, "enclos": [19, 32], "kvcach": 19, "init_seq_len": 19, "unit_shap": 19, "append": [19, 22, 32], "new_el": 19, "view": [19, 25], "seq_len": [19, 20, 36], "layernorm": 19, "normalized_shap": 19, "ep": 19, "05": [19, 20, 36], "elementwise_affin": 19, "in_featur": 19, "out_featur": 19, "modulespectyp": 19, "jit": [19, 21], "out_format": 19, "just": [19, 20, 21, 22, 35, 36, 37], "load_state_dict": 19, "state_dict": 19, "strict": 19, "descend": [19, 26, 28, 36], "exactli": [19, 32, 36], "whole": [19, 20, 36], "enforc": [19, 32], "missing_kei": 19, "unexpected_kei": 19, "unexpect": [19, 34], "named_paramet": 19, "prepend": [19, 20], "modulelist": 19, "feed": 19, "multilinear": 19, "unbound": [19, 29], "rmsnorm": 19, "epsilon": [19, 20, 36], "norm": [19, 22], "silu": [19, 20, 22], "specbuild": 19, "modulespec": 19, "subroutinemixin": 19, "mixin": 19, "_expr": 19, "conveni": [19, 21, 27, 28, 37], "symbolc": 19, "done": [19, 20, 21], "eagerli": 19, "from_const": 19, "from_scalar": 19, "scalar": [19, 20, 22, 30, 34, 35, 36], "dimens": [19, 20, 21, 28, 29, 30, 32, 34, 36], "dynam": [19, 20, 21, 22, 27, 28, 29, 35, 36], "tuplestructinfo": [19, 21], "style": [19, 20, 21, 28, 32, 36], "broadcast": [19, 20, 24, 34, 36], "broadcast_to": [19, 20, 22, 36], "intexpr": 19, "chunk": [19, 20, 32], "along": [19, 20, 32, 36, 37], "piec": 19, "slice": [19, 20, 22, 30, 32, 36], "concat": [19, 20, 34, 36], "concaten": [19, 20, 36], "expand": [19, 20, 32, 36], "1d": [19, 20, 35, 36], "kernel": [19, 20, 23, 30, 35, 36], "convolv": [19, 20], "data_layout": [19, 20, 36], "ncw": [19, 20, 36], "kernel_layout": [19, 20, 36], "oiw": [19, 20, 36], "batch_siz": [19, 20, 34, 36], "width": [19, 20, 34, 36], "kernel_w": [19, 20, 36], "w": [19, 20, 22, 25, 30, 31, 34, 36], "mbox": [19, 20], "sum_": [19, 20, 36], "dx": [19, 20], "semant": [19, 20, 21, 30, 32, 34, 36], "canon": [19, 20, 29], "out_layout": [19, 20, 36], "rate": [19, 20, 36], "divis": [19, 20, 30, 32, 34, 36], "conv1d_transpos": [19, 20], "explain": [19, 20], "iow": [19, 20], "in_w": [19, 20], "weight_w": [19, 20], "assur": [19, 20], "out_w": [19, 20], "disambigu": [19, 20], "conv2d": [19, 20, 22, 30, 31, 36], "2d": [19, 20, 35, 36], "imag": 19, "compos": [19, 22, 34, 36], "sevar": 19, "plane": 19, "h": [19, 20, 36], "filter": [19, 22, 30, 34, 35, 36], "kh": [19, 20, 36], "kw": [19, 20, 36], "sh": 19, "sw": 19, "dh": 19, "dw": 19, "oh": [19, 38], "ow": 19, "divid": [19, 20, 30, 34, 36], "fill_valu": [19, 20, 36], "approxim": [19, 20, 36], "gaussian": [19, 20], "erf": [19, 20, 30, 34, 36], "gauss": [19, 20, 30, 34, 36], "tanh": [19, 20, 30, 34, 36], "cdf": 19, "get_default_dtyp": 19, "get_timestep_embed": 19, "embedding_dim": 19, "flip_sin_to_co": 19, "downscale_freq_shift": 19, "max_period": 19, "10000": 19, "timestep": 19, "denois": 19, "diffus": 19, "probabilist": [19, 38], "d": [19, 20, 34, 36, 38], "sine": 19, "cosin": 19, "sinusoid": 19, "sampl": [19, 22, 32, 36], "magnitud": 19, "group_norm": [19, 20, 36], "num_group": [19, 20, 36], "channel_axi": [19, 20, 36], "mini": 19, "paper": [19, 38], "frac": [19, 20], "mathrm": 19, "sqrt": [19, 20, 30, 34, 36], "gamma": [19, 20, 36], "beta": [19, 20, 36], "rms_norm": [19, 20, 36], "small": [19, 20, 36], "squar": [19, 20, 30, 34, 36], "avoid": [19, 20, 21, 27, 28, 32, 36], "groupnorm": 19, "interpol": [19, 20, 36], "scale_factor": 19, "mode": [19, 20, 21, 22, 23, 29, 30, 34, 36, 37], "nearest": [19, 20, 30, 34, 36], "align_corn": [19, 20, 36], "recompute_scale_factor": 19, "antialia": 19, "resiz": [19, 20, 32, 36], "request": [19, 23, 34], "algorithm": [19, 20, 22, 36], "pixel": [19, 20, 36], "recomput": [19, 20, 32], "antialias": 19, "layer_norm": [19, 20, 36], "lei": [19, 20], "ba": [19, 20], "et": [19, 20, 22], "al": [19, 20, 22], "2016": [19, 20, 22], "unlik": [19, 20, 28, 30, 32, 34, 36], "awai": [19, 20], "varianc": [19, 20, 36], "matrix": [19, 20, 22, 34, 36], "latest": [19, 20], "api_specif": [19, 20], "array_api": [19, 20], "html": [19, 20, 32, 34, 36], "x2": [19, 20, 34], "mul": [19, 20, 34, 36], "before_0": 19, "after_0": 19, "before_1": [19, 20], "after_1": [19, 20], "impli": [19, 28], "permut": [19, 20, 35, 36], "revers": [19, 20, 22, 30, 32, 36], "rectifi": [19, 20], "ext": 19, "repeat": [19, 20, 21, 27, 28, 32, 36], "repetit": [19, 20, 36], "backward": [19, 20, 36], "flat": [19, 20, 34, 36], "np_x": 19, "remaind": [19, 20, 22, 30, 34], "keep": [19, 20, 22, 28, 32], "At": [19, 20, 32], "6": [19, 20, 32, 36], "sai": [19, 20], "biao": [19, 20], "zhang": [19, 20], "scaled_dot_product_attent": 19, "attn_mask": 19, "is_caus": 19, "dot": 19, "product": [19, 20, 36], "attent": [19, 20, 22], "compliant": 19, "mask": [19, 20, 25, 28, 34, 36], "yet": [19, 21, 25, 32], "causal": [19, 20], "sigmoid": [19, 20, 30, 34, 36], "softmax": [19, 20, 36], "_i": [19, 20], "exp": [19, 20, 30, 34, 36], "x_i": [19, 20], "sum_j": [19, 20], "x_j": [19, 20], "ari": [19, 36], "indices_or_sect": [19, 20, 36], "sub": [19, 21, 22, 32, 34, 36], "subtract": [19, 20, 30, 34, 36], "Its": [19, 20, 30], "mostli": [19, 20], "doc": [19, 20, 32, 34, 36], "stabl": [19, 20, 21], "cover": [19, 20, 32], "blob": [19, 20, 23], "changelog": [19, 20], "md": [19, 20], "13": [19, 20, 36], "select": [19, 20, 30, 32, 34, 35, 36], "taken": [19, 20, 21, 27], "tensor_expr_op": 19, "tensor_expr_func": 19, "_tir": 19, "triu": [19, 20], "diagon": [19, 20, 36], "upper": [19, 20, 22, 34, 36], "triangular": [19, 20, 36], "part": [19, 20, 22, 28, 32, 36], "unsqueez": [19, 36], "from_onnx": 19, "graphproto": 19, "shape_dict": 19, "dtype_dict": 19, "opset": 19, "keep_params_in_input": 19, "sanitize_input_nam": 19, "protobuf": 19, "v1": [19, 32], "modelproto": 19, "overrid": [19, 21, 22, 27, 29, 34, 37], "autodetect": [19, 29], "sanit": 19, "from_stablehlo": 19, "stablehlo_modul": 19, "mlir": 19, "dynamo_capture_subgraph": 19, "captur": [19, 22, 29, 31], "subgraph": [19, 36], "translat": [19, 32, 34], "importeroutput": 19, "unwrap_unit_return_tupl": 19, "no_bind_return_tupl": 19, "graphmodul": [19, 28], "unwrap": [19, 22], "place": [19, 20, 21, 24, 32, 35, 36], "tracer": 19, "dynamo": 19, "torch_fx": 19, "_dynamo": 19, "instanti": [19, 36], "input_tensor": [19, 20, 30], "astensor": 19, "randn": 19, "graph_modul": 19, "print_tabular": 19, "tabular": 19, "row": [19, 20, 34, 36], "relax_dynamo": 19, "sent": [19, 20], "ab": [20, 30, 34, 36, 37], "absolut": [20, 30, 34, 36], "aco": [20, 30, 34, 36], "arc": [20, 36], "co": [20, 30, 34, 35, 36], "acosh": [20, 30, 34, 36], "cosh": [20, 30, 34, 36], "arang": [20, 36], "primvalu": [20, 21], "evenli": [20, 32, 36], "primexprlik": 20, "interv": [20, 21, 27, 28, 36], "argmax": [20, 36], "keepdim": [20, 22, 36], "correctli": [20, 21, 32, 35, 36], "against": [20, 30, 34, 36], "argmin": [20, 36], "asin": [20, 30, 34, 36], "sin": [20, 30, 34, 36], "asinh": [20, 30, 34, 36], "sinh": [20, 30, 34, 36], "assert_op": 20, "format_arg": 20, "stringimm": [20, 21, 34], "atan": [20, 30, 34, 36], "tan": [20, 30, 34, 36], "atanh": [20, 30, 34, 36], "bitwise_and": [20, 34, 36], "bitwis": [20, 34, 36], "AND": [20, 36], "bitwise_not": [20, 34, 36], "NOT": 20, "bitwise_or": [20, 34, 36], "OR": [20, 36], "bitwise_xor": [20, 34, 36], "xor": [20, 34, 36], "call_builtin_with_ctx": [20, 21], "sinfo_arg": [20, 21], "call_dps_pack": [20, 21, 22], "pack": [20, 21, 24, 28, 29, 30, 34, 35, 36], "_pure_": [20, 21], "_does_": [20, 21], "those": [20, 21, 22, 32, 36], "externfunc": [20, 21, 22], "call_pure_pack": [20, 21], "pure": [20, 21, 22, 32, 34], "though": [20, 21, 27, 35], "know": [20, 21], "realiti": [20, 21], "caus": [20, 21, 36], "calle": [20, 21], "packedfunc": [20, 21, 24, 26, 27, 28, 29, 30, 34, 35, 36], "tir_var": [20, 21], "shapeexpr": [20, 21], "unpack": [20, 21, 34, 36], "null": [20, 21, 28, 36], "call_tir_inplac": 20, "inplace_indic": 20, "alia": [20, 21, 28, 32, 36], "warn": [20, 22, 29], "actual": [20, 23, 28, 35, 36], "safe": [20, 23], "live": 20, "input_indic": 20, "th": [20, 21, 22, 32, 36], "freshli": 20, "ceil": [20, 30, 34, 36], "clip": [20, 36], "collapse_sum_lik": 20, "collapse_target": 20, "summat": [20, 36], "collapse_sum_to": 20, "collaps": [20, 36], "differenti": [20, 22, 30, 36], "cumsum": [20, 30, 36], "cumul": [20, 36], "inclus": 20, "21": 20, "dequant": [20, 36], "clamp": 20, "dynamic_strided_slic": [20, 36], "exclus": [20, 36], "ones": [20, 21, 22, 35], "dyn_strided_slic": 20, "rank": [20, 32, 36], "einsum": [20, 32, 36], "subscript": [20, 36], "einstein": [20, 36], "ewise_fma": 20, "x3": 20, "hand": [20, 30, 34, 36], "lie": 20, "flip": [20, 36], "preserv": [20, 32], "floor": [20, 30, 34, 36], "floor_divid": [20, 36], "full_lik": [20, 30, 36], "greater": [20, 34, 36], "greater_equ": [20, 36], "hint_on_devic": 20, "dst_vdevic": 20, "realizevdevic": [20, 22], "propag": [20, 22], "dst_devic": 20, "invoke_closur": [20, 21, 27], "closur": [20, 21, 27], "vmclosur": [20, 21, 27], "type_arg": 20, "callnod": [20, 21, 22], "invoke_pure_closur": 20, "isfinit": [20, 30, 34, 36], "finit": [20, 30, 34, 36], "isinf": [20, 30, 34, 36], "infinit": [20, 30, 34, 36], "isnan": [20, 30, 34, 36], "nan": [20, 30, 34, 36], "layout_transform": [20, 36], "index_map": [20, 22, 32, 34], "pad_valu": [20, 32, 35, 36], "axis_separ": [20, 22, 32, 34, 36], "less": [20, 21, 27, 36], "less_equ": [20, 36], "incom": 20, "xa": 20, "natur": [20, 21], "logarithm": [20, 36], "logical_and": [20, 36], "logical_not": [20, 36], "logical_or": [20, 36], "logical_xor": [20, 36], "make_closur": 20, "masked_fil": 20, "not_equ": [20, 36], "null_valu": 20, "ones_lik": 20, "power": [20, 30, 34, 36], "prod": [20, 24, 36], "int8": [20, 32, 36], "q_output": 20, "register_gradi": 20, "fgradient": 20, "orig_var": 20, "orig_cal": 20, "output_grad": 20, "partial": [20, 32], "const": [20, 21, 22, 28, 30, 32, 34, 36], "rsqrt": [20, 30, 34, 36], "reciproc": [20, 30, 34], "scatter_el": [20, 36], "scatter": [20, 24, 36], "replac": [20, 21, 22, 32, 35, 36], "shape_of": [20, 21], "shape_to_tensor": 20, "sign": [20, 30, 34, 36], "smaller": [20, 28, 35, 36], "mixtur": 20, "deviat": [20, 36], "strided_slic": [20, 36], "assume_inbound": 20, "tensor_to_shap": [20, 22], "l": [20, 23, 30, 34, 36], "promot": [20, 35], "replic": 20, "desir": [20, 21, 22, 27, 36], "rep": [20, 36], "pend": [20, 34], "to_vdevic": 20, "transfer": 20, "heterogen": [20, 29], "tril": 20, "sort": [20, 26, 28, 31, 36], "return_index": 20, "return_invers": 20, "return_count": [20, 36], "reconstruct": [20, 32], "ascend": [20, 36], "wrap_param": 20, "zeros_lik": 20, "adaptive_avg_pool2d": 20, "nchw": [20, 22, 36], "adapt": 20, "averag": [20, 21, 27, 28], "experiment": [20, 31], "window": [20, 36], "wxh": 20, "height": [20, 34, 36], "output_height": 20, "output_width": 20, "chosen": [20, 29, 36], "floatimm": [20, 34], "causal_mask": 20, "head": [20, 30, 34], "bsnh": 20, "fma": 20, "q": [20, 34, 36], "v": [20, 29, 31, 36], "num_head": 20, "head_dim": 20, "seq_len_kv": 20, "head_dim_v": 20, "topleft": 20, "bottomright": 20, "avg_pool2d": 20, "pool_siz": 20, "ceil_mod": [20, 36], "avarag": 20, "ldot": 20, "slide": [20, 36], "batch_norm": [20, 36], "moving_mean": [20, 36], "moving_var": [20, 36], "center": [20, 36], "momentum": [20, 36], "ioff": [20, 36], "szegedi": [20, 36], "2014": [20, 36], "close": [20, 23, 36], "_mean": 20, "_var": 20, "dataset": 20, "data_mean": 20, "data_var": 20, "train": [20, 22, 36], "running_mean": 20, "running_var": 20, "decomposeopsforinfer": [20, 22], "decompos": [20, 22, 32, 36], "decomposeopsfortrain": [20, 22], "oihw": [20, 36], "kernel_h": [20, 36], "dy": 20, "conv2d_transpos": [20, 36], "iohw": 20, "data_grad": 20, "out_grad": [20, 36], "in_h": 20, "weight_h": 20, "out_h": 20, "cross_entropy_with_logit": 20, "crossentropi": 20, "logit": 20, "_entropi": 20, "_with": 20, "_logit": 20, "y_i": 20, "sum_i": 20, "cdot": 20, "ground": 20, "truth": 20, "dropout": [20, 23], "probabl": [20, 32], "unchang": [20, 32], "drop": [20, 22], "gelu_tanh": [20, 22], "pi": 20, "044715": 20, "yuxin": 20, "wu": 20, "leakyrelu": 20, "alpha": [20, 36], "01": 20, "negative_slop": 20, "angl": 20, "slope": [20, 36], "nag": 20, "log_softmax": [20, 36], "_softmax": 20, "max_pool2d": 20, "max_": 20, "nll_loss": [20, 36], "ignore_index": [20, 36], "100": [20, 28, 34, 36], "likelihood": [20, 36], "loss": [20, 36], "i_1": [20, 32, 36], "i_2": [20, 36], "i_k": [20, 36], "els": [20, 36], "d_1": [20, 36], "d_2": [20, 36], "d_k": [20, 36], "pad_width": [20, 36], "pad_mod": 20, "edg": [20, 36], "before_n": 20, "after_n": 20, "reflect": [20, 25, 28, 34, 36], "constant_valu": 20, "runtime_device_index": 20, "stop_lift_param": 20, "consum": [20, 32, 35], "lift": [20, 22, 35], "transform_param": [20, 22], "allgath": [20, 24], "num_work": [20, 24], "worker": [20, 24], "allreduc": [20, 24, 34], "op_typ": 20, "avg": [20, 24, 36], "broadcast_from_worker0": [20, 24], "scatter_from_worker0": [20, 24], "receiv": [20, 34], "annotate_shard": 20, "device_mesh": 20, "devicemesh": 20, "placement": 20, "shard": 20, "mesh": 20, "unmodifi": 20, "redistribut": 20, "avg_pool2d_backward": 20, "end_checkpoint": 20, "checkpoint": [20, 22], "start_checkpoint": 20, "max_pool2d_backward": 20, "nll_loss_backward": 20, "No": [20, 25, 32, 35], "entir": [20, 26, 28], "instead": [20, 21, 22, 25, 28, 30, 32, 34, 35, 36, 37], "c_cp": 20, "d_cp": 20, "e_out": 20, "take_backward": 20, "resize2d": [20, 36], "roi": [20, 36], "coordinate_transformation_mod": [20, 36], "half_pixel": [20, 36], "rounding_method": [20, 36], "cubic_alpha": 20, "cubic_exclud": 20, "extrapolation_valu": [20, 36], "nearest_neighbor": [20, 36], "cubic": 20, "crop": [20, 36], "start_h": [20, 36], "start_w": [20, 36], "end_h": [20, 36], "end_w": [20, 36], "tf_crop_and_res": [20, 36], "coordin": [20, 36], "asymmetr": [20, 36], "pytorch_half_pixel": [20, 36], "tf_half_pixel_for_nn": [20, 36], "spline": [20, 36], "coeffici": [20, 36], "bicub": [20, 36], "exterior": 20, "outsid": [20, 31, 32, 35, 36], "virtual_device_index": 20, "kill_storag": 20, "kill": [20, 23], "kill_tensor": 20, "adaptivepool2dattr": 20, "argmaxargminattr": 20, "astypeattr": 20, "batchnormattr": 20, "calltirwithgradattr": 20, "concatattr": 20, "conv2dattr": 20, "conv2dtransposeattr": 20, "cumsumattr": 20, "dropoutattr": 20, "einsumattr": 20, "expanddimsattr": 20, "flipattr": 20, "initattr": 20, "layernormattr": 20, "layouttransformattr": 20, "matmulattr": 20, "permutedimsattr": 20, "pool2dattr": 20, "repeatattr": 20, "resize2dattr": 20, "softmaxattr": 20, "splitattr": 20, "squeezeattr": 20, "statisticalattr": 20, "stridedsliceattr": 20, "takeattr": 20, "tileattr": 20, "triluattr": 20, "namespac": [21, 23, 28, 30, 32, 34, 35], "bindingblock": [21, 22], "terminologi": 21, "datatypeimm": 21, "dataflowblockrewrit": 21, "root_fn": 21, "immut": 21, "mutated_dfb": 21, "mutated_root_fn": 21, "mutate_irmodul": 21, "old": [21, 32], "is_dfvar": 21, "tmp": 21, "counter": [21, 26], "Being": 21, "remove_unus": 21, "allow_undef": 21, "undefin": [21, 31, 34, 35, 36], "replace_all_us": 21, "old_var": 21, "new_var": 21, "dyntensortyp": 21, "execbuild": 21, "idx": 21, "declare_funct": 21, "vmfunckind": 21, "packed_func": 21, "emit_cal": 21, "dst": [21, 24, 32, 34, 35, 36], "emit_goto": 21, "pc_offset": 21, "goto": 21, "emit_if": 21, "cond": [21, 30, 34], "false_offset": 21, "emit_ret": 21, "param_nam": [21, 34], "vmfuncscop": 21, "imm": 21, "immedi": [21, 22], "as_python": [21, 32], "as_text": 21, "export_librari": [21, 23, 28], "file_nam": [21, 28], "fcompil": [21, 23, 28], "workspace_dir": [21, 28], "file_list": [21, 28], "temporari": [21, 22, 28], "dir": [21, 23, 28], "ex": [21, 27], "rt_mod": [21, 27], "load_modul": [21, 23, 28], "addon": [21, 28], "runnabl": [21, 28], "nvcc": 21, "everyth": 21, "stat": 21, "exprfunctor": 21, "memoiz": 21, "visit_expr": 21, "opaque_func": 21, "derive_func": 21, "specifici": 21, "simultan": 21, "ret_struct_info": 21, "is_pur": [21, 32], "bind_param": 21, "binding_map": [21, 22], "_np": 21, "bind_symbolic_var": 21, "create_empti": 21, "true_branch": 21, "false_branch": 21, "popul": 21, "un": 21, "objectstructinfo": 21, "objecttyp": 21, "packedfunctyp": 21, "primstructinfo": 21, "pod": [21, 34], "dtype_or_expr": 21, "prim": 21, "pyexprmut": 21, "exprmut": 21, "overwrit": 21, "inherit": 21, "discrib": 21, "expr_functor": 21, "proper": 21, "_pyexprvisitor": 21, "myexprmut": 21, "get_var_remap": 21, "vid": 21, "nullopt": [21, 32], "set_var_remap": 21, "visit_bind": 21, "visitbind": 21, "visit_binding_block": 21, "visitbindingblock": 21, "visit_binding_block_": 21, "visitbindingblock_": 21, "bindingblocknod": 21, "visit_call_": 21, "visitexpr_": 21, "visit_constant_": 21, "constantnod": 21, "visit_data_type_imm_": 21, "datatypeimmnod": 21, "visit_dataflow_block_": 21, "dataflowblocknod": 21, "visit_dataflow_var_": 21, "dataflowvarnod": 21, "visit_dataflow_var_def_": 21, "visitvardef_": 21, "rewritten": [21, 22, 31], "visitexpr": 21, "visit_expr_post_ord": 21, "visit_extern_func_": 21, "externfuncnod": 21, "visit_function_": 21, "functionnod": 21, "visit_global_var_": 21, "globalvarnod": 21, "visit_if_": 21, "ifnod": 21, "visit_match_cast_": 21, "visitbinding_": 21, "matchcastnod": 21, "visit_op_": 21, "opnod": 21, "visit_prim_value_": 21, "primvaluenod": 21, "visit_seq_expr_": 21, "seqexpr": 21, "seqexprnod": 21, "visit_shape_expr_": 21, "shapeexprnod": 21, "visit_span": 21, "visitspan": 21, "visit_string_imm_": 21, "stringimmnod": 21, "visit_tuple_": 21, "tuplenod": 21, "visit_tuple_getitem_": 21, "tuplegetitem": 21, "tuplegetitemnod": 21, "visit_var_": 21, "visit_var_binding_": 21, "varbindingnod": 21, "visit_var_def": 21, "visitvardef": 21, "visit_var_def_": 21, "visit_with_new_scop": 21, "with_struct_info": 21, "pyexprvisitor": 21, "exprvisitor": 21, "myexprvisitor": 21, "shapestructinfo": 21, "shapetyp": 21, "is_base_of": 21, "sever": [21, 22, 30, 36], "tuple_valu": 21, "vminstrumentreturnkind": [21, 27], "enumer": [21, 27, 36], "he": 21, "memory_cfg": [21, 27], "get_output": [21, 27], "invoke_st": [21, 27], "earlier": [21, 22, 27], "arbitrili": [21, 27], "set_input": [21, 27], "save_funct": [21, 27], "saved_nam": [21, 27], "include_return": [21, 27], "overhead": [21, 27], "overridden": [21, 22, 27, 29], "realli": [21, 27], "confus": [21, 27], "meant": [21, 27], "send": [21, 27], "dltensor": [21, 24, 25, 27, 28, 34, 35, 36], "minim": [21, 25, 27, 36], "set_instru": [21, 27], "func_symbol": [21, 27], "before_run": [21, 27], "ret_valu": [21, 27], "instr": [21, 27], "min_repeat_m": [21, 27, 28], "cooldown_interval_m": [21, 27, 28], "repeats_to_cooldown": [21, 27, 28], "f_preproc": [21, 27, 28], "benchmarkresult": [21, 27, 28], "warm": [21, 27, 28], "discard": [21, 27, 28], "durat": [21, 23, 26, 27, 28], "millisecond": [21, 27, 28], "meet": [21, 27, 28, 35], "fall": [21, 27, 28], "increas": [21, 27, 28, 34, 36], "cooldown": [21, 27, 28], "preprocess": [21, 27, 28, 36], "lazi": [21, 22, 27, 28], "testtimeevalu": [21, 27], "arg0": [21, 27], "arg1": [21, 27], "argn": [21, 27], "fewer": [21, 27], "portion": [21, 27], "func_name_sav": [21, 27], "ftimer": [21, 27, 28], "profileresult": [21, 27, 28], "exec_mod": 21, "bytecod": 21, "system_lib": [21, 23, 28, 29], "driver": [21, 28], "codegen": [21, 22, 29], "stackvm": 21, "detect": [21, 22, 28, 29, 30, 31, 32, 35], "inputmodul": 21, "foo": 21, "z": [21, 22, 28, 30, 32, 34, 35, 36], "get_shape_of": 21, "allocateworkspac": 22, "enough": [22, 37], "kworkspaces": 22, "alteropimpl": 22, "op_impl_map": 22, "op_buffer_transform": 22, "op_buffer_axis_separ": 22, "operator_nam": 22, "possibli": [22, 32], "op_kind": 22, "attachglobalsymbol": 22, "bindparam": 22, "bindsymbolicvar": 22, "varnam": 22, "bundlemodelparam": 22, "bundl": 22, "paramt": 22, "calltirrewrit": 22, "explicit": [22, 35, 36], "canonicalizebind": 22, "canonic": 22, "elimin": [22, 32], "combineparallelmatmul": 22, "unwant": 22, "convertlayout": 22, "desired_layout": [22, 36], "nhwc": [22, 36], "ohwi": 22, "dataflowblockpass": 22, "entry_funct": 22, "dead": [22, 32], "composit": [22, 32], "tripl": [22, 29], "eliminatecommonsubexpr": [22, 37], "call_onli": 22, "functionpass": [22, 35, 37], "subexpress": 22, "cse": [22, 37], "fewshottun": 22, "valid_count": [22, 36], "benchmark": [22, 35], "shot": 22, "conduct": [22, 32, 35, 37], "metaschedul": [22, 35, 38], "folddataflowblockoutput": 22, "clean": [22, 36], "function_pass": [22, 35], "fuse_opt_level": 22, "substitut": [22, 33, 35], "manipul": [22, 32], "fuseopsbypattern": 22, "fusionpattern": 22, "bind_const": 22, "annotate_codegen": 22, "driven": 22, "higher": [22, 32, 36, 37], "dnnl": 22, "conv2d_relu": 22, "offload": 22, "mergecompositefunct": 22, "larger": [22, 26, 36], "dfpattern": 22, "annotation_pattern": 22, "patterncheckcontext": 22, "require_grad": 22, "target_index": 22, "_adjoint": 22, "main_adjoint": 22, "original_paramet": 22, "original_output": 22, "grad_1": 22, "grad_2": 22, "original_return_valu": 22, "net": 22, "sublinear": 22, "chen": [22, 38], "tianqi": [22, 38], "adjoint": [22, 30], "lv2_adjoint": 22, "lv1_adjoint": 22, "x_adjoint": 22, "y_adjoint": 22, "orig_return_valu": 22, "killafterlastus": 22, "lambdalift": 22, "lazytransformparam": 22, "demand": 22, "tonondataflow": 22, "removepuritytrack": 22, "customize_legalize_map": 22, "enable_warn": 22, "flegal": 22, "customiz": 22, "legalizefunc": 22, "customize_legalize_add": 22, "t_multipli": 22, "lifttransformparam": 22, "loweralloctensor": 22, "builtin": [22, 35], "planner": 22, "intent": 22, "metascheduleapplydatabas": 22, "deduc": 22, "metascheduletuneirmod": 22, "max_trials_gloabl": 22, "metascheduletunetir": 22, "henc": 22, "anf": 22, "checked_type_": 22, "shape_": 22, "optimizelayouttransform": 22, "redund": [22, 35], "matched_expr": 22, "annotated_expr": 22, "matched_bind": 22, "var_usag": 22, "value_to_bound_var": 22, "doesn": [22, 32, 34], "removepuritycheck": 22, "force_pur": 22, "removeredundantreshap": 22, "rewritecudagraph": 22, "rewritedataflowreshap": 22, "createview": 22, "runcodegen": 22, "target_opt": 22, "splitcalltirbypattern": 22, "fcodegen": 22, "rest": 22, "matchresult": 22, "staticplanblockmemori": 22, "reus": [22, 23, 32, 36], "amount": [22, 28], "tir_var_upper_bound": 22, "clariti": 22, "1024": 22, "tomixedprecis": 22, "fp16_input_nam": 22, "fp32": [22, 36], "fp16": [22, 36], "conv": [22, 30, 36], "updatevdevic": 22, "new_vdevic": 22, "vmbuiltinlow": 22, "vmshapelow": 22, "emit_err_ctx": 22, "err": 22, "dataflowblock_pass": 22, "pass_func": [22, 35, 37], "opt_level": [22, 35, 37], "traceabl": [22, 35, 37], "create_dataflowblock_pass": 22, "testreplacebind": 22, "val": [22, 34], "56": 22, "new_bind": 22, "transform_dataflowblock": 22, "demo": [22, 35], "new_block": 22, "inputmod": 22, "f1": 22, "block_pass": 22, "updated_mod": [22, 35, 37], "my": [22, 35], "follwo": [22, 37], "create_function_pass": [22, 35], "testreplacefunc": [22, 35], "new_func": [22, 34, 35], "transform_funct": [22, 35], "f2": 22, "fpass": [22, 31, 35], "lightweight": [23, 25], "connect": 23, "upload": 23, "launch": 23, "localsess": 23, "rpcsession": 23, "ran": 23, "popensess": 23, "binari": [23, 28, 30, 34, 36], "popen": 23, "sess": 23, "client": 23, "dev_id": [23, 25, 28], "dev_typ": [23, 25, 28], "encod": [23, 36], "temp": 23, "folder": 23, "rel": 23, "bytearrai": [23, 28], "download_linked_modul": 23, "linker": 23, "build_module_with_cross_compil": 23, "tar": [23, 28], "open": 23, "wb": [23, 32], "ext_dev": [23, 25, 28], "extens": [23, 25, 28], "get_funct": [23, 28], "listdir": 23, "token": 23, "wide": [23, 28], "webgpu": [23, 25], "port": 23, "9091": 23, "port_end": 23, "9199": 23, "is_proxi": 23, "tracker_addr": 23, "load_librari": 23, "custom_addr": 23, "silent": 23, "no_fork": 23, "server_init_callback": 23, "reuse_addr": 23, "timeout": 23, "url": [23, 38], "proxi": 23, "tracker": 23, "ip": 23, "forbid": 23, "fork": [23, 32], "multiprocess": 23, "socket": 23, "time_wait": 23, "bring": [23, 28], "mypackag": 23, "register_func": [23, 28], "trackersess": 23, "addr": 23, "session_timeout": 23, "max_retri": 23, "session_constructor_arg": 23, "longer": 23, "kept": [23, 36], "aliv": 23, "retri": 23, "request_and_run": 23, "guard": [23, 30, 34], "stateless": 23, "text_summari": 23, "enable_log": 23, "disabl": [23, 28, 29, 32, 37], "server_url": 23, "server_port": 23, "server_kei": 23, "session_constructor": 23, "rpcclientsess": 23, "endpoint": 23, "client_via_proxi": 23, "proxy_server_url": 23, "proxy_server_port": 23, "proxy_server_kei": 23, "internal_url": 23, "internal_port": 23, "internal_kei": 23, "internal_log": 23, "connect_track": 23, "with_minrpc": 23, "compile_func": 23, "posix_popen_serv": 23, "minrpc": 23, "distribut": [24, 32], "dmodul": 24, "dref": 24, "dpackedfunc": 24, "resid": 24, "debug_copy_from": 24, "worker_id": 24, "debug_get_from_remot": 24, "processsess": 24, "pipe": 24, "queue": [24, 36], "src": [24, 32, 34, 35, 36], "call_pack": [24, 30, 34, 36], "variad": [24, 34], "dldatatyp": 24, "dldevic": 24, "return_valu": 24, "unsupport": 24, "copy_from_worker_0": 24, "host_arrai": 24, "remote_arrai": 24, "copy_to_worker_0": 24, "gather_to_worker0": 24, "from_arrai": 24, "to_arrai": 24, "get_global_func": [24, 28], "init_ccl": 24, "ccl": 24, "device_id": [24, 28, 34], "underli": [24, 25, 28, 32, 38], "nccl": 24, "rccl": 24, "mpi": 24, "load_vm_modul": 24, "sync_worker_0": 24, "threadedsess": 24, "arthimet": 25, "goal": 25, "asnumpi": 25, "deprec": [25, 28, 29, 32, 35], "copyfrom": 25, "source_arrai": 25, "array_lik": 25, "arr": [25, 34], "copyto": 25, "mem_scop": 25, "np_arr": 25, "ident": [25, 30, 34, 36], "shapetupl": [25, 28], "supportsint": 25, "plugin": [25, 28], "from_dlpack": 25, "__dlpack__": 25, "dlpack": [25, 34, 36], "retreiv": 25, "destructor": 25, "respons": [25, 32, 34, 36], "destruct": 25, "capsul": 25, "mtl": [25, 28], "numpyasarrai": 25, "np_data": [25, 36], "tvmarrai": 25, "vpi": [25, 28], "simul": [25, 28, 36], "registr": [26, 29], "devicewrapp": 26, "metriccollector": 26, "metric": [26, 28], "percent": 26, "ratio": 26, "device_metr": [26, 28], "csv": [26, 28], "overal": [26, 28], "classmethod": [26, 28], "from_json": [26, 28], "deseri": [26, 28, 32], "aggreg": [26, 28], "col_sum": [26, 28], "frame": [26, 28, 36], "appearancei": [26, 28], "profile_funct": 26, "collector": 26, "warmup_it": 26, "cach": [26, 28, 32, 35, 36], "hit": 26, "flop": [26, 31], "issu": [26, 32], "individu": [26, 28], "entry_nam": 26, "prof": 26, "objectref": [26, 33], "countnod": 26, "durationnod": 26, "percentnod": 26, "type_str": 28, "datatypecod": 28, "device_typ": [28, 29, 34], "strucur": 28, "expos": [28, 32, 34, 35], "mask2str": 28, "str2mask": 28, "dldevicetyp": 28, "tvmdeviceexttyp": 28, "enum": 28, "api_vers": 28, "cuda_vers": 28, "vk_header_vers": 28, "compute_vers": 28, "minor": [28, 36], "create_raw_stream": 28, "stream": 28, "tvmstreamhandl": 28, "device_nam": 28, "vendor": 28, "driver_vers": 28, "450": 28, "408": 28, "nvidia": [28, 34], "patch": 28, "appropri": [28, 29, 36], "free_raw_stream": 28, "l2_cache_size_byt": 28, "max_clock_r": 28, "khz": 28, "max_shared_memory_per_block": 28, "max_thread_dimens": 28, "max_threads_per_block": 28, "multi_processor_count": 28, "thee": 28, "set_raw_stream": 28, "sync": [28, 35], "job": 28, "texture_spatial_limit": 28, "textur": 28, "warp_siz": 28, "concurr": 28, "regardless": 28, "clear_import": 28, "entry_func": 28, "fpack_import": 28, "mechan": 28, "_cc": 28, "create_shar": 28, "suppli": [28, 30], "object_format": 28, "is_system_lib": 28, "symbol_prefix": 28, "suitabl": [28, 36], "query_import": 28, "get_property_mask": 28, "modulepropertymask": 28, "bitmask": [28, 32, 34], "get_sourc": 28, "fmt": 28, "implements_funct": 28, "has_funct": 28, "eg": [28, 29], "csourcemodul": 28, "import_modul": 28, "imported_modul": 28, "is_binary_serializ": 28, "serializ": 28, "ie": 28, "serialz": 28, "is_dso_export": 28, "dso": 28, "is_runn": 28, "export_shar": 28, "limit_zero_time_iter": 28, "cache_flush_byt": 28, "hang": 28, "flush": 28, "objectgener": 28, "asobject": [28, 30], "objectpath": 28, "objectpathpair": 28, "plai": 28, "role": 28, "bridg": 28, "front": [28, 36], "scenario": [28, 35], "exposur": 28, "inspect": 28, "hook": 28, "scriptabl": 28, "ir_prefix": 28, "tir_prefix": 28, "relax_prefix": 28, "module_alia": 28, "buffer_dtyp": 28, "int_dtyp": 28, "float_dtyp": 28, "verbose_expr": 28, "indent_spac": 28, "print_line_numb": 28, "num_context_lin": 28, "syntax_sugar": 28, "show_object_address": 28, "path_to_underlin": 28, "path_to_annot": 28, "obj_to_underlin": 28, "obj_to_annot": 28, "indent": 28, "underlin": 28, "black_format": [28, 32], "highlight": [28, 32], "pygment": [28, 32], "cprint": [28, 32], "formatt": [28, 32], "black": [28, 32], "tvm_black_format": [28, 32], "unset": 28, "prefer": 28, "const_val": 28, "tvm_val": 28, "redirect": 28, "convert_to_object": 28, "codebas": 28, "obj": [28, 31], "suffix": 28, "cc": [28, 36, 38], "load_param_dict": 28, "param_byt": 28, "load_param_dict_from_fil": 28, "load_static_librari": 28, "static_librari": 28, "relink": 28, "fly": [28, 32, 34], "save_param_dict": 28, "load_param": 28, "param0": 28, "arr0": 28, "param1": 28, "arr1": 28, "save_param_dict_to_fil": 28, "startup": [28, 29], "dlopen": [28, 29], "ban": [28, 29], "long": [28, 29, 36], "life": 28, "cyle": 28, "codgen": 29, "target_kind": 29, "mtripl": 29, "mcpu": 29, "cpunam": 29, "chip": 29, "architectur": [29, 38], "mattr": 29, "a1": 29, "a2": 29, "a3": 29, "simd": 29, "mabi": 29, "abi": 29, "lp64d": 29, "genericfunc": 29, "ever": 29, "get_packed_func": 29, "key_list": 29, "allow_overrid": 29, "set_default": 29, "arm_cpu": 29, "mali": 29, "intel_graph": 29, "intel": 29, "graphic": 29, "arch": 29, "canon_multi_target": 29, "multi_target": 29, "canon_target": 29, "canon_multi_target_and_host": 29, "target_host": 29, "sm_80": 29, "canon_target_and_host": 29, "canon_target_map_and_host": 29, "target_map": 29, "allow_non": 29, "from_devic": 29, "get_kind_attr": 29, "get_target_device_typ": 29, "list_kind": 29, "max_block_size_x": 29, "max_block_size_i": 29, "max_num_thread": 29, "target_or_curr": 29, "thread_warp_s": 29, "targetkind": 29, "options_from_nam": 29, "kind_nam": 29, "virtualdevic": 29, "soc": 29, "phone": 29, "board": 29, "bifrost": 29, "1080ti": 29, "sm_61": 29, "generic_func": 29, "fdefault": 29, "fgener": 29, "my_func": 29, "my_func_cuda": 29, "displai": [29, 37], "get_native_generic_func": 29, "cpu_ver": 29, "v68": 29, "Not": [29, 32, 34, 36], "throw": [29, 34], "hvx": 29, "llvm_option": 29, "use_qfloat": 29, "qfloat": 29, "use_ieee_fp": 29, "ieee": 29, "num_cor": 29, "vtcm_capac": 29, "vtcm": [29, 31, 35], "capac": 29, "14": [29, 34, 36, 38], "list_tag": 29, "tag_dict": 29, "make_compilation_config": 29, "ctxt": 29, "compilationconfig": 29, "override_native_generic_func": 29, "rasp": 29, "raspberri": 29, "3b": 29, "riscv_cpu": 29, "sifiv": 29, "u54": 29, "risc": 29, "rv64gc": 29, "stm32": 29, "seri": [29, 37, 38], "stm32h7xx": 29, "stm32f4xx": 29, "computeop": 30, "externop": 30, "hybridop": 30, "hybrid": 30, "placeholderop": 30, "scanop": [30, 36], "scan": [30, 36], "scan_axi": 30, "specializedcondit": 30, "corresspond": 30, "value_index": [30, 34], "tensorcomputeop": 30, "tensorslic": 30, "operaton": [30, 34], "experss": [30, 34], "comm_reduc": [30, 34], "fcombin": [30, 34], "fident": [30, 34], "commut": [30, 34, 36], "mysum": [30, 34], "varargs_nam": 30, "vararg": 30, "i2": [30, 32], "index_dtype_overrid": 30, "_tensor": 30, "tir_matmul": 30, "create_schedul": [30, 34, 36], "decl_tensor_intrin": 30, "tensor_intrin": [30, 32], "scalar_param": 30, "default_buffer_param": 30, "stmt": [30, 31, 32, 33, 34, 35, 36], "ins": [30, 36], "reduce_init": 30, "reduce_upd": 30, "compact": [30, 31, 32, 34, 35, 36], "scalar_input": 30, "intrin": [30, 32, 34], "tensorintrin": [30, 32, 34], "div": [30, 34, 36], "truncdiv": [30, 34, 36], "exponenti": [30, 34, 36], "in_buff": [30, 36], "out_buff": [30, 36], "additon": [30, 36], "contrib": [30, 36], "cbla": [30, 36], "extern_primfunc": 30, "before_split": [30, 32], "primexprwithop": [30, 34], "floordiv": [30, 32, 34, 35, 36], "floormod": [30, 32, 34, 35, 36], "fmod": [30, 34], "wrt": [30, 36], "word": 30, "jacobian": 30, "28": 30, "w1": 30, "w2": 30, "z1": 30, "z2": 30, "dw1": 30, "dw2": 30, "jw1": 30, "jw2": 30, "if_then_els": [30, 32, 34, 35], "satisfi": [30, 32, 34, 35], "lane": [30, 34], "indexdiv": [30, 34], "advantag": [30, 34], "indexmod": [30, 34], "log10": [30, 34, 36], "log2": [30, 34, 36], "predic": [30, 32, 34], "max_r": [30, 34], "max_valu": [30, 34], "min_r": [30, 34], "nearbyint": [30, 34], "faster": [30, 31, 34, 36], "wherea": [30, 34], "en": [30, 34], "cpprefer": [30, 34], "cpp": [30, 34], "numer": [30, 34, 36], "math": [30, 34], "popcount": [30, 34], "bit": [30, 32, 34, 35, 36], "expon": [30, 34, 36], "rv": 30, "thread_tag": [30, 34], "state_placehold": 30, "timestamp": 30, "s_state": 30, "s_init": 30, "_": [30, 32, 34, 36], "s_updat": 30, "size_var": 30, "sizevar": [30, 34], "sum_r": [30, 34], "tag_scop": 30, "manger": 30, "tagscop": 30, "compute_relu": 30, "hyperbol": [30, 34, 36], "thread_axi": [30, 32, 34], "trace_act": [30, 34], "default_trace_act": [30, 34], "trunc": [30, 34, 36], "truncat": [30, 34, 36], "closer": [30, 34], "truncmod": [30, 34], "tindex": 30, "oobcheck": 31, "apply_prim_func_arg_and_result_memory_constraint": 31, "relay_func_typ": 31, "arg_and_result_memory_scop": 31, "written": [31, 32], "aka": [31, 32], "dp": 31, "caution": [31, 32], "account": 31, "anystr": 31, "calculate_allocated_byt": 31, "func_or_mod": 31, "calculate_constant_byt": 31, "constant_byte_align": 31, "align": [31, 32, 34, 36], "calculate_workspace_byt": 31, "workspace_byte_align": 31, "detect_buffer_access_lca": 31, "lowest": 31, "bufferload": [31, 32, 34, 35], "bufferstor": [31, 32, 34, 35], "estimate_tir_flop": 31, "stmt_or_mod": 31, "fragment": [31, 34, 35], "expr_deep_equ": 31, "deepli": 31, "unless": [31, 34, 36], "arithmet": [31, 35], "simplif": [31, 34, 35], "find_anchor_block": 31, "biggest": 31, "latter": 31, "winograd": [31, 36], "anchor_block": 31, "get_block_access_region": 31, "buffer_var_map": 31, "bufferregion": [31, 34], "third": 31, "get_block_read_write_region": 31, "get_prim_func_arg_and_result_memory_constraint": 31, "get_vtcm_compaction_pass": 31, "undefined_var": 31, "verify_gpu_cod": 31, "illeg": [31, 35], "verif": [31, 32], "verify_memori": 31, "verify_ssa": 31, "ssa": [31, 35], "verify_well_form": 31, "assert_mod": 31, "blockscop": [32, 34], "sref": [32, 34], "glossari": 32, "subtre": 32, "leav": 32, "child": 32, "leaf": 32, "get_deps_by_dst": 32, "stmtsref": [32, 34], "get_deps_by_src": 32, "depkind": 32, "waw": 32, "war": 32, "kraw": 32, "exprrv": 32, "instructionkind": 32, "input_rv_typ": 32, "getblock": 32, "attr_typ": 32, "atom": 32, "output_rv_typ": 32, "noth": 32, "functor": [32, 33], "unstructur": 32, "usecas": 32, "moment": 32, "alon": 32, "computeinlin": 32, "debug_mask": 32, "error_render_level": 32, "enable_check": 32, "schedule_primit": 32, "add_unit_loop": 32, "block_or_loop": 32, "new_loop": 32, "before_add_unit_loop": 32, "after_add_unit_loop": 32, "ann_kei": 32, "ann_val": 32, "annotationvaluet": 32, "before_annot": 32, "ann_valu": 32, "after_annot": 32, "block_attr": 32, "vthread": [32, 35], "before_bind": 32, "after_bind": 32, "blockiz": 32, "before_block": 32, "i_0": 32, "set_scop": 32, "after_block": 32, "b_o": 32, "vio": 32, "vjo": 32, "subspac": 32, "cache_index": 32, "cse_thresh": 32, "precomput": [32, 36], "threshold": 32, "cached_block": 32, "cache_inplac": 32, "40": 32, "80": 32, "i3": 32, "block_a": 32, "resize_cache_index": 32, "index_var_0": 32, "index_var_1": 32, "index_0": 32, "index_1": 32, "read_buffer_index": 32, "inplac": 32, "before_cache_inplac": 32, "data_io": 32, "call_extern": [32, 34], "call_impl": 32, "data_io_loc": 32, "cache_read": 32, "consumer_block": 32, "before_cache_read": 32, "block_b": 32, "after_cache_read": 32, "a_loc": 32, "cache_writ": 32, "write_buffer_index": 32, "before_cache_writ": 32, "after_cache_writ": 32, "b_local": 32, "can_decompose_pad": 32, "compute_at": 32, "move": [32, 35], "regener": 32, "induc": 32, "nonneg": 32, "before_compute_at": 32, "after_compute_at": 32, "compute_inlin": 32, "before_inlin": 32, "after_inlin": 32, "untouch": 32, "decompose_pad": 32, "pad_value_block": 32, "before_decompos": 32, "140": 32, "134": 32, "after_decompos": 32, "block_pad_const": 32, "init_block": 32, "ty": 32, "enter_postproc": 32, "postprocess": 32, "fork_se": 32, "func_working_on": 32, "consecut": [32, 35], "fused_loop": 32, "before_fus": 32, "after_fus": 32, "i_j_fus": 32, "16384": 32, "rand_var_or_sref": 32, "work_on": 32, "indexerror": 32, "get_child_block": 32, "get_consum": 32, "parent": [32, 34], "get_output_block": 32, "scope_block": 32, "atleast": 32, "output_block": 32, "get_produc": 32, "get_sref": [32, 34], "rand_var_or_stmt": 32, "depth": [32, 36], "before_merg": 32, "i_m": 32, "pad_einsum": 32, "On": 32, "132": 32, "144": 32, "before_pad_einsum": 32, "c_share": 32, "a_pad": 32, "b_pad": 32, "c_pad": 32, "before_parallel": 32, "after_parallel": 32, "reindex": 32, "reindex_block": 32, "before_reindex": 32, "after_reindex": 32, "a_reindex": 32, "reindex_cache_read": 32, "transform_block_layout": 32, "surround": 32, "before_reindex_cache_read": 32, "after_reindex_cache_read": 32, "reindex_cache_writ": 32, "transform_layout": 32, "before_reindex_cache_writ": 32, "remove_rv": 32, "rand_var": 32, "ordered_loop": 32, "l_2": 32, "l_n": 32, "l_i": 32, "l_": 32, "before_reord": 32, "after_reord": 32, "reorder_block_iter_var": 32, "new_ord": 32, "matmul_after_reorder_block_iter_var": 32, "rss": 32, "before_reverse_compute_at": 32, "after_reverse_compute_at": 32, "reverse_compute_inlin": 32, "rfactor": 32, "factor_axi": 32, "race": 32, "opportun": 32, "pseudocod": 32, "innermost": [32, 36], "b_rf": 32, "rf_block": 32, "before_rfactor": 32, "ii": 32, "vii": 32, "srr": 32, "after_rfactor": 32, "vi2": 32, "sr": 32, "unrol": [32, 35], "outermost": [32, 35], "unari": 32, "plu": 32, "rolling_buff": 32, "roll": [32, 35], "rollabl": 32, "overlap": [32, 36], "circular": 32, "cascad": 32, "before_rolling_buff": 32, "12": [32, 36], "ax2": 32, "ax3": 32, "ax0_1": 32, "ax1_1": 32, "rv0": 32, "rv1": 32, "rr": 32, "after_rolling_buff": 32, "region_cov": 32, "sample_categor": 32, "prob": 32, "decis": 32, "sample_compute_loc": 32, "sample_partitioned_til": 32, "partition_po": 32, "innerpart_factor": 32, "partit": 32, "sample_perfect_til": 32, "max_innermost_factor": 32, "perfect": 32, "set_axis_separ": 32, "before_set_axis_separ": 32, "buffer_index": 32, "buffer_index_typ": 32, "after_set_axis_separ": 32, "before_set_scop": 32, "after_set_scop": 32, "b_share": 32, "split_loop": 32, "after_split": 32, "schedulest": 32, "storage_align": 32, "friendli": 32, "bank": 32, "before_storage_align": 32, "after_storage_align": 32, "buffer_dim_align": 32, "129": 32, "before_tensor": 32, "k_0": 32, "mma_desc": 32, "offset_factor": [32, 34, 36], "mma_intrin": 32, "tvm_mma_sync": [32, 34], "elem_offset": [32, 34, 35, 36], "test_mma_intrin": 32, "after_tensor": 32, "update_o": 32, "vko": 32, "a_1": 32, "b_1": 32, "c_1": 32, "before_transform_block_layout": 32, "after_transform_block_layout": 32, "assume_injective_transform": 32, "setaxissepar": 32, "transformlayout": 32, "symplif": 32, "precondit": 32, "met": 32, "incorrect": 32, "complic": 32, "caller": 32, "before_transform_layout": 32, "two_elementwise_transformed_intermediate_buff": 32, "unannot": 32, "before_unannot": 32, "after_unannot": 32, "before_unrol": 32, "after_unrol": 32, "unsafe_hide_buffer_access": 32, "buf_typ": 32, "buf_index_arrai": 32, "hide": 32, "unsaf": [32, 35], "spars": [32, 34], "unsafe_set_dtyp": 32, "before_set_dtyp": 32, "set_dtyp": 32, "after_set_dtyp": 32, "before_vector": 32, "after_vector": 32, "scheduledebugmask": 32, "correpsond": [32, 34], "verify_sref_tre": 32, "verify_cached_flag": 32, "affine_bind": 32, "stage_pipelin": 32, "scheduleerror": 32, "happen": [32, 36], "primari": [32, 35], "resort": 32, "prerequisit": 32, "get_block_scop": [32, 34], "block_sref": [32, 34], "src_sref": 32, "tgt_stmt": 32, "blockreal": [32, 34, 35], "block_sref_reus": 32, "closest": [32, 36], "children": [32, 33], "inline_mark": 32, "root_mark": 32, "inst": 32, "far": 32, "roundtripp": 32, "past": 32, "reproduc": 32, "decision_typ": 32, "apply_json_to_schedul": 32, "json_obj": 32, "json_typ": 32, "apply_to_schedul": 32, "remove_postproc": 32, "decision_provid": 32, "onto": 32, "1st": 32, "2nd": 32, "3rd": 32, "4th": 32, "as_json": 32, "py_stmt": 32, "get_decis": 32, "pop": [32, 37], "popped_inst": 32, "with_decis": 32, "ir_transform": 33, "preorder": 33, "postord": 33, "only_en": 33, "pre_order_visit": 33, "renew_def": 33, "vardef": 33, "bufferdef": 33, "deepcopi": 33, "vmap": 33, "buffer_var": 34, "allocateconst": 34, "data_or_idx": 34, "assertstmt": 34, "attrstmt": [34, 35], "bijectivelayout": 34, "biject": 34, "bijective_layout": 34, "document": 34, "src_layout": [34, 36], "dst_layout": [34, 36], "backward_index": 34, "src_index": 34, "backward_shap": 34, "src_shape": 34, "forward_index": 34, "dst_index": 34, "forward_shap": 34, "dst_shape": 34, "iter_var": [34, 35], "matchbufferregion": 34, "subregion": 34, "blockdependenceinfo": 34, "sref2scop": 34, "stmt2ref": 34, "retriv": 34, "iter_valu": [34, 35], "realiz": 34, "block_real": 34, "decl_buff": [34, 36], "access_ptr": 34, "access_mask": 34, "ptr_type": 34, "content_lan": 34, "ptress": 34, "ptr": 34, "get_flattened_buff": 34, "offset_of": 34, "flattened_indic": 34, "vload": 34, "vstore": 34, "bufferr": 34, "calleffectkind": 34, "commreduc": 34, "identity_el": 34, "dataproduc": 34, "declbuff": 34, "eq": 34, "loop_var": 34, "min_val": 34, "forkind": 34, "threadbind": 34, "ge": 34, "gt": 34, "ifthenels": [34, 35], "then_cas": 34, "else_cas": 34, "initial_indic": 34, "final_indic": 34, "inverse_index_map": 34, "prior": [34, 35], "invers": [34, 36], "from_func": 34, "mapping_funct": 34, "index_dtyp": 34, "from_func_with_separ": 34, "is_equivalent_to": 34, "other_map": 34, "is_equival": 34, "map_indic": 34, "map_ndarrai": 34, "arr_src": 34, "thie": 34, "arr_dst": 34, "map_shap": 34, "non_surjective_invers": 34, "inverse_map": 34, "axis0": 34, "axis2": 34, "iter_typ": 34, "le": 34, "lt": 34, "primal": 34, "subordin": 34, "nchw16c": [34, 36], "channel_block": [34, 36], "factor_of": 34, "index_of": 34, "letstmt": [34, 35], "ne": 34, "prefetch": [34, 35], "buffer_map": [34, 35], "param_map": 34, "mem_copi": 34, "mem_copy_16_16": 34, "with_bodi": 34, "new_bodi": 34, "producerload": 34, "producerr": 34, "producerstor": 34, "ramp": 34, "rdom": 34, "true_valu": 34, "false_valu": 34, "seqstmt": 34, "shuffl": 34, "tvmbackendallocworkspac": 34, "nbyte": 34, "dtype_code_hint": 34, "dtype_bits_hint": 34, "tempor": 34, "opengl": 34, "tvmbackendfreeworkspac": 34, "desc": 34, "impl": 34, "allow_miss": 34, "irtyp": 34, "address_of": 34, "buffer_load": 34, "atan2": 34, "arctan2": 34, "call_cpack": 34, "call_cpacked_low": 34, "call_intrin": 34, "call_llvm_intrin": 34, "poistion": 34, "call_llvm_pure_intrin": 34, "tvmarrayhandl": 34, "period": 34, "call_packed_low": 34, "reciev": 34, "call_pure_extern": 34, "ceildiv": 34, "clz": [34, 36], "copysign": 34, "create_barri": 34, "barrier_count": 34, "barrier": 34, "data_align": [34, 36], "buffer_typ": [34, 36], "discuss": [34, 36], "pssed": [34, 36], "auto_broadcast": [34, 36], "m0": [34, 36], "m1": [34, 36], "m2": [34, 36], "n0": [34, 36], "n1": [34, 36], "n2": [34, 36], "o0": [34, 36], "o1": [34, 36], "o2": [34, 36], "fadd": [34, 36], "bcast_add": [34, 36], "benefit": [34, 36], "end_profile_intrins": 34, "exp10": 34, "exp2": 34, "hypot": 34, "infin": 34, "isnullptr": 34, "nullptr": 34, "layout_str": 34, "ldexp": 34, "log1p": 34, "lookup_param": 34, "mma_fil": 34, "local_s": 34, "local_ptr": 34, "mma": [34, 35], "registor": 34, "mma_stor": 34, "dst_ptr": 34, "src_ptr": 34, "src_offset": 34, "dst_stride": 34, "ptx": 34, "nextaft": 34, "toward": 34, "pow": 34, "ptx_arrive_barri": 34, "barrier_id": 34, "arriv": 34, "mbarrier": 34, "ptx_arrive_barrier_expect_tx": 34, "byte_count": 34, "tx": 34, "expect_tx": 34, "addtion": 34, "async": 34, "transact": 34, "ptx_commit_group": 34, "movement": 34, "ptx_cp_async": 34, "shared_ptr": 34, "shared_offset": 34, "global_ptr": 34, "global_offset": 34, "ptx_cp_async_barri": 34, "ptx_cp_async_bulk": 34, "bulk": 34, "ptx_init_barrier_thread_count": 34, "thread_count": 34, "ptx_ldmatrix": 34, "tran": 34, "local_offset": 34, "smem_ptr": 34, "smem_offset": 34, "warp": [34, 35], "ldmatrix": 34, "b16": 34, "memort": 34, "ptx_mma": 34, "a_layout": 34, "b_layout": 34, "a_dtyp": 34, "b_dtype": 34, "c_dtype": 34, "multiplicand_a": 34, "a_index": 34, "multiplicand_b": 34, "b_index": 34, "c_index": 34, "satur": 34, "col": 34, "multiplicand": 34, "ptx_mma_sp": 34, "meta_index": 34, "sparse_selector": 34, "selector": 34, "ptx_wait_barri": 34, "try_wait": 34, "ptx_wait_group": 34, "uncommit": 34, "q_multiply_shift": 34, "shift": [34, 36], "mathemat": 34, "wikipedia": 34, "wiki": 34, "q_": 34, "number_format": 34, "half": 34, "fraction": [34, 36], "q_multiply_shift_per_axi": 34, "is_lshift_requir": [34, 36], "is_rshift_requir": [34, 36], "reinterpret": [34, 36], "shift_left": 34, "shift_right": 34, "start_profile_intrins": 34, "stmt_list": 34, "stmt_seq": 34, "tvm_access_ptr": 34, "ptype": 34, "rw_mask": 34, "tvm_bmma_sync": 34, "fragment_d": 34, "index_d": 34, "fragment_a": 34, "index_a": 34, "fragment_b": 34, "index_b": 34, "fragment_c": 34, "index_c": 34, "bmma_sync": 34, "bwmma": 34, "tvm_check_return": 34, "return_unexpect": 34, "nested_cal": 34, "tvm_fill_frag": 34, "fill_frag": 34, "wmma": 34, "uintimm": 34, "tvm_load_matrix_sync": 34, "buffer_ptr": 34, "row_major": 34, "column_major": 34, "mma_sync": 34, "tvm_stack_alloca": 34, "dtype_str": 34, "tvm_stack_make_arrai": 34, "arr_dtyp": 34, "elem_offs": 34, "tvm_stack_make_shap": 34, "tvm_store_matrix_sync": 34, "tvm_struct_get": 34, "date": 34, "structtyp": 34, "tvm_struct_set": 34, "tvm_thread_allreduc": 34, "freduce_arg": 34, "threadblock": 34, "tvm_throw_last_error": 34, "tvmgetlasterror": 34, "tvm_tupl": 34, "undef": 34, "vectorcombin": 34, "vec1": 34, "vec2": 34, "vectorhigh": 34, "vec": 34, "vectorlow": 34, "annotatedeviceregion": 35, "ktarget": 35, "annotateentryfunc": 35, "ftransform": 35, "prim_func_pass": 35, "applylayouttransform": 35, "layout_transform_map": 35, "fucntion": 35, "bf16computeleg": 35, "bf16": 35, "bf16storageleg": 35, "u16": 35, "bindtarget": 35, "coprocsync": 35, "processor": 35, "combinecontextcal": 35, "commonsubexprelimtir": 35, "enable_cse_tir": 35, "identify_equiv_term": 35, "compactbufferalloc": 35, "is_strict": 35, "narrow": 35, "skinni": 35, "grow": 35, "convertblockstoopaqu": 35, "convertforloopstoseri": 35, "convertssa": 35, "hoist": 35, "decoratedevicescop": 35, "defaultgpuschedul": 35, "unschedul": 35, "extractprimfuncconst": 35, "unif": 35, "fp8computeleg": 35, "promote_dtype_str": 35, "fp8": 35, "promote_dtyp": 35, "fp8storageleg": 35, "u8": 35, "fcond": 35, "flattenbuff": 35, "forcenarrowindextoint32": 35, "forc": 35, "down": [35, 36], "hoistexpress": 35, "verison": 35, "hoistifthenels": 35, "invari": 35, "elig": 35, "advanc": [35, 38], "support_block_scope_host": 35, "hoistedcondit": 35, "hoistexpressionconfig": 35, "conditional_typ": 35, "bitflag": 35, "booleanexpress": 35, "ifelseexpr": 35, "ifelsestmt": 35, "never": 35, "usingblockvar": 35, "hoistedletbind": 35, "let_binding_typ": 35, "letexpr": 35, "requiredbycondit": 35, "inferfrag": 35, "infom": 35, "injectcopyintrin": 35, "pragma_kei": 35, "fintrin": 35, "pragma": 35, "copyintrin": 35, "pad_befor": [35, 36], "pad_aft": [35, 36], "injectdoublebuff": 35, "doubl": 35, "injectptxasynccopi": 35, "asyncron": 35, "injectpermutedlayout": 35, "injectprefetch": 35, "injectrollingbuff": 35, "injectsoftwarepipelin": 35, "injectvirtualthread": 35, "installdebugspan": 35, "printer": 35, "instrumentboundcheck": 35, "checker": 35, "instrumentprofileintrins": 35, "legalizepackedcal": 35, "tvmvalu": 35, "liftattrscop": 35, "liftthreadbind": 35, "looppartit": 35, "lowerautocopi": 35, "lowercrossthreadreduct": 35, "lowercustomdatatyp": 35, "lowerdevicekernellaunch": 35, "subroutin": 35, "env_thread": 35, "kglobalsymbol": 35, "tvm_call_pack": 35, "lowerdevicestorageaccessinfo": 35, "lowerinitblock": 35, "lowerintrin": 35, "lowermatchbuff": 35, "loweropaqueblock": 35, "lowertvmbuiltin": 35, "lowerthreadallreduc": 35, "alleduc": 35, "lowerwarpmemori": 35, "makepackedapi": 35, "primfuncnod": 35, "tvmarg": 35, "tvmretvalu": 35, "buffernod": 35, "makeunpackedapi": 35, "confirm": 35, "manifestsharedmemorylocalstag": 35, "mergedynamicsharedmemoryalloc": 35, "narrowdatatyp": 35, "target_bit": 35, "storageflatten": 35, "planandupdatebufferallocationloc": 35, "exact": 35, "primfuncpass": 35, "reducebranchingthroughovercomput": 35, "overcomput": 35, "removeassum": 35, "removenoop": 35, "removestoreundef": 35, "removeweightlayoutrewriteblock": 35, "skip_ndarray_rewrit": 35, "matter": 35, "mapndarrai": 35, "slow": 35, "sometim": 35, "renormalizesplitpattern": 35, "renorm": 35, "rewriteunsafeselect": 35, "skipassert": 35, "splithostdevic": 35, "cache_line_s": 35, "create_bound_attribut": 35, "storagerewrit": 35, "textureflatten": 35, "threadsync": 35, "transformmmabufferlayout": 35, "unifythreadbind": 35, "consolid": 35, "unrollloop": 35, "vectorizeloop": 35, "enable_vector": 35, "Will": 35, "verifymemori": 35, "verifyvtcmlimit": 35, "inventori": 36, "invalidshapeerror": 36, "templat": 36, "3x3": 36, "adv_index": 36, "stop": 36, "select_last_index": 36, "argsort": 36, "is_ascend": 36, "dshape": 36, "schedule_argsort": 36, "argwher": 36, "binary_search": 36, "ib": 36, "sequence_offset": 36, "search_rang": 36, "sorted_sequ": 36, "linearl": 36, "scipi": 36, "ceil_log2": 36, "spir": 36, "fp64": 36, "a_min": 36, "a_max": 36, "collapse_sum": 36, "target_shap": 36, "a_tupl": 36, "const_vector": 36, "cumprod": 36, "cumproduct": 36, "dft": 36, "re_data": 36, "im_data": 36, "discret": 36, "fourier": 36, "signal": 36, "imaginari": 36, "re_output": 36, "im_output": 36, "comma": 36, "classic": 36, "bracket": 36, "ij": 36, "jk": 36, "ik": 36, "elemwise_sum": 36, "erf_leg": 36, "num_newaxi": 36, "newaxi": 36, "expand_lik": 36, "shape_lik": 36, "19": 36, "new_shape_arrai": 36, "fast_erf": 36, "fast_exp": 36, "fast_tanh": 36, "tangent": 36, "fixed_point_multipli": 36, "fixed_point_multiply_per_axi": 36, "lshift": 36, "rshift": 36, "reveres": 36, "floor_mod": 36, "modulu": 36, "3d": 36, "gather_nd": 36, "get_const_tupl": 36, "in_tupl": 36, "out_tupl": 36, "hybrid_argwhere_1d": 36, "hybrid_argwhere_2d": 36, "hybrid_argwhere_3d": 36, "hybrid_argwhere_4d": 36, "hybrid_argwhere_5d": 36, "invert_permut": 36, "schedule_rul": 36, "left_shift": 36, "make_idx": 36, "meaning": 36, "within_index": 36, "transp_a": 36, "transp_b": 36, "notat": 36, "trans_a": 36, "trans_b": 36, "matrix_set_diag": 36, "right_left": 36, "superdiagon": 36, "subdiagon": 36, "band": 36, "shorter": 36, "max_diag_len": 36, "four": 36, "left_right": 36, "left_left": 36, "right_right": 36, "lapack": 36, "cuspars": 36, "opposit": 36, "meshgrid": 36, "xy": 36, "ndarray_s": 36, "negat": 36, "one_hot": 36, "on_valu": 36, "off_valu": 36, "hot": 36, "repsent": 36, "newshap": 36, "reverse_sequ": 36, "seq_length": 36, "seq_axi": 36, "batch_axi": 36, "right_shift": 36, "binop": 36, "identity_valu": 36, "idx1": 36, "idx2": 36, "five": 36, "choic": 36, "maxim": 36, "scatter_nd": 36, "y_0": 36, "x_m": 36, "x_": 36, "x_0": 36, "x_1": 36, "determint": 36, "searchsort": 36, "monoton": 36, "land": 36, "sequence_mask": 36, "valid_length": 36, "mask_valu": 36, "max_length": 36, "sliding_window": 36, "window_shap": 36, "slid": 36, "sparse_reshap": 36, "sparse_indic": 36, "prev_shap": 36, "new_shap": 36, "new_sparse_indices_shap": 36, "new_shape_shap": 36, "n_dim": 36, "dense_shap": 36, "dens": 36, "new_sparse_indic": 36, "sparse_to_dens": 36, "sparse_valu": 36, "default_valu": 36, "subset": 36, "stft": 36, "n_fft": 36, "hop_length": 36, "win_length": 36, "onesid": 36, "short": 36, "distanc": 36, "neighbor": 36, "conjug": 36, "symmetri": 36, "5000": 36, "8660": 36, "7321": 36, "strided_set": 36, "slice_mod": 36, "sizeof": 36, "batch_dim": 36, "behav": 36, "fast": 36, "sure": 36, "take_leg": 36, "dyn": 36, "topk": 36, "tensordot": 36, "trilu": 36, "is_sort": 36, "num_uniqu": 36, "inverse_indic": 36, "unravel_index": 36, "22": 36, "41": 36, "in_dtyp": 36, "in_filt": 36, "out_filt": 36, "padt": 36, "padl": 36, "padb": 36, "padr": 36, "dilation_h": 36, "dilation_w": 36, "stride_h": 36, "stride_w": 36, "11": 36, "adaptive_pool": 36, "pool_typ": 36, "decid": 36, "nchw16w": 36, "nchw16h": 36, "adaptive_pool3d": 36, "ncdhw": 36, "add_alter_layout": 36, "_attr": 36, "_input": 36, "_tinfo": 36, "_out_typ": 36, "qnn": 36, "tinfo": 36, "out_typ": 36, "batch_matmul": 36, "tensor_a": 36, "tensor_b": 36, "oshap": 36, "transpose_a": 36, "transpose_b": 36, "auto_scheduler_rewritten_layout": 36, "meta_schedule_original_shap": 36, "reason": 36, "nt": 36, "batch_matmul_leg": 36, "defualt": 36, "batch_to_space_nd": 36, "block_shap": 36, "crop_begin_list": 36, "crop_end_list": 36, "spatial_shap": 36, "remaining_shap": 36, "block_siz": 36, "bias_add_leg": 36, "bias_add": 36, "excis": 36, "binarize_pack": 36, "packedinput": 36, "binar": 36, "uint32": 36, "binary_dens": 36, "in_dim": 36, "out_dim": 36, "bitpack": 36, "pack_axi": 36, "bit_axi": 36, "pack_typ": 36, "quantizeinput": 36, "bitseri": 36, "bitserial_conv2d_leg": 36, "bitserial_conv2d_nchw": 36, "activation_bit": 36, "weight_bit": 36, "pack_dtyp": 36, "int16": 36, "unipolar": 36, "in_height": 36, "in_width": 36, "num_filt": 36, "filter_height": 36, "filter_width": 36, "stride_height": 36, "stride_width": 36, "pad_height": 36, "pad_top": 36, "pad_left": 36, "pad_down": 36, "pad_right": 36, "bipolar": 36, "out_height": 36, "out_width": 36, "bitserial_conv2d_nhwc": 36, "bitserial_dens": 36, "data_bit": 36, "inp": 36, "filt": 36, "auto_scheduler_should_rewrite_layout": 36, "nch": 36, "pad_bottom": 36, "dilation_height": 36, "dilation_width": 36, "charact": 36, "hw": 36, "hwd": 36, "hwio": 36, "autoschedul": 36, "nwc": 36, "filter_s": 36, "wio": 36, "laid": 36, "optiona": 36, "unspecifi": 36, "conv1d_ncw": 36, "conv1d_nwc": 36, "conv1d_transpose_ncw": 36, "recov": 36, "conv2d_nchwc": 36, "in_channel_chunk": 36, "in_channel_block": 36, "num_filter_chunk": 36, "num_filter_block": 36, "out_channel_chunk": 36, "out_channel_block": 36, "conv2d_nchwc_int8": 36, "n_elem": 36, "conv2d_alter_layout": 36, "conv2d_gemm_weight_transform": 36, "tile_row": 36, "tile_col": 36, "convgemm": 36, "ci": 36, "conv2d_hwcn": 36, "hwcn": 36, "conv2d_infer_layout": 36, "cfg": 36, "autotvm": 36, "conv2d_leg": 36, "conv2d_nchw": 36, "conv2d_nhwc": 36, "conv2d_transpose_leg": 36, "conv2d_transpose_nchw": 36, "conv2d_transpose_nchw_preprocess": 36, "conv2d_winograd_nchw": 36, "pre_comput": 36, "conv2d_winograd_nchw_without_weight_transform": 36, "conv2d_winograd_nhwc": 36, "conv2d_winograd_nhwc_without_weight_transform": 36, "conv2d_winograd_nnpack_weight_transform": 36, "convolution_algorithm": 36, "nnpack": 36, "conv2d_winograd_weight_transform": 36, "tile_s": 36, "2x2": 36, "4x4": 36, "conv3d_alter_layout": 36, "conv3d": 36, "conv3d_ncdhw": 36, "in_depth": 36, "filter_depth": 36, "strid_depth": 36, "dilation_depth": 36, "out_depth": 36, "conv3d_ndhwc": 36, "meta_schedule_origin_shap": 36, "ndhwc": 36, "stride_depth": 36, "conv3d_transpose_leg": 36, "conv3d_transpose_ncdhw": 36, "conv3d_transpose_ncdhw_preprocess": 36, "conv3d_transpos": 36, "conv3d_winograd_weight_transform": 36, "correlation_nchw": 36, "data1": 36, "data2": 36, "max_displac": 36, "stride1": 36, "stride2": 36, "is_multipli": 36, "correl": 36, "odd": 36, "displac": 36, "neightborhood": 36, "substract": 36, "declaration_conv2d_transpose_impl": 36, "declaration_conv3d_transpose_impl": 36, "deformable_conv2d_nchw": 36, "deformable_group": 36, "deform": 36, "arxiv": 36, "1703": 36, "06211": 36, "deformable_conv2d_nhwc": 36, "matmul_nt": 36, "dense_alter_layout": 36, "dense_leg": 36, "dense_pack": 36, "depth_to_spac": 36, "dcr": 36, "cdr": 36, "interwoven": 36, "tensorflow": 36, "depthwise_conv2d_nchwc": 36, "depthwis": 36, "nchwc": 36, "channel_multipli": 36, "depthwise_conv2d_backward_input_nhwc": 36, "ishap": 36, "depthwise_conv2d_backward_weight_nhwc": 36, "fshape": 36, "depthwise_conv2d_infer_layout": 36, "depthwise_conv2d_nchw": 36, "depthwise_conv2d_nhwc": 36, "hwoi": 36, "dilation_valu": 36, "dilatedinput": 36, "equal_const_int": 36, "fast_softmax": 36, "speed": 36, "fifo_buff": 36, "fifo": 36, "cnn": 36, "indow": 36, "slice_axi": 36, "wavenet": 36, "get_const_int": 36, "out_valu": 36, "get_pad_tupl": 36, "get_pad_tuple1d": 36, "get_pad_tuple3d": 36, "pad_front": 36, "pad_back": 36, "get_pad_tuple_gener": 36, "global_pool": 36, "group_conv1d_ncw": 36, "group_conv1d_nwc": 36, "group_conv2d_nchw": 36, "group_conv2d_nhwc": 36, "group_conv2d_transpose_nchw": 36, "d_0": 36, "d_": 36, "instance_norm": 36, "r_": 36, "len": 36, "axis_k": 36, "r_k": 36, "current_layout": 36, "cnhw": 36, "leaky_relu": 36, "leaki": 36, "lrn": 36, "0001": 36, "75": 36, "normalis": 36, "sum_sqr_up": 36, "lstm": 36, "wi": 36, "wh": 36, "bi": 36, "bh": 36, "h_init": 36, "c_init": 36, "proj": 36, "p_i": 36, "p_f": 36, "p_o": 36, "f_act": 36, "g_act": 36, "h_act": 36, "weight_layout": 36, "ifgo": 36, "hidden_dim": 36, "proj_dim": 36, "cell": 36, "peephol": 36, "gate": 36, "matmul_leg": 36, "mirror_pad": 36, "symmetr": 36, "mirrorpadinput": 36, "mirror": 36, "namedtupl": 36, "typenam": 36, "field_nam": 36, "renam": 36, "__doc__": 36, "docstr": 36, "plain": 36, "_asdict": 36, "_replac": 36, "padinput": 36, "pool1d": 36, "count_include_pad": 36, "ncw16c": 36, "ncw16w": 36, "kernel_width": 36, "pool2d": 36, "kernel_height": 36, "pool3d": 36, "ncdhw16c": 36, "ncdhw16d": 36, "ncdhw16w": 36, "ncdhw16h": 36, "kernel_depth": 36, "six": 36, "pool_grad": 36, "grad": 36, "prelu": 36, "channelis": 36, "pdf": [36, 38], "1502": 36, "01852v1": 36, "qnn_conv2d_alter_layout": 36, "qnn_dense_alter_layout": 36, "qnn_requantize_alter_layout": 36, "requant": 36, "scale_shift_nchw": 36, "scale_shift_nchwc": 36, "channel_chunk": 36, "scale_shift_nhwc": 36, "simulated_dequant": 36, "input_scal": 36, "input_zero_point": 36, "mimic": 36, "sqnn_dtype_to_cod": 36, "simulated_quant": 36, "output_scal": 36, "output_zero_point": 36, "softmax_common": 36, "use_fast_exp": 36, "space_to_batch_nd": 36, "space_to_depth": 36, "sparse_add": 36, "dense_data": 36, "sparse_data": 36, "sparse_indptr": 36, "nnz": 36, "csr": 36, "sparse_conv2d": 36, "weight_data": 36, "weight_indic": 36, "weight_indptr": 36, "num_block": 36, "bs_r": 36, "bsr": 36, "bs_c": 36, "sparse_dens": 36, "sparse_lh": 36, "data_data": 36, "data_indic": 36, "data_indptr": 36, "sparse_dense_alter_layout": 36, "amen": 36, "sparse_dense_sp_lh": 36, "sparse_dense_sp_rh": 36, "sparse_transpos": 36, "nonzero": 36, "out_data": 36, "out_indic": 36, "out_indptr": 36, "try_get_conv2d_sparse_input": 36, "searchtask": 36, "task_input": 36, "try_get_sparse_input": 36, "unpack_nchwc_to_nchw": 36, "packed_out": 36, "unpacked_out": 36, "upsampl": 36, "scale_h": 36, "scale_w": 36, "bilinear": 36, "upsampling3d": 36, "scale_d": 36, "trilinear": 36, "winograd_transform_matric": 36, "affine_grid": 36, "1506": 36, "02025": 36, "target_height": 36, "target_width": 36, "can_convert_multiply_to_intdiv": 36, "origin_s": 36, "scaled_s": 36, "crop_and_res": 36, "box_indic": 36, "crop_siz": 36, "num_box": 36, "extrapol": 36, "crop_height": 36, "crop_width": 36, "dilation2d_nchw": 36, "morpholog": 36, "dilation2d_nhwc": 36, "get_1d_indic": 36, "get_1d_pixel": 36, "image_width": 36, "ic": 36, "get_2d_indic": 36, "get_2d_pixel": 36, "image_height": 36, "get_3d_indic": 36, "get_3d_pixel": 36, "image_depth": 36, "get_closest_index": 36, "in_x": 36, "use_int_div": 36, "get_inx": 36, "start_x": 36, "end_x": 36, "grid_sampl": 36, "padding_mod": 36, "boundari": 36, "border": 36, "corner": 36, "bottom": 36, "cooper": 36, "geometr": 36, "extrema": 36, "resolut": 36, "agnost": 36, "nchw_pack_layout": 36, "layout_info": 36, "nchwinic": 36, "nchw_xc_layout": 36, "nchwxc": 36, "resize1d": 36, "bicubic_alpha": 36, "bicubic_exclud": 36, "ncwc": 36, "fdor": 36, "chananel": 36, "resize3d": 36, "start_d": 36, "end_d": 36, "ncdhwc": 36, "csrmm": 36, "routin": 36, "csrndarrai": 36, "csrmv": 36, "xw": 36, "modulepass": 37, "module_pass": 37, "flexibl": 37, "required_pass": 37, "disabled_pass": 37, "trace_stack": 37, "make_trac": 37, "num_ev": 37, "tuning_api_databas": 37, "basi": 37, "Such": 37, "tuning_api": 37, "get_current_trac": 37, "get_trace_stack": 37, "get_trace_stack_s": 37, "get_tuning_api_databas": 37, "inc_num_ev": 37, "increment": 37, "list_config": 37, "override_instru": 37, "pop_trac": 37, "return_curr": 37, "topmost": 37, "push_trac": 37, "push": 37, "set_num_ev": 37, "extend": 37, "printir": 37, "resolv": 37, "sequanti": 37, "transform_modul": 37, "create_module_pass": 37, "custompipelin": 37, "enable_fold": 37, "const_fold": 37, "output_modul": 37, "input_modul": 37, "tp": 37, "new_mod": 37, "outlin": 38, "inproceed": 38, "author": 38, "feng": 38, "siyuan": 38, "hou": 38, "bohan": 38, "jin": 38, "hongyi": 38, "lin": 38, "wuwei": 38, "shao": 38, "junru": 38, "lai": 38, "ruihang": 38, "ye": 38, "zihao": 38, "zheng": 38, "lianmin": 38, "yu": 38, "codi": 38, "hao": 38, "yong": 38, "titl": 38, "year": 38, "2023": 38, "isbn": 38, "9781450399166": 38, "publish": 38, "machineri": 38, "york": 38, "ny": 38, "usa": 38, "doi": 38, "1145": 38, "3575693": 38, "3576933": 38, "booktitl": 38, "proceed": 38, "28th": 38, "acm": 38, "confer": 38, "volum": 38, "804": 38, "817": 38, "numpag": 38, "vancouv": 38, "bc": 38, "canada": 38, "asplo": 38, "zhou": 38, "xiyou": 38, "masuda": 38, "masahiro": 38, "editor": 38, "koyejo": 38, "moham": 38, "agarw": 38, "belgrav": 38, "cho": 38, "35783": 38, "35796": 38, "curran": 38, "inc": 38, "neurip": 38, "paper_fil": 38, "2022": 38, "e894eafae43e68b4c8dfdacf742bcbf3": 38, "thierri": 38, "moreau": 38, "ziheng": 38, "jiang": 38, "eddi": 38, "yan": 38, "haichen": 38, "shen": 38, "meghan": 38, "cowan": 38, "leyuan": 38, "wang": 38, "yuwei": 38, "hu": 38, "lui": 38, "ceze": 38, "carlo": 38, "guestrin": 38, "arvind": 38, "krishnamurthi": 38, "autom": 38, "13th": 38, "usenix": 38, "symposium": 38, "osdi": 38, "18": 38, "2018": 38, "978": 38, "939133": 38, "08": 38, "carlsbad": 38, "ca": 38, "578": 38, "www": 38, "osdi18": 38, "month": 38, "oct": 38}, "objects": {"tvm": [[11, 0, 0, "-", "dlight"], [12, 0, 0, "-", "error"], [14, 0, 0, "-", "instrument"], [15, 0, 0, "-", "ir"], [16, 0, 0, "-", "meta_schedule"], [21, 0, 0, "-", "relax"], [23, 0, 0, "-", "rpc"], [28, 0, 0, "-", "runtime"], [29, 0, 0, "-", "target"], [30, 0, 0, "-", "te"], [34, 0, 0, "-", "tir"], [36, 0, 0, "-", "topi"], [37, 0, 0, "-", "transform"]], "tvm.dlight": [[11, 1, 1, "", "ApplyDefaultSchedule"], [11, 1, 1, "", "BlockInfo"], [11, 1, 1, "", "IterInfo"], [11, 1, 1, "", "ScheduleRule"], [11, 4, 1, "", "normalize_prim_func"], [11, 4, 1, "", "try_inline"], [11, 4, 1, "", "try_inline_contiguous_spatial"]], "tvm.dlight.BlockInfo": [[11, 2, 1, "", "dom"], [11, 2, 1, "", "dom_kind"], [11, 2, 1, "", "is_elementwise"], [11, 2, 1, "", "is_gemm"], [11, 2, 1, "", "is_gemv"], [11, 2, 1, "", "is_injective"], [11, 2, 1, "", "is_reduction"]], "tvm.dlight.IterInfo": [[11, 3, 1, "", "dom"]], "tvm.dlight.ScheduleRule": [[11, 2, 1, "", "apply"], [11, 2, 1, "", "from_callable"]], "tvm.error": [[12, 5, 1, "", "DiagnosticError"], [12, 5, 1, "", "InternalError"], [12, 5, 1, "", "OpAttributeInvalid"], [12, 5, 1, "", "OpAttributeRequired"], [12, 5, 1, "", "OpAttributeUnImplemented"], [12, 5, 1, "", "OpError"], [12, 5, 1, "", "OpNotImplemented"], [12, 5, 1, "", "RPCError"], [12, 5, 1, "", "RPCSessionTimeoutError"], [12, 5, 1, "", "TVMError"], [12, 4, 1, "", "register_error"]], "tvm.instrument": [[14, 1, 1, "", "PassInstrument"], [14, 1, 1, "", "PassTimingInstrument"], [14, 4, 1, "", "pass_instrument"]], "tvm.instrument.PassInstrument": [[14, 2, 1, "", "enter_pass_ctx"], [14, 2, 1, "", "exit_pass_ctx"], [14, 2, 1, "", "run_after_pass"], [14, 2, 1, "", "run_before_pass"], [14, 2, 1, "", "should_run"]], "tvm.instrument.PassTimingInstrument": [[14, 2, 1, "", "render"]], "tvm.ir": [[15, 1, 1, "", "Array"], [15, 1, 1, "", "Attrs"], [15, 1, 1, "", "BaseExpr"], [15, 1, 1, "", "BaseFunc"], [15, 1, 1, "", "CallingConv"], [15, 1, 1, "", "ConstantMemoryPools"], [15, 1, 1, "", "ConstantPoolInfo"], [15, 1, 1, "", "Constructor"], [15, 1, 1, "", "DictAttrs"], [15, 1, 1, "", "DummyGlobalInfo"], [15, 1, 1, "", "EnvFunc"], [15, 1, 1, "", "FuncType"], [15, 1, 1, "", "GlobalInfo"], [15, 1, 1, "", "GlobalTypeVar"], [15, 1, 1, "", "GlobalVar"], [15, 1, 1, "", "IRModule"], [15, 1, 1, "", "IncompleteType"], [15, 1, 1, "", "Map"], [15, 1, 1, "", "Node"], [15, 1, 1, "", "Op"], [15, 1, 1, "", "PointerType"], [15, 1, 1, "", "PoolInfo"], [15, 1, 1, "", "PoolInfoProperties"], [15, 1, 1, "", "PrimExpr"], [15, 1, 1, "", "PrimType"], [15, 1, 1, "", "Range"], [15, 1, 1, "", "RelayExpr"], [15, 1, 1, "", "RelayRefType"], [15, 1, 1, "", "SequentialSpan"], [15, 1, 1, "", "SourceName"], [15, 1, 1, "", "Span"], [15, 1, 1, "", "TensorAffineType"], [15, 1, 1, "", "TensorType"], [15, 1, 1, "", "TupleAffineType"], [15, 1, 1, "", "TupleType"], [15, 1, 1, "", "Type"], [15, 1, 1, "", "TypeCall"], [15, 1, 1, "", "TypeConstraint"], [15, 1, 1, "", "TypeData"], [15, 1, 1, "", "TypeKind"], [15, 1, 1, "", "TypeRelation"], [15, 1, 1, "", "TypeVar"], [15, 1, 1, "", "VDevice"], [15, 1, 1, "", "WorkspaceMemoryPools"], [15, 1, 1, "", "WorkspacePoolInfo"], [15, 4, 1, "", "assert_structural_equal"], [15, 4, 1, "", "load_json"], [15, 4, 1, "", "make_node"], [15, 4, 1, "", "register_intrin_lowering"], [15, 4, 1, "", "register_op_attr"], [15, 4, 1, "", "save_json"], [15, 4, 1, "", "structural_equal"], [15, 4, 1, "", "structural_hash"]], "tvm.ir.Attrs": [[15, 2, 1, "", "get_int"], [15, 2, 1, "", "get_int_tuple"], [15, 2, 1, "", "get_str"], [15, 2, 1, "", "keys"], [15, 2, 1, "", "list_field_info"]], "tvm.ir.BaseFunc": [[15, 3, 1, "", "attrs"], [15, 2, 1, "", "with_attr"], [15, 2, 1, "", "with_attrs"], [15, 2, 1, "", "without_attr"]], "tvm.ir.DictAttrs": [[15, 2, 1, "", "items"], [15, 2, 1, "", "keys"]], "tvm.ir.EnvFunc": [[15, 2, 1, "", "get"]], "tvm.ir.GlobalInfo": [[15, 2, 1, "", "same_as"]], "tvm.ir.GlobalVar": [[15, 2, 1, "", "astext"]], "tvm.ir.IRModule": [[15, 2, 1, "", "astext"], [15, 2, 1, "", "from_expr"], [15, 2, 1, "", "get_attr"], [15, 2, 1, "", "get_constructor"], [15, 2, 1, "", "get_global_type_var"], [15, 2, 1, "", "get_global_type_vars"], [15, 2, 1, "", "get_global_var"], [15, 2, 1, "", "get_global_vars"], [15, 2, 1, "", "update"], [15, 2, 1, "", "update_func"], [15, 2, 1, "", "update_global_info"], [15, 2, 1, "", "with_attr"], [15, 2, 1, "", "with_attrs"], [15, 2, 1, "", "without_attr"]], "tvm.ir.Map": [[15, 2, 1, "", "get"], [15, 2, 1, "", "items"]], "tvm.ir.Op": [[15, 2, 1, "", "add_argument"], [15, 2, 1, "", "add_type_rel"], [15, 2, 1, "", "astext"], [15, 2, 1, "", "get"], [15, 2, 1, "", "get_attr"], [15, 2, 1, "", "has_attr"], [15, 2, 1, "", "list_op_names"], [15, 2, 1, "", "reset_attr"], [15, 2, 1, "", "set_attr"], [15, 2, 1, "", "set_attrs_type_key"], [15, 2, 1, "", "set_num_inputs"], [15, 2, 1, "", "set_support_level"]], "tvm.ir.Range": [[15, 2, 1, "", "from_min_extent"]], "tvm.ir.RelayExpr": [[15, 3, 1, "", "checked_type"], [15, 3, 1, "", "struct_info"]], "tvm.ir.TensorType": [[15, 3, 1, "", "concrete_shape"]], "tvm.ir.Type": [[15, 2, 1, "", "same_as"]], "tvm.meta_schedule": [[16, 1, 1, "", "Builder"], [16, 1, 1, "", "CostModel"], [16, 1, 1, "", "Database"], [16, 1, 1, "", "ExtractedTask"], [16, 1, 1, "", "FeatureExtractor"], [16, 1, 1, "", "MeasureCallback"], [16, 1, 1, "", "MeasureCandidate"], [16, 1, 1, "", "Mutator"], [16, 1, 1, "", "Postproc"], [16, 1, 1, "", "Profiler"], [16, 1, 1, "", "Runner"], [16, 1, 1, "", "ScheduleRule"], [16, 1, 1, "", "SearchStrategy"], [16, 1, 1, "", "SpaceGenerator"], [16, 1, 1, "", "TaskScheduler"], [16, 1, 1, "", "TuneContext"], [16, 4, 1, "", "derived_object"], [16, 4, 1, "", "is_meta_schedule_enabled"], [16, 4, 1, "", "tune_tasks"], [16, 4, 1, "", "tune_tir"]], "tvm.meta_schedule.Builder": [[16, 2, 1, "", "build"], [16, 2, 1, "", "create"]], "tvm.meta_schedule.CostModel": [[16, 2, 1, "", "create"], [16, 2, 1, "", "load"], [16, 2, 1, "", "predict"], [16, 2, 1, "", "save"], [16, 2, 1, "", "update"]], "tvm.meta_schedule.Database": [[16, 2, 1, "", "commit_tuning_record"], [16, 2, 1, "", "commit_workload"], [16, 2, 1, "", "create"], [16, 2, 1, "", "current"], [16, 2, 1, "", "dump_pruned"], [16, 2, 1, "", "get_all_tuning_records"], [16, 2, 1, "", "get_top_k"], [16, 2, 1, "", "has_workload"], [16, 2, 1, "", "query"], [16, 2, 1, "", "query_ir_module"], [16, 2, 1, "", "query_schedule"], [16, 2, 1, "", "query_tuning_record"]], "tvm.meta_schedule.FeatureExtractor": [[16, 2, 1, "", "create"], [16, 2, 1, "", "extract_from"]], "tvm.meta_schedule.MeasureCallback": [[16, 2, 1, "", "apply"], [16, 2, 1, "", "create"]], "tvm.meta_schedule.Mutator": [[16, 2, 1, "", "apply"], [16, 2, 1, "", "clone"], [16, 2, 1, "", "create"]], "tvm.meta_schedule.Postproc": [[16, 2, 1, "", "apply"], [16, 2, 1, "", "clone"], [16, 2, 1, "", "create"]], "tvm.meta_schedule.Profiler": [[16, 2, 1, "", "current"], [16, 2, 1, "", "get"], [16, 2, 1, "", "table"], [16, 2, 1, "", "timeit"]], "tvm.meta_schedule.Runner": [[16, 2, 1, "", "create"], [16, 2, 1, "", "run"]], "tvm.meta_schedule.ScheduleRule": [[16, 2, 1, "", "apply"], [16, 2, 1, "", "clone"], [16, 2, 1, "", "create"]], "tvm.meta_schedule.SearchStrategy": [[16, 2, 1, "", "clone"], [16, 2, 1, "", "create"], [16, 2, 1, "", "generate_measure_candidates"], [16, 2, 1, "", "notify_runner_results"], [16, 2, 1, "", "post_tuning"], [16, 2, 1, "", "pre_tuning"]], "tvm.meta_schedule.SpaceGenerator": [[16, 2, 1, "", "clone"], [16, 2, 1, "", "create"], [16, 2, 1, "", "generate_design_space"]], "tvm.meta_schedule.TaskScheduler": [[16, 2, 1, "", "create"], [16, 2, 1, "", "join_running_task"], [16, 2, 1, "", "next_task_id"], [16, 2, 1, "", "print_tuning_statistics"], [16, 2, 1, "", "terminate_task"], [16, 2, 1, "", "touch_task"], [16, 2, 1, "", "tune"]], "tvm.meta_schedule.TuneContext": [[16, 2, 1, "", "clone"], [16, 2, 1, "", "generate_design_space"], [16, 2, 1, "", "generate_measure_candidates"], [16, 2, 1, "", "notify_runner_results"], [16, 2, 1, "", "post_tuning"], [16, 2, 1, "", "pre_tuning"]], "tvm.relax": [[21, 1, 1, "", "Binding"], [21, 1, 1, "", "BindingBlock"], [21, 1, 1, "", "Call"], [21, 1, 1, "", "Constant"], [21, 1, 1, "", "DataTypeImm"], [21, 1, 1, "", "DataflowBlock"], [21, 1, 1, "", "DataflowBlockRewrite"], [21, 1, 1, "", "DataflowVar"], [21, 1, 1, "", "DynTensorType"], [21, 1, 1, "", "ExecBuilder"], [21, 1, 1, "", "Executable"], [21, 6, 1, "", "Expr"], [21, 1, 1, "", "ExprFunctor"], [21, 1, 1, "", "ExternFunc"], [21, 1, 1, "", "FuncStructInfo"], [21, 1, 1, "", "Function"], [21, 1, 1, "", "Id"], [21, 1, 1, "", "If"], [21, 1, 1, "", "MatchCast"], [21, 1, 1, "", "ObjectStructInfo"], [21, 1, 1, "", "ObjectType"], [21, 1, 1, "", "PackedFuncType"], [21, 1, 1, "", "PrimStructInfo"], [21, 1, 1, "", "PrimValue"], [21, 1, 1, "", "PyExprMutator"], [21, 1, 1, "", "PyExprVisitor"], [21, 1, 1, "", "SeqExpr"], [21, 1, 1, "", "ShapeExpr"], [21, 1, 1, "", "ShapeStructInfo"], [21, 1, 1, "", "ShapeType"], [21, 1, 1, "", "StringImm"], [21, 1, 1, "", "StructInfo"], [21, 1, 1, "", "TensorStructInfo"], [21, 1, 1, "", "Tuple"], [21, 1, 1, "", "TupleGetItem"], [21, 1, 1, "", "TupleStructInfo"], [21, 1, 1, "", "VMInstrumentReturnKind"], [21, 1, 1, "", "Var"], [21, 1, 1, "", "VarBinding"], [21, 1, 1, "", "VirtualMachine"], [17, 0, 0, "-", "analysis"], [18, 0, 0, "-", "block_builder"], [21, 4, 1, "", "build"], [21, 4, 1, "", "call_dps_packed"], [21, 4, 1, "", "call_pure_packed"], [21, 4, 1, "", "call_tir"], [21, 4, 1, "", "call_tir_with_grad"], [21, 4, 1, "", "const"], [21, 4, 1, "", "extern"], [19, 0, 0, "-", "frontend"], [21, 4, 1, "", "get_pipeline"], [21, 4, 1, "", "get_shape_of"], [20, 0, 0, "-", "op"], [22, 0, 0, "-", "transform"]], "tvm.relax.DataflowBlockRewrite": [[21, 2, 1, "", "add"], [21, 2, 1, "", "mutate_irmodule"], [21, 2, 1, "", "mutated_dfb"], [21, 2, 1, "", "mutated_root_fn"], [21, 2, 1, "", "remove_all_unused"], [21, 2, 1, "", "remove_unused"], [21, 2, 1, "", "replace_all_uses"]], "tvm.relax.ExecBuilder": [[21, 2, 1, "", "c"], [21, 2, 1, "", "declare_function"], [21, 2, 1, "", "emit_call"], [21, 2, 1, "", "emit_goto"], [21, 2, 1, "", "emit_if"], [21, 2, 1, "", "emit_ret"], [21, 2, 1, "", "f"], [21, 2, 1, "", "function"], [21, 2, 1, "", "get"], [21, 2, 1, "", "imm"], [21, 2, 1, "", "r"]], "tvm.relax.Executable": [[21, 2, 1, "", "as_python"], [21, 2, 1, "", "as_text"], [21, 2, 1, "", "export_library"], [21, 2, 1, "", "jit"], [21, 2, 1, "", "stats"]], "tvm.relax.ExprFunctor": [[21, 2, 1, "", "visit_expr"]], "tvm.relax.FuncStructInfo": [[21, 2, 1, "", "opaque_func"]], "tvm.relax.Function": [[21, 2, 1, "", "bind_params"], [21, 2, 1, "", "bind_symbolic_vars"], [21, 2, 1, "", "create_empty"]], "tvm.relax.PyExprMutator": [[21, 2, 1, "", "get_var_remap"], [21, 2, 1, "", "lookup_binding"], [21, 2, 1, "", "set_var_remap"], [21, 2, 1, "", "visit_binding"], [21, 2, 1, "", "visit_binding_block"], [21, 2, 1, "", "visit_binding_block_"], [21, 2, 1, "", "visit_call_"], [21, 2, 1, "", "visit_constant_"], [21, 2, 1, "", "visit_data_type_imm_"], [21, 2, 1, "", "visit_dataflow_block_"], [21, 2, 1, "", "visit_dataflow_var_"], [21, 2, 1, "", "visit_dataflow_var_def_"], [21, 2, 1, "", "visit_expr"], [21, 2, 1, "", "visit_expr_post_order"], [21, 2, 1, "", "visit_extern_func_"], [21, 2, 1, "", "visit_function_"], [21, 2, 1, "", "visit_global_var_"], [21, 2, 1, "", "visit_if_"], [21, 2, 1, "", "visit_match_cast_"], [21, 2, 1, "", "visit_op_"], [21, 2, 1, "", "visit_prim_value_"], [21, 2, 1, "", "visit_seq_expr_"], [21, 2, 1, "", "visit_shape_expr_"], [21, 2, 1, "", "visit_span"], [21, 2, 1, "", "visit_string_imm_"], [21, 2, 1, "", "visit_tuple_"], [21, 2, 1, "", "visit_tuple_getitem_"], [21, 2, 1, "", "visit_var_"], [21, 2, 1, "", "visit_var_binding_"], [21, 2, 1, "", "visit_var_def"], [21, 2, 1, "", "visit_var_def_"], [21, 2, 1, "", "visit_with_new_scope"], [21, 2, 1, "", "with_struct_info"]], "tvm.relax.PyExprVisitor": [[21, 2, 1, "", "visit_binding"], [21, 2, 1, "", "visit_binding_block"], [21, 2, 1, "", "visit_binding_block_"], [21, 2, 1, "", "visit_call_"], [21, 2, 1, "", "visit_constant_"], [21, 2, 1, "", "visit_data_type_imm_"], [21, 2, 1, "", "visit_dataflow_block_"], [21, 2, 1, "", "visit_dataflow_var_"], [21, 2, 1, "", "visit_dataflow_var_def_"], [21, 2, 1, "", "visit_expr"], [21, 2, 1, "", "visit_extern_func_"], [21, 2, 1, "", "visit_function_"], [21, 2, 1, "", "visit_global_var_"], [21, 2, 1, "", "visit_if_"], [21, 2, 1, "", "visit_match_cast_"], [21, 2, 1, "", "visit_op_"], [21, 2, 1, "", "visit_prim_value_"], [21, 2, 1, "", "visit_seq_expr_"], [21, 2, 1, "", "visit_shape_expr_"], [21, 2, 1, "", "visit_span"], [21, 2, 1, "", "visit_string_imm_"], [21, 2, 1, "", "visit_tuple_"], [21, 2, 1, "", "visit_tuple_getitem_"], [21, 2, 1, "", "visit_var_"], [21, 2, 1, "", "visit_var_binding_"], [21, 2, 1, "", "visit_var_def"], [21, 2, 1, "", "visit_var_def_"]], "tvm.relax.StructInfo": [[21, 2, 1, "", "is_base_of"], [21, 2, 1, "", "same_as"]], "tvm.relax.Var": [[21, 3, 1, "", "name_hint"]], "tvm.relax.VirtualMachine": [[21, 2, 1, "", "get_outputs"], [21, 2, 1, "", "invoke_closure"], [21, 2, 1, "", "invoke_stateful"], [21, 2, 1, "", "profile"], [21, 2, 1, "", "save_function"], [21, 2, 1, "", "set_input"], [21, 2, 1, "", "set_instrument"], [21, 2, 1, "", "time_evaluator"]], "tvm.relax.analysis": [[17, 1, 1, "", "BaseCheckResult"], [17, 4, 1, "", "all_global_vars"], [17, 4, 1, "", "all_vars"], [17, 4, 1, "", "bound_vars"], [17, 4, 1, "", "contains_impure_call"], [17, 4, 1, "", "defined_symbolic_vars"], [17, 4, 1, "", "derive_call_ret_struct_info"], [17, 4, 1, "", "detect_recursion"], [17, 4, 1, "", "erase_to_well_defined"], [17, 4, 1, "", "estimate_memory_usage"], [17, 4, 1, "", "free_symbolic_vars"], [17, 4, 1, "", "free_vars"], [17, 4, 1, "", "get_static_type"], [17, 4, 1, "", "get_var2val"], [17, 4, 1, "", "has_reshape_pattern"], [17, 4, 1, "", "name_to_binding"], [17, 4, 1, "", "post_order_visit"], [17, 4, 1, "", "remove_all_unused"], [17, 4, 1, "", "struct_info_base_check"], [17, 4, 1, "", "struct_info_lca"], [17, 4, 1, "", "suggest_layout_transforms"], [17, 4, 1, "", "tir_vars_in_struct_info"], [17, 4, 1, "", "udchain"], [17, 4, 1, "", "well_formed"]], "tvm.relax.block_builder": [[18, 1, 1, "", "BlockBuilder"], [18, 1, 1, "", "DataflowScope"], [18, 1, 1, "", "FunctionScope"], [18, 1, 1, "", "TestingScope"]], "tvm.relax.block_builder.BlockBuilder": [[18, 2, 1, "", "add_func"], [18, 2, 1, "", "begin_scope"], [18, 2, 1, "", "call_te"], [18, 2, 1, "", "call_te_with_grad"], [18, 2, 1, "", "current"], [18, 2, 1, "", "current_block_is_dataflow"], [18, 2, 1, "", "dataflow"], [18, 2, 1, "", "emit"], [18, 2, 1, "", "emit_func_output"], [18, 2, 1, "", "emit_normalized"], [18, 2, 1, "", "emit_output"], [18, 2, 1, "", "emit_te"], [18, 2, 1, "", "end_scope"], [18, 2, 1, "", "function"], [18, 2, 1, "", "get"], [18, 2, 1, "", "get_unique_name"], [18, 2, 1, "", "lookup_binding"], [18, 2, 1, "", "match_cast"], [18, 2, 1, "", "normalize"], [18, 2, 1, "", "testing_scope"], [18, 2, 1, "", "update_func"]], "tvm.relax.frontend": [[19, 4, 1, "", "detach_params"], [19, 0, 0, "-", "onnx"], [19, 0, 0, "-", "stablehlo"], [19, 0, 0, "-", "torch"]], "tvm.relax.frontend.onnx": [[19, 4, 1, "", "from_onnx"]], "tvm.relax.frontend.stablehlo": [[19, 4, 1, "", "from_stablehlo"]], "tvm.relax.frontend.torch": [[19, 4, 1, "", "dynamo_capture_subgraphs"], [19, 4, 1, "", "from_fx"], [19, 4, 1, "", "relax_dynamo"]], "tvm.relax.op": [[20, 4, 1, "", "abs"], [20, 4, 1, "", "acos"], [20, 4, 1, "", "acosh"], [20, 4, 1, "", "add"], [20, 4, 1, "", "arange"], [20, 4, 1, "", "argmax"], [20, 4, 1, "", "argmin"], [20, 4, 1, "", "asin"], [20, 4, 1, "", "asinh"], [20, 4, 1, "", "assert_op"], [20, 4, 1, "", "astype"], [20, 4, 1, "", "atan"], [20, 4, 1, "", "atanh"], [20, 4, 1, "", "bitwise_and"], [20, 4, 1, "", "bitwise_not"], [20, 4, 1, "", "bitwise_or"], [20, 4, 1, "", "bitwise_xor"], [20, 4, 1, "", "broadcast_to"], [20, 0, 0, "-", "builtin"], [20, 4, 1, "", "call_builtin_with_ctx"], [20, 4, 1, "", "call_dps_packed"], [20, 4, 1, "", "call_pure_packed"], [20, 4, 1, "", "call_tir"], [20, 4, 1, "", "call_tir_inplace"], [20, 4, 1, "", "call_tir_with_grad"], [20, 0, 0, "-", "ccl"], [20, 4, 1, "", "ceil"], [20, 4, 1, "", "clip"], [20, 4, 1, "", "collapse_sum_like"], [20, 4, 1, "", "collapse_sum_to"], [20, 4, 1, "", "concat"], [20, 4, 1, "", "cos"], [20, 4, 1, "", "cosh"], [20, 4, 1, "", "cumsum"], [20, 4, 1, "", "dequantize"], [20, 0, 0, "-", "distributed"], [20, 4, 1, "", "divide"], [20, 4, 1, "", "dynamic_strided_slice"], [20, 4, 1, "", "einsum"], [20, 4, 1, "", "equal"], [20, 4, 1, "", "erf"], [20, 4, 1, "", "ewise_fma"], [20, 4, 1, "", "exp"], [20, 4, 1, "", "expand_dims"], [20, 4, 1, "", "flatten"], [20, 4, 1, "", "flip"], [20, 4, 1, "", "floor"], [20, 4, 1, "", "floor_divide"], [20, 4, 1, "", "full"], [20, 4, 1, "", "full_like"], [20, 0, 0, "-", "grad"], [20, 4, 1, "", "greater"], [20, 4, 1, "", "greater_equal"], [20, 4, 1, "", "hint_on_device"], [20, 0, 0, "-", "image"], [20, 4, 1, "", "invoke_closure"], [20, 4, 1, "", "invoke_pure_closure"], [20, 4, 1, "", "isfinite"], [20, 4, 1, "", "isinf"], [20, 4, 1, "", "isnan"], [20, 4, 1, "", "layout_transform"], [20, 4, 1, "", "less"], [20, 4, 1, "", "less_equal"], [20, 4, 1, "", "linear"], [20, 4, 1, "", "log"], [20, 4, 1, "", "logical_and"], [20, 4, 1, "", "logical_not"], [20, 4, 1, "", "logical_or"], [20, 4, 1, "", "logical_xor"], [20, 4, 1, "", "make_closure"], [20, 4, 1, "", "masked_fill"], [20, 4, 1, "", "matmul"], [20, 4, 1, "", "max"], [20, 4, 1, "", "maximum"], [20, 4, 1, "", "mean"], [20, 0, 0, "-", "memory"], [20, 4, 1, "", "min"], [20, 4, 1, "", "minimum"], [20, 4, 1, "", "multiply"], [20, 4, 1, "", "negative"], [20, 0, 0, "-", "nn"], [20, 4, 1, "", "not_equal"], [20, 4, 1, "", "null_value"], [20, 4, 1, "", "ones"], [20, 4, 1, "", "ones_like"], [20, 0, 0, "-", "op_attrs"], [20, 4, 1, "", "permute_dims"], [20, 4, 1, "", "power"], [20, 4, 1, "", "print"], [20, 4, 1, "", "prod"], [20, 4, 1, "", "quantize"], [20, 4, 1, "", "register_gradient"], [20, 4, 1, "", "repeat"], [20, 4, 1, "", "reshape"], [20, 4, 1, "", "round"], [20, 4, 1, "", "rsqrt"], [20, 4, 1, "", "scatter_elements"], [20, 4, 1, "", "shape_of"], [20, 4, 1, "", "shape_to_tensor"], [20, 4, 1, "", "sigmoid"], [20, 4, 1, "", "sign"], [20, 4, 1, "", "sin"], [20, 4, 1, "", "sinh"], [20, 4, 1, "", "split"], [20, 4, 1, "", "sqrt"], [20, 4, 1, "", "square"], [20, 4, 1, "", "squeeze"], [20, 4, 1, "", "std"], [20, 4, 1, "", "strided_slice"], [20, 4, 1, "", "subtract"], [20, 4, 1, "", "sum"], [20, 4, 1, "", "take"], [20, 4, 1, "", "tan"], [20, 4, 1, "", "tanh"], [20, 4, 1, "", "tensor_to_shape"], [20, 4, 1, "", "tile"], [20, 4, 1, "", "to_vdevice"], [20, 4, 1, "", "tril"], [20, 4, 1, "", "triu"], [20, 4, 1, "", "unique"], [20, 4, 1, "", "variance"], [20, 4, 1, "", "where"], [20, 4, 1, "", "wrap_param"], [20, 4, 1, "", "zeros"], [20, 4, 1, "", "zeros_like"]], "tvm.relax.op.builtin": [[20, 4, 1, "", "alloc_tensor"], [20, 4, 1, "", "stop_lift_params"]], "tvm.relax.op.ccl": [[20, 4, 1, "", "allgather"], [20, 4, 1, "", "allreduce"], [20, 4, 1, "", "broadcast_from_worker0"], [20, 4, 1, "", "scatter_from_worker0"]], "tvm.relax.op.distributed": [[20, 4, 1, "", "annotate_sharding"], [20, 4, 1, "", "redistribute"]], "tvm.relax.op.grad": [[20, 6, 1, "", "Expr"], [20, 4, 1, "", "avg_pool2d_backward"], [20, 4, 1, "", "end_checkpoint"], [20, 4, 1, "", "max_pool2d_backward"], [20, 4, 1, "", "nll_loss_backward"], [20, 4, 1, "", "no_grad"], [20, 4, 1, "", "start_checkpoint"], [20, 4, 1, "", "take_backward"]], "tvm.relax.op.image": [[20, 4, 1, "", "resize2d"]], "tvm.relax.op.memory": [[20, 4, 1, "", "alloc_storage"], [20, 4, 1, "", "alloc_tensor"], [20, 4, 1, "", "kill_storage"], [20, 4, 1, "", "kill_tensor"]], "tvm.relax.op.nn": [[20, 4, 1, "", "adaptive_avg_pool2d"], [20, 4, 1, "", "attention"], [20, 4, 1, "", "avg_pool2d"], [20, 4, 1, "", "batch_norm"], [20, 4, 1, "", "conv1d"], [20, 4, 1, "", "conv1d_transpose"], [20, 4, 1, "", "conv2d"], [20, 4, 1, "", "conv2d_transpose"], [20, 4, 1, "", "cross_entropy_with_logits"], [20, 4, 1, "", "dropout"], [20, 4, 1, "", "gelu"], [20, 4, 1, "", "gelu_tanh"], [20, 4, 1, "", "group_norm"], [20, 4, 1, "", "layer_norm"], [20, 4, 1, "", "leakyrelu"], [20, 4, 1, "", "log_softmax"], [20, 4, 1, "", "max_pool2d"], [20, 4, 1, "", "nll_loss"], [20, 4, 1, "", "pad"], [20, 4, 1, "", "relu"], [20, 4, 1, "", "rms_norm"], [20, 4, 1, "", "silu"], [20, 4, 1, "", "softmax"]], "tvm.relax.op.op_attrs": [[20, 1, 1, "", "AdaptivePool2DAttrs"], [20, 1, 1, "", "ArgmaxArgminAttrs"], [20, 1, 1, "", "AstypeAttrs"], [20, 1, 1, "", "BatchNormAttrs"], [20, 1, 1, "", "CallTIRWithGradAttrs"], [20, 1, 1, "", "ConcatAttrs"], [20, 1, 1, "", "Conv2DAttrs"], [20, 1, 1, "", "Conv2DTransposeAttrs"], [20, 1, 1, "", "CumsumAttrs"], [20, 1, 1, "", "DropoutAttrs"], [20, 1, 1, "", "EinsumAttrs"], [20, 1, 1, "", "ExpandDimsAttrs"], [20, 1, 1, "", "FlipAttrs"], [20, 1, 1, "", "InitAttrs"], [20, 1, 1, "", "LayerNormAttrs"], [20, 1, 1, "", "LayoutTransformAttrs"], [20, 1, 1, "", "MatmulAttrs"], [20, 1, 1, "", "PermuteDimsAttrs"], [20, 1, 1, "", "Pool2DAttrs"], [20, 1, 1, "", "RepeatAttrs"], [20, 1, 1, "", "Resize2DAttrs"], [20, 1, 1, "", "SoftmaxAttrs"], [20, 1, 1, "", "SplitAttrs"], [20, 1, 1, "", "SqueezeAttrs"], [20, 1, 1, "", "StatisticalAttrs"], [20, 1, 1, "", "StridedSliceAttrs"], [20, 1, 1, "", "TakeAttrs"], [20, 1, 1, "", "TileAttrs"], [20, 1, 1, "", "TriluAttrs"]], "tvm.relax.transform": [[22, 4, 1, "", "AllocateWorkspace"], [22, 4, 1, "", "AlterOpImpl"], [22, 4, 1, "", "AnnotateTIROpPattern"], [22, 4, 1, "", "AttachGlobalSymbol"], [22, 4, 1, "", "BindParams"], [22, 4, 1, "", "BindSymbolicVars"], [22, 4, 1, "", "BundleModelParams"], [22, 4, 1, "", "CallTIRRewrite"], [22, 4, 1, "", "CanonicalizeBindings"], [22, 4, 1, "", "CombineParallelMatmul"], [22, 4, 1, "", "ConvertLayout"], [22, 1, 1, "", "DataflowBlockPass"], [22, 4, 1, "", "DeadCodeElimination"], [22, 4, 1, "", "DecomposeOpsForInference"], [22, 4, 1, "", "DecomposeOpsForTraining"], [22, 4, 1, "", "EliminateCommonSubexpr"], [22, 4, 1, "", "FewShotTuning"], [22, 4, 1, "", "FoldConstant"], [22, 4, 1, "", "FoldDataflowBlockOutput"], [22, 1, 1, "", "FunctionPass"], [22, 4, 1, "", "FuseOps"], [22, 4, 1, "", "FuseOpsByPattern"], [22, 4, 1, "", "FuseTIR"], [22, 1, 1, "", "FusionPattern"], [22, 4, 1, "", "Gradient"], [22, 4, 1, "", "KillAfterLastUse"], [22, 4, 1, "", "LambdaLift"], [22, 1, 1, "", "LazyTransformParams"], [22, 4, 1, "", "LegalizeOps"], [22, 4, 1, "", "LiftTransformParams"], [22, 4, 1, "", "LowerAllocTensor"], [22, 4, 1, "", "MergeCompositeFunctions"], [22, 4, 1, "", "MetaScheduleApplyDatabase"], [22, 4, 1, "", "MetaScheduleTuneIRMod"], [22, 4, 1, "", "MetaScheduleTuneTIR"], [22, 4, 1, "", "Normalize"], [22, 1, 1, "", "OptimizeLayoutTransform"], [22, 1, 1, "", "PatternCheckContext"], [22, 4, 1, "", "RealizeVDevice"], [22, 4, 1, "", "RemovePurityChecking"], [22, 1, 1, "", "RemoveRedundantReshape"], [22, 4, 1, "", "RewriteCUDAGraph"], [22, 4, 1, "", "RewriteDataflowReshape"], [22, 4, 1, "", "RunCodegen"], [22, 4, 1, "", "SplitCallTIRByPattern"], [22, 4, 1, "", "StaticPlanBlockMemory"], [22, 4, 1, "", "ToMixedPrecision"], [22, 4, 1, "", "ToNonDataflow"], [22, 4, 1, "", "UpdateVDevice"], [22, 4, 1, "", "VMBuiltinLower"], [22, 4, 1, "", "VMShapeLower"], [22, 4, 1, "", "dataflowblock_pass"], [22, 4, 1, "", "function_pass"]], "tvm.rpc": [[23, 1, 1, "", "LocalSession"], [23, 1, 1, "", "PopenSession"], [23, 1, 1, "", "RPCSession"], [23, 1, 1, "", "Server"], [23, 1, 1, "", "TrackerSession"], [23, 4, 1, "", "connect"], [23, 4, 1, "", "connect_tracker"], [23, 4, 1, "", "with_minrpc"]], "tvm.rpc.RPCSession": [[23, 2, 1, "", "cl"], [23, 2, 1, "", "cpu"], [23, 2, 1, "", "cuda"], [23, 2, 1, "", "device"], [23, 2, 1, "", "download"], [23, 2, 1, "", "download_linked_module"], [23, 2, 1, "", "ext_dev"], [23, 2, 1, "", "get_function"], [23, 2, 1, "", "hexagon"], [23, 2, 1, "", "listdir"], [23, 2, 1, "", "load_module"], [23, 2, 1, "", "metal"], [23, 2, 1, "", "remove"], [23, 2, 1, "", "rocm"], [23, 2, 1, "", "system_lib"], [23, 2, 1, "", "upload"], [23, 2, 1, "", "vulkan"], [23, 2, 1, "", "webgpu"]], "tvm.rpc.Server": [[23, 2, 1, "", "terminate"]], "tvm.rpc.TrackerSession": [[23, 2, 1, "", "close"], [23, 2, 1, "", "request"], [23, 2, 1, "", "request_and_run"], [23, 2, 1, "", "summary"], [23, 2, 1, "", "text_summary"]], "tvm.runtime": [[28, 1, 1, "", "DataType"], [28, 1, 1, "", "DataTypeCode"], [28, 1, 1, "", "Device"], [28, 1, 1, "", "Module"], [28, 1, 1, "", "Object"], [28, 1, 1, "", "ObjectGeneric"], [28, 1, 1, "", "ObjectPath"], [28, 1, 1, "", "ObjectPathPair"], [28, 1, 1, "", "PackedFunc"], [28, 1, 1, "", "Report"], [28, 1, 1, "", "Scriptable"], [28, 1, 1, "", "ShapeTuple"], [28, 1, 1, "", "String"], [28, 4, 1, "", "cl"], [28, 4, 1, "", "const"], [28, 4, 1, "", "convert"], [28, 4, 1, "", "convert_to_object"], [28, 4, 1, "", "cpu"], [28, 4, 1, "", "cuda"], [28, 4, 1, "", "device"], [24, 0, 0, "-", "disco"], [28, 4, 1, "", "enabled"], [28, 4, 1, "", "ext_dev"], [28, 4, 1, "", "gpu"], [28, 4, 1, "", "load_module"], [28, 4, 1, "", "load_param_dict"], [28, 4, 1, "", "load_param_dict_from_file"], [28, 4, 1, "", "load_static_library"], [28, 4, 1, "", "metal"], [28, 4, 1, "", "mtl"], [25, 0, 0, "-", "ndarray"], [28, 4, 1, "", "num_threads"], [28, 4, 1, "", "opencl"], [26, 0, 0, "-", "profiling"], [27, 0, 0, "-", "relax_vm"], [28, 4, 1, "", "rocm"], [28, 4, 1, "", "save_param_dict"], [28, 4, 1, "", "save_param_dict_to_file"], [28, 4, 1, "", "system_lib"], [28, 4, 1, "", "vpi"], [28, 4, 1, "", "vulkan"]], "tvm.runtime.Device": [[28, 3, 1, "", "api_version"], [28, 3, 1, "", "compute_version"], [28, 2, 1, "", "create_raw_stream"], [28, 3, 1, "", "device_name"], [28, 3, 1, "", "driver_version"], [28, 3, 1, "", "exist"], [28, 2, 1, "", "free_raw_stream"], [28, 3, 1, "", "l2_cache_size_bytes"], [28, 3, 1, "", "max_clock_rate"], [28, 3, 1, "", "max_shared_memory_per_block"], [28, 3, 1, "", "max_thread_dimensions"], [28, 3, 1, "", "max_threads_per_block"], [28, 3, 1, "", "multi_processor_count"], [28, 2, 1, "", "set_raw_stream"], [28, 2, 1, "", "sync"], [28, 2, 1, "", "texture_spatial_limit"], [28, 3, 1, "", "warp_size"]], "tvm.runtime.Module": [[28, 2, 1, "", "clear_imports"], [28, 3, 1, "", "entry_func"], [28, 2, 1, "", "export_library"], [28, 3, 1, "", "format"], [28, 2, 1, "", "get_function"], [28, 2, 1, "", "get_property_mask"], [28, 2, 1, "", "get_source"], [28, 2, 1, "", "implements_function"], [28, 2, 1, "", "import_module"], [28, 3, 1, "", "imported_modules"], [28, 3, 1, "", "is_binary_serializable"], [28, 3, 1, "", "is_dso_exportable"], [28, 3, 1, "", "is_runnable"], [28, 2, 1, "", "save"], [28, 2, 1, "", "time_evaluator"], [28, 3, 1, "", "type_key"]], "tvm.runtime.ObjectGeneric": [[28, 2, 1, "", "asobject"]], "tvm.runtime.Report": [[28, 6, 1, "", "calls"], [28, 2, 1, "", "csv"], [28, 6, 1, "", "device_metrics"], [28, 2, 1, "", "from_json"], [28, 2, 1, "", "json"], [28, 2, 1, "", "table"]], "tvm.runtime.Scriptable": [[28, 2, 1, "", "script"], [28, 2, 1, "", "show"]], "tvm.runtime.disco": [[24, 1, 1, "", "DModule"], [24, 1, 1, "", "DPackedFunc"], [24, 1, 1, "", "DRef"], [24, 1, 1, "", "ProcessSession"], [24, 1, 1, "", "Session"], [24, 1, 1, "", "ThreadedSession"]], "tvm.runtime.disco.DRef": [[24, 2, 1, "", "debug_copy_from"], [24, 2, 1, "", "debug_get_from_remote"], [24, 3, 1, "", "session"]], "tvm.runtime.disco.Session": [[24, 2, 1, "", "allgather"], [24, 2, 1, "", "allreduce"], [24, 2, 1, "", "broadcast_from_worker0"], [24, 2, 1, "", "call_packed"], [24, 2, 1, "", "copy_from_worker_0"], [24, 2, 1, "", "copy_to_worker_0"], [24, 2, 1, "", "empty"], [24, 2, 1, "", "gather_to_worker0"], [24, 2, 1, "", "get_global_func"], [24, 2, 1, "", "init_ccl"], [24, 2, 1, "", "load_vm_module"], [24, 2, 1, "", "scatter_from_worker0"], [24, 2, 1, "", "sync_worker_0"]], "tvm.runtime.ndarray": [[25, 1, 1, "", "NDArray"], [25, 4, 1, "", "array"], [25, 4, 1, "", "cl"], [25, 4, 1, "", "cpu"], [25, 4, 1, "", "cuda"], [25, 4, 1, "", "device"], [25, 4, 1, "", "empty"], [25, 4, 1, "", "ext_dev"], [25, 4, 1, "", "from_dlpack"], [25, 4, 1, "", "gpu"], [25, 4, 1, "", "hexagon"], [25, 4, 1, "", "metal"], [25, 4, 1, "", "mtl"], [25, 4, 1, "", "numpyasarray"], [25, 4, 1, "", "opencl"], [25, 4, 1, "", "rocm"], [25, 4, 1, "", "vpi"], [25, 4, 1, "", "vulkan"], [25, 4, 1, "", "webgpu"]], "tvm.runtime.ndarray.NDArray": [[25, 2, 1, "", "asnumpy"], [25, 2, 1, "", "copyfrom"], [25, 2, 1, "", "copyto"], [25, 3, 1, "", "device"], [25, 3, 1, "", "dtype"], [25, 2, 1, "", "numpy"], [25, 2, 1, "", "same_as"]], "tvm.runtime.profiling": [[26, 1, 1, "", "Count"], [26, 1, 1, "", "DeviceWrapper"], [26, 1, 1, "", "Duration"], [26, 1, 1, "", "MetricCollector"], [26, 1, 1, "", "Percent"], [26, 1, 1, "", "Ratio"], [26, 1, 1, "", "Report"], [26, 4, 1, "", "profile_function"]], "tvm.runtime.profiling.Report": [[26, 6, 1, "", "calls"], [26, 2, 1, "", "csv"], [26, 6, 1, "", "device_metrics"], [26, 2, 1, "", "from_json"], [26, 2, 1, "", "json"], [26, 2, 1, "", "table"]], "tvm.runtime.relax_vm": [[27, 1, 1, "", "VMInstrumentReturnKind"], [27, 1, 1, "", "VirtualMachine"]], "tvm.runtime.relax_vm.VirtualMachine": [[27, 2, 1, "", "get_outputs"], [27, 2, 1, "", "invoke_closure"], [27, 2, 1, "", "invoke_stateful"], [27, 2, 1, "", "profile"], [27, 2, 1, "", "save_function"], [27, 2, 1, "", "set_input"], [27, 2, 1, "", "set_instrument"], [27, 2, 1, "", "time_evaluator"]], "tvm.target": [[29, 1, 1, "", "GenericFunc"], [29, 1, 1, "", "Target"], [29, 1, 1, "", "TargetKind"], [29, 1, 1, "", "VirtualDevice"], [29, 4, 1, "", "arm_cpu"], [29, 4, 1, "", "bifrost"], [29, 4, 1, "", "create"], [29, 4, 1, "", "cuda"], [29, 4, 1, "", "generic_func"], [29, 4, 1, "", "get_native_generic_func"], [29, 4, 1, "", "hexagon"], [29, 4, 1, "", "intel_graphics"], [29, 4, 1, "", "list_tags"], [29, 4, 1, "", "make_compilation_config"], [29, 4, 1, "", "mali"], [29, 4, 1, "", "override_native_generic_func"], [29, 4, 1, "", "rasp"], [29, 4, 1, "", "riscv_cpu"], [29, 4, 1, "", "rocm"], [29, 4, 1, "", "stm32"]], "tvm.target.GenericFunc": [[29, 2, 1, "", "get_packed_func"], [29, 2, 1, "", "register"], [29, 2, 1, "", "set_default"]], "tvm.target.Target": [[29, 3, 1, "", "arch"], [29, 2, 1, "", "canon_multi_target"], [29, 2, 1, "", "canon_multi_target_and_host"], [29, 2, 1, "", "canon_target"], [29, 2, 1, "", "canon_target_and_host"], [29, 2, 1, "", "canon_target_map_and_host"], [29, 2, 1, "", "current"], [29, 2, 1, "", "from_device"], [29, 2, 1, "", "get_kind_attr"], [29, 2, 1, "", "get_target_device_type"], [29, 2, 1, "", "list_kinds"], [29, 3, 1, "", "mattr"], [29, 3, 1, "", "max_block_size_x"], [29, 3, 1, "", "max_block_size_y"], [29, 3, 1, "", "max_num_threads"], [29, 3, 1, "", "mcpu"], [29, 3, 1, "", "model"], [29, 2, 1, "", "target_or_current"], [29, 3, 1, "", "thread_warp_size"]], "tvm.target.TargetKind": [[29, 3, 1, "", "options"], [29, 2, 1, "", "options_from_name"]], "tvm.te": [[30, 1, 1, "", "ComputeOp"], [30, 1, 1, "", "ExternOp"], [30, 1, 1, "", "HybridOp"], [30, 1, 1, "", "PlaceholderOp"], [30, 1, 1, "", "ScanOp"], [30, 1, 1, "", "SpecializedCondition"], [30, 1, 1, "", "Tensor"], [30, 1, 1, "", "TensorComputeOp"], [30, 1, 1, "", "TensorSlice"], [30, 4, 1, "", "abs"], [30, 4, 1, "", "acos"], [30, 4, 1, "", "acosh"], [30, 4, 1, "", "add"], [30, 4, 1, "", "all"], [30, 4, 1, "", "any"], [30, 4, 1, "", "asin"], [30, 4, 1, "", "asinh"], [30, 4, 1, "", "atan"], [30, 4, 1, "", "atanh"], [30, 4, 1, "", "ceil"], [30, 4, 1, "", "comm_reducer"], [30, 4, 1, "", "compute"], [30, 4, 1, "", "const"], [30, 4, 1, "", "cos"], [30, 4, 1, "", "cosh"], [30, 4, 1, "", "create_prim_func"], [30, 4, 1, "", "create_schedule"], [30, 4, 1, "", "decl_tensor_intrin"], [30, 4, 1, "", "div"], [30, 4, 1, "", "erf"], [30, 4, 1, "", "exp"], [30, 4, 1, "", "extern"], [30, 4, 1, "", "extern_primfunc"], [30, 4, 1, "", "floor"], [30, 4, 1, "", "floordiv"], [30, 4, 1, "", "floormod"], [30, 4, 1, "", "fmod"], [30, 4, 1, "", "gradient"], [30, 4, 1, "", "if_then_else"], [30, 4, 1, "", "indexdiv"], [30, 4, 1, "", "indexmod"], [30, 4, 1, "", "isfinite"], [30, 4, 1, "", "isinf"], [30, 4, 1, "", "isnan"], [30, 4, 1, "", "log"], [30, 4, 1, "", "log10"], [30, 4, 1, "", "log2"], [30, 4, 1, "", "max"], [30, 4, 1, "", "max_value"], [30, 4, 1, "", "min"], [30, 4, 1, "", "min_value"], [30, 4, 1, "", "multiply"], [30, 4, 1, "", "nearbyint"], [30, 4, 1, "", "placeholder"], [30, 4, 1, "", "popcount"], [30, 4, 1, "", "power"], [30, 4, 1, "", "reduce_axis"], [30, 4, 1, "", "round"], [30, 4, 1, "", "rsqrt"], [30, 4, 1, "", "scan"], [30, 4, 1, "", "sigmoid"], [30, 4, 1, "", "sin"], [30, 4, 1, "", "sinh"], [30, 4, 1, "", "size_var"], [30, 4, 1, "", "sqrt"], [30, 4, 1, "", "subtract"], [30, 4, 1, "", "sum"], [30, 4, 1, "", "tag_scope"], [30, 4, 1, "", "tan"], [30, 4, 1, "", "tanh"], [30, 4, 1, "", "thread_axis"], [30, 4, 1, "", "trace"], [30, 4, 1, "", "trunc"], [30, 4, 1, "", "truncdiv"], [30, 4, 1, "", "truncmod"], [30, 4, 1, "", "var"]], "tvm.te.HybridOp": [[30, 3, 1, "", "axis"]], "tvm.te.ScanOp": [[30, 3, 1, "", "scan_axis"]], "tvm.te.SpecializedCondition": [[30, 2, 1, "", "current"]], "tvm.te.Tensor": [[30, 3, 1, "", "axis"], [30, 3, 1, "", "ndim"], [30, 3, 1, "", "op"], [30, 3, 1, "", "shape"], [30, 3, 1, "", "value_index"]], "tvm.te.TensorSlice": [[30, 2, 1, "", "asobject"], [30, 3, 1, "", "dtype"]], "tvm.tir": [[34, 1, 1, "", "Add"], [34, 1, 1, "", "Allocate"], [34, 1, 1, "", "AllocateConst"], [34, 1, 1, "", "And"], [34, 1, 1, "", "Any"], [34, 1, 1, "", "AssertStmt"], [34, 1, 1, "", "AttrStmt"], [34, 1, 1, "", "BijectiveLayout"], [34, 1, 1, "", "Block"], [34, 1, 1, "", "BlockDependenceInfo"], [34, 1, 1, "", "BlockRealize"], [34, 1, 1, "", "Broadcast"], [34, 1, 1, "", "Buffer"], [34, 1, 1, "", "BufferLoad"], [34, 1, 1, "", "BufferRealize"], [34, 1, 1, "", "BufferRegion"], [34, 1, 1, "", "BufferStore"], [34, 1, 1, "", "Call"], [34, 1, 1, "", "CallEffectKind"], [34, 1, 1, "", "Cast"], [34, 1, 1, "", "CommReducer"], [34, 1, 1, "", "DataProducer"], [34, 1, 1, "", "DeclBuffer"], [34, 1, 1, "", "Div"], [34, 1, 1, "", "EQ"], [34, 1, 1, "", "Evaluate"], [34, 1, 1, "", "FloatImm"], [34, 1, 1, "", "FloorDiv"], [34, 1, 1, "", "FloorMod"], [34, 1, 1, "", "For"], [34, 1, 1, "", "ForKind"], [34, 1, 1, "", "GE"], [34, 1, 1, "", "GT"], [34, 1, 1, "", "IfThenElse"], [34, 1, 1, "", "IndexMap"], [34, 1, 1, "", "IntImm"], [34, 1, 1, "", "IterVar"], [34, 1, 1, "", "LE"], [34, 1, 1, "", "LT"], [34, 1, 1, "", "Layout"], [34, 1, 1, "", "Let"], [34, 1, 1, "", "LetStmt"], [34, 1, 1, "", "MatchBufferRegion"], [34, 1, 1, "", "Max"], [34, 1, 1, "", "Min"], [34, 1, 1, "", "Mod"], [34, 1, 1, "", "Mul"], [34, 1, 1, "", "NE"], [34, 1, 1, "", "Not"], [34, 1, 1, "", "Or"], [34, 1, 1, "", "Prefetch"], [34, 1, 1, "", "PrimFunc"], [34, 1, 1, "", "ProducerLoad"], [34, 1, 1, "", "ProducerRealize"], [34, 1, 1, "", "ProducerStore"], [34, 1, 1, "", "Ramp"], [34, 1, 1, "", "Reduce"], [34, 1, 1, "", "Select"], [34, 1, 1, "", "SeqStmt"], [34, 1, 1, "", "Shuffle"], [34, 1, 1, "", "SizeVar"], [34, 1, 1, "", "Stmt"], [34, 1, 1, "", "StringImm"], [34, 1, 1, "", "Sub"], [34, 4, 1, "", "TVMBackendAllocWorkspace"], [34, 4, 1, "", "TVMBackendFreeWorkspace"], [34, 1, 1, "", "TensorIntrin"], [34, 1, 1, "", "Var"], [34, 1, 1, "", "While"], [34, 4, 1, "", "abs"], [34, 4, 1, "", "acos"], [34, 4, 1, "", "acosh"], [34, 4, 1, "", "add"], [34, 4, 1, "", "address_of"], [34, 4, 1, "", "all"], [34, 4, 1, "", "any"], [34, 4, 1, "", "asin"], [34, 4, 1, "", "asinh"], [34, 4, 1, "", "assume"], [34, 4, 1, "", "atan"], [34, 4, 1, "", "atan2"], [34, 4, 1, "", "atanh"], [34, 4, 1, "", "bijective_layout"], [34, 4, 1, "", "bitwise_and"], [34, 4, 1, "", "bitwise_not"], [34, 4, 1, "", "bitwise_or"], [34, 4, 1, "", "bitwise_xor"], [34, 4, 1, "", "call_cpacked"], [34, 4, 1, "", "call_cpacked_lowered"], [34, 4, 1, "", "call_extern"], [34, 4, 1, "", "call_intrin"], [34, 4, 1, "", "call_llvm_intrin"], [34, 4, 1, "", "call_llvm_pure_intrin"], [34, 4, 1, "", "call_packed"], [34, 4, 1, "", "call_packed_lowered"], [34, 4, 1, "", "call_pure_extern"], [34, 4, 1, "", "call_tir"], [34, 4, 1, "", "ceil"], [34, 4, 1, "", "ceildiv"], [34, 4, 1, "", "clz"], [34, 4, 1, "", "comm_reducer"], [34, 4, 1, "", "copysign"], [34, 4, 1, "", "cos"], [34, 4, 1, "", "cosh"], [34, 4, 1, "", "create_barriers"], [34, 4, 1, "", "decl_buffer"], [34, 4, 1, "", "div"], [34, 4, 1, "", "end_profile_intrinsic"], [34, 4, 1, "", "erf"], [34, 4, 1, "", "exp"], [34, 4, 1, "", "exp10"], [34, 4, 1, "", "exp2"], [34, 4, 1, "", "floor"], [34, 4, 1, "", "floordiv"], [34, 4, 1, "", "floormod"], [34, 4, 1, "", "fmod"], [34, 4, 1, "", "hypot"], [34, 4, 1, "", "if_then_else"], [34, 4, 1, "", "indexdiv"], [34, 4, 1, "", "indexmod"], [34, 4, 1, "", "infinity"], [34, 4, 1, "", "isfinite"], [34, 4, 1, "", "isinf"], [34, 4, 1, "", "isnan"], [34, 4, 1, "", "isnullptr"], [34, 4, 1, "", "layout"], [34, 4, 1, "", "ldexp"], [34, 4, 1, "", "likely"], [34, 4, 1, "", "log"], [34, 4, 1, "", "log10"], [34, 4, 1, "", "log1p"], [34, 4, 1, "", "log2"], [34, 4, 1, "", "lookup_param"], [34, 4, 1, "", "max"], [34, 4, 1, "", "max_value"], [34, 4, 1, "", "min"], [34, 4, 1, "", "min_value"], [34, 4, 1, "", "mma_fill"], [34, 4, 1, "", "mma_store"], [34, 4, 1, "", "multiply"], [34, 4, 1, "", "nearbyint"], [34, 4, 1, "", "nextafter"], [34, 4, 1, "", "popcount"], [34, 4, 1, "", "pow"], [34, 4, 1, "", "power"], [34, 4, 1, "", "ptx_arrive_barrier"], [34, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [34, 4, 1, "", "ptx_commit_group"], [34, 4, 1, "", "ptx_cp_async"], [34, 4, 1, "", "ptx_cp_async_barrier"], [34, 4, 1, "", "ptx_cp_async_bulk"], [34, 4, 1, "", "ptx_init_barrier_thread_count"], [34, 4, 1, "", "ptx_ldmatrix"], [34, 4, 1, "", "ptx_mma"], [34, 4, 1, "", "ptx_mma_sp"], [34, 4, 1, "", "ptx_wait_barrier"], [34, 4, 1, "", "ptx_wait_group"], [34, 4, 1, "", "q_multiply_shift"], [34, 4, 1, "", "q_multiply_shift_per_axis"], [34, 4, 1, "", "reinterpret"], [34, 4, 1, "", "ret"], [34, 4, 1, "", "round"], [34, 4, 1, "", "rsqrt"], [32, 0, 0, "-", "schedule"], [34, 4, 1, "", "shift_left"], [34, 4, 1, "", "shift_right"], [34, 4, 1, "", "sigmoid"], [34, 4, 1, "", "sin"], [34, 4, 1, "", "sinh"], [34, 4, 1, "", "sqrt"], [34, 4, 1, "", "start_profile_intrinsic"], [33, 0, 0, "-", "stmt_functor"], [34, 4, 1, "", "stmt_list"], [34, 4, 1, "", "stmt_seq"], [34, 4, 1, "", "subtract"], [34, 4, 1, "", "sum"], [34, 4, 1, "", "tan"], [34, 4, 1, "", "tanh"], [34, 4, 1, "", "trace"], [35, 0, 0, "-", "transform"], [34, 4, 1, "", "trunc"], [34, 4, 1, "", "truncdiv"], [34, 4, 1, "", "truncmod"], [34, 4, 1, "", "tvm_access_ptr"], [34, 4, 1, "", "tvm_bmma_sync"], [34, 4, 1, "", "tvm_check_return"], [34, 4, 1, "", "tvm_fill_fragment"], [34, 4, 1, "", "tvm_load_matrix_sync"], [34, 4, 1, "", "tvm_mma_sync"], [34, 4, 1, "", "tvm_stack_alloca"], [34, 4, 1, "", "tvm_stack_make_array"], [34, 4, 1, "", "tvm_stack_make_shape"], [34, 4, 1, "", "tvm_store_matrix_sync"], [34, 4, 1, "", "tvm_struct_get"], [34, 4, 1, "", "tvm_struct_set"], [34, 4, 1, "", "tvm_thread_allreduce"], [34, 4, 1, "", "tvm_throw_last_error"], [34, 4, 1, "", "tvm_tuple"], [34, 4, 1, "", "type_annotation"], [34, 4, 1, "", "undef"], [34, 4, 1, "", "vectorcombine"], [34, 4, 1, "", "vectorhigh"], [34, 4, 1, "", "vectorlow"]], "tvm.tir.BijectiveLayout": [[34, 2, 1, "", "backward_index"], [34, 2, 1, "", "backward_shape"], [34, 2, 1, "", "forward_index"], [34, 2, 1, "", "forward_shape"]], "tvm.tir.BlockDependenceInfo": [[34, 2, 1, "", "get_block_scope"], [34, 2, 1, "", "get_sref"]], "tvm.tir.Buffer": [[34, 2, 1, "", "access_ptr"], [34, 2, 1, "", "get_flattened_buffer"], [34, 2, 1, "", "offset_of"], [34, 2, 1, "", "scope"], [34, 2, 1, "", "vload"], [34, 2, 1, "", "vstore"]], "tvm.tir.IndexMap": [[34, 2, 1, "", "from_func"], [34, 2, 1, "", "from_func_with_separators"], [34, 2, 1, "", "inverse"], [34, 2, 1, "", "is_equivalent_to"], [34, 2, 1, "", "map_indices"], [34, 2, 1, "", "map_ndarray"], [34, 2, 1, "", "map_shape"], [34, 2, 1, "", "non_surjective_inverse"]], "tvm.tir.Layout": [[34, 2, 1, "", "factor_of"], [34, 2, 1, "", "index_of"]], "tvm.tir.PrimFunc": [[34, 2, 1, "", "specialize"], [34, 2, 1, "", "with_body"]], "tvm.tir.TensorIntrin": [[34, 2, 1, "", "get"], [34, 2, 1, "", "register"]], "tvm.tir.analysis": [[31, 0, 0, "-", "analysis"]], "tvm.tir.analysis.analysis": [[31, 4, 1, "", "OOBChecker"], [31, 4, 1, "", "apply_prim_func_arg_and_result_memory_constraints"], [31, 4, 1, "", "calculate_allocated_bytes"], [31, 4, 1, "", "calculate_constant_bytes"], [31, 4, 1, "", "calculate_workspace_bytes"], [31, 4, 1, "", "detect_buffer_access_lca"], [31, 4, 1, "", "estimate_tir_flops"], [31, 4, 1, "", "expr_deep_equal"], [31, 4, 1, "", "find_anchor_block"], [31, 4, 1, "", "get_block_access_region"], [31, 4, 1, "", "get_block_read_write_region"], [31, 4, 1, "", "get_prim_func_arg_and_result_memory_constraints"], [31, 4, 1, "", "get_vtcm_compaction_passes"], [31, 4, 1, "", "undefined_vars"], [31, 4, 1, "", "verify_gpu_code"], [31, 4, 1, "", "verify_memory"], [31, 4, 1, "", "verify_ssa"], [31, 4, 1, "", "verify_well_formed"]], "tvm.tir.schedule": [[32, 1, 1, "", "BlockRV"], [32, 1, 1, "", "BlockScope"], [32, 1, 1, "", "DepKind"], [32, 1, 1, "", "Dependency"], [32, 6, 1, "", "ExprRV"], [32, 1, 1, "", "Instruction"], [32, 1, 1, "", "InstructionKind"], [32, 1, 1, "", "LoopRV"], [32, 1, 1, "", "Schedule"], [32, 1, 1, "", "ScheduleDebugMask"], [32, 5, 1, "", "ScheduleError"], [32, 1, 1, "", "ScheduleState"], [32, 1, 1, "", "StmtSRef"], [32, 1, 1, "", "Trace"]], "tvm.tir.schedule.BlockScope": [[32, 2, 1, "", "get_deps_by_dst"], [32, 2, 1, "", "get_deps_by_src"]], "tvm.tir.schedule.DepKind": [[32, 6, 1, "", "OPAQUE"], [32, 6, 1, "", "RAW"], [32, 6, 1, "", "WAR"], [32, 6, 1, "", "WAW"]], "tvm.tir.schedule.Instruction": [[32, 6, 1, "", "attrs"], [32, 6, 1, "", "inputs"], [32, 6, 1, "", "kind"], [32, 6, 1, "", "outputs"]], "tvm.tir.schedule.InstructionKind": [[32, 2, 1, "", "get"], [32, 3, 1, "", "is_pure"], [32, 6, 1, "", "name"]], "tvm.tir.schedule.Schedule": [[32, 2, 1, "", "add_unit_loop"], [32, 2, 1, "", "annotate"], [32, 2, 1, "", "bind"], [32, 2, 1, "", "blockize"], [32, 2, 1, "", "cache_index"], [32, 2, 1, "", "cache_inplace"], [32, 2, 1, "", "cache_read"], [32, 2, 1, "", "cache_write"], [32, 2, 1, "", "can_decompose_padding"], [32, 2, 1, "", "compute_at"], [32, 2, 1, "", "compute_inline"], [32, 2, 1, "", "copy"], [32, 2, 1, "", "decompose_padding"], [32, 2, 1, "", "decompose_reduction"], [32, 2, 1, "", "enter_postproc"], [32, 2, 1, "", "fork_seed"], [32, 3, 1, "", "func_working_on"], [32, 2, 1, "", "fuse"], [32, 2, 1, "", "get"], [32, 2, 1, "", "get_block"], [32, 2, 1, "", "get_child_blocks"], [32, 2, 1, "", "get_consumers"], [32, 2, 1, "", "get_loops"], [32, 2, 1, "", "get_output_blocks"], [32, 2, 1, "", "get_producers"], [32, 2, 1, "", "get_sref"], [32, 2, 1, "", "merge"], [32, 3, 1, "", "mod"], [32, 2, 1, "", "pad_einsum"], [32, 2, 1, "", "parallel"], [32, 2, 1, "", "reindex"], [32, 2, 1, "", "reindex_cache_read"], [32, 2, 1, "", "reindex_cache_write"], [32, 2, 1, "", "remove_rv"], [32, 2, 1, "", "reorder"], [32, 2, 1, "", "reorder_block_iter_var"], [32, 2, 1, "", "reverse_compute_at"], [32, 2, 1, "", "reverse_compute_inline"], [32, 2, 1, "", "rfactor"], [32, 2, 1, "", "rolling_buffer"], [32, 2, 1, "", "sample_categorical"], [32, 2, 1, "", "sample_compute_location"], [32, 2, 1, "", "sample_partitioned_tile"], [32, 2, 1, "", "sample_perfect_tile"], [32, 2, 1, "", "seed"], [32, 2, 1, "", "set_axis_separator"], [32, 2, 1, "", "set_scope"], [32, 2, 1, "", "show"], [32, 2, 1, "", "split"], [32, 3, 1, "", "state"], [32, 2, 1, "", "storage_align"], [32, 2, 1, "", "tensorize"], [32, 3, 1, "", "trace"], [32, 2, 1, "", "transform_block_layout"], [32, 2, 1, "", "transform_layout"], [32, 2, 1, "", "unannotate"], [32, 2, 1, "", "unroll"], [32, 2, 1, "", "unsafe_hide_buffer_access"], [32, 2, 1, "", "unsafe_set_dtype"], [32, 2, 1, "", "vectorize"], [32, 2, 1, "", "work_on"]], "tvm.tir.schedule.ScheduleDebugMask": [[32, 6, 1, "", "VERIFY_CACHED_FLAGS"], [32, 6, 1, "", "VERIFY_SREF_TREE"]], "tvm.tir.schedule.ScheduleState": [[32, 2, 1, "", "get_block_scope"], [32, 2, 1, "", "get_sref"], [32, 2, 1, "", "replace"]], "tvm.tir.schedule.StmtSRef": [[32, 2, 1, "", "inline_mark"], [32, 3, 1, "", "parent"], [32, 2, 1, "", "root_mark"], [32, 3, 1, "", "stmt"]], "tvm.tir.schedule.Trace": [[32, 2, 1, "", "append"], [32, 2, 1, "", "apply_json_to_schedule"], [32, 2, 1, "", "apply_to_schedule"], [32, 2, 1, "", "as_json"], [32, 2, 1, "", "as_python"], [32, 6, 1, "", "decisions"], [32, 2, 1, "", "get_decision"], [32, 6, 1, "", "insts"], [32, 2, 1, "", "pop"], [32, 2, 1, "", "show"], [32, 2, 1, "", "simplified"], [32, 2, 1, "", "with_decision"]], "tvm.tir.stmt_functor": [[33, 4, 1, "", "ir_transform"], [33, 4, 1, "", "post_order_visit"], [33, 4, 1, "", "pre_order_visit"], [33, 4, 1, "", "renew_defs"], [33, 4, 1, "", "substitute"]], "tvm.tir.transform": [[35, 4, 1, "", "AnnotateDeviceRegions"], [35, 4, 1, "", "AnnotateEntryFunc"], [35, 4, 1, "", "Apply"], [35, 4, 1, "", "ApplyLayoutTransforms"], [35, 4, 1, "", "BF16ComputeLegalize"], [35, 4, 1, "", "BF16StorageLegalize"], [35, 4, 1, "", "BindTarget"], [35, 4, 1, "", "CoProcSync"], [35, 4, 1, "", "CombineContextCall"], [35, 4, 1, "", "CommonSubexprElimTIR"], [35, 4, 1, "", "CompactBufferAllocation"], [35, 4, 1, "", "ConvertBlocksToOpaque"], [35, 4, 1, "", "ConvertForLoopsToSerial"], [35, 4, 1, "", "ConvertSSA"], [35, 4, 1, "", "DecorateDeviceScope"], [35, 4, 1, "", "DefaultGPUSchedule"], [35, 4, 1, "", "ExtractPrimFuncConstants"], [35, 4, 1, "", "FP8ComputeLegalize"], [35, 4, 1, "", "FP8StorageLegalize"], [35, 4, 1, "", "Filter"], [35, 4, 1, "", "FlattenBuffer"], [35, 4, 1, "", "ForceNarrowIndexToInt32"], [35, 4, 1, "", "HoistExpression"], [35, 4, 1, "", "HoistIfThenElse"], [35, 1, 1, "", "HoistedConditionals"], [35, 1, 1, "", "HoistedLetBindings"], [35, 4, 1, "", "InferFragment"], [35, 4, 1, "", "InjectCopyIntrin"], [35, 4, 1, "", "InjectDoubleBuffer"], [35, 4, 1, "", "InjectPTXAsyncCopy"], [35, 4, 1, "", "InjectPermutedLayout"], [35, 4, 1, "", "InjectPrefetch"], [35, 4, 1, "", "InjectRollingBuffer"], [35, 4, 1, "", "InjectSoftwarePipeline"], [35, 4, 1, "", "InjectVirtualThread"], [35, 4, 1, "", "InstallDebugSpans"], [35, 4, 1, "", "InstrumentBoundCheckers"], [35, 4, 1, "", "InstrumentProfileIntrinsics"], [35, 4, 1, "", "LegalizePackedCalls"], [35, 4, 1, "", "LiftAttrScope"], [35, 4, 1, "", "LiftThreadBinding"], [35, 4, 1, "", "LoopPartition"], [35, 4, 1, "", "LowerAutoCopy"], [35, 4, 1, "", "LowerCrossThreadReduction"], [35, 4, 1, "", "LowerCustomDatatypes"], [35, 4, 1, "", "LowerDeviceKernelLaunch"], [35, 4, 1, "", "LowerDeviceStorageAccessInfo"], [35, 4, 1, "", "LowerInitBlock"], [35, 4, 1, "", "LowerIntrin"], [35, 4, 1, "", "LowerMatchBuffer"], [35, 4, 1, "", "LowerOpaqueBlock"], [35, 4, 1, "", "LowerTVMBuiltin"], [35, 4, 1, "", "LowerThreadAllreduce"], [35, 4, 1, "", "LowerWarpMemory"], [35, 4, 1, "", "MakePackedAPI"], [35, 4, 1, "", "MakeUnpackedAPI"], [35, 4, 1, "", "ManifestSharedMemoryLocalStage"], [35, 4, 1, "", "MergeDynamicSharedMemoryAllocations"], [35, 4, 1, "", "NarrowDataType"], [35, 4, 1, "", "PlanAndUpdateBufferAllocationLocation"], [35, 1, 1, "", "PrimFuncPass"], [35, 4, 1, "", "ReduceBranchingThroughOvercompute"], [35, 4, 1, "", "RemoveAssume"], [35, 4, 1, "", "RemoveNoOp"], [35, 4, 1, "", "RemoveStoreUndef"], [35, 4, 1, "", "RemoveWeightLayoutRewriteBlock"], [35, 4, 1, "", "RenormalizeSplitPattern"], [35, 4, 1, "", "RewriteUnsafeSelect"], [35, 4, 1, "", "Simplify"], [35, 4, 1, "", "SkipAssert"], [35, 4, 1, "", "SplitHostDevice"], [35, 4, 1, "", "StorageFlatten"], [35, 4, 1, "", "StorageRewrite"], [35, 4, 1, "", "TextureFlatten"], [35, 4, 1, "", "ThreadSync"], [35, 4, 1, "", "TransformMmaBufferLayout"], [35, 4, 1, "", "UnifyThreadBinding"], [35, 4, 1, "", "UnrollLoop"], [35, 4, 1, "", "VectorizeLoop"], [35, 4, 1, "", "VerifyMemory"], [35, 4, 1, "", "VerifyVTCMLimit"], [35, 4, 1, "", "prim_func_pass"]], "tvm.tir.transform.HoistedConditionals": [[35, 6, 1, "", "All"], [35, 6, 1, "", "BooleanExpression"], [35, 6, 1, "", "IfElseExpr"], [35, 6, 1, "", "IfElseStmt"], [35, 6, 1, "", "Never"], [35, 6, 1, "", "UsingBlockVar"]], "tvm.tir.transform.HoistedLetBindings": [[35, 6, 1, "", "All"], [35, 6, 1, "", "LetExpr"], [35, 6, 1, "", "LetStmt"], [35, 6, 1, "", "Never"], [35, 6, 1, "", "RequiredByConditional"]], "tvm.topi": [[36, 5, 1, "", "InvalidShapeError"], [36, 4, 1, "", "abs"], [36, 4, 1, "", "acos"], [36, 4, 1, "", "acosh"], [36, 4, 1, "", "add"], [36, 4, 1, "", "adv_index"], [36, 4, 1, "", "all"], [36, 4, 1, "", "any"], [36, 4, 1, "", "arange"], [36, 4, 1, "", "argmax"], [36, 4, 1, "", "argmin"], [36, 4, 1, "", "argsort"], [36, 4, 1, "", "argwhere"], [36, 4, 1, "", "asin"], [36, 4, 1, "", "asinh"], [36, 4, 1, "", "atan"], [36, 4, 1, "", "atanh"], [36, 4, 1, "", "binary_search"], [36, 4, 1, "", "bitwise_and"], [36, 4, 1, "", "bitwise_not"], [36, 4, 1, "", "bitwise_or"], [36, 4, 1, "", "bitwise_xor"], [36, 4, 1, "", "broadcast_to"], [36, 4, 1, "", "cast"], [36, 4, 1, "", "ceil"], [36, 4, 1, "", "ceil_log2"], [36, 4, 1, "", "clip"], [36, 4, 1, "", "collapse_sum"], [36, 4, 1, "", "concatenate"], [36, 4, 1, "", "const_vector"], [36, 4, 1, "", "cos"], [36, 4, 1, "", "cosh"], [36, 4, 1, "", "cumprod"], [36, 4, 1, "", "cumsum"], [36, 4, 1, "", "decl_buffer"], [36, 4, 1, "", "dft"], [36, 4, 1, "", "div"], [36, 4, 1, "", "divide"], [36, 4, 1, "", "dynamic_strided_slice"], [36, 4, 1, "", "einsum"], [36, 4, 1, "", "elemwise_sum"], [36, 4, 1, "", "equal"], [36, 4, 1, "", "erf"], [36, 4, 1, "", "erf_legalize"], [36, 4, 1, "", "exp"], [36, 4, 1, "", "expand_dims"], [36, 4, 1, "", "expand_like"], [36, 4, 1, "", "extern"], [36, 4, 1, "", "fast_erf"], [36, 4, 1, "", "fast_exp"], [36, 4, 1, "", "fast_tanh"], [36, 4, 1, "", "fixed_point_multiply"], [36, 4, 1, "", "fixed_point_multiply_per_axis"], [36, 4, 1, "", "flip"], [36, 4, 1, "", "floor"], [36, 4, 1, "", "floor_divide"], [36, 4, 1, "", "floor_mod"], [36, 4, 1, "", "floordiv"], [36, 4, 1, "", "floormod"], [36, 4, 1, "", "full"], [36, 4, 1, "", "full_like"], [36, 4, 1, "", "gather"], [36, 4, 1, "", "gather_nd"], [36, 4, 1, "", "get_const_tuple"], [36, 4, 1, "", "greater"], [36, 4, 1, "", "greater_equal"], [36, 4, 1, "", "hybrid_argwhere_1d"], [36, 4, 1, "", "hybrid_argwhere_2d"], [36, 4, 1, "", "hybrid_argwhere_3d"], [36, 4, 1, "", "hybrid_argwhere_4d"], [36, 4, 1, "", "hybrid_argwhere_5d"], [36, 4, 1, "", "identity"], [36, 0, 0, "-", "image"], [36, 4, 1, "", "invert_permutation"], [36, 4, 1, "", "isfinite"], [36, 4, 1, "", "isinf"], [36, 4, 1, "", "isnan"], [36, 4, 1, "", "layout_transform"], [36, 4, 1, "", "left_shift"], [36, 4, 1, "", "less"], [36, 4, 1, "", "less_equal"], [36, 4, 1, "", "log"], [36, 4, 1, "", "log10"], [36, 4, 1, "", "log2"], [36, 4, 1, "", "logical_and"], [36, 4, 1, "", "logical_not"], [36, 4, 1, "", "logical_or"], [36, 4, 1, "", "logical_xor"], [36, 4, 1, "", "make_idx"], [36, 4, 1, "", "matmul"], [36, 4, 1, "", "matrix_set_diag"], [36, 4, 1, "", "max"], [36, 4, 1, "", "maximum"], [36, 4, 1, "", "meshgrid"], [36, 4, 1, "", "min"], [36, 4, 1, "", "minimum"], [36, 4, 1, "", "mod"], [36, 4, 1, "", "multiply"], [36, 4, 1, "", "ndarray_size"], [36, 4, 1, "", "negative"], [36, 0, 0, "-", "nn"], [36, 4, 1, "", "not_equal"], [36, 4, 1, "", "one_hot"], [36, 4, 1, "", "power"], [36, 4, 1, "", "prod"], [36, 4, 1, "", "reinterpret"], [36, 4, 1, "", "repeat"], [36, 4, 1, "", "reshape"], [36, 4, 1, "", "reverse_sequence"], [36, 4, 1, "", "right_shift"], [36, 4, 1, "", "round"], [36, 4, 1, "", "rsqrt"], [36, 4, 1, "", "scanop"], [36, 4, 1, "", "scatter_elements"], [36, 4, 1, "", "scatter_nd"], [36, 4, 1, "", "searchsorted"], [36, 4, 1, "", "sequence_mask"], [36, 4, 1, "", "shape"], [36, 4, 1, "", "sigmoid"], [36, 4, 1, "", "sign"], [36, 4, 1, "", "sin"], [36, 4, 1, "", "sinh"], [36, 4, 1, "", "sliding_window"], [36, 4, 1, "", "sort"], [36, 0, 0, "-", "sparse"], [36, 4, 1, "", "sparse_reshape"], [36, 4, 1, "", "sparse_to_dense"], [36, 4, 1, "", "split"], [36, 4, 1, "", "sqrt"], [36, 4, 1, "", "squeeze"], [36, 4, 1, "", "stack"], [36, 4, 1, "", "stft"], [36, 4, 1, "", "strided_set"], [36, 4, 1, "", "strided_slice"], [36, 4, 1, "", "subtract"], [36, 4, 1, "", "sum"], [36, 4, 1, "", "take"], [36, 4, 1, "", "take_legalize"], [36, 4, 1, "", "tan"], [36, 4, 1, "", "tanh"], [36, 4, 1, "", "tensordot"], [36, 4, 1, "", "tile"], [36, 4, 1, "", "topk"], [36, 4, 1, "", "transpose"], [36, 4, 1, "", "trilu"], [36, 4, 1, "", "trunc"], [36, 4, 1, "", "unique"], [36, 4, 1, "", "unravel_index"], [36, 4, 1, "", "where"], [36, 4, 1, "", "within_index"]], "tvm.topi.image": [[36, 4, 1, "", "affine_grid"], [36, 4, 1, "", "can_convert_multiply_to_intdiv"], [36, 4, 1, "", "crop_and_resize"], [36, 4, 1, "", "dilation2d_nchw"], [36, 4, 1, "", "dilation2d_nhwc"], [36, 4, 1, "", "get_1d_indices"], [36, 4, 1, "", "get_1d_pixel"], [36, 4, 1, "", "get_2d_indices"], [36, 4, 1, "", "get_2d_pixel"], [36, 4, 1, "", "get_3d_indices"], [36, 4, 1, "", "get_3d_pixel"], [36, 4, 1, "", "get_closest_index"], [36, 4, 1, "", "get_inx"], [36, 4, 1, "", "get_pad_tuple"], [36, 4, 1, "", "grid_sample"], [36, 4, 1, "", "nchw_pack_layout"], [36, 4, 1, "", "nchw_xc_layout"], [36, 4, 1, "", "pad"], [36, 4, 1, "", "resize1d"], [36, 4, 1, "", "resize2d"], [36, 4, 1, "", "resize3d"], [36, 4, 1, "", "simplify"]], "tvm.topi.nn": [[36, 1, 1, "", "Workload"], [36, 4, 1, "", "adaptive_pool"], [36, 4, 1, "", "adaptive_pool3d"], [36, 4, 1, "", "add_alter_layout"], [36, 4, 1, "", "batch_matmul"], [36, 4, 1, "", "batch_matmul_legalize"], [36, 4, 1, "", "batch_norm"], [36, 4, 1, "", "batch_to_space_nd"], [36, 4, 1, "", "bias_add_legalize"], [36, 4, 1, "", "binarize_pack"], [36, 4, 1, "", "binary_dense"], [36, 4, 1, "", "bitpack"], [36, 4, 1, "", "bitserial_conv2d_legalize"], [36, 4, 1, "", "bitserial_conv2d_nchw"], [36, 4, 1, "", "bitserial_conv2d_nhwc"], [36, 4, 1, "", "bitserial_dense"], [36, 4, 1, "", "concatenate"], [36, 4, 1, "", "conv"], [36, 4, 1, "", "conv1d"], [36, 4, 1, "", "conv1d_ncw"], [36, 4, 1, "", "conv1d_nwc"], [36, 4, 1, "", "conv1d_transpose_ncw"], [36, 4, 1, "", "conv2d"], [36, 4, 1, "", "conv2d_NCHWc"], [36, 4, 1, "", "conv2d_NCHWc_int8"], [36, 4, 1, "", "conv2d_alter_layout"], [36, 4, 1, "", "conv2d_gemm_weight_transform"], [36, 4, 1, "", "conv2d_hwcn"], [36, 4, 1, "", "conv2d_infer_layout"], [36, 4, 1, "", "conv2d_legalize"], [36, 4, 1, "", "conv2d_nchw"], [36, 4, 1, "", "conv2d_nhwc"], [36, 4, 1, "", "conv2d_transpose_legalize"], [36, 4, 1, "", "conv2d_transpose_nchw"], [36, 4, 1, "", "conv2d_transpose_nchw_preprocess"], [36, 4, 1, "", "conv2d_winograd_nchw"], [36, 4, 1, "", "conv2d_winograd_nchw_without_weight_transform"], [36, 4, 1, "", "conv2d_winograd_nhwc"], [36, 4, 1, "", "conv2d_winograd_nhwc_without_weight_transform"], [36, 4, 1, "", "conv2d_winograd_nnpack_weight_transform"], [36, 4, 1, "", "conv2d_winograd_weight_transform"], [36, 4, 1, "", "conv3d_alter_layout"], [36, 4, 1, "", "conv3d_ncdhw"], [36, 4, 1, "", "conv3d_ndhwc"], [36, 4, 1, "", "conv3d_transpose_legalize"], [36, 4, 1, "", "conv3d_transpose_ncdhw"], [36, 4, 1, "", "conv3d_transpose_ncdhw_preprocess"], [36, 4, 1, "", "conv3d_winograd_weight_transform"], [36, 4, 1, "", "correlation_nchw"], [36, 4, 1, "", "declaration_conv2d_transpose_impl"], [36, 4, 1, "", "declaration_conv3d_transpose_impl"], [36, 4, 1, "", "deformable_conv2d_nchw"], [36, 4, 1, "", "deformable_conv2d_nhwc"], [36, 4, 1, "", "dense"], [36, 4, 1, "", "dense_alter_layout"], [36, 4, 1, "", "dense_legalize"], [36, 4, 1, "", "dense_pack"], [36, 4, 1, "", "depth_to_space"], [36, 4, 1, "", "depthwise_conv2d_NCHWc"], [36, 4, 1, "", "depthwise_conv2d_backward_input_nhwc"], [36, 4, 1, "", "depthwise_conv2d_backward_weight_nhwc"], [36, 4, 1, "", "depthwise_conv2d_infer_layout"], [36, 4, 1, "", "depthwise_conv2d_nchw"], [36, 4, 1, "", "depthwise_conv2d_nhwc"], [36, 4, 1, "", "dilate"], [36, 4, 1, "", "equal_const_int"], [36, 4, 1, "", "fast_softmax"], [36, 4, 1, "", "fifo_buffer"], [36, 4, 1, "", "flatten"], [36, 4, 1, "", "get_const_int"], [36, 4, 1, "", "get_const_tuple"], [36, 4, 1, "", "get_pad_tuple"], [36, 4, 1, "", "get_pad_tuple1d"], [36, 4, 1, "", "get_pad_tuple3d"], [36, 4, 1, "", "get_pad_tuple_generic"], [36, 4, 1, "", "global_pool"], [36, 4, 1, "", "group_conv1d_ncw"], [36, 4, 1, "", "group_conv1d_nwc"], [36, 4, 1, "", "group_conv2d_nchw"], [36, 4, 1, "", "group_conv2d_nhwc"], [36, 4, 1, "", "group_conv2d_transpose_nchw"], [36, 4, 1, "", "group_norm"], [36, 4, 1, "", "instance_norm"], [36, 4, 1, "", "layer_norm"], [36, 4, 1, "", "layout_transform"], [36, 4, 1, "", "leaky_relu"], [36, 4, 1, "", "log_softmax"], [36, 4, 1, "", "lrn"], [36, 4, 1, "", "lstm"], [36, 4, 1, "", "matmul"], [36, 4, 1, "", "matmul_legalize"], [36, 4, 1, "", "mirror_pad"], [36, 4, 1, "", "namedtuple"], [36, 4, 1, "", "nll_loss"], [36, 4, 1, "", "pad"], [36, 4, 1, "", "pool1d"], [36, 4, 1, "", "pool2d"], [36, 4, 1, "", "pool3d"], [36, 4, 1, "", "pool_grad"], [36, 4, 1, "", "prelu"], [36, 4, 1, "", "qnn_conv2d_alter_layout"], [36, 4, 1, "", "qnn_dense_alter_layout"], [36, 4, 1, "", "qnn_requantize_alter_layout"], [36, 4, 1, "", "reduce"], [36, 4, 1, "", "relu"], [36, 4, 1, "", "rms_norm"], [36, 4, 1, "", "scale_shift_nchw"], [36, 4, 1, "", "scale_shift_nchwc"], [36, 4, 1, "", "scale_shift_nhwc"], [36, 4, 1, "", "simplify"], [36, 4, 1, "", "simulated_dequantize"], [36, 4, 1, "", "simulated_quantize"], [36, 4, 1, "", "softmax"], [36, 4, 1, "", "softmax_common"], [36, 4, 1, "", "space_to_batch_nd"], [36, 4, 1, "", "space_to_depth"], [36, 4, 1, "", "sparse_add"], [36, 4, 1, "", "sparse_conv2d"], [36, 4, 1, "", "sparse_dense"], [36, 4, 1, "", "sparse_dense_alter_layout"], [36, 4, 1, "", "sparse_dense_sp_lhs"], [36, 4, 1, "", "sparse_dense_sp_rhs"], [36, 4, 1, "", "sparse_transpose"], [36, 4, 1, "", "strided_slice"], [36, 4, 1, "", "try_get_conv2d_sparse_input"], [36, 4, 1, "", "try_get_sparse_input"], [36, 4, 1, "", "unpack_NCHWc_to_nchw"], [36, 4, 1, "", "upsampling"], [36, 4, 1, "", "upsampling3d"], [36, 4, 1, "", "winograd_transform_matrices"]], "tvm.topi.nn.Workload": [[36, 6, 1, "", "dilation_h"], [36, 6, 1, "", "dilation_w"], [36, 6, 1, "", "height"], [36, 6, 1, "", "in_dtype"], [36, 6, 1, "", "in_filter"], [36, 6, 1, "", "kernel_h"], [36, 6, 1, "", "kernel_w"], [36, 6, 1, "", "out_dtype"], [36, 6, 1, "", "out_filter"], [36, 6, 1, "", "padb"], [36, 6, 1, "", "padl"], [36, 6, 1, "", "padr"], [36, 6, 1, "", "padt"], [36, 6, 1, "", "stride_h"], [36, 6, 1, "", "stride_w"], [36, 6, 1, "", "width"]], "tvm.topi.sparse": [[36, 4, 1, "", "csrmm"], [36, 4, 1, "", "csrmv"], [36, 4, 1, "", "dense"]], "tvm.transform": [[37, 1, 1, "", "ModulePass"], [37, 1, 1, "", "Pass"], [37, 1, 1, "", "PassContext"], [37, 1, 1, "", "PassInfo"], [37, 4, 1, "", "PrintIR"], [37, 1, 1, "", "Sequential"], [37, 4, 1, "", "module_pass"]], "tvm.transform.Pass": [[37, 3, 1, "", "info"]], "tvm.transform.PassContext": [[37, 2, 1, "", "current"], [37, 2, 1, "", "get_current_trace"], [37, 2, 1, "", "get_trace_stack"], [37, 2, 1, "", "get_trace_stack_size"], [37, 2, 1, "", "get_tuning_api_database"], [37, 2, 1, "", "inc_num_evals"], [37, 2, 1, "", "list_configs"], [37, 2, 1, "", "override_instruments"], [37, 2, 1, "", "pop_trace"], [37, 2, 1, "", "push_trace"], [37, 2, 1, "", "set_num_evals"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"tensor": [0, 3, 8], "program": 0, "abstract": [0, 2], "kei": 0, "element": 0, "extra": [0, 2], "structur": 0, "tensorir": [0, 1, 2, 3], "understand": 2, "function": [2, 3, 8], "paramet": 2, "buffer": 2, "loop": [2, 5], "iter": 2, "comput": [2, 4, 9], "block": 2, "axi": 2, "properti": 2, "why": 2, "inform": 2, "sugar": [2, 3], "ax": 2, "bind": 2, "creation": 3, "creat": [3, 7], "us": 3, "tvmscript": [3, 7], "standard": 3, "format": 3, "concis": 3, "syntact": 3, "interact": 3, "python": 3, "variabl": 3, "dynam": 3, "shape": 3, "express": 3, "static": 3, "time": [4, 9], "transform": [5, 7, 8, 22, 35, 37], "initi": 5, "schedul": [5, 32], "tile": 5, "leverag": 5, "local": 5, "rewrit": 5, "reduct": 5, "trace": 5, "instal": 6, "apach": [6, 8, 10], "tvm": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "uniti": [6, 8, 10], "tabl": [6, 7], "content": [6, 7], "option": 6, "1": 6, "prebuilt": 6, "packag": 6, "2": 6, "build": 6, "from": [6, 7], "sourc": 6, "step": 6, "depend": 6, "get": [6, 10], "github": 6, "3": 6, "configur": 6, "4": 6, "valid": 6, "irmodul": 7, "import": [7, 8], "exist": 7, "model": [7, 8], "write": 7, "relax": [7, 13, 17, 18, 19, 20, 21, 22], "nn": [7, 19, 20, 36], "modul": 7, "via": 7, "attribut": 7, "an": 7, "deploi": 7, "univers": 7, "cpu": 7, "gpu": 7, "other": 7, "backend": 7, "quick": 8, "start": [8, 10], "prepar": 8, "neural": 8, "network": 8, "The": 8, "appli": 8, "optim": 8, "compil": 8, "run": 8, "document": 10, "deep": 10, "dive": 10, "refer": [10, 13], "dlight": [11, 13], "error": 12, "api": 13, "runtim": [13, 24, 25, 26, 27, 28], "te": [13, 30], "tir": [13, 31, 32, 33, 34, 35], "meta_schedul": [13, 16], "misc": 13, "instrument": 14, "ir": 15, "analysi": [17, 31], "block_build": 18, "frontend": 19, "onnx": 19, "stablehlo": 19, "torch": 19, "op": 20, "builtin": 20, "ccl": 20, "distribut": 20, "grad": 20, "imag": [20, 36], "memori": 20, "op_attr": 20, "rpc": 23, "disco": 24, "ndarrai": 25, "profil": 26, "relax_vm": 27, "target": 29, "stmt_functor": 33, "topi": 36, "spars": 36, "public": 38}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Tensor Program Abstraction": [[0, "tensor-program-abstraction"]], "Key Elements of Tensor Programs": [[0, "key-elements-of-tensor-programs"]], "Extra Structure in TensorIR": [[0, "extra-structure-in-tensorir"]], "TensorIR": [[1, "tensorir"]], "Understand TensorIR Abstraction": [[2, "understand-tensorir-abstraction"]], "Function Parameters and Buffers": [[2, "function-parameters-and-buffers"]], "Loop Iterations": [[2, "loop-iterations"]], "Computational Block": [[2, "computational-block"]], "Block Axis Properties": [[2, "block-axis-properties"]], "Why Extra Information in Block": [[2, "why-extra-information-in-block"]], "Sugars for Block Axes Binding": [[2, "sugars-for-block-axes-binding"]], "TensorIR Creation": [[3, "tensorir-creation"]], "Create TensorIR using TVMScript": [[3, "create-tensorir-using-tvmscript"]], "Standard Format": [[3, "standard-format"]], "Concise with Syntactic Sugar": [[3, "concise-with-syntactic-sugar"]], "Interactive with Python Variables": [[3, "interactive-with-python-variables"]], "TensorIR Function with Dynamic Shapes": [[3, "tensorir-function-with-dynamic-shapes"]], "Create TensorIR using Tensor Expression": [[3, "create-tensorir-using-tensor-expression"]], "Create Static-Shape Functions": [[3, "create-static-shape-functions"]], "Create Dynamic-Shape Functions": [[3, "create-dynamic-shape-functions"]], "Computation times": [[4, "computation-times"], [9, "computation-times"]], "Transformation": [[5, "transformation"]], "Initialization Schedule": [[5, "initialization-schedule"]], "Loop Tiling": [[5, "loop-tiling"]], "Leverage Localities": [[5, "leverage-localities"]], "Rewrite Reduction": [[5, "rewrite-reduction"]], "Trace the Transformation": [[5, "trace-the-transformation"]], "Installing Apache TVM Unity": [[6, "installing-apache-tvm-unity"]], "Table of Contents": [[6, "table-of-contents"], [7, "table-of-contents"]], "Option 1. Prebuilt Package": [[6, "option-1-prebuilt-package"]], "Option 2. Build from Source": [[6, "option-2-build-from-source"]], "Step 1. Install Dependencies": [[6, "step-1-install-dependencies"]], "Step 2. Get Source from Github": [[6, "step-2-get-source-from-github"]], "Step 3. Configure and Build": [[6, "step-3-configure-and-build"]], "Step 4. Validate Installation": [[6, "step-4-validate-installation"]], "IRModule": [[7, "irmodule"]], "Create IRModule": [[7, "create-irmodule"]], "Import from existing models": [[7, "import-from-existing-models"]], "Write with Relax NN Module": [[7, "write-with-relax-nn-module"]], "Create via TVMScript": [[7, "create-via-tvmscript"]], "Attributes of an IRModule": [[7, "attributes-of-an-irmodule"]], "Transformations on IRModules": [[7, "transformations-on-irmodules"]], "Deploy the IRModule Universally": [[7, "deploy-the-irmodule-universally"]], "Deploy on CPU": [[7, "deploy-on-cpu"]], "Deploy on GPU": [[7, "deploy-on-gpu"]], "Deploy on Other Backends": [[7, "deploy-on-other-backends"]], "Quick Start": [[8, "quick-start"]], "Prepare the Neural Network Model": [[8, "prepare-the-neural-network-model"]], "Import Model into Apache TVM Unity": [[8, "import-model-into-apache-tvm-unity"]], "Transform The Model": [[8, "transform-the-model"]], "Apply Optimization Transforms": [[8, "apply-optimization-transforms"]], "Tensor Function Optimization": [[8, "tensor-function-optimization"]], "Compile and Run": [[8, "compile-and-run"]], "\ud83d\udea7 Apache TVM Unity Documentation": [[10, "apache-tvm-unity-documentation"]], "Get Started": [[10, null]], "Deep Dive": [[10, null]], "References": [[10, null]], "tvm.dlight": [[11, "module-tvm.dlight"], [13, null]], "tvm.error": [[12, "module-tvm.error"]], "API Reference": [[13, "api-reference"]], "tvm": [[13, null]], "tvm.runtime": [[13, null], [28, "module-tvm.runtime"]], "tvm.te": [[13, null], [30, "tvm-te"]], "tvm.tir": [[13, null], [34, "module-tvm.tir"]], "tvm.meta_schedule": [[13, null], [16, "module-tvm.meta_schedule"]], "tvm.relax": [[13, null], [21, "module-tvm.relax"]], "Misc": [[13, null]], "tvm.instrument": [[14, "module-tvm.instrument"]], "tvm.ir": [[15, "module-tvm.ir"]], "tvm.relax.analysis": [[17, "module-tvm.relax.analysis"]], "tvm.relax.block_builder": [[18, "module-tvm.relax.block_builder"]], "tvm.relax.frontend": [[19, "module-tvm.relax.frontend"]], "tvm.relax.frontend.nn": [[19, "tvm-relax-frontend-nn"]], "tvm.relax.frontend.onnx": [[19, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[19, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[19, "module-tvm.relax.frontend.torch"]], "tvm.relax.op": [[20, "tvm-relax-op"], [20, "id1"]], "tvm.relax.op.nn": [[20, "module-tvm.relax.op.nn"]], "tvm.relax.op.builtin": [[20, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[20, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[20, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[20, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[20, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[20, "module-tvm.relax.op.memory"]], "tvm.relax.op.op_attrs": [[20, "module-tvm.relax.op.op_attrs"]], "tvm.relax.transform": [[22, "module-tvm.relax.transform"]], "tvm.rpc": [[23, "module-tvm.rpc"]], "tvm.runtime.disco": [[24, "module-tvm.runtime.disco"]], "tvm.runtime.ndarray": [[25, "module-tvm.runtime.ndarray"]], "tvm.runtime.profiling": [[26, "module-tvm.runtime.profiling"]], "tvm.runtime.relax_vm": [[27, "module-tvm.runtime.relax_vm"]], "tvm.target": [[29, "module-tvm.target"]], "tvm.tir.analysis": [[31, "module-tvm.tir.analysis.analysis"]], "tvm.tir.schedule": [[32, "module-tvm.tir.schedule"]], "tvm.tir.stmt_functor": [[33, "module-tvm.tir.stmt_functor"]], "tvm.tir.transform": [[35, "module-tvm.tir.transform"]], "tvm.topi": [[36, "tvm-topi"], [36, "id1"]], "tvm.topi.nn": [[36, "module-tvm.topi.nn"]], "tvm.topi.image": [[36, "module-tvm.topi.image"]], "tvm.topi.sparse": [[36, "module-tvm.topi.sparse"]], "tvm.transform": [[37, "module-tvm.transform"]], "Publications": [[38, "publications"]]}, "indexentries": {"applydefaultschedule (class in tvm.dlight)": [[11, "tvm.dlight.ApplyDefaultSchedule"]], "blockinfo (class in tvm.dlight)": [[11, "tvm.dlight.BlockInfo"]], "iterinfo (class in tvm.dlight)": [[11, "tvm.dlight.IterInfo"]], "schedulerule (class in tvm.dlight)": [[11, "tvm.dlight.ScheduleRule"]], "apply() (tvm.dlight.schedulerule method)": [[11, "tvm.dlight.ScheduleRule.apply"]], "dom (tvm.dlight.iterinfo property)": [[11, "tvm.dlight.IterInfo.dom"]], "dom() (tvm.dlight.blockinfo method)": [[11, "tvm.dlight.BlockInfo.dom"]], "dom_kind() (tvm.dlight.blockinfo method)": [[11, "tvm.dlight.BlockInfo.dom_kind"]], "from_callable() (tvm.dlight.schedulerule static method)": [[11, "tvm.dlight.ScheduleRule.from_callable"]], "is_elementwise() (tvm.dlight.blockinfo method)": [[11, "tvm.dlight.BlockInfo.is_elementwise"]], "is_gemm() (tvm.dlight.blockinfo method)": [[11, "tvm.dlight.BlockInfo.is_gemm"]], "is_gemv() (tvm.dlight.blockinfo method)": [[11, "tvm.dlight.BlockInfo.is_gemv"]], "is_injective() (tvm.dlight.blockinfo method)": [[11, "tvm.dlight.BlockInfo.is_injective"]], "is_reduction() (tvm.dlight.blockinfo method)": [[11, "tvm.dlight.BlockInfo.is_reduction"]], "module": [[11, "module-tvm.dlight"], [12, "module-tvm.error"], [14, "module-tvm.instrument"], [15, "module-tvm.ir"], [16, "module-tvm.meta_schedule"], [17, "module-tvm.relax.analysis"], [18, "module-tvm.relax.block_builder"], [19, "module-tvm.relax.frontend"], [19, "module-tvm.relax.frontend.onnx"], [19, "module-tvm.relax.frontend.stablehlo"], [19, "module-tvm.relax.frontend.torch"], [20, "module-tvm.relax.op"], [20, "module-tvm.relax.op.builtin"], [20, "module-tvm.relax.op.ccl"], [20, "module-tvm.relax.op.distributed"], [20, "module-tvm.relax.op.grad"], [20, "module-tvm.relax.op.image"], [20, "module-tvm.relax.op.memory"], [20, "module-tvm.relax.op.nn"], [20, "module-tvm.relax.op.op_attrs"], [21, "module-tvm.relax"], [22, "module-tvm.relax.transform"], [23, "module-tvm.rpc"], [24, "module-tvm.runtime.disco"], [25, "module-tvm.runtime.ndarray"], [26, "module-tvm.runtime.profiling"], [27, "module-tvm.runtime.relax_vm"], [28, "module-tvm.runtime"], [29, "module-tvm.target"], [30, "module-tvm.te"], [31, "module-tvm.tir.analysis.analysis"], [32, "module-tvm.tir.schedule"], [33, "module-tvm.tir.stmt_functor"], [34, "module-tvm.tir"], [35, "module-tvm.tir.transform"], [36, "module-tvm.topi"], [36, "module-tvm.topi.image"], [36, "module-tvm.topi.nn"], [36, "module-tvm.topi.sparse"], [37, "module-tvm.transform"]], "normalize_prim_func() (in module tvm.dlight)": [[11, "tvm.dlight.normalize_prim_func"]], "try_inline() (in module tvm.dlight)": [[11, "tvm.dlight.try_inline"]], "try_inline_contiguous_spatial() (in module tvm.dlight)": [[11, "tvm.dlight.try_inline_contiguous_spatial"]], "tvm.dlight": [[11, "module-tvm.dlight"]], "diagnosticerror": [[12, "tvm.error.DiagnosticError"]], "internalerror": [[12, "tvm.error.InternalError"]], "opattributeinvalid": [[12, "tvm.error.OpAttributeInvalid"]], "opattributerequired": [[12, "tvm.error.OpAttributeRequired"]], "opattributeunimplemented": [[12, "tvm.error.OpAttributeUnImplemented"]], "operror": [[12, "tvm.error.OpError"]], "opnotimplemented": [[12, "tvm.error.OpNotImplemented"]], "rpcerror": [[12, "tvm.error.RPCError"]], "rpcsessiontimeouterror": [[12, "tvm.error.RPCSessionTimeoutError"]], "tvmerror": [[12, "tvm.error.TVMError"]], "register_error() (in module tvm.error)": [[12, "tvm.error.register_error"]], "tvm.error": [[12, "module-tvm.error"]], "passinstrument (class in tvm.instrument)": [[14, "tvm.instrument.PassInstrument"]], "passtiminginstrument (class in tvm.instrument)": [[14, "tvm.instrument.PassTimingInstrument"]], "enter_pass_ctx() (tvm.instrument.passinstrument method)": [[14, "tvm.instrument.PassInstrument.enter_pass_ctx"]], "exit_pass_ctx() (tvm.instrument.passinstrument method)": [[14, "tvm.instrument.PassInstrument.exit_pass_ctx"]], "pass_instrument() (in module tvm.instrument)": [[14, "tvm.instrument.pass_instrument"]], "render() (tvm.instrument.passtiminginstrument static method)": [[14, "tvm.instrument.PassTimingInstrument.render"]], "run_after_pass() (tvm.instrument.passinstrument method)": [[14, "tvm.instrument.PassInstrument.run_after_pass"]], "run_before_pass() (tvm.instrument.passinstrument method)": [[14, "tvm.instrument.PassInstrument.run_before_pass"]], "should_run() (tvm.instrument.passinstrument method)": [[14, "tvm.instrument.PassInstrument.should_run"]], "tvm.instrument": [[14, "module-tvm.instrument"]], "array (class in tvm.ir)": [[15, "tvm.ir.Array"]], "attrs (class in tvm.ir)": [[15, "tvm.ir.Attrs"]], "baseexpr (class in tvm.ir)": [[15, "tvm.ir.BaseExpr"]], "basefunc (class in tvm.ir)": [[15, "tvm.ir.BaseFunc"]], "callingconv (class in tvm.ir)": [[15, "tvm.ir.CallingConv"]], "constantmemorypools (class in tvm.ir)": [[15, "tvm.ir.ConstantMemoryPools"]], "constantpoolinfo (class in tvm.ir)": [[15, "tvm.ir.ConstantPoolInfo"]], "constructor (class in tvm.ir)": [[15, "tvm.ir.Constructor"]], "dictattrs (class in tvm.ir)": [[15, "tvm.ir.DictAttrs"]], "dummyglobalinfo (class in tvm.ir)": [[15, "tvm.ir.DummyGlobalInfo"]], "envfunc (class in tvm.ir)": [[15, "tvm.ir.EnvFunc"]], "functype (class in tvm.ir)": [[15, "tvm.ir.FuncType"]], "globalinfo (class in tvm.ir)": [[15, "tvm.ir.GlobalInfo"]], "globaltypevar (class in tvm.ir)": [[15, "tvm.ir.GlobalTypeVar"]], "globalvar (class in tvm.ir)": [[15, "tvm.ir.GlobalVar"]], "irmodule (class in tvm.ir)": [[15, "tvm.ir.IRModule"]], "incompletetype (class in tvm.ir)": [[15, "tvm.ir.IncompleteType"]], "map (class in tvm.ir)": [[15, "tvm.ir.Map"]], "node (class in tvm.ir)": [[15, "tvm.ir.Node"]], "op (class in tvm.ir)": [[15, "tvm.ir.Op"]], "pointertype (class in tvm.ir)": [[15, "tvm.ir.PointerType"]], "poolinfo (class in tvm.ir)": [[15, "tvm.ir.PoolInfo"]], "poolinfoproperties (class in tvm.ir)": [[15, "tvm.ir.PoolInfoProperties"]], "primexpr (class in tvm.ir)": [[15, "tvm.ir.PrimExpr"]], "primtype (class in tvm.ir)": [[15, "tvm.ir.PrimType"]], "range (class in tvm.ir)": [[15, "tvm.ir.Range"]], "relayexpr (class in tvm.ir)": [[15, "tvm.ir.RelayExpr"]], "relayreftype (class in tvm.ir)": [[15, "tvm.ir.RelayRefType"]], "sequentialspan (class in tvm.ir)": [[15, "tvm.ir.SequentialSpan"]], "sourcename (class in tvm.ir)": [[15, "tvm.ir.SourceName"]], "span (class in tvm.ir)": [[15, "tvm.ir.Span"]], "tensoraffinetype (class in tvm.ir)": [[15, "tvm.ir.TensorAffineType"]], "tensortype (class in tvm.ir)": [[15, "tvm.ir.TensorType"]], "tupleaffinetype (class in tvm.ir)": [[15, "tvm.ir.TupleAffineType"]], "tupletype (class in tvm.ir)": [[15, "tvm.ir.TupleType"]], "type (class in tvm.ir)": [[15, "tvm.ir.Type"]], "typecall (class in tvm.ir)": [[15, "tvm.ir.TypeCall"]], "typeconstraint (class in tvm.ir)": [[15, "tvm.ir.TypeConstraint"]], "typedata (class in tvm.ir)": [[15, "tvm.ir.TypeData"]], "typekind (class in tvm.ir)": [[15, "tvm.ir.TypeKind"]], "typerelation (class in tvm.ir)": [[15, "tvm.ir.TypeRelation"]], "typevar (class in tvm.ir)": [[15, "tvm.ir.TypeVar"]], "vdevice (class in tvm.ir)": [[15, "tvm.ir.VDevice"]], "workspacememorypools (class in tvm.ir)": [[15, "tvm.ir.WorkspaceMemoryPools"]], "workspacepoolinfo (class in tvm.ir)": [[15, "tvm.ir.WorkspacePoolInfo"]], "add_argument() (tvm.ir.op method)": [[15, "tvm.ir.Op.add_argument"]], "add_type_rel() (tvm.ir.op method)": [[15, "tvm.ir.Op.add_type_rel"]], "assert_structural_equal() (in module tvm.ir)": [[15, "tvm.ir.assert_structural_equal"]], "astext() (tvm.ir.globalvar method)": [[15, "tvm.ir.GlobalVar.astext"]], "astext() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.astext"]], "astext() (tvm.ir.op method)": [[15, "tvm.ir.Op.astext"]], "attrs (tvm.ir.basefunc property)": [[15, "tvm.ir.BaseFunc.attrs"]], "checked_type (tvm.ir.relayexpr property)": [[15, "tvm.ir.RelayExpr.checked_type"]], "concrete_shape (tvm.ir.tensortype property)": [[15, "tvm.ir.TensorType.concrete_shape"]], "from_expr() (tvm.ir.irmodule static method)": [[15, "tvm.ir.IRModule.from_expr"]], "from_min_extent() (tvm.ir.range static method)": [[15, "tvm.ir.Range.from_min_extent"]], "get() (tvm.ir.envfunc static method)": [[15, "tvm.ir.EnvFunc.get"]], "get() (tvm.ir.map method)": [[15, "tvm.ir.Map.get"]], "get() (tvm.ir.op static method)": [[15, "tvm.ir.Op.get"]], "get_attr() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.get_attr"]], "get_attr() (tvm.ir.op method)": [[15, "tvm.ir.Op.get_attr"]], "get_constructor() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.get_constructor"]], "get_global_type_var() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.get_global_type_var"]], "get_global_type_vars() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.get_global_type_vars"]], "get_global_var() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.get_global_var"]], "get_global_vars() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.get_global_vars"]], "get_int() (tvm.ir.attrs method)": [[15, "tvm.ir.Attrs.get_int"]], "get_int_tuple() (tvm.ir.attrs method)": [[15, "tvm.ir.Attrs.get_int_tuple"]], "get_str() (tvm.ir.attrs method)": [[15, "tvm.ir.Attrs.get_str"]], "has_attr() (tvm.ir.op method)": [[15, "tvm.ir.Op.has_attr"]], "items() (tvm.ir.dictattrs method)": [[15, "tvm.ir.DictAttrs.items"]], "items() (tvm.ir.map method)": [[15, "tvm.ir.Map.items"]], "keys() (tvm.ir.attrs method)": [[15, "tvm.ir.Attrs.keys"]], "keys() (tvm.ir.dictattrs method)": [[15, "tvm.ir.DictAttrs.keys"]], "list_field_info() (tvm.ir.attrs method)": [[15, "tvm.ir.Attrs.list_field_info"]], "list_op_names() (tvm.ir.op static method)": [[15, "tvm.ir.Op.list_op_names"]], "load_json() (in module tvm.ir)": [[15, "tvm.ir.load_json"]], "make_node() (in module tvm.ir)": [[15, "tvm.ir.make_node"]], "register_intrin_lowering() (in module tvm.ir)": [[15, "tvm.ir.register_intrin_lowering"]], "register_op_attr() (in module tvm.ir)": [[15, "tvm.ir.register_op_attr"]], "reset_attr() (tvm.ir.op method)": [[15, "tvm.ir.Op.reset_attr"]], "same_as() (tvm.ir.globalinfo method)": [[15, "tvm.ir.GlobalInfo.same_as"]], "same_as() (tvm.ir.type method)": [[15, "tvm.ir.Type.same_as"]], "save_json() (in module tvm.ir)": [[15, "tvm.ir.save_json"]], "set_attr() (tvm.ir.op method)": [[15, "tvm.ir.Op.set_attr"]], "set_attrs_type_key() (tvm.ir.op method)": [[15, "tvm.ir.Op.set_attrs_type_key"]], "set_num_inputs() (tvm.ir.op method)": [[15, "tvm.ir.Op.set_num_inputs"]], "set_support_level() (tvm.ir.op method)": [[15, "tvm.ir.Op.set_support_level"]], "struct_info (tvm.ir.relayexpr property)": [[15, "tvm.ir.RelayExpr.struct_info"]], "structural_equal() (in module tvm.ir)": [[15, "tvm.ir.structural_equal"]], "structural_hash() (in module tvm.ir)": [[15, "tvm.ir.structural_hash"]], "tvm.ir": [[15, "module-tvm.ir"]], "update() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.update"]], "update_func() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.update_func"]], "update_global_info() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.update_global_info"]], "with_attr() (tvm.ir.basefunc method)": [[15, "tvm.ir.BaseFunc.with_attr"]], "with_attr() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.with_attr"]], "with_attrs() (tvm.ir.basefunc method)": [[15, "tvm.ir.BaseFunc.with_attrs"]], "with_attrs() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.with_attrs"]], "without_attr() (tvm.ir.basefunc method)": [[15, "tvm.ir.BaseFunc.without_attr"]], "without_attr() (tvm.ir.irmodule method)": [[15, "tvm.ir.IRModule.without_attr"]], "builder (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.Builder"]], "costmodel (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.CostModel"]], "database (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.Database"]], "extractedtask (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.ExtractedTask"]], "featureextractor (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.FeatureExtractor"]], "measurecallback (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.MeasureCallback"]], "measurecandidate (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.MeasureCandidate"]], "mutator (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.Mutator"]], "postproc (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.Postproc"]], "profiler (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.Profiler"]], "runner (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.Runner"]], "schedulerule (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.ScheduleRule"]], "searchstrategy (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.SearchStrategy"]], "spacegenerator (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.SpaceGenerator"]], "taskscheduler (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.TaskScheduler"]], "tunecontext (class in tvm.meta_schedule)": [[16, "tvm.meta_schedule.TuneContext"]], "apply() (tvm.meta_schedule.measurecallback method)": [[16, "tvm.meta_schedule.MeasureCallback.apply"]], "apply() (tvm.meta_schedule.mutator method)": [[16, "tvm.meta_schedule.Mutator.apply"]], "apply() (tvm.meta_schedule.postproc method)": [[16, "tvm.meta_schedule.Postproc.apply"]], "apply() (tvm.meta_schedule.schedulerule method)": [[16, "tvm.meta_schedule.ScheduleRule.apply"]], "build() (tvm.meta_schedule.builder method)": [[16, "tvm.meta_schedule.Builder.build"]], "clone() (tvm.meta_schedule.mutator method)": [[16, "tvm.meta_schedule.Mutator.clone"]], "clone() (tvm.meta_schedule.postproc method)": [[16, "tvm.meta_schedule.Postproc.clone"]], "clone() (tvm.meta_schedule.schedulerule method)": [[16, "tvm.meta_schedule.ScheduleRule.clone"]], "clone() (tvm.meta_schedule.searchstrategy method)": [[16, "tvm.meta_schedule.SearchStrategy.clone"]], "clone() (tvm.meta_schedule.spacegenerator method)": [[16, "tvm.meta_schedule.SpaceGenerator.clone"]], "clone() (tvm.meta_schedule.tunecontext method)": [[16, "tvm.meta_schedule.TuneContext.clone"]], "commit_tuning_record() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.commit_tuning_record"]], "commit_workload() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.commit_workload"]], "create() (tvm.meta_schedule.builder static method)": [[16, "tvm.meta_schedule.Builder.create"]], "create() (tvm.meta_schedule.costmodel static method)": [[16, "tvm.meta_schedule.CostModel.create"]], "create() (tvm.meta_schedule.database static method)": [[16, "tvm.meta_schedule.Database.create"]], "create() (tvm.meta_schedule.featureextractor static method)": [[16, "tvm.meta_schedule.FeatureExtractor.create"]], "create() (tvm.meta_schedule.measurecallback static method)": [[16, "tvm.meta_schedule.MeasureCallback.create"]], "create() (tvm.meta_schedule.mutator static method)": [[16, "tvm.meta_schedule.Mutator.create"]], "create() (tvm.meta_schedule.postproc static method)": [[16, "tvm.meta_schedule.Postproc.create"]], "create() (tvm.meta_schedule.runner static method)": [[16, "tvm.meta_schedule.Runner.create"]], "create() (tvm.meta_schedule.schedulerule static method)": [[16, "tvm.meta_schedule.ScheduleRule.create"]], "create() (tvm.meta_schedule.searchstrategy static method)": [[16, "tvm.meta_schedule.SearchStrategy.create"]], "create() (tvm.meta_schedule.spacegenerator static method)": [[16, "tvm.meta_schedule.SpaceGenerator.create"]], "create() (tvm.meta_schedule.taskscheduler static method)": [[16, "tvm.meta_schedule.TaskScheduler.create"]], "current() (tvm.meta_schedule.database static method)": [[16, "tvm.meta_schedule.Database.current"]], "current() (tvm.meta_schedule.profiler static method)": [[16, "tvm.meta_schedule.Profiler.current"]], "derived_object() (in module tvm.meta_schedule)": [[16, "tvm.meta_schedule.derived_object"]], "dump_pruned() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.dump_pruned"]], "extract_from() (tvm.meta_schedule.featureextractor method)": [[16, "tvm.meta_schedule.FeatureExtractor.extract_from"]], "generate_design_space() (tvm.meta_schedule.spacegenerator method)": [[16, "tvm.meta_schedule.SpaceGenerator.generate_design_space"]], "generate_design_space() (tvm.meta_schedule.tunecontext method)": [[16, "tvm.meta_schedule.TuneContext.generate_design_space"]], "generate_measure_candidates() (tvm.meta_schedule.searchstrategy method)": [[16, "tvm.meta_schedule.SearchStrategy.generate_measure_candidates"]], "generate_measure_candidates() (tvm.meta_schedule.tunecontext method)": [[16, "tvm.meta_schedule.TuneContext.generate_measure_candidates"]], "get() (tvm.meta_schedule.profiler method)": [[16, "tvm.meta_schedule.Profiler.get"]], "get_all_tuning_records() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.get_all_tuning_records"]], "get_top_k() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.get_top_k"]], "has_workload() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.has_workload"]], "is_meta_schedule_enabled() (in module tvm.meta_schedule)": [[16, "tvm.meta_schedule.is_meta_schedule_enabled"]], "join_running_task() (tvm.meta_schedule.taskscheduler method)": [[16, "tvm.meta_schedule.TaskScheduler.join_running_task"]], "load() (tvm.meta_schedule.costmodel method)": [[16, "tvm.meta_schedule.CostModel.load"]], "next_task_id() (tvm.meta_schedule.taskscheduler method)": [[16, "tvm.meta_schedule.TaskScheduler.next_task_id"]], "notify_runner_results() (tvm.meta_schedule.searchstrategy method)": [[16, "tvm.meta_schedule.SearchStrategy.notify_runner_results"]], "notify_runner_results() (tvm.meta_schedule.tunecontext method)": [[16, "tvm.meta_schedule.TuneContext.notify_runner_results"]], "post_tuning() (tvm.meta_schedule.searchstrategy method)": [[16, "tvm.meta_schedule.SearchStrategy.post_tuning"]], "post_tuning() (tvm.meta_schedule.tunecontext method)": [[16, "tvm.meta_schedule.TuneContext.post_tuning"]], "pre_tuning() (tvm.meta_schedule.searchstrategy method)": [[16, "tvm.meta_schedule.SearchStrategy.pre_tuning"]], "pre_tuning() (tvm.meta_schedule.tunecontext method)": [[16, "tvm.meta_schedule.TuneContext.pre_tuning"]], "predict() (tvm.meta_schedule.costmodel method)": [[16, "tvm.meta_schedule.CostModel.predict"]], "print_tuning_statistics() (tvm.meta_schedule.taskscheduler method)": [[16, "tvm.meta_schedule.TaskScheduler.print_tuning_statistics"]], "query() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.query"]], "query_ir_module() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.query_ir_module"]], "query_schedule() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.query_schedule"]], "query_tuning_record() (tvm.meta_schedule.database method)": [[16, "tvm.meta_schedule.Database.query_tuning_record"]], "run() (tvm.meta_schedule.runner method)": [[16, "tvm.meta_schedule.Runner.run"]], "save() (tvm.meta_schedule.costmodel method)": [[16, "tvm.meta_schedule.CostModel.save"]], "table() (tvm.meta_schedule.profiler method)": [[16, "tvm.meta_schedule.Profiler.table"]], "terminate_task() (tvm.meta_schedule.taskscheduler method)": [[16, "tvm.meta_schedule.TaskScheduler.terminate_task"]], "timeit() (tvm.meta_schedule.profiler static method)": [[16, "tvm.meta_schedule.Profiler.timeit"]], "touch_task() (tvm.meta_schedule.taskscheduler method)": [[16, "tvm.meta_schedule.TaskScheduler.touch_task"]], "tune() (tvm.meta_schedule.taskscheduler method)": [[16, "tvm.meta_schedule.TaskScheduler.tune"]], "tune_tasks() (in module tvm.meta_schedule)": [[16, "tvm.meta_schedule.tune_tasks"]], "tune_tir() (in module tvm.meta_schedule)": [[16, "tvm.meta_schedule.tune_tir"]], "tvm.meta_schedule": [[16, "module-tvm.meta_schedule"]], "update() (tvm.meta_schedule.costmodel method)": [[16, "tvm.meta_schedule.CostModel.update"]], "basecheckresult (class in tvm.relax.analysis)": [[17, "tvm.relax.analysis.BaseCheckResult"]], "all_global_vars() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.all_global_vars"]], "all_vars() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.all_vars"]], "bound_vars() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.bound_vars"]], "contains_impure_call() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.contains_impure_call"]], "defined_symbolic_vars() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.defined_symbolic_vars"]], "derive_call_ret_struct_info() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.derive_call_ret_struct_info"]], "detect_recursion() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.detect_recursion"]], "erase_to_well_defined() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.erase_to_well_defined"]], "estimate_memory_usage() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.estimate_memory_usage"]], "free_symbolic_vars() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.free_symbolic_vars"]], "free_vars() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.free_vars"]], "get_static_type() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.get_static_type"]], "get_var2val() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.get_var2val"]], "has_reshape_pattern() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.has_reshape_pattern"]], "name_to_binding() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.name_to_binding"]], "post_order_visit() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.post_order_visit"]], "remove_all_unused() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.remove_all_unused"]], "struct_info_base_check() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.struct_info_base_check"]], "struct_info_lca() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.struct_info_lca"]], "suggest_layout_transforms() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.suggest_layout_transforms"]], "tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.tir_vars_in_struct_info"]], "tvm.relax.analysis": [[17, "module-tvm.relax.analysis"]], "udchain() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.udchain"]], "well_formed() (in module tvm.relax.analysis)": [[17, "tvm.relax.analysis.well_formed"]], "blockbuilder (class in tvm.relax.block_builder)": [[18, "tvm.relax.block_builder.BlockBuilder"]], "dataflowscope (class in tvm.relax.block_builder)": [[18, "tvm.relax.block_builder.DataflowScope"]], "functionscope (class in tvm.relax.block_builder)": [[18, "tvm.relax.block_builder.FunctionScope"]], "testingscope (class in tvm.relax.block_builder)": [[18, "tvm.relax.block_builder.TestingScope"]], "add_func() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.add_func"]], "begin_scope() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.begin_scope"]], "call_te() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.call_te"]], "call_te_with_grad() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.call_te_with_grad"]], "current() (tvm.relax.block_builder.blockbuilder static method)": [[18, "tvm.relax.block_builder.BlockBuilder.current"]], "current_block_is_dataflow() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.current_block_is_dataflow"]], "dataflow() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.dataflow"]], "emit() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.emit"]], "emit_func_output() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.emit_func_output"]], "emit_normalized() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.emit_normalized"]], "emit_output() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.emit_output"]], "emit_te() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.emit_te"]], "end_scope() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.end_scope"]], "function() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.function"]], "get() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.get"]], "get_unique_name() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.get_unique_name"]], "lookup_binding() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.lookup_binding"]], "match_cast() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.match_cast"]], "normalize() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.normalize"]], "testing_scope() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.testing_scope"]], "tvm.relax.block_builder": [[18, "module-tvm.relax.block_builder"]], "update_func() (tvm.relax.block_builder.blockbuilder method)": [[18, "tvm.relax.block_builder.BlockBuilder.update_func"]], "detach_params() (in module tvm.relax.frontend)": [[19, "tvm.relax.frontend.detach_params"]], "dynamo_capture_subgraphs() (in module tvm.relax.frontend.torch)": [[19, "tvm.relax.frontend.torch.dynamo_capture_subgraphs"]], "from_fx() (in module tvm.relax.frontend.torch)": [[19, "tvm.relax.frontend.torch.from_fx"]], "from_onnx() (in module tvm.relax.frontend.onnx)": [[19, "tvm.relax.frontend.onnx.from_onnx"]], "from_stablehlo() (in module tvm.relax.frontend.stablehlo)": [[19, "tvm.relax.frontend.stablehlo.from_stablehlo"]], "relax_dynamo() (in module tvm.relax.frontend.torch)": [[19, "tvm.relax.frontend.torch.relax_dynamo"]], "tvm.relax.frontend": [[19, "module-tvm.relax.frontend"]], "tvm.relax.frontend.onnx": [[19, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[19, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[19, "module-tvm.relax.frontend.torch"]], "adaptivepool2dattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.AdaptivePool2DAttrs"]], "argmaxargminattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.ArgmaxArgminAttrs"]], "astypeattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.AstypeAttrs"]], "batchnormattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.BatchNormAttrs"]], "calltirwithgradattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.CallTIRWithGradAttrs"]], "concatattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.ConcatAttrs"]], "conv2dattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.Conv2DAttrs"]], "conv2dtransposeattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.Conv2DTransposeAttrs"]], "cumsumattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.CumsumAttrs"]], "dropoutattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.DropoutAttrs"]], "einsumattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.EinsumAttrs"]], "expanddimsattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.ExpandDimsAttrs"]], "expr (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.Expr"]], "flipattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.FlipAttrs"]], "initattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.InitAttrs"]], "layernormattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.LayerNormAttrs"]], "layouttransformattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.LayoutTransformAttrs"]], "matmulattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.MatmulAttrs"]], "permutedimsattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.PermuteDimsAttrs"]], "pool2dattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.Pool2DAttrs"]], "repeatattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.RepeatAttrs"]], "resize2dattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.Resize2DAttrs"]], "softmaxattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.SoftmaxAttrs"]], "splitattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.SplitAttrs"]], "squeezeattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.SqueezeAttrs"]], "statisticalattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.StatisticalAttrs"]], "stridedsliceattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.StridedSliceAttrs"]], "takeattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.TakeAttrs"]], "tileattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.TileAttrs"]], "triluattrs (class in tvm.relax.op.op_attrs)": [[20, "tvm.relax.op.op_attrs.TriluAttrs"]], "abs() (in module tvm.relax.op)": [[20, "tvm.relax.op.abs"]], "acos() (in module tvm.relax.op)": [[20, "tvm.relax.op.acos"]], "acosh() (in module tvm.relax.op)": [[20, "tvm.relax.op.acosh"]], "adaptive_avg_pool2d() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.adaptive_avg_pool2d"]], "add() (in module tvm.relax.op)": [[20, "tvm.relax.op.add"]], "allgather() (in module tvm.relax.op.ccl)": [[20, "tvm.relax.op.ccl.allgather"]], "alloc_storage() (in module tvm.relax.op.memory)": [[20, "tvm.relax.op.memory.alloc_storage"]], "alloc_tensor() (in module tvm.relax.op.builtin)": [[20, "tvm.relax.op.builtin.alloc_tensor"]], "alloc_tensor() (in module tvm.relax.op.memory)": [[20, "tvm.relax.op.memory.alloc_tensor"]], "allreduce() (in module tvm.relax.op.ccl)": [[20, "tvm.relax.op.ccl.allreduce"]], "annotate_sharding() (in module tvm.relax.op.distributed)": [[20, "tvm.relax.op.distributed.annotate_sharding"]], "arange() (in module tvm.relax.op)": [[20, "tvm.relax.op.arange"]], "argmax() (in module tvm.relax.op)": [[20, "tvm.relax.op.argmax"]], "argmin() (in module tvm.relax.op)": [[20, "tvm.relax.op.argmin"]], "asin() (in module tvm.relax.op)": [[20, "tvm.relax.op.asin"]], "asinh() (in module tvm.relax.op)": [[20, "tvm.relax.op.asinh"]], "assert_op() (in module tvm.relax.op)": [[20, "tvm.relax.op.assert_op"]], "astype() (in module tvm.relax.op)": [[20, "tvm.relax.op.astype"]], "atan() (in module tvm.relax.op)": [[20, "tvm.relax.op.atan"]], "atanh() (in module tvm.relax.op)": [[20, "tvm.relax.op.atanh"]], "attention() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.attention"]], "avg_pool2d() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.avg_pool2d"]], "avg_pool2d_backward() (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.avg_pool2d_backward"]], "batch_norm() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.batch_norm"]], "bitwise_and() (in module tvm.relax.op)": [[20, "tvm.relax.op.bitwise_and"]], "bitwise_not() (in module tvm.relax.op)": [[20, "tvm.relax.op.bitwise_not"]], "bitwise_or() (in module tvm.relax.op)": [[20, "tvm.relax.op.bitwise_or"]], "bitwise_xor() (in module tvm.relax.op)": [[20, "tvm.relax.op.bitwise_xor"]], "broadcast_from_worker0() (in module tvm.relax.op.ccl)": [[20, "tvm.relax.op.ccl.broadcast_from_worker0"]], "broadcast_to() (in module tvm.relax.op)": [[20, "tvm.relax.op.broadcast_to"]], "call_builtin_with_ctx() (in module tvm.relax.op)": [[20, "tvm.relax.op.call_builtin_with_ctx"]], "call_dps_packed() (in module tvm.relax.op)": [[20, "tvm.relax.op.call_dps_packed"]], "call_pure_packed() (in module tvm.relax.op)": [[20, "tvm.relax.op.call_pure_packed"]], "call_tir() (in module tvm.relax.op)": [[20, "tvm.relax.op.call_tir"]], "call_tir_inplace() (in module tvm.relax.op)": [[20, "tvm.relax.op.call_tir_inplace"]], "call_tir_with_grad() (in module tvm.relax.op)": [[20, "tvm.relax.op.call_tir_with_grad"]], "ceil() (in module tvm.relax.op)": [[20, "tvm.relax.op.ceil"]], "clip() (in module tvm.relax.op)": [[20, "tvm.relax.op.clip"]], "collapse_sum_like() (in module tvm.relax.op)": [[20, "tvm.relax.op.collapse_sum_like"]], "collapse_sum_to() (in module tvm.relax.op)": [[20, "tvm.relax.op.collapse_sum_to"]], "concat() (in module tvm.relax.op)": [[20, "tvm.relax.op.concat"]], "conv1d() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.conv1d"]], "conv1d_transpose() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.conv1d_transpose"]], "conv2d() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.conv2d"]], "conv2d_transpose() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.conv2d_transpose"]], "cos() (in module tvm.relax.op)": [[20, "tvm.relax.op.cos"]], "cosh() (in module tvm.relax.op)": [[20, "tvm.relax.op.cosh"]], "cross_entropy_with_logits() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.cross_entropy_with_logits"]], "cumsum() (in module tvm.relax.op)": [[20, "tvm.relax.op.cumsum"]], "dequantize() (in module tvm.relax.op)": [[20, "tvm.relax.op.dequantize"]], "divide() (in module tvm.relax.op)": [[20, "tvm.relax.op.divide"]], "dropout() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.dropout"]], "dynamic_strided_slice() (in module tvm.relax.op)": [[20, "tvm.relax.op.dynamic_strided_slice"]], "einsum() (in module tvm.relax.op)": [[20, "tvm.relax.op.einsum"]], "end_checkpoint() (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.end_checkpoint"]], "equal() (in module tvm.relax.op)": [[20, "tvm.relax.op.equal"]], "erf() (in module tvm.relax.op)": [[20, "tvm.relax.op.erf"]], "ewise_fma() (in module tvm.relax.op)": [[20, "tvm.relax.op.ewise_fma"]], "exp() (in module tvm.relax.op)": [[20, "tvm.relax.op.exp"]], "expand_dims() (in module tvm.relax.op)": [[20, "tvm.relax.op.expand_dims"]], "flatten() (in module tvm.relax.op)": [[20, "tvm.relax.op.flatten"]], "flip() (in module tvm.relax.op)": [[20, "tvm.relax.op.flip"]], "floor() (in module tvm.relax.op)": [[20, "tvm.relax.op.floor"]], "floor_divide() (in module tvm.relax.op)": [[20, "tvm.relax.op.floor_divide"]], "full() (in module tvm.relax.op)": [[20, "tvm.relax.op.full"]], "full_like() (in module tvm.relax.op)": [[20, "tvm.relax.op.full_like"]], "gelu() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.gelu"]], "gelu_tanh() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.gelu_tanh"]], "greater() (in module tvm.relax.op)": [[20, "tvm.relax.op.greater"]], "greater_equal() (in module tvm.relax.op)": [[20, "tvm.relax.op.greater_equal"]], "group_norm() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.group_norm"]], "hint_on_device() (in module tvm.relax.op)": [[20, "tvm.relax.op.hint_on_device"]], "invoke_closure() (in module tvm.relax.op)": [[20, "tvm.relax.op.invoke_closure"]], "invoke_pure_closure() (in module tvm.relax.op)": [[20, "tvm.relax.op.invoke_pure_closure"]], "isfinite() (in module tvm.relax.op)": [[20, "tvm.relax.op.isfinite"]], "isinf() (in module tvm.relax.op)": [[20, "tvm.relax.op.isinf"]], "isnan() (in module tvm.relax.op)": [[20, "tvm.relax.op.isnan"]], "kill_storage() (in module tvm.relax.op.memory)": [[20, "tvm.relax.op.memory.kill_storage"]], "kill_tensor() (in module tvm.relax.op.memory)": [[20, "tvm.relax.op.memory.kill_tensor"]], "layer_norm() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.layer_norm"]], "layout_transform() (in module tvm.relax.op)": [[20, "tvm.relax.op.layout_transform"]], "leakyrelu() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.leakyrelu"]], "less() (in module tvm.relax.op)": [[20, "tvm.relax.op.less"]], "less_equal() (in module tvm.relax.op)": [[20, "tvm.relax.op.less_equal"]], "linear() (in module tvm.relax.op)": [[20, "tvm.relax.op.linear"]], "log() (in module tvm.relax.op)": [[20, "tvm.relax.op.log"]], "log_softmax() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.log_softmax"]], "logical_and() (in module tvm.relax.op)": [[20, "tvm.relax.op.logical_and"]], "logical_not() (in module tvm.relax.op)": [[20, "tvm.relax.op.logical_not"]], "logical_or() (in module tvm.relax.op)": [[20, "tvm.relax.op.logical_or"]], "logical_xor() (in module tvm.relax.op)": [[20, "tvm.relax.op.logical_xor"]], "make_closure() (in module tvm.relax.op)": [[20, "tvm.relax.op.make_closure"]], "masked_fill() (in module tvm.relax.op)": [[20, "tvm.relax.op.masked_fill"]], "matmul() (in module tvm.relax.op)": [[20, "tvm.relax.op.matmul"]], "max() (in module tvm.relax.op)": [[20, "tvm.relax.op.max"]], "max_pool2d() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.max_pool2d"]], "max_pool2d_backward() (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.max_pool2d_backward"]], "maximum() (in module tvm.relax.op)": [[20, "tvm.relax.op.maximum"]], "mean() (in module tvm.relax.op)": [[20, "tvm.relax.op.mean"]], "min() (in module tvm.relax.op)": [[20, "tvm.relax.op.min"]], "minimum() (in module tvm.relax.op)": [[20, "tvm.relax.op.minimum"]], "multiply() (in module tvm.relax.op)": [[20, "tvm.relax.op.multiply"]], "negative() (in module tvm.relax.op)": [[20, "tvm.relax.op.negative"]], "nll_loss() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.nll_loss"]], "nll_loss_backward() (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.nll_loss_backward"]], "no_grad() (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.no_grad"]], "not_equal() (in module tvm.relax.op)": [[20, "tvm.relax.op.not_equal"]], "null_value() (in module tvm.relax.op)": [[20, "tvm.relax.op.null_value"]], "ones() (in module tvm.relax.op)": [[20, "tvm.relax.op.ones"]], "ones_like() (in module tvm.relax.op)": [[20, "tvm.relax.op.ones_like"]], "pad() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.pad"]], "permute_dims() (in module tvm.relax.op)": [[20, "tvm.relax.op.permute_dims"]], "power() (in module tvm.relax.op)": [[20, "tvm.relax.op.power"]], "print() (in module tvm.relax.op)": [[20, "tvm.relax.op.print"]], "prod() (in module tvm.relax.op)": [[20, "tvm.relax.op.prod"]], "quantize() (in module tvm.relax.op)": [[20, "tvm.relax.op.quantize"]], "redistribute() (in module tvm.relax.op.distributed)": [[20, "tvm.relax.op.distributed.redistribute"]], "register_gradient() (in module tvm.relax.op)": [[20, "tvm.relax.op.register_gradient"]], "relu() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.relu"]], "repeat() (in module tvm.relax.op)": [[20, "tvm.relax.op.repeat"]], "reshape() (in module tvm.relax.op)": [[20, "tvm.relax.op.reshape"]], "resize2d() (in module tvm.relax.op.image)": [[20, "tvm.relax.op.image.resize2d"]], "rms_norm() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.rms_norm"]], "round() (in module tvm.relax.op)": [[20, "tvm.relax.op.round"]], "rsqrt() (in module tvm.relax.op)": [[20, "tvm.relax.op.rsqrt"]], "scatter_elements() (in module tvm.relax.op)": [[20, "tvm.relax.op.scatter_elements"]], "scatter_from_worker0() (in module tvm.relax.op.ccl)": [[20, "tvm.relax.op.ccl.scatter_from_worker0"]], "shape_of() (in module tvm.relax.op)": [[20, "tvm.relax.op.shape_of"]], "shape_to_tensor() (in module tvm.relax.op)": [[20, "tvm.relax.op.shape_to_tensor"]], "sigmoid() (in module tvm.relax.op)": [[20, "tvm.relax.op.sigmoid"]], "sign() (in module tvm.relax.op)": [[20, "tvm.relax.op.sign"]], "silu() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.silu"]], "sin() (in module tvm.relax.op)": [[20, "tvm.relax.op.sin"]], "sinh() (in module tvm.relax.op)": [[20, "tvm.relax.op.sinh"]], "softmax() (in module tvm.relax.op.nn)": [[20, "tvm.relax.op.nn.softmax"]], "split() (in module tvm.relax.op)": [[20, "tvm.relax.op.split"]], "sqrt() (in module tvm.relax.op)": [[20, "tvm.relax.op.sqrt"]], "square() (in module tvm.relax.op)": [[20, "tvm.relax.op.square"]], "squeeze() (in module tvm.relax.op)": [[20, "tvm.relax.op.squeeze"]], "start_checkpoint() (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.start_checkpoint"]], "std() (in module tvm.relax.op)": [[20, "tvm.relax.op.std"]], "stop_lift_params() (in module tvm.relax.op.builtin)": [[20, "tvm.relax.op.builtin.stop_lift_params"]], "strided_slice() (in module tvm.relax.op)": [[20, "tvm.relax.op.strided_slice"]], "subtract() (in module tvm.relax.op)": [[20, "tvm.relax.op.subtract"]], "sum() (in module tvm.relax.op)": [[20, "tvm.relax.op.sum"]], "take() (in module tvm.relax.op)": [[20, "tvm.relax.op.take"]], "take_backward() (in module tvm.relax.op.grad)": [[20, "tvm.relax.op.grad.take_backward"]], "tan() (in module tvm.relax.op)": [[20, "tvm.relax.op.tan"]], "tanh() (in module tvm.relax.op)": [[20, "tvm.relax.op.tanh"]], "tensor_to_shape() (in module tvm.relax.op)": [[20, "tvm.relax.op.tensor_to_shape"]], "tile() (in module tvm.relax.op)": [[20, "tvm.relax.op.tile"]], "to_vdevice() (in module tvm.relax.op)": [[20, "tvm.relax.op.to_vdevice"]], "tril() (in module tvm.relax.op)": [[20, "tvm.relax.op.tril"]], "triu() (in module tvm.relax.op)": [[20, "tvm.relax.op.triu"]], "tvm.relax.op": [[20, "module-tvm.relax.op"]], "tvm.relax.op.builtin": [[20, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[20, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[20, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[20, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[20, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[20, "module-tvm.relax.op.memory"]], "tvm.relax.op.nn": [[20, "module-tvm.relax.op.nn"]], "tvm.relax.op.op_attrs": [[20, "module-tvm.relax.op.op_attrs"]], "unique() (in module tvm.relax.op)": [[20, "tvm.relax.op.unique"]], "variance() (in module tvm.relax.op)": [[20, "tvm.relax.op.variance"]], "where() (in module tvm.relax.op)": [[20, "tvm.relax.op.where"]], "wrap_param() (in module tvm.relax.op)": [[20, "tvm.relax.op.wrap_param"]], "zeros() (in module tvm.relax.op)": [[20, "tvm.relax.op.zeros"]], "zeros_like() (in module tvm.relax.op)": [[20, "tvm.relax.op.zeros_like"]], "binding (class in tvm.relax)": [[21, "tvm.relax.Binding"]], "bindingblock (class in tvm.relax)": [[21, "tvm.relax.BindingBlock"]], "call (class in tvm.relax)": [[21, "tvm.relax.Call"]], "constant (class in tvm.relax)": [[21, "tvm.relax.Constant"]], "datatypeimm (class in tvm.relax)": [[21, "tvm.relax.DataTypeImm"]], "dataflowblock (class in tvm.relax)": [[21, "tvm.relax.DataflowBlock"]], "dataflowblockrewrite (class in tvm.relax)": [[21, "tvm.relax.DataflowBlockRewrite"]], "dataflowvar (class in tvm.relax)": [[21, "tvm.relax.DataflowVar"]], "dyntensortype (class in tvm.relax)": [[21, "tvm.relax.DynTensorType"]], "execbuilder (class in tvm.relax)": [[21, "tvm.relax.ExecBuilder"]], "executable (class in tvm.relax)": [[21, "tvm.relax.Executable"]], "expr (in module tvm.relax)": [[21, "tvm.relax.Expr"]], "exprfunctor (class in tvm.relax)": [[21, "tvm.relax.ExprFunctor"]], "externfunc (class in tvm.relax)": [[21, "tvm.relax.ExternFunc"]], "funcstructinfo (class in tvm.relax)": [[21, "tvm.relax.FuncStructInfo"]], "function (class in tvm.relax)": [[21, "tvm.relax.Function"]], "id (class in tvm.relax)": [[21, "tvm.relax.Id"]], "if (class in tvm.relax)": [[21, "tvm.relax.If"]], "matchcast (class in tvm.relax)": [[21, "tvm.relax.MatchCast"]], "objectstructinfo (class in tvm.relax)": [[21, "tvm.relax.ObjectStructInfo"]], "objecttype (class in tvm.relax)": [[21, "tvm.relax.ObjectType"]], "packedfunctype (class in tvm.relax)": [[21, "tvm.relax.PackedFuncType"]], "primstructinfo (class in tvm.relax)": [[21, "tvm.relax.PrimStructInfo"]], "primvalue (class in tvm.relax)": [[21, "tvm.relax.PrimValue"]], "pyexprmutator (class in tvm.relax)": [[21, "tvm.relax.PyExprMutator"]], "pyexprvisitor (class in tvm.relax)": [[21, "tvm.relax.PyExprVisitor"]], "seqexpr (class in tvm.relax)": [[21, "tvm.relax.SeqExpr"]], "shapeexpr (class in tvm.relax)": [[21, "tvm.relax.ShapeExpr"]], "shapestructinfo (class in tvm.relax)": [[21, "tvm.relax.ShapeStructInfo"]], "shapetype (class in tvm.relax)": [[21, "tvm.relax.ShapeType"]], "stringimm (class in tvm.relax)": [[21, "tvm.relax.StringImm"]], "structinfo (class in tvm.relax)": [[21, "tvm.relax.StructInfo"]], "tensorstructinfo (class in tvm.relax)": [[21, "tvm.relax.TensorStructInfo"]], "tuple (class in tvm.relax)": [[21, "tvm.relax.Tuple"]], "tuplegetitem (class in tvm.relax)": [[21, "tvm.relax.TupleGetItem"]], "tuplestructinfo (class in tvm.relax)": [[21, "tvm.relax.TupleStructInfo"]], "vminstrumentreturnkind (class in tvm.relax)": [[21, "tvm.relax.VMInstrumentReturnKind"]], "var (class in tvm.relax)": [[21, "tvm.relax.Var"]], "varbinding (class in tvm.relax)": [[21, "tvm.relax.VarBinding"]], "virtualmachine (class in tvm.relax)": [[21, "tvm.relax.VirtualMachine"]], "add() (tvm.relax.dataflowblockrewrite method)": [[21, "tvm.relax.DataflowBlockRewrite.add"]], "as_python() (tvm.relax.executable method)": [[21, "tvm.relax.Executable.as_python"]], "as_text() (tvm.relax.executable method)": [[21, "tvm.relax.Executable.as_text"]], "bind_params() (tvm.relax.function method)": [[21, "tvm.relax.Function.bind_params"]], "bind_symbolic_vars() (tvm.relax.function method)": [[21, "tvm.relax.Function.bind_symbolic_vars"]], "build() (in module tvm.relax)": [[21, "tvm.relax.build"]], "c() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.c"]], "call_dps_packed() (in module tvm.relax)": [[21, "tvm.relax.call_dps_packed"]], "call_pure_packed() (in module tvm.relax)": [[21, "tvm.relax.call_pure_packed"]], "call_tir() (in module tvm.relax)": [[21, "tvm.relax.call_tir"]], "call_tir_with_grad() (in module tvm.relax)": [[21, "tvm.relax.call_tir_with_grad"]], "const() (in module tvm.relax)": [[21, "tvm.relax.const"]], "create_empty() (tvm.relax.function static method)": [[21, "tvm.relax.Function.create_empty"]], "declare_function() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.declare_function"]], "emit_call() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.emit_call"]], "emit_goto() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.emit_goto"]], "emit_if() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.emit_if"]], "emit_ret() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.emit_ret"]], "export_library() (tvm.relax.executable method)": [[21, "tvm.relax.Executable.export_library"]], "extern() (in module tvm.relax)": [[21, "tvm.relax.extern"]], "f() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.f"]], "function() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.function"]], "get() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.get"]], "get_outputs() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.get_outputs"]], "get_pipeline() (in module tvm.relax)": [[21, "tvm.relax.get_pipeline"]], "get_shape_of() (in module tvm.relax)": [[21, "tvm.relax.get_shape_of"]], "get_var_remap() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.get_var_remap"]], "imm() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.imm"]], "invoke_closure() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.invoke_closure"]], "invoke_stateful() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.invoke_stateful"]], "is_base_of() (tvm.relax.structinfo method)": [[21, "tvm.relax.StructInfo.is_base_of"]], "jit() (tvm.relax.executable method)": [[21, "tvm.relax.Executable.jit"]], "lookup_binding() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.lookup_binding"]], "mutate_irmodule() (tvm.relax.dataflowblockrewrite method)": [[21, "tvm.relax.DataflowBlockRewrite.mutate_irmodule"]], "mutated_dfb() (tvm.relax.dataflowblockrewrite method)": [[21, "tvm.relax.DataflowBlockRewrite.mutated_dfb"]], "mutated_root_fn() (tvm.relax.dataflowblockrewrite method)": [[21, "tvm.relax.DataflowBlockRewrite.mutated_root_fn"]], "name_hint (tvm.relax.var property)": [[21, "tvm.relax.Var.name_hint"]], "opaque_func() (tvm.relax.funcstructinfo static method)": [[21, "tvm.relax.FuncStructInfo.opaque_func"]], "profile() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.profile"]], "r() (tvm.relax.execbuilder method)": [[21, "tvm.relax.ExecBuilder.r"]], "remove_all_unused() (tvm.relax.dataflowblockrewrite method)": [[21, "tvm.relax.DataflowBlockRewrite.remove_all_unused"]], "remove_unused() (tvm.relax.dataflowblockrewrite method)": [[21, "tvm.relax.DataflowBlockRewrite.remove_unused"]], "replace_all_uses() (tvm.relax.dataflowblockrewrite method)": [[21, "tvm.relax.DataflowBlockRewrite.replace_all_uses"]], "same_as() (tvm.relax.structinfo method)": [[21, "tvm.relax.StructInfo.same_as"]], "save_function() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.save_function"]], "set_input() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.set_input"]], "set_instrument() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.set_instrument"]], "set_var_remap() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.set_var_remap"]], "stats() (tvm.relax.executable method)": [[21, "tvm.relax.Executable.stats"]], "time_evaluator() (tvm.relax.virtualmachine method)": [[21, "tvm.relax.VirtualMachine.time_evaluator"]], "tvm.relax": [[21, "module-tvm.relax"]], "visit_binding() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_binding"]], "visit_binding() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_binding"]], "visit_binding_block() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_binding_block"]], "visit_binding_block() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_binding_block"]], "visit_binding_block_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_binding_block_"]], "visit_binding_block_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_binding_block_"]], "visit_call_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_call_"]], "visit_call_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_call_"]], "visit_constant_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_constant_"]], "visit_constant_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_constant_"]], "visit_data_type_imm_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_data_type_imm_"]], "visit_data_type_imm_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_data_type_imm_"]], "visit_dataflow_block_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_dataflow_block_"]], "visit_dataflow_block_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_dataflow_block_"]], "visit_dataflow_var_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_dataflow_var_"]], "visit_dataflow_var_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_dataflow_var_"]], "visit_dataflow_var_def_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_dataflow_var_def_"]], "visit_dataflow_var_def_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_dataflow_var_def_"]], "visit_expr() (tvm.relax.exprfunctor method)": [[21, "tvm.relax.ExprFunctor.visit_expr"]], "visit_expr() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_expr"]], "visit_expr() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_expr"]], "visit_expr_post_order() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_expr_post_order"]], "visit_extern_func_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_extern_func_"]], "visit_extern_func_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_extern_func_"]], "visit_function_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_function_"]], "visit_function_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_function_"]], "visit_global_var_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_global_var_"]], "visit_global_var_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_global_var_"]], "visit_if_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_if_"]], "visit_if_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_if_"]], "visit_match_cast_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_match_cast_"]], "visit_match_cast_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_match_cast_"]], "visit_op_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_op_"]], "visit_op_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_op_"]], "visit_prim_value_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_prim_value_"]], "visit_prim_value_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_prim_value_"]], "visit_seq_expr_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_seq_expr_"]], "visit_seq_expr_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_seq_expr_"]], "visit_shape_expr_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_shape_expr_"]], "visit_shape_expr_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_shape_expr_"]], "visit_span() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_span"]], "visit_span() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_span"]], "visit_string_imm_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_string_imm_"]], "visit_string_imm_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_string_imm_"]], "visit_tuple_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_tuple_"]], "visit_tuple_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_tuple_"]], "visit_tuple_getitem_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_tuple_getitem_"]], "visit_tuple_getitem_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_tuple_getitem_"]], "visit_var_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_var_"]], "visit_var_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_var_"]], "visit_var_binding_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_var_binding_"]], "visit_var_binding_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_var_binding_"]], "visit_var_def() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_var_def"]], "visit_var_def() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_var_def"]], "visit_var_def_() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_var_def_"]], "visit_var_def_() (tvm.relax.pyexprvisitor method)": [[21, "tvm.relax.PyExprVisitor.visit_var_def_"]], "visit_with_new_scope() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.visit_with_new_scope"]], "with_struct_info() (tvm.relax.pyexprmutator method)": [[21, "tvm.relax.PyExprMutator.with_struct_info"]], "allocateworkspace() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.AllocateWorkspace"]], "alteropimpl() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.AlterOpImpl"]], "annotatetiroppattern() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.AnnotateTIROpPattern"]], "attachglobalsymbol() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.AttachGlobalSymbol"]], "bindparams() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.BindParams"]], "bindsymbolicvars() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.BindSymbolicVars"]], "bundlemodelparams() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.BundleModelParams"]], "calltirrewrite() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.CallTIRRewrite"]], "canonicalizebindings() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.CanonicalizeBindings"]], "combineparallelmatmul() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.CombineParallelMatmul"]], "convertlayout() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.ConvertLayout"]], "dataflowblockpass (class in tvm.relax.transform)": [[22, "tvm.relax.transform.DataflowBlockPass"]], "deadcodeelimination() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.DeadCodeElimination"]], "decomposeopsforinference() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.DecomposeOpsForInference"]], "decomposeopsfortraining() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.DecomposeOpsForTraining"]], "eliminatecommonsubexpr() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.EliminateCommonSubexpr"]], "fewshottuning() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.FewShotTuning"]], "foldconstant() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.FoldConstant"]], "folddataflowblockoutput() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.FoldDataflowBlockOutput"]], "functionpass (class in tvm.relax.transform)": [[22, "tvm.relax.transform.FunctionPass"]], "fuseops() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.FuseOps"]], "fuseopsbypattern() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.FuseOpsByPattern"]], "fusetir() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.FuseTIR"]], "fusionpattern (class in tvm.relax.transform)": [[22, "tvm.relax.transform.FusionPattern"]], "gradient() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.Gradient"]], "killafterlastuse() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.KillAfterLastUse"]], "lambdalift() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.LambdaLift"]], "lazytransformparams (class in tvm.relax.transform)": [[22, "tvm.relax.transform.LazyTransformParams"]], "legalizeops() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.LegalizeOps"]], "lifttransformparams() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.LiftTransformParams"]], "loweralloctensor() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.LowerAllocTensor"]], "mergecompositefunctions() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.MergeCompositeFunctions"]], "metascheduleapplydatabase() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.MetaScheduleApplyDatabase"]], "metascheduletuneirmod() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.MetaScheduleTuneIRMod"]], "metascheduletunetir() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.MetaScheduleTuneTIR"]], "normalize() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.Normalize"]], "optimizelayouttransform (class in tvm.relax.transform)": [[22, "tvm.relax.transform.OptimizeLayoutTransform"]], "patterncheckcontext (class in tvm.relax.transform)": [[22, "tvm.relax.transform.PatternCheckContext"]], "realizevdevice() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.RealizeVDevice"]], "removepuritychecking() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.RemovePurityChecking"]], "removeredundantreshape (class in tvm.relax.transform)": [[22, "tvm.relax.transform.RemoveRedundantReshape"]], "rewritecudagraph() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.RewriteCUDAGraph"]], "rewritedataflowreshape() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.RewriteDataflowReshape"]], "runcodegen() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.RunCodegen"]], "splitcalltirbypattern() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.SplitCallTIRByPattern"]], "staticplanblockmemory() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.StaticPlanBlockMemory"]], "tomixedprecision() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.ToMixedPrecision"]], "tonondataflow() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.ToNonDataflow"]], "updatevdevice() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.UpdateVDevice"]], "vmbuiltinlower() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.VMBuiltinLower"]], "vmshapelower() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.VMShapeLower"]], "dataflowblock_pass() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.dataflowblock_pass"]], "function_pass() (in module tvm.relax.transform)": [[22, "tvm.relax.transform.function_pass"]], "tvm.relax.transform": [[22, "module-tvm.relax.transform"]], "localsession (class in tvm.rpc)": [[23, "tvm.rpc.LocalSession"]], "popensession (class in tvm.rpc)": [[23, "tvm.rpc.PopenSession"]], "rpcsession (class in tvm.rpc)": [[23, "tvm.rpc.RPCSession"]], "server (class in tvm.rpc)": [[23, "tvm.rpc.Server"]], "trackersession (class in tvm.rpc)": [[23, "tvm.rpc.TrackerSession"]], "cl() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.cl"]], "close() (tvm.rpc.trackersession method)": [[23, "tvm.rpc.TrackerSession.close"]], "connect() (in module tvm.rpc)": [[23, "tvm.rpc.connect"]], "connect_tracker() (in module tvm.rpc)": [[23, "tvm.rpc.connect_tracker"]], "cpu() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.cpu"]], "cuda() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.cuda"]], "device() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.device"]], "download() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.download"]], "download_linked_module() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.download_linked_module"]], "ext_dev() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.ext_dev"]], "get_function() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.get_function"]], "hexagon() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.hexagon"]], "listdir() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.listdir"]], "load_module() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.load_module"]], "metal() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.metal"]], "remove() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.remove"]], "request() (tvm.rpc.trackersession method)": [[23, "tvm.rpc.TrackerSession.request"]], "request_and_run() (tvm.rpc.trackersession method)": [[23, "tvm.rpc.TrackerSession.request_and_run"]], "rocm() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.rocm"]], "summary() (tvm.rpc.trackersession method)": [[23, "tvm.rpc.TrackerSession.summary"]], "system_lib() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.system_lib"]], "terminate() (tvm.rpc.server method)": [[23, "tvm.rpc.Server.terminate"]], "text_summary() (tvm.rpc.trackersession method)": [[23, "tvm.rpc.TrackerSession.text_summary"]], "tvm.rpc": [[23, "module-tvm.rpc"]], "upload() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.upload"]], "vulkan() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.vulkan"]], "webgpu() (tvm.rpc.rpcsession method)": [[23, "tvm.rpc.RPCSession.webgpu"]], "with_minrpc() (in module tvm.rpc)": [[23, "tvm.rpc.with_minrpc"]], "dmodule (class in tvm.runtime.disco)": [[24, "tvm.runtime.disco.DModule"]], "dpackedfunc (class in tvm.runtime.disco)": [[24, "tvm.runtime.disco.DPackedFunc"]], "dref (class in tvm.runtime.disco)": [[24, "tvm.runtime.disco.DRef"]], "processsession (class in tvm.runtime.disco)": [[24, "tvm.runtime.disco.ProcessSession"]], "session (class in tvm.runtime.disco)": [[24, "tvm.runtime.disco.Session"]], "threadedsession (class in tvm.runtime.disco)": [[24, "tvm.runtime.disco.ThreadedSession"]], "allgather() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.allgather"]], "allreduce() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.allreduce"]], "broadcast_from_worker0() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.broadcast_from_worker0"]], "call_packed() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.call_packed"]], "copy_from_worker_0() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.copy_from_worker_0"]], "copy_to_worker_0() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.copy_to_worker_0"]], "debug_copy_from() (tvm.runtime.disco.dref method)": [[24, "tvm.runtime.disco.DRef.debug_copy_from"]], "debug_get_from_remote() (tvm.runtime.disco.dref method)": [[24, "tvm.runtime.disco.DRef.debug_get_from_remote"]], "empty() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.empty"]], "gather_to_worker0() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.gather_to_worker0"]], "get_global_func() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.get_global_func"]], "init_ccl() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.init_ccl"]], "load_vm_module() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.load_vm_module"]], "scatter_from_worker0() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.scatter_from_worker0"]], "session (tvm.runtime.disco.dref property)": [[24, "tvm.runtime.disco.DRef.session"]], "sync_worker_0() (tvm.runtime.disco.session method)": [[24, "tvm.runtime.disco.Session.sync_worker_0"]], "tvm.runtime.disco": [[24, "module-tvm.runtime.disco"]], "ndarray (class in tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.NDArray"]], "array() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.array"]], "asnumpy() (tvm.runtime.ndarray.ndarray method)": [[25, "tvm.runtime.ndarray.NDArray.asnumpy"]], "cl() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.cl"]], "copyfrom() (tvm.runtime.ndarray.ndarray method)": [[25, "tvm.runtime.ndarray.NDArray.copyfrom"]], "copyto() (tvm.runtime.ndarray.ndarray method)": [[25, "tvm.runtime.ndarray.NDArray.copyto"]], "cpu() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.cpu"]], "cuda() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.cuda"]], "device (tvm.runtime.ndarray.ndarray property)": [[25, "tvm.runtime.ndarray.NDArray.device"]], "device() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.device"]], "dtype (tvm.runtime.ndarray.ndarray property)": [[25, "tvm.runtime.ndarray.NDArray.dtype"]], "empty() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.empty"]], "ext_dev() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.ext_dev"]], "from_dlpack() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.from_dlpack"]], "gpu() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.gpu"]], "hexagon() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.hexagon"]], "metal() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.metal"]], "mtl() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.mtl"]], "numpy() (tvm.runtime.ndarray.ndarray method)": [[25, "tvm.runtime.ndarray.NDArray.numpy"]], "numpyasarray() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.numpyasarray"]], "opencl() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.opencl"]], "rocm() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.rocm"]], "same_as() (tvm.runtime.ndarray.ndarray method)": [[25, "tvm.runtime.ndarray.NDArray.same_as"]], "tvm.runtime.ndarray": [[25, "module-tvm.runtime.ndarray"]], "vpi() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.vpi"]], "vulkan() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.vulkan"]], "webgpu() (in module tvm.runtime.ndarray)": [[25, "tvm.runtime.ndarray.webgpu"]], "count (class in tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.Count"]], "devicewrapper (class in tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.DeviceWrapper"]], "duration (class in tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.Duration"]], "metriccollector (class in tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.MetricCollector"]], "percent (class in tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.Percent"]], "ratio (class in tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.Ratio"]], "report (class in tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.Report"]], "calls (tvm.runtime.profiling.report attribute)": [[26, "tvm.runtime.profiling.Report.calls"]], "csv() (tvm.runtime.profiling.report method)": [[26, "tvm.runtime.profiling.Report.csv"]], "device_metrics (tvm.runtime.profiling.report attribute)": [[26, "tvm.runtime.profiling.Report.device_metrics"]], "from_json() (tvm.runtime.profiling.report class method)": [[26, "tvm.runtime.profiling.Report.from_json"]], "json() (tvm.runtime.profiling.report method)": [[26, "tvm.runtime.profiling.Report.json"]], "profile_function() (in module tvm.runtime.profiling)": [[26, "tvm.runtime.profiling.profile_function"]], "table() (tvm.runtime.profiling.report method)": [[26, "tvm.runtime.profiling.Report.table"]], "tvm.runtime.profiling": [[26, "module-tvm.runtime.profiling"]], "vminstrumentreturnkind (class in tvm.runtime.relax_vm)": [[27, "tvm.runtime.relax_vm.VMInstrumentReturnKind"]], "virtualmachine (class in tvm.runtime.relax_vm)": [[27, "tvm.runtime.relax_vm.VirtualMachine"]], "get_outputs() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.get_outputs"]], "invoke_closure() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.invoke_closure"]], "invoke_stateful() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.invoke_stateful"]], "profile() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.profile"]], "save_function() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.save_function"]], "set_input() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.set_input"]], "set_instrument() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.set_instrument"]], "time_evaluator() (tvm.runtime.relax_vm.virtualmachine method)": [[27, "tvm.runtime.relax_vm.VirtualMachine.time_evaluator"]], "tvm.runtime.relax_vm": [[27, "module-tvm.runtime.relax_vm"]], "datatype (class in tvm.runtime)": [[28, "tvm.runtime.DataType"]], "datatypecode (class in tvm.runtime)": [[28, "tvm.runtime.DataTypeCode"]], "device (class in tvm.runtime)": [[28, "tvm.runtime.Device"]], "module (class in tvm.runtime)": [[28, "tvm.runtime.Module"]], "object (class in tvm.runtime)": [[28, "tvm.runtime.Object"]], "objectgeneric (class in tvm.runtime)": [[28, "tvm.runtime.ObjectGeneric"]], "objectpath (class in tvm.runtime)": [[28, "tvm.runtime.ObjectPath"]], "objectpathpair (class in tvm.runtime)": [[28, "tvm.runtime.ObjectPathPair"]], "packedfunc (class in tvm.runtime)": [[28, "tvm.runtime.PackedFunc"]], "report (class in tvm.runtime)": [[28, "tvm.runtime.Report"]], "scriptable (class in tvm.runtime)": [[28, "tvm.runtime.Scriptable"]], "shapetuple (class in tvm.runtime)": [[28, "tvm.runtime.ShapeTuple"]], "string (class in tvm.runtime)": [[28, "tvm.runtime.String"]], "api_version (tvm.runtime.device property)": [[28, "tvm.runtime.Device.api_version"]], "asobject() (tvm.runtime.objectgeneric method)": [[28, "tvm.runtime.ObjectGeneric.asobject"]], "calls (tvm.runtime.report attribute)": [[28, "tvm.runtime.Report.calls"]], "cl() (in module tvm.runtime)": [[28, "tvm.runtime.cl"]], "clear_imports() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.clear_imports"]], "compute_version (tvm.runtime.device property)": [[28, "tvm.runtime.Device.compute_version"]], "const() (in module tvm.runtime)": [[28, "tvm.runtime.const"]], "convert() (in module tvm.runtime)": [[28, "tvm.runtime.convert"]], "convert_to_object() (in module tvm.runtime)": [[28, "tvm.runtime.convert_to_object"]], "cpu() (in module tvm.runtime)": [[28, "tvm.runtime.cpu"]], "create_raw_stream() (tvm.runtime.device method)": [[28, "tvm.runtime.Device.create_raw_stream"]], "csv() (tvm.runtime.report method)": [[28, "tvm.runtime.Report.csv"]], "cuda() (in module tvm.runtime)": [[28, "tvm.runtime.cuda"]], "device() (in module tvm.runtime)": [[28, "tvm.runtime.device"]], "device_metrics (tvm.runtime.report attribute)": [[28, "tvm.runtime.Report.device_metrics"]], "device_name (tvm.runtime.device property)": [[28, "tvm.runtime.Device.device_name"]], "driver_version (tvm.runtime.device property)": [[28, "tvm.runtime.Device.driver_version"]], "enabled() (in module tvm.runtime)": [[28, "tvm.runtime.enabled"]], "entry_func (tvm.runtime.module property)": [[28, "tvm.runtime.Module.entry_func"]], "exist (tvm.runtime.device property)": [[28, "tvm.runtime.Device.exist"]], "export_library() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.export_library"]], "ext_dev() (in module tvm.runtime)": [[28, "tvm.runtime.ext_dev"]], "format (tvm.runtime.module property)": [[28, "tvm.runtime.Module.format"]], "free_raw_stream() (tvm.runtime.device method)": [[28, "tvm.runtime.Device.free_raw_stream"]], "from_json() (tvm.runtime.report class method)": [[28, "tvm.runtime.Report.from_json"]], "get_function() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.get_function"]], "get_property_mask() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.get_property_mask"]], "get_source() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.get_source"]], "gpu() (in module tvm.runtime)": [[28, "tvm.runtime.gpu"]], "implements_function() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.implements_function"]], "import_module() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.import_module"]], "imported_modules (tvm.runtime.module property)": [[28, "tvm.runtime.Module.imported_modules"]], "is_binary_serializable (tvm.runtime.module property)": [[28, "tvm.runtime.Module.is_binary_serializable"]], "is_dso_exportable (tvm.runtime.module property)": [[28, "tvm.runtime.Module.is_dso_exportable"]], "is_runnable (tvm.runtime.module property)": [[28, "tvm.runtime.Module.is_runnable"]], "json() (tvm.runtime.report method)": [[28, "tvm.runtime.Report.json"]], "l2_cache_size_bytes (tvm.runtime.device property)": [[28, "tvm.runtime.Device.l2_cache_size_bytes"]], "load_module() (in module tvm.runtime)": [[28, "tvm.runtime.load_module"]], "load_param_dict() (in module tvm.runtime)": [[28, "tvm.runtime.load_param_dict"]], "load_param_dict_from_file() (in module tvm.runtime)": [[28, "tvm.runtime.load_param_dict_from_file"]], "load_static_library() (in module tvm.runtime)": [[28, "tvm.runtime.load_static_library"]], "max_clock_rate (tvm.runtime.device property)": [[28, "tvm.runtime.Device.max_clock_rate"]], "max_shared_memory_per_block (tvm.runtime.device property)": [[28, "tvm.runtime.Device.max_shared_memory_per_block"]], "max_thread_dimensions (tvm.runtime.device property)": [[28, "tvm.runtime.Device.max_thread_dimensions"]], "max_threads_per_block (tvm.runtime.device property)": [[28, "tvm.runtime.Device.max_threads_per_block"]], "metal() (in module tvm.runtime)": [[28, "tvm.runtime.metal"]], "mtl() (in module tvm.runtime)": [[28, "tvm.runtime.mtl"]], "multi_processor_count (tvm.runtime.device property)": [[28, "tvm.runtime.Device.multi_processor_count"]], "num_threads() (in module tvm.runtime)": [[28, "tvm.runtime.num_threads"]], "opencl() (in module tvm.runtime)": [[28, "tvm.runtime.opencl"]], "rocm() (in module tvm.runtime)": [[28, "tvm.runtime.rocm"]], "save() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.save"]], "save_param_dict() (in module tvm.runtime)": [[28, "tvm.runtime.save_param_dict"]], "save_param_dict_to_file() (in module tvm.runtime)": [[28, "tvm.runtime.save_param_dict_to_file"]], "script() (tvm.runtime.scriptable method)": [[28, "tvm.runtime.Scriptable.script"]], "set_raw_stream() (tvm.runtime.device method)": [[28, "tvm.runtime.Device.set_raw_stream"]], "show() (tvm.runtime.scriptable method)": [[28, "tvm.runtime.Scriptable.show"]], "sync() (tvm.runtime.device method)": [[28, "tvm.runtime.Device.sync"]], "system_lib() (in module tvm.runtime)": [[28, "tvm.runtime.system_lib"]], "table() (tvm.runtime.report method)": [[28, "tvm.runtime.Report.table"]], "texture_spatial_limit() (tvm.runtime.device method)": [[28, "tvm.runtime.Device.texture_spatial_limit"]], "time_evaluator() (tvm.runtime.module method)": [[28, "tvm.runtime.Module.time_evaluator"]], "tvm.runtime": [[28, "module-tvm.runtime"]], "type_key (tvm.runtime.module property)": [[28, "tvm.runtime.Module.type_key"]], "vpi() (in module tvm.runtime)": [[28, "tvm.runtime.vpi"]], "vulkan() (in module tvm.runtime)": [[28, "tvm.runtime.vulkan"]], "warp_size (tvm.runtime.device property)": [[28, "tvm.runtime.Device.warp_size"]], "genericfunc (class in tvm.target)": [[29, "tvm.target.GenericFunc"]], "target (class in tvm.target)": [[29, "tvm.target.Target"]], "targetkind (class in tvm.target)": [[29, "tvm.target.TargetKind"]], "virtualdevice (class in tvm.target)": [[29, "tvm.target.VirtualDevice"]], "arch (tvm.target.target property)": [[29, "tvm.target.Target.arch"]], "arm_cpu() (in module tvm.target)": [[29, "tvm.target.arm_cpu"]], "bifrost() (in module tvm.target)": [[29, "tvm.target.bifrost"]], "canon_multi_target() (tvm.target.target static method)": [[29, "tvm.target.Target.canon_multi_target"]], "canon_multi_target_and_host() (tvm.target.target static method)": [[29, "tvm.target.Target.canon_multi_target_and_host"]], "canon_target() (tvm.target.target static method)": [[29, "tvm.target.Target.canon_target"]], "canon_target_and_host() (tvm.target.target static method)": [[29, "tvm.target.Target.canon_target_and_host"]], "canon_target_map_and_host() (tvm.target.target static method)": [[29, "tvm.target.Target.canon_target_map_and_host"]], "create() (in module tvm.target)": [[29, "tvm.target.create"]], "cuda() (in module tvm.target)": [[29, "tvm.target.cuda"]], "current() (tvm.target.target static method)": [[29, "tvm.target.Target.current"]], "from_device() (tvm.target.target static method)": [[29, "tvm.target.Target.from_device"]], "generic_func() (in module tvm.target)": [[29, "tvm.target.generic_func"]], "get_kind_attr() (tvm.target.target method)": [[29, "tvm.target.Target.get_kind_attr"]], "get_native_generic_func() (in module tvm.target)": [[29, "tvm.target.get_native_generic_func"]], "get_packed_func() (tvm.target.genericfunc method)": [[29, "tvm.target.GenericFunc.get_packed_func"]], "get_target_device_type() (tvm.target.target method)": [[29, "tvm.target.Target.get_target_device_type"]], "hexagon() (in module tvm.target)": [[29, "tvm.target.hexagon"]], "intel_graphics() (in module tvm.target)": [[29, "tvm.target.intel_graphics"]], "list_kinds() (tvm.target.target static method)": [[29, "tvm.target.Target.list_kinds"]], "list_tags() (in module tvm.target)": [[29, "tvm.target.list_tags"]], "make_compilation_config() (in module tvm.target)": [[29, "tvm.target.make_compilation_config"]], "mali() (in module tvm.target)": [[29, "tvm.target.mali"]], "mattr (tvm.target.target property)": [[29, "tvm.target.Target.mattr"]], "max_block_size_x (tvm.target.target property)": [[29, "tvm.target.Target.max_block_size_x"]], "max_block_size_y (tvm.target.target property)": [[29, "tvm.target.Target.max_block_size_y"]], "max_num_threads (tvm.target.target property)": [[29, "tvm.target.Target.max_num_threads"]], "mcpu (tvm.target.target property)": [[29, "tvm.target.Target.mcpu"]], "model (tvm.target.target property)": [[29, "tvm.target.Target.model"]], "options (tvm.target.targetkind property)": [[29, "tvm.target.TargetKind.options"]], "options_from_name() (tvm.target.targetkind static method)": [[29, "tvm.target.TargetKind.options_from_name"]], "override_native_generic_func() (in module tvm.target)": [[29, "tvm.target.override_native_generic_func"]], "rasp() (in module tvm.target)": [[29, "tvm.target.rasp"]], "register() (tvm.target.genericfunc method)": [[29, "tvm.target.GenericFunc.register"]], "riscv_cpu() (in module tvm.target)": [[29, "tvm.target.riscv_cpu"]], "rocm() (in module tvm.target)": [[29, "tvm.target.rocm"]], "set_default() (tvm.target.genericfunc method)": [[29, "tvm.target.GenericFunc.set_default"]], "stm32() (in module tvm.target)": [[29, "tvm.target.stm32"]], "target_or_current() (tvm.target.target static method)": [[29, "tvm.target.Target.target_or_current"]], "thread_warp_size (tvm.target.target property)": [[29, "tvm.target.Target.thread_warp_size"]], "tvm.target": [[29, "module-tvm.target"]], "computeop (class in tvm.te)": [[30, "tvm.te.ComputeOp"]], "externop (class in tvm.te)": [[30, "tvm.te.ExternOp"]], "hybridop (class in tvm.te)": [[30, "tvm.te.HybridOp"]], "placeholderop (class in tvm.te)": [[30, "tvm.te.PlaceholderOp"]], "scanop (class in tvm.te)": [[30, "tvm.te.ScanOp"]], "specializedcondition (class in tvm.te)": [[30, "tvm.te.SpecializedCondition"]], "tensor (class in tvm.te)": [[30, "tvm.te.Tensor"]], "tensorcomputeop (class in tvm.te)": [[30, "tvm.te.TensorComputeOp"]], "tensorslice (class in tvm.te)": [[30, "tvm.te.TensorSlice"]], "abs() (in module tvm.te)": [[30, "tvm.te.abs"]], "acos() (in module tvm.te)": [[30, "tvm.te.acos"]], "acosh() (in module tvm.te)": [[30, "tvm.te.acosh"]], "add() (in module tvm.te)": [[30, "tvm.te.add"]], "all() (in module tvm.te)": [[30, "tvm.te.all"]], "any() (in module tvm.te)": [[30, "tvm.te.any"]], "asin() (in module tvm.te)": [[30, "tvm.te.asin"]], "asinh() (in module tvm.te)": [[30, "tvm.te.asinh"]], "asobject() (tvm.te.tensorslice method)": [[30, "tvm.te.TensorSlice.asobject"]], "atan() (in module tvm.te)": [[30, "tvm.te.atan"]], "atanh() (in module tvm.te)": [[30, "tvm.te.atanh"]], "axis (tvm.te.hybridop property)": [[30, "tvm.te.HybridOp.axis"]], "axis (tvm.te.tensor property)": [[30, "tvm.te.Tensor.axis"]], "ceil() (in module tvm.te)": [[30, "tvm.te.ceil"]], "comm_reducer() (in module tvm.te)": [[30, "tvm.te.comm_reducer"]], "compute() (in module tvm.te)": [[30, "tvm.te.compute"]], "const() (in module tvm.te)": [[30, "tvm.te.const"]], "cos() (in module tvm.te)": [[30, "tvm.te.cos"]], "cosh() (in module tvm.te)": [[30, "tvm.te.cosh"]], "create_prim_func() (in module tvm.te)": [[30, "tvm.te.create_prim_func"]], "create_schedule() (in module tvm.te)": [[30, "tvm.te.create_schedule"]], "current() (tvm.te.specializedcondition static method)": [[30, "tvm.te.SpecializedCondition.current"]], "decl_tensor_intrin() (in module tvm.te)": [[30, "tvm.te.decl_tensor_intrin"]], "div() (in module tvm.te)": [[30, "tvm.te.div"]], "dtype (tvm.te.tensorslice property)": [[30, "tvm.te.TensorSlice.dtype"]], "erf() (in module tvm.te)": [[30, "tvm.te.erf"]], "exp() (in module tvm.te)": [[30, "tvm.te.exp"]], "extern() (in module tvm.te)": [[30, "tvm.te.extern"]], "extern_primfunc() (in module tvm.te)": [[30, "tvm.te.extern_primfunc"]], "floor() (in module tvm.te)": [[30, "tvm.te.floor"]], "floordiv() (in module tvm.te)": [[30, "tvm.te.floordiv"]], "floormod() (in module tvm.te)": [[30, "tvm.te.floormod"]], "fmod() (in module tvm.te)": [[30, "tvm.te.fmod"]], "gradient() (in module tvm.te)": [[30, "tvm.te.gradient"]], "if_then_else() (in module tvm.te)": [[30, "tvm.te.if_then_else"]], "indexdiv() (in module tvm.te)": [[30, "tvm.te.indexdiv"]], "indexmod() (in module tvm.te)": [[30, "tvm.te.indexmod"]], "isfinite() (in module tvm.te)": [[30, "tvm.te.isfinite"]], "isinf() (in module tvm.te)": [[30, "tvm.te.isinf"]], "isnan() (in module tvm.te)": [[30, "tvm.te.isnan"]], "log() (in module tvm.te)": [[30, "tvm.te.log"]], "log10() (in module tvm.te)": [[30, "tvm.te.log10"]], "log2() (in module tvm.te)": [[30, "tvm.te.log2"]], "max() (in module tvm.te)": [[30, "tvm.te.max"]], "max_value() (in module tvm.te)": [[30, "tvm.te.max_value"]], "min() (in module tvm.te)": [[30, "tvm.te.min"]], "min_value() (in module tvm.te)": [[30, "tvm.te.min_value"]], "multiply() (in module tvm.te)": [[30, "tvm.te.multiply"]], "ndim (tvm.te.tensor property)": [[30, "tvm.te.Tensor.ndim"]], "nearbyint() (in module tvm.te)": [[30, "tvm.te.nearbyint"]], "op (tvm.te.tensor property)": [[30, "tvm.te.Tensor.op"]], "placeholder() (in module tvm.te)": [[30, "tvm.te.placeholder"]], "popcount() (in module tvm.te)": [[30, "tvm.te.popcount"]], "power() (in module tvm.te)": [[30, "tvm.te.power"]], "reduce_axis() (in module tvm.te)": [[30, "tvm.te.reduce_axis"]], "round() (in module tvm.te)": [[30, "tvm.te.round"]], "rsqrt() (in module tvm.te)": [[30, "tvm.te.rsqrt"]], "scan() (in module tvm.te)": [[30, "tvm.te.scan"]], "scan_axis (tvm.te.scanop property)": [[30, "tvm.te.ScanOp.scan_axis"]], "shape (tvm.te.tensor property)": [[30, "tvm.te.Tensor.shape"]], "sigmoid() (in module tvm.te)": [[30, "tvm.te.sigmoid"]], "sin() (in module tvm.te)": [[30, "tvm.te.sin"]], "sinh() (in module tvm.te)": [[30, "tvm.te.sinh"]], "size_var() (in module tvm.te)": [[30, "tvm.te.size_var"]], "sqrt() (in module tvm.te)": [[30, "tvm.te.sqrt"]], "subtract() (in module tvm.te)": [[30, "tvm.te.subtract"]], "sum() (in module tvm.te)": [[30, "tvm.te.sum"]], "tag_scope() (in module tvm.te)": [[30, "tvm.te.tag_scope"]], "tan() (in module tvm.te)": [[30, "tvm.te.tan"]], "tanh() (in module tvm.te)": [[30, "tvm.te.tanh"]], "thread_axis() (in module tvm.te)": [[30, "tvm.te.thread_axis"]], "trace() (in module tvm.te)": [[30, "tvm.te.trace"]], "trunc() (in module tvm.te)": [[30, "tvm.te.trunc"]], "truncdiv() (in module tvm.te)": [[30, "tvm.te.truncdiv"]], "truncmod() (in module tvm.te)": [[30, "tvm.te.truncmod"]], "tvm.te": [[30, "module-tvm.te"]], "value_index (tvm.te.tensor property)": [[30, "tvm.te.Tensor.value_index"]], "var() (in module tvm.te)": [[30, "tvm.te.var"]], "oobchecker() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.OOBChecker"]], "apply_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.apply_prim_func_arg_and_result_memory_constraints"]], "calculate_allocated_bytes() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.calculate_allocated_bytes"]], "calculate_constant_bytes() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.calculate_constant_bytes"]], "calculate_workspace_bytes() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.calculate_workspace_bytes"]], "detect_buffer_access_lca() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.detect_buffer_access_lca"]], "estimate_tir_flops() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.estimate_tir_flops"]], "expr_deep_equal() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.expr_deep_equal"]], "find_anchor_block() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.find_anchor_block"]], "get_block_access_region() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.get_block_access_region"]], "get_block_read_write_region() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.get_block_read_write_region"]], "get_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.get_prim_func_arg_and_result_memory_constraints"]], "get_vtcm_compaction_passes() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.get_vtcm_compaction_passes"]], "tvm.tir.analysis.analysis": [[31, "module-tvm.tir.analysis.analysis"]], "undefined_vars() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.undefined_vars"]], "verify_gpu_code() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.verify_gpu_code"]], "verify_memory() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.verify_memory"]], "verify_ssa() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.verify_ssa"]], "verify_well_formed() (in module tvm.tir.analysis.analysis)": [[31, "tvm.tir.analysis.analysis.verify_well_formed"]], "blockrv (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.BlockRV"]], "blockscope (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.BlockScope"]], "depkind (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.DepKind"]], "dependency (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.Dependency"]], "exprrv (in module tvm.tir.schedule)": [[32, "tvm.tir.schedule.ExprRV"]], "instruction (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.Instruction"]], "instructionkind (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.InstructionKind"]], "looprv (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.LoopRV"]], "opaque (tvm.tir.schedule.depkind attribute)": [[32, "tvm.tir.schedule.DepKind.OPAQUE"]], "raw (tvm.tir.schedule.depkind attribute)": [[32, "tvm.tir.schedule.DepKind.RAW"]], "schedule (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.Schedule"]], "scheduledebugmask (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.ScheduleDebugMask"]], "scheduleerror": [[32, "tvm.tir.schedule.ScheduleError"]], "schedulestate (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.ScheduleState"]], "stmtsref (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.StmtSRef"]], "trace (class in tvm.tir.schedule)": [[32, "tvm.tir.schedule.Trace"]], "verify_cached_flags (tvm.tir.schedule.scheduledebugmask attribute)": [[32, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_CACHED_FLAGS"]], "verify_sref_tree (tvm.tir.schedule.scheduledebugmask attribute)": [[32, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_SREF_TREE"]], "war (tvm.tir.schedule.depkind attribute)": [[32, "tvm.tir.schedule.DepKind.WAR"]], "waw (tvm.tir.schedule.depkind attribute)": [[32, "tvm.tir.schedule.DepKind.WAW"]], "add_unit_loop() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.add_unit_loop"]], "annotate() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.annotate"]], "append() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.append"]], "apply_json_to_schedule() (tvm.tir.schedule.trace static method)": [[32, "tvm.tir.schedule.Trace.apply_json_to_schedule"]], "apply_to_schedule() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.apply_to_schedule"]], "as_json() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.as_json"]], "as_python() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.as_python"]], "attrs (tvm.tir.schedule.instruction attribute)": [[32, "tvm.tir.schedule.Instruction.attrs"]], "bind() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.bind"]], "blockize() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.blockize"]], "cache_index() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.cache_index"]], "cache_inplace() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.cache_inplace"]], "cache_read() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.cache_read"]], "cache_write() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.cache_write"]], "can_decompose_padding() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.can_decompose_padding"]], "compute_at() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.compute_at"]], "compute_inline() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.compute_inline"]], "copy() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.copy"]], "decisions (tvm.tir.schedule.trace attribute)": [[32, "tvm.tir.schedule.Trace.decisions"]], "decompose_padding() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.decompose_padding"]], "decompose_reduction() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.decompose_reduction"]], "enter_postproc() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.enter_postproc"]], "fork_seed() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.fork_seed"]], "func_working_on (tvm.tir.schedule.schedule property)": [[32, "tvm.tir.schedule.Schedule.func_working_on"]], "fuse() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.fuse"]], "get() (tvm.tir.schedule.instructionkind static method)": [[32, "tvm.tir.schedule.InstructionKind.get"]], "get() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get"]], "get_block() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get_block"]], "get_block_scope() (tvm.tir.schedule.schedulestate method)": [[32, "tvm.tir.schedule.ScheduleState.get_block_scope"]], "get_child_blocks() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get_child_blocks"]], "get_consumers() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get_consumers"]], "get_decision() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.get_decision"]], "get_deps_by_dst() (tvm.tir.schedule.blockscope method)": [[32, "tvm.tir.schedule.BlockScope.get_deps_by_dst"]], "get_deps_by_src() (tvm.tir.schedule.blockscope method)": [[32, "tvm.tir.schedule.BlockScope.get_deps_by_src"]], "get_loops() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get_loops"]], "get_output_blocks() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get_output_blocks"]], "get_producers() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get_producers"]], "get_sref() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.get_sref"]], "get_sref() (tvm.tir.schedule.schedulestate method)": [[32, "tvm.tir.schedule.ScheduleState.get_sref"]], "inline_mark() (tvm.tir.schedule.stmtsref static method)": [[32, "tvm.tir.schedule.StmtSRef.inline_mark"]], "inputs (tvm.tir.schedule.instruction attribute)": [[32, "tvm.tir.schedule.Instruction.inputs"]], "insts (tvm.tir.schedule.trace attribute)": [[32, "tvm.tir.schedule.Trace.insts"]], "is_pure (tvm.tir.schedule.instructionkind property)": [[32, "tvm.tir.schedule.InstructionKind.is_pure"]], "kind (tvm.tir.schedule.instruction attribute)": [[32, "tvm.tir.schedule.Instruction.kind"]], "merge() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.merge"]], "mod (tvm.tir.schedule.schedule property)": [[32, "tvm.tir.schedule.Schedule.mod"]], "name (tvm.tir.schedule.instructionkind attribute)": [[32, "tvm.tir.schedule.InstructionKind.name"]], "outputs (tvm.tir.schedule.instruction attribute)": [[32, "tvm.tir.schedule.Instruction.outputs"]], "pad_einsum() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.pad_einsum"]], "parallel() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.parallel"]], "parent (tvm.tir.schedule.stmtsref property)": [[32, "tvm.tir.schedule.StmtSRef.parent"]], "pop() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.pop"]], "reindex() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.reindex"]], "reindex_cache_read() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.reindex_cache_read"]], "reindex_cache_write() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.reindex_cache_write"]], "remove_rv() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.remove_rv"]], "reorder() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.reorder"]], "reorder_block_iter_var() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.reorder_block_iter_var"]], "replace() (tvm.tir.schedule.schedulestate method)": [[32, "tvm.tir.schedule.ScheduleState.replace"]], "reverse_compute_at() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.reverse_compute_at"]], "reverse_compute_inline() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.reverse_compute_inline"]], "rfactor() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.rfactor"]], "rolling_buffer() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.rolling_buffer"]], "root_mark() (tvm.tir.schedule.stmtsref static method)": [[32, "tvm.tir.schedule.StmtSRef.root_mark"]], "sample_categorical() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.sample_categorical"]], "sample_compute_location() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.sample_compute_location"]], "sample_partitioned_tile() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.sample_partitioned_tile"]], "sample_perfect_tile() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.sample_perfect_tile"]], "seed() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.seed"]], "set_axis_separator() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.set_axis_separator"]], "set_scope() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.set_scope"]], "show() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.show"]], "show() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.show"]], "simplified() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.simplified"]], "split() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.split"]], "state (tvm.tir.schedule.schedule property)": [[32, "tvm.tir.schedule.Schedule.state"]], "stmt (tvm.tir.schedule.stmtsref property)": [[32, "tvm.tir.schedule.StmtSRef.stmt"]], "storage_align() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.storage_align"]], "tensorize() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.tensorize"]], "trace (tvm.tir.schedule.schedule property)": [[32, "tvm.tir.schedule.Schedule.trace"]], "transform_block_layout() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.transform_block_layout"]], "transform_layout() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.transform_layout"]], "tvm.tir.schedule": [[32, "module-tvm.tir.schedule"]], "unannotate() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.unannotate"]], "unroll() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.unroll"]], "unsafe_hide_buffer_access() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.unsafe_hide_buffer_access"]], "unsafe_set_dtype() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.unsafe_set_dtype"]], "vectorize() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.vectorize"]], "with_decision() (tvm.tir.schedule.trace method)": [[32, "tvm.tir.schedule.Trace.with_decision"]], "work_on() (tvm.tir.schedule.schedule method)": [[32, "tvm.tir.schedule.Schedule.work_on"]], "ir_transform() (in module tvm.tir.stmt_functor)": [[33, "tvm.tir.stmt_functor.ir_transform"]], "post_order_visit() (in module tvm.tir.stmt_functor)": [[33, "tvm.tir.stmt_functor.post_order_visit"]], "pre_order_visit() (in module tvm.tir.stmt_functor)": [[33, "tvm.tir.stmt_functor.pre_order_visit"]], "renew_defs() (in module tvm.tir.stmt_functor)": [[33, "tvm.tir.stmt_functor.renew_defs"]], "substitute() (in module tvm.tir.stmt_functor)": [[33, "tvm.tir.stmt_functor.substitute"]], "tvm.tir.stmt_functor": [[33, "module-tvm.tir.stmt_functor"]], "add (class in tvm.tir)": [[34, "tvm.tir.Add"]], "allocate (class in tvm.tir)": [[34, "tvm.tir.Allocate"]], "allocateconst (class in tvm.tir)": [[34, "tvm.tir.AllocateConst"]], "and (class in tvm.tir)": [[34, "tvm.tir.And"]], "any (class in tvm.tir)": [[34, "tvm.tir.Any"]], "assertstmt (class in tvm.tir)": [[34, "tvm.tir.AssertStmt"]], "attrstmt (class in tvm.tir)": [[34, "tvm.tir.AttrStmt"]], "bijectivelayout (class in tvm.tir)": [[34, "tvm.tir.BijectiveLayout"]], "block (class in tvm.tir)": [[34, "tvm.tir.Block"]], "blockdependenceinfo (class in tvm.tir)": [[34, "tvm.tir.BlockDependenceInfo"]], "blockrealize (class in tvm.tir)": [[34, "tvm.tir.BlockRealize"]], "broadcast (class in tvm.tir)": [[34, "tvm.tir.Broadcast"]], "buffer (class in tvm.tir)": [[34, "tvm.tir.Buffer"]], "bufferload (class in tvm.tir)": [[34, "tvm.tir.BufferLoad"]], "bufferrealize (class in tvm.tir)": [[34, "tvm.tir.BufferRealize"]], "bufferregion (class in tvm.tir)": [[34, "tvm.tir.BufferRegion"]], "bufferstore (class in tvm.tir)": [[34, "tvm.tir.BufferStore"]], "call (class in tvm.tir)": [[34, "tvm.tir.Call"]], "calleffectkind (class in tvm.tir)": [[34, "tvm.tir.CallEffectKind"]], "cast (class in tvm.tir)": [[34, "tvm.tir.Cast"]], "commreducer (class in tvm.tir)": [[34, "tvm.tir.CommReducer"]], "dataproducer (class in tvm.tir)": [[34, "tvm.tir.DataProducer"]], "declbuffer (class in tvm.tir)": [[34, "tvm.tir.DeclBuffer"]], "div (class in tvm.tir)": [[34, "tvm.tir.Div"]], "eq (class in tvm.tir)": [[34, "tvm.tir.EQ"]], "evaluate (class in tvm.tir)": [[34, "tvm.tir.Evaluate"]], "floatimm (class in tvm.tir)": [[34, "tvm.tir.FloatImm"]], "floordiv (class in tvm.tir)": [[34, "tvm.tir.FloorDiv"]], "floormod (class in tvm.tir)": [[34, "tvm.tir.FloorMod"]], "for (class in tvm.tir)": [[34, "tvm.tir.For"]], "forkind (class in tvm.tir)": [[34, "tvm.tir.ForKind"]], "ge (class in tvm.tir)": [[34, "tvm.tir.GE"]], "gt (class in tvm.tir)": [[34, "tvm.tir.GT"]], "ifthenelse (class in tvm.tir)": [[34, "tvm.tir.IfThenElse"]], "indexmap (class in tvm.tir)": [[34, "tvm.tir.IndexMap"]], "intimm (class in tvm.tir)": [[34, "tvm.tir.IntImm"]], "itervar (class in tvm.tir)": [[34, "tvm.tir.IterVar"]], "le (class in tvm.tir)": [[34, "tvm.tir.LE"]], "lt (class in tvm.tir)": [[34, "tvm.tir.LT"]], "layout (class in tvm.tir)": [[34, "tvm.tir.Layout"]], "let (class in tvm.tir)": [[34, "tvm.tir.Let"]], "letstmt (class in tvm.tir)": [[34, "tvm.tir.LetStmt"]], "matchbufferregion (class in tvm.tir)": [[34, "tvm.tir.MatchBufferRegion"]], "max (class in tvm.tir)": [[34, "tvm.tir.Max"]], "min (class in tvm.tir)": [[34, "tvm.tir.Min"]], "mod (class in tvm.tir)": [[34, "tvm.tir.Mod"]], "mul (class in tvm.tir)": [[34, "tvm.tir.Mul"]], "ne (class in tvm.tir)": [[34, "tvm.tir.NE"]], "not (class in tvm.tir)": [[34, "tvm.tir.Not"]], "or (class in tvm.tir)": [[34, "tvm.tir.Or"]], "prefetch (class in tvm.tir)": [[34, "tvm.tir.Prefetch"]], "primfunc (class in tvm.tir)": [[34, "tvm.tir.PrimFunc"]], "producerload (class in tvm.tir)": [[34, "tvm.tir.ProducerLoad"]], "producerrealize (class in tvm.tir)": [[34, "tvm.tir.ProducerRealize"]], "producerstore (class in tvm.tir)": [[34, "tvm.tir.ProducerStore"]], "ramp (class in tvm.tir)": [[34, "tvm.tir.Ramp"]], "reduce (class in tvm.tir)": [[34, "tvm.tir.Reduce"]], "select (class in tvm.tir)": [[34, "tvm.tir.Select"]], "seqstmt (class in tvm.tir)": [[34, "tvm.tir.SeqStmt"]], "shuffle (class in tvm.tir)": [[34, "tvm.tir.Shuffle"]], "sizevar (class in tvm.tir)": [[34, "tvm.tir.SizeVar"]], "stmt (class in tvm.tir)": [[34, "tvm.tir.Stmt"]], "stringimm (class in tvm.tir)": [[34, "tvm.tir.StringImm"]], "sub (class in tvm.tir)": [[34, "tvm.tir.Sub"]], "tvmbackendallocworkspace() (in module tvm.tir)": [[34, "tvm.tir.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tvm.tir)": [[34, "tvm.tir.TVMBackendFreeWorkspace"]], "tensorintrin (class in tvm.tir)": [[34, "tvm.tir.TensorIntrin"]], "var (class in tvm.tir)": [[34, "tvm.tir.Var"]], "while (class in tvm.tir)": [[34, "tvm.tir.While"]], "abs() (in module tvm.tir)": [[34, "tvm.tir.abs"]], "access_ptr() (tvm.tir.buffer method)": [[34, "tvm.tir.Buffer.access_ptr"]], "acos() (in module tvm.tir)": [[34, "tvm.tir.acos"]], "acosh() (in module tvm.tir)": [[34, "tvm.tir.acosh"]], "add() (in module tvm.tir)": [[34, "tvm.tir.add"]], "address_of() (in module tvm.tir)": [[34, "tvm.tir.address_of"]], "all() (in module tvm.tir)": [[34, "tvm.tir.all"]], "any() (in module tvm.tir)": [[34, "tvm.tir.any"]], "asin() (in module tvm.tir)": [[34, "tvm.tir.asin"]], "asinh() (in module tvm.tir)": [[34, "tvm.tir.asinh"]], "assume() (in module tvm.tir)": [[34, "tvm.tir.assume"]], "atan() (in module tvm.tir)": [[34, "tvm.tir.atan"]], "atan2() (in module tvm.tir)": [[34, "tvm.tir.atan2"]], "atanh() (in module tvm.tir)": [[34, "tvm.tir.atanh"]], "backward_index() (tvm.tir.bijectivelayout method)": [[34, "tvm.tir.BijectiveLayout.backward_index"]], "backward_shape() (tvm.tir.bijectivelayout method)": [[34, "tvm.tir.BijectiveLayout.backward_shape"]], "bijective_layout() (in module tvm.tir)": [[34, "tvm.tir.bijective_layout"]], "bitwise_and() (in module tvm.tir)": [[34, "tvm.tir.bitwise_and"]], "bitwise_not() (in module tvm.tir)": [[34, "tvm.tir.bitwise_not"]], "bitwise_or() (in module tvm.tir)": [[34, "tvm.tir.bitwise_or"]], "bitwise_xor() (in module tvm.tir)": [[34, "tvm.tir.bitwise_xor"]], "call_cpacked() (in module tvm.tir)": [[34, "tvm.tir.call_cpacked"]], "call_cpacked_lowered() (in module tvm.tir)": [[34, "tvm.tir.call_cpacked_lowered"]], "call_extern() (in module tvm.tir)": [[34, "tvm.tir.call_extern"]], "call_intrin() (in module tvm.tir)": [[34, "tvm.tir.call_intrin"]], "call_llvm_intrin() (in module tvm.tir)": [[34, "tvm.tir.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tvm.tir)": [[34, "tvm.tir.call_llvm_pure_intrin"]], "call_packed() (in module tvm.tir)": [[34, "tvm.tir.call_packed"]], "call_packed_lowered() (in module tvm.tir)": [[34, "tvm.tir.call_packed_lowered"]], "call_pure_extern() (in module tvm.tir)": [[34, "tvm.tir.call_pure_extern"]], "call_tir() (in module tvm.tir)": [[34, "tvm.tir.call_tir"]], "ceil() (in module tvm.tir)": [[34, "tvm.tir.ceil"]], "ceildiv() (in module tvm.tir)": [[34, "tvm.tir.ceildiv"]], "clz() (in module tvm.tir)": [[34, "tvm.tir.clz"]], "comm_reducer() (in module tvm.tir)": [[34, "tvm.tir.comm_reducer"]], "copysign() (in module tvm.tir)": [[34, "tvm.tir.copysign"]], "cos() (in module tvm.tir)": [[34, "tvm.tir.cos"]], "cosh() (in module tvm.tir)": [[34, "tvm.tir.cosh"]], "create_barriers() (in module tvm.tir)": [[34, "tvm.tir.create_barriers"]], "decl_buffer() (in module tvm.tir)": [[34, "tvm.tir.decl_buffer"]], "div() (in module tvm.tir)": [[34, "tvm.tir.div"]], "end_profile_intrinsic() (in module tvm.tir)": [[34, "tvm.tir.end_profile_intrinsic"]], "erf() (in module tvm.tir)": [[34, "tvm.tir.erf"]], "exp() (in module tvm.tir)": [[34, "tvm.tir.exp"]], "exp10() (in module tvm.tir)": [[34, "tvm.tir.exp10"]], "exp2() (in module tvm.tir)": [[34, "tvm.tir.exp2"]], "factor_of() (tvm.tir.layout method)": [[34, "tvm.tir.Layout.factor_of"]], "floor() (in module tvm.tir)": [[34, "tvm.tir.floor"]], "floordiv() (in module tvm.tir)": [[34, "tvm.tir.floordiv"]], "floormod() (in module tvm.tir)": [[34, "tvm.tir.floormod"]], "fmod() (in module tvm.tir)": [[34, "tvm.tir.fmod"]], "forward_index() (tvm.tir.bijectivelayout method)": [[34, "tvm.tir.BijectiveLayout.forward_index"]], "forward_shape() (tvm.tir.bijectivelayout method)": [[34, "tvm.tir.BijectiveLayout.forward_shape"]], "from_func() (tvm.tir.indexmap static method)": [[34, "tvm.tir.IndexMap.from_func"]], "from_func_with_separators() (tvm.tir.indexmap static method)": [[34, "tvm.tir.IndexMap.from_func_with_separators"]], "get() (tvm.tir.tensorintrin static method)": [[34, "tvm.tir.TensorIntrin.get"]], "get_block_scope() (tvm.tir.blockdependenceinfo method)": [[34, "tvm.tir.BlockDependenceInfo.get_block_scope"]], "get_flattened_buffer() (tvm.tir.buffer method)": [[34, "tvm.tir.Buffer.get_flattened_buffer"]], "get_sref() (tvm.tir.blockdependenceinfo method)": [[34, "tvm.tir.BlockDependenceInfo.get_sref"]], "hypot() (in module tvm.tir)": [[34, "tvm.tir.hypot"]], "if_then_else() (in module tvm.tir)": [[34, "tvm.tir.if_then_else"]], "index_of() (tvm.tir.layout method)": [[34, "tvm.tir.Layout.index_of"]], "indexdiv() (in module tvm.tir)": [[34, "tvm.tir.indexdiv"]], "indexmod() (in module tvm.tir)": [[34, "tvm.tir.indexmod"]], "infinity() (in module tvm.tir)": [[34, "tvm.tir.infinity"]], "inverse() (tvm.tir.indexmap method)": [[34, "tvm.tir.IndexMap.inverse"]], "is_equivalent_to() (tvm.tir.indexmap method)": [[34, "tvm.tir.IndexMap.is_equivalent_to"]], "isfinite() (in module tvm.tir)": [[34, "tvm.tir.isfinite"]], "isinf() (in module tvm.tir)": [[34, "tvm.tir.isinf"]], "isnan() (in module tvm.tir)": [[34, "tvm.tir.isnan"]], "isnullptr() (in module tvm.tir)": [[34, "tvm.tir.isnullptr"]], "layout() (in module tvm.tir)": [[34, "tvm.tir.layout"]], "ldexp() (in module tvm.tir)": [[34, "tvm.tir.ldexp"]], "likely() (in module tvm.tir)": [[34, "tvm.tir.likely"]], "log() (in module tvm.tir)": [[34, "tvm.tir.log"]], "log10() (in module tvm.tir)": [[34, "tvm.tir.log10"]], "log1p() (in module tvm.tir)": [[34, "tvm.tir.log1p"]], "log2() (in module tvm.tir)": [[34, "tvm.tir.log2"]], "lookup_param() (in module tvm.tir)": [[34, "tvm.tir.lookup_param"]], "map_indices() (tvm.tir.indexmap method)": [[34, "tvm.tir.IndexMap.map_indices"]], "map_ndarray() (tvm.tir.indexmap method)": [[34, "tvm.tir.IndexMap.map_ndarray"]], "map_shape() (tvm.tir.indexmap method)": [[34, "tvm.tir.IndexMap.map_shape"]], "max() (in module tvm.tir)": [[34, "tvm.tir.max"]], "max_value() (in module tvm.tir)": [[34, "tvm.tir.max_value"]], "min() (in module tvm.tir)": [[34, "tvm.tir.min"]], "min_value() (in module tvm.tir)": [[34, "tvm.tir.min_value"]], "mma_fill() (in module tvm.tir)": [[34, "tvm.tir.mma_fill"]], "mma_store() (in module tvm.tir)": [[34, "tvm.tir.mma_store"]], "multiply() (in module tvm.tir)": [[34, "tvm.tir.multiply"]], "nearbyint() (in module tvm.tir)": [[34, "tvm.tir.nearbyint"]], "nextafter() (in module tvm.tir)": [[34, "tvm.tir.nextafter"]], "non_surjective_inverse() (tvm.tir.indexmap method)": [[34, "tvm.tir.IndexMap.non_surjective_inverse"]], "offset_of() (tvm.tir.buffer method)": [[34, "tvm.tir.Buffer.offset_of"]], "popcount() (in module tvm.tir)": [[34, "tvm.tir.popcount"]], "pow() (in module tvm.tir)": [[34, "tvm.tir.pow"]], "power() (in module tvm.tir)": [[34, "tvm.tir.power"]], "ptx_arrive_barrier() (in module tvm.tir)": [[34, "tvm.tir.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tvm.tir)": [[34, "tvm.tir.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tvm.tir)": [[34, "tvm.tir.ptx_commit_group"]], "ptx_cp_async() (in module tvm.tir)": [[34, "tvm.tir.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tvm.tir)": [[34, "tvm.tir.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tvm.tir)": [[34, "tvm.tir.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tvm.tir)": [[34, "tvm.tir.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tvm.tir)": [[34, "tvm.tir.ptx_ldmatrix"]], "ptx_mma() (in module tvm.tir)": [[34, "tvm.tir.ptx_mma"]], "ptx_mma_sp() (in module tvm.tir)": [[34, "tvm.tir.ptx_mma_sp"]], "ptx_wait_barrier() (in module tvm.tir)": [[34, "tvm.tir.ptx_wait_barrier"]], "ptx_wait_group() (in module tvm.tir)": [[34, "tvm.tir.ptx_wait_group"]], "q_multiply_shift() (in module tvm.tir)": [[34, "tvm.tir.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tvm.tir)": [[34, "tvm.tir.q_multiply_shift_per_axis"]], "register() (tvm.tir.tensorintrin static method)": [[34, "tvm.tir.TensorIntrin.register"]], "reinterpret() (in module tvm.tir)": [[34, "tvm.tir.reinterpret"]], "ret() (in module tvm.tir)": [[34, "tvm.tir.ret"]], "round() (in module tvm.tir)": [[34, "tvm.tir.round"]], "rsqrt() (in module tvm.tir)": [[34, "tvm.tir.rsqrt"]], "scope() (tvm.tir.buffer method)": [[34, "tvm.tir.Buffer.scope"]], "shift_left() (in module tvm.tir)": [[34, "tvm.tir.shift_left"]], "shift_right() (in module tvm.tir)": [[34, "tvm.tir.shift_right"]], "sigmoid() (in module tvm.tir)": [[34, "tvm.tir.sigmoid"]], "sin() (in module tvm.tir)": [[34, "tvm.tir.sin"]], "sinh() (in module tvm.tir)": [[34, "tvm.tir.sinh"]], "specialize() (tvm.tir.primfunc method)": [[34, "tvm.tir.PrimFunc.specialize"]], "sqrt() (in module tvm.tir)": [[34, "tvm.tir.sqrt"]], "start_profile_intrinsic() (in module tvm.tir)": [[34, "tvm.tir.start_profile_intrinsic"]], "stmt_list() (in module tvm.tir)": [[34, "tvm.tir.stmt_list"]], "stmt_seq() (in module tvm.tir)": [[34, "tvm.tir.stmt_seq"]], "subtract() (in module tvm.tir)": [[34, "tvm.tir.subtract"]], "sum() (in module tvm.tir)": [[34, "tvm.tir.sum"]], "tan() (in module tvm.tir)": [[34, "tvm.tir.tan"]], "tanh() (in module tvm.tir)": [[34, "tvm.tir.tanh"]], "trace() (in module tvm.tir)": [[34, "tvm.tir.trace"]], "trunc() (in module tvm.tir)": [[34, "tvm.tir.trunc"]], "truncdiv() (in module tvm.tir)": [[34, "tvm.tir.truncdiv"]], "truncmod() (in module tvm.tir)": [[34, "tvm.tir.truncmod"]], "tvm.tir": [[34, "module-tvm.tir"]], "tvm_access_ptr() (in module tvm.tir)": [[34, "tvm.tir.tvm_access_ptr"]], "tvm_bmma_sync() (in module tvm.tir)": [[34, "tvm.tir.tvm_bmma_sync"]], "tvm_check_return() (in module tvm.tir)": [[34, "tvm.tir.tvm_check_return"]], "tvm_fill_fragment() (in module tvm.tir)": [[34, "tvm.tir.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tvm.tir)": [[34, "tvm.tir.tvm_load_matrix_sync"]], "tvm_mma_sync() (in module tvm.tir)": [[34, "tvm.tir.tvm_mma_sync"]], "tvm_stack_alloca() (in module tvm.tir)": [[34, "tvm.tir.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tvm.tir)": [[34, "tvm.tir.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tvm.tir)": [[34, "tvm.tir.tvm_stack_make_shape"]], "tvm_store_matrix_sync() (in module tvm.tir)": [[34, "tvm.tir.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tvm.tir)": [[34, "tvm.tir.tvm_struct_get"]], "tvm_struct_set() (in module tvm.tir)": [[34, "tvm.tir.tvm_struct_set"]], "tvm_thread_allreduce() (in module tvm.tir)": [[34, "tvm.tir.tvm_thread_allreduce"]], "tvm_throw_last_error() (in module tvm.tir)": [[34, "tvm.tir.tvm_throw_last_error"]], "tvm_tuple() (in module tvm.tir)": [[34, "tvm.tir.tvm_tuple"]], "type_annotation() (in module tvm.tir)": [[34, "tvm.tir.type_annotation"]], "undef() (in module tvm.tir)": [[34, "tvm.tir.undef"]], "vectorcombine() (in module tvm.tir)": [[34, "tvm.tir.vectorcombine"]], "vectorhigh() (in module tvm.tir)": [[34, "tvm.tir.vectorhigh"]], "vectorlow() (in module tvm.tir)": [[34, "tvm.tir.vectorlow"]], "vload() (tvm.tir.buffer method)": [[34, "tvm.tir.Buffer.vload"]], "vstore() (tvm.tir.buffer method)": [[34, "tvm.tir.Buffer.vstore"]], "with_body() (tvm.tir.primfunc method)": [[34, "tvm.tir.PrimFunc.with_body"]], "all (tvm.tir.transform.hoistedconditionals attribute)": [[35, "tvm.tir.transform.HoistedConditionals.All"]], "all (tvm.tir.transform.hoistedletbindings attribute)": [[35, "tvm.tir.transform.HoistedLetBindings.All"]], "annotatedeviceregions() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.AnnotateDeviceRegions"]], "annotateentryfunc() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.AnnotateEntryFunc"]], "apply() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.Apply"]], "applylayouttransforms() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ApplyLayoutTransforms"]], "bf16computelegalize() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.BF16ComputeLegalize"]], "bf16storagelegalize() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.BF16StorageLegalize"]], "bindtarget() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.BindTarget"]], "booleanexpression (tvm.tir.transform.hoistedconditionals attribute)": [[35, "tvm.tir.transform.HoistedConditionals.BooleanExpression"]], "coprocsync() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.CoProcSync"]], "combinecontextcall() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.CombineContextCall"]], "commonsubexprelimtir() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.CommonSubexprElimTIR"]], "compactbufferallocation() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.CompactBufferAllocation"]], "convertblockstoopaque() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ConvertBlocksToOpaque"]], "convertforloopstoserial() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ConvertForLoopsToSerial"]], "convertssa() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ConvertSSA"]], "decoratedevicescope() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.DecorateDeviceScope"]], "defaultgpuschedule() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.DefaultGPUSchedule"]], "extractprimfuncconstants() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ExtractPrimFuncConstants"]], "fp8computelegalize() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.FP8ComputeLegalize"]], "fp8storagelegalize() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.FP8StorageLegalize"]], "filter() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.Filter"]], "flattenbuffer() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.FlattenBuffer"]], "forcenarrowindextoint32() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ForceNarrowIndexToInt32"]], "hoistexpression() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.HoistExpression"]], "hoistifthenelse() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.HoistIfThenElse"]], "hoistedconditionals (class in tvm.tir.transform)": [[35, "tvm.tir.transform.HoistedConditionals"]], "hoistedletbindings (class in tvm.tir.transform)": [[35, "tvm.tir.transform.HoistedLetBindings"]], "ifelseexpr (tvm.tir.transform.hoistedconditionals attribute)": [[35, "tvm.tir.transform.HoistedConditionals.IfElseExpr"]], "ifelsestmt (tvm.tir.transform.hoistedconditionals attribute)": [[35, "tvm.tir.transform.HoistedConditionals.IfElseStmt"]], "inferfragment() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InferFragment"]], "injectcopyintrin() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectCopyIntrin"]], "injectdoublebuffer() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectDoubleBuffer"]], "injectptxasynccopy() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectPTXAsyncCopy"]], "injectpermutedlayout() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectPermutedLayout"]], "injectprefetch() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectPrefetch"]], "injectrollingbuffer() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectRollingBuffer"]], "injectsoftwarepipeline() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectSoftwarePipeline"]], "injectvirtualthread() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InjectVirtualThread"]], "installdebugspans() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InstallDebugSpans"]], "instrumentboundcheckers() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InstrumentBoundCheckers"]], "instrumentprofileintrinsics() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.InstrumentProfileIntrinsics"]], "legalizepackedcalls() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LegalizePackedCalls"]], "letexpr (tvm.tir.transform.hoistedletbindings attribute)": [[35, "tvm.tir.transform.HoistedLetBindings.LetExpr"]], "letstmt (tvm.tir.transform.hoistedletbindings attribute)": [[35, "tvm.tir.transform.HoistedLetBindings.LetStmt"]], "liftattrscope() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LiftAttrScope"]], "liftthreadbinding() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LiftThreadBinding"]], "looppartition() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LoopPartition"]], "lowerautocopy() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerAutoCopy"]], "lowercrossthreadreduction() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerCrossThreadReduction"]], "lowercustomdatatypes() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerCustomDatatypes"]], "lowerdevicekernellaunch() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerDeviceKernelLaunch"]], "lowerdevicestorageaccessinfo() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerDeviceStorageAccessInfo"]], "lowerinitblock() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerInitBlock"]], "lowerintrin() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerIntrin"]], "lowermatchbuffer() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerMatchBuffer"]], "loweropaqueblock() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerOpaqueBlock"]], "lowertvmbuiltin() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerTVMBuiltin"]], "lowerthreadallreduce() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerThreadAllreduce"]], "lowerwarpmemory() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.LowerWarpMemory"]], "makepackedapi() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.MakePackedAPI"]], "makeunpackedapi() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.MakeUnpackedAPI"]], "manifestsharedmemorylocalstage() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ManifestSharedMemoryLocalStage"]], "mergedynamicsharedmemoryallocations() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.MergeDynamicSharedMemoryAllocations"]], "narrowdatatype() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.NarrowDataType"]], "never (tvm.tir.transform.hoistedconditionals attribute)": [[35, "tvm.tir.transform.HoistedConditionals.Never"]], "never (tvm.tir.transform.hoistedletbindings attribute)": [[35, "tvm.tir.transform.HoistedLetBindings.Never"]], "planandupdatebufferallocationlocation() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.PlanAndUpdateBufferAllocationLocation"]], "primfuncpass (class in tvm.tir.transform)": [[35, "tvm.tir.transform.PrimFuncPass"]], "reducebranchingthroughovercompute() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ReduceBranchingThroughOvercompute"]], "removeassume() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.RemoveAssume"]], "removenoop() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.RemoveNoOp"]], "removestoreundef() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.RemoveStoreUndef"]], "removeweightlayoutrewriteblock() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.RemoveWeightLayoutRewriteBlock"]], "renormalizesplitpattern() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.RenormalizeSplitPattern"]], "requiredbyconditional (tvm.tir.transform.hoistedletbindings attribute)": [[35, "tvm.tir.transform.HoistedLetBindings.RequiredByConditional"]], "rewriteunsafeselect() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.RewriteUnsafeSelect"]], "simplify() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.Simplify"]], "skipassert() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.SkipAssert"]], "splithostdevice() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.SplitHostDevice"]], "storageflatten() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.StorageFlatten"]], "storagerewrite() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.StorageRewrite"]], "textureflatten() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.TextureFlatten"]], "threadsync() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.ThreadSync"]], "transformmmabufferlayout() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.TransformMmaBufferLayout"]], "unifythreadbinding() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.UnifyThreadBinding"]], "unrollloop() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.UnrollLoop"]], "usingblockvar (tvm.tir.transform.hoistedconditionals attribute)": [[35, "tvm.tir.transform.HoistedConditionals.UsingBlockVar"]], "vectorizeloop() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.VectorizeLoop"]], "verifymemory() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.VerifyMemory"]], "verifyvtcmlimit() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.VerifyVTCMLimit"]], "prim_func_pass() (in module tvm.tir.transform)": [[35, "tvm.tir.transform.prim_func_pass"]], "tvm.tir.transform": [[35, "module-tvm.tir.transform"]], "invalidshapeerror": [[36, "tvm.topi.InvalidShapeError"]], "workload (class in tvm.topi.nn)": [[36, "tvm.topi.nn.Workload"]], "abs() (in module tvm.topi)": [[36, "tvm.topi.abs"]], "acos() (in module tvm.topi)": [[36, "tvm.topi.acos"]], "acosh() (in module tvm.topi)": [[36, "tvm.topi.acosh"]], "adaptive_pool() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.adaptive_pool"]], "adaptive_pool3d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.adaptive_pool3d"]], "add() (in module tvm.topi)": [[36, "tvm.topi.add"]], "add_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.add_alter_layout"]], "adv_index() (in module tvm.topi)": [[36, "tvm.topi.adv_index"]], "affine_grid() (in module tvm.topi.image)": [[36, "tvm.topi.image.affine_grid"]], "all() (in module tvm.topi)": [[36, "tvm.topi.all"]], "any() (in module tvm.topi)": [[36, "tvm.topi.any"]], "arange() (in module tvm.topi)": [[36, "tvm.topi.arange"]], "argmax() (in module tvm.topi)": [[36, "tvm.topi.argmax"]], "argmin() (in module tvm.topi)": [[36, "tvm.topi.argmin"]], "argsort() (in module tvm.topi)": [[36, "tvm.topi.argsort"]], "argwhere() (in module tvm.topi)": [[36, "tvm.topi.argwhere"]], "asin() (in module tvm.topi)": [[36, "tvm.topi.asin"]], "asinh() (in module tvm.topi)": [[36, "tvm.topi.asinh"]], "atan() (in module tvm.topi)": [[36, "tvm.topi.atan"]], "atanh() (in module tvm.topi)": [[36, "tvm.topi.atanh"]], "batch_matmul() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.batch_matmul"]], "batch_matmul_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.batch_matmul_legalize"]], "batch_norm() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.batch_norm"]], "batch_to_space_nd() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.batch_to_space_nd"]], "bias_add_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.bias_add_legalize"]], "binarize_pack() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.binarize_pack"]], "binary_dense() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.binary_dense"]], "binary_search() (in module tvm.topi)": [[36, "tvm.topi.binary_search"]], "bitpack() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.bitpack"]], "bitserial_conv2d_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.bitserial_conv2d_legalize"]], "bitserial_conv2d_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.bitserial_conv2d_nchw"]], "bitserial_conv2d_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.bitserial_conv2d_nhwc"]], "bitserial_dense() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.bitserial_dense"]], "bitwise_and() (in module tvm.topi)": [[36, "tvm.topi.bitwise_and"]], "bitwise_not() (in module tvm.topi)": [[36, "tvm.topi.bitwise_not"]], "bitwise_or() (in module tvm.topi)": [[36, "tvm.topi.bitwise_or"]], "bitwise_xor() (in module tvm.topi)": [[36, "tvm.topi.bitwise_xor"]], "broadcast_to() (in module tvm.topi)": [[36, "tvm.topi.broadcast_to"]], "can_convert_multiply_to_intdiv() (in module tvm.topi.image)": [[36, "tvm.topi.image.can_convert_multiply_to_intdiv"]], "cast() (in module tvm.topi)": [[36, "tvm.topi.cast"]], "ceil() (in module tvm.topi)": [[36, "tvm.topi.ceil"]], "ceil_log2() (in module tvm.topi)": [[36, "tvm.topi.ceil_log2"]], "clip() (in module tvm.topi)": [[36, "tvm.topi.clip"]], "collapse_sum() (in module tvm.topi)": [[36, "tvm.topi.collapse_sum"]], "concatenate() (in module tvm.topi)": [[36, "tvm.topi.concatenate"]], "concatenate() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.concatenate"]], "const_vector() (in module tvm.topi)": [[36, "tvm.topi.const_vector"]], "conv() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv"]], "conv1d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv1d"]], "conv1d_ncw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv1d_ncw"]], "conv1d_nwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv1d_nwc"]], "conv1d_transpose_ncw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv1d_transpose_ncw"]], "conv2d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d"]], "conv2d_nchwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_NCHWc"]], "conv2d_nchwc_int8() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_NCHWc_int8"]], "conv2d_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_alter_layout"]], "conv2d_gemm_weight_transform() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_gemm_weight_transform"]], "conv2d_hwcn() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_hwcn"]], "conv2d_infer_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_infer_layout"]], "conv2d_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_legalize"]], "conv2d_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_nchw"]], "conv2d_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_nhwc"]], "conv2d_transpose_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_transpose_legalize"]], "conv2d_transpose_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_transpose_nchw"]], "conv2d_transpose_nchw_preprocess() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_transpose_nchw_preprocess"]], "conv2d_winograd_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_winograd_nchw"]], "conv2d_winograd_nchw_without_weight_transform() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_winograd_nchw_without_weight_transform"]], "conv2d_winograd_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_winograd_nhwc"]], "conv2d_winograd_nhwc_without_weight_transform() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_winograd_nhwc_without_weight_transform"]], "conv2d_winograd_nnpack_weight_transform() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_winograd_nnpack_weight_transform"]], "conv2d_winograd_weight_transform() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv2d_winograd_weight_transform"]], "conv3d_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv3d_alter_layout"]], "conv3d_ncdhw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv3d_ncdhw"]], "conv3d_ndhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv3d_ndhwc"]], "conv3d_transpose_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv3d_transpose_legalize"]], "conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv3d_transpose_ncdhw"]], "conv3d_transpose_ncdhw_preprocess() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv3d_transpose_ncdhw_preprocess"]], "conv3d_winograd_weight_transform() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.conv3d_winograd_weight_transform"]], "correlation_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.correlation_nchw"]], "cos() (in module tvm.topi)": [[36, "tvm.topi.cos"]], "cosh() (in module tvm.topi)": [[36, "tvm.topi.cosh"]], "crop_and_resize() (in module tvm.topi.image)": [[36, "tvm.topi.image.crop_and_resize"]], "csrmm() (in module tvm.topi.sparse)": [[36, "tvm.topi.sparse.csrmm"]], "csrmv() (in module tvm.topi.sparse)": [[36, "tvm.topi.sparse.csrmv"]], "cumprod() (in module tvm.topi)": [[36, "tvm.topi.cumprod"]], "cumsum() (in module tvm.topi)": [[36, "tvm.topi.cumsum"]], "decl_buffer() (in module tvm.topi)": [[36, "tvm.topi.decl_buffer"]], "declaration_conv2d_transpose_impl() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.declaration_conv2d_transpose_impl"]], "declaration_conv3d_transpose_impl() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.declaration_conv3d_transpose_impl"]], "deformable_conv2d_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.deformable_conv2d_nchw"]], "deformable_conv2d_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.deformable_conv2d_nhwc"]], "dense() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.dense"]], "dense() (in module tvm.topi.sparse)": [[36, "tvm.topi.sparse.dense"]], "dense_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.dense_alter_layout"]], "dense_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.dense_legalize"]], "dense_pack() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.dense_pack"]], "depth_to_space() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.depth_to_space"]], "depthwise_conv2d_nchwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.depthwise_conv2d_NCHWc"]], "depthwise_conv2d_backward_input_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.depthwise_conv2d_backward_input_nhwc"]], "depthwise_conv2d_backward_weight_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.depthwise_conv2d_backward_weight_nhwc"]], "depthwise_conv2d_infer_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.depthwise_conv2d_infer_layout"]], "depthwise_conv2d_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.depthwise_conv2d_nchw"]], "depthwise_conv2d_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.depthwise_conv2d_nhwc"]], "dft() (in module tvm.topi)": [[36, "tvm.topi.dft"]], "dilate() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.dilate"]], "dilation2d_nchw() (in module tvm.topi.image)": [[36, "tvm.topi.image.dilation2d_nchw"]], "dilation2d_nhwc() (in module tvm.topi.image)": [[36, "tvm.topi.image.dilation2d_nhwc"]], "dilation_h (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.dilation_h"]], "dilation_w (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.dilation_w"]], "div() (in module tvm.topi)": [[36, "tvm.topi.div"]], "divide() (in module tvm.topi)": [[36, "tvm.topi.divide"]], "dynamic_strided_slice() (in module tvm.topi)": [[36, "tvm.topi.dynamic_strided_slice"]], "einsum() (in module tvm.topi)": [[36, "tvm.topi.einsum"]], "elemwise_sum() (in module tvm.topi)": [[36, "tvm.topi.elemwise_sum"]], "equal() (in module tvm.topi)": [[36, "tvm.topi.equal"]], "equal_const_int() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.equal_const_int"]], "erf() (in module tvm.topi)": [[36, "tvm.topi.erf"]], "erf_legalize() (in module tvm.topi)": [[36, "tvm.topi.erf_legalize"]], "exp() (in module tvm.topi)": [[36, "tvm.topi.exp"]], "expand_dims() (in module tvm.topi)": [[36, "tvm.topi.expand_dims"]], "expand_like() (in module tvm.topi)": [[36, "tvm.topi.expand_like"]], "extern() (in module tvm.topi)": [[36, "tvm.topi.extern"]], "fast_erf() (in module tvm.topi)": [[36, "tvm.topi.fast_erf"]], "fast_exp() (in module tvm.topi)": [[36, "tvm.topi.fast_exp"]], "fast_softmax() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.fast_softmax"]], "fast_tanh() (in module tvm.topi)": [[36, "tvm.topi.fast_tanh"]], "fifo_buffer() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.fifo_buffer"]], "fixed_point_multiply() (in module tvm.topi)": [[36, "tvm.topi.fixed_point_multiply"]], "fixed_point_multiply_per_axis() (in module tvm.topi)": [[36, "tvm.topi.fixed_point_multiply_per_axis"]], "flatten() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.flatten"]], "flip() (in module tvm.topi)": [[36, "tvm.topi.flip"]], "floor() (in module tvm.topi)": [[36, "tvm.topi.floor"]], "floor_divide() (in module tvm.topi)": [[36, "tvm.topi.floor_divide"]], "floor_mod() (in module tvm.topi)": [[36, "tvm.topi.floor_mod"]], "floordiv() (in module tvm.topi)": [[36, "tvm.topi.floordiv"]], "floormod() (in module tvm.topi)": [[36, "tvm.topi.floormod"]], "full() (in module tvm.topi)": [[36, "tvm.topi.full"]], "full_like() (in module tvm.topi)": [[36, "tvm.topi.full_like"]], "gather() (in module tvm.topi)": [[36, "tvm.topi.gather"]], "gather_nd() (in module tvm.topi)": [[36, "tvm.topi.gather_nd"]], "get_1d_indices() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_1d_indices"]], "get_1d_pixel() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_1d_pixel"]], "get_2d_indices() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_2d_indices"]], "get_2d_pixel() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_2d_pixel"]], "get_3d_indices() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_3d_indices"]], "get_3d_pixel() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_3d_pixel"]], "get_closest_index() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_closest_index"]], "get_const_int() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.get_const_int"]], "get_const_tuple() (in module tvm.topi)": [[36, "tvm.topi.get_const_tuple"]], "get_const_tuple() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.get_const_tuple"]], "get_inx() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_inx"]], "get_pad_tuple() (in module tvm.topi.image)": [[36, "tvm.topi.image.get_pad_tuple"]], "get_pad_tuple() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.get_pad_tuple"]], "get_pad_tuple1d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.get_pad_tuple1d"]], "get_pad_tuple3d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.get_pad_tuple3d"]], "get_pad_tuple_generic() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.get_pad_tuple_generic"]], "global_pool() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.global_pool"]], "greater() (in module tvm.topi)": [[36, "tvm.topi.greater"]], "greater_equal() (in module tvm.topi)": [[36, "tvm.topi.greater_equal"]], "grid_sample() (in module tvm.topi.image)": [[36, "tvm.topi.image.grid_sample"]], "group_conv1d_ncw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.group_conv1d_ncw"]], "group_conv1d_nwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.group_conv1d_nwc"]], "group_conv2d_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.group_conv2d_nchw"]], "group_conv2d_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.group_conv2d_nhwc"]], "group_conv2d_transpose_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.group_conv2d_transpose_nchw"]], "group_norm() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.group_norm"]], "height (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.height"]], "hybrid_argwhere_1d() (in module tvm.topi)": [[36, "tvm.topi.hybrid_argwhere_1d"]], "hybrid_argwhere_2d() (in module tvm.topi)": [[36, "tvm.topi.hybrid_argwhere_2d"]], "hybrid_argwhere_3d() (in module tvm.topi)": [[36, "tvm.topi.hybrid_argwhere_3d"]], "hybrid_argwhere_4d() (in module tvm.topi)": [[36, "tvm.topi.hybrid_argwhere_4d"]], "hybrid_argwhere_5d() (in module tvm.topi)": [[36, "tvm.topi.hybrid_argwhere_5d"]], "identity() (in module tvm.topi)": [[36, "tvm.topi.identity"]], "in_dtype (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.in_dtype"]], "in_filter (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.in_filter"]], "instance_norm() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.instance_norm"]], "invert_permutation() (in module tvm.topi)": [[36, "tvm.topi.invert_permutation"]], "isfinite() (in module tvm.topi)": [[36, "tvm.topi.isfinite"]], "isinf() (in module tvm.topi)": [[36, "tvm.topi.isinf"]], "isnan() (in module tvm.topi)": [[36, "tvm.topi.isnan"]], "kernel_h (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.kernel_h"]], "kernel_w (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.kernel_w"]], "layer_norm() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.layer_norm"]], "layout_transform() (in module tvm.topi)": [[36, "tvm.topi.layout_transform"]], "layout_transform() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.layout_transform"]], "leaky_relu() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.leaky_relu"]], "left_shift() (in module tvm.topi)": [[36, "tvm.topi.left_shift"]], "less() (in module tvm.topi)": [[36, "tvm.topi.less"]], "less_equal() (in module tvm.topi)": [[36, "tvm.topi.less_equal"]], "log() (in module tvm.topi)": [[36, "tvm.topi.log"]], "log10() (in module tvm.topi)": [[36, "tvm.topi.log10"]], "log2() (in module tvm.topi)": [[36, "tvm.topi.log2"]], "log_softmax() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.log_softmax"]], "logical_and() (in module tvm.topi)": [[36, "tvm.topi.logical_and"]], "logical_not() (in module tvm.topi)": [[36, "tvm.topi.logical_not"]], "logical_or() (in module tvm.topi)": [[36, "tvm.topi.logical_or"]], "logical_xor() (in module tvm.topi)": [[36, "tvm.topi.logical_xor"]], "lrn() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.lrn"]], "lstm() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.lstm"]], "make_idx() (in module tvm.topi)": [[36, "tvm.topi.make_idx"]], "matmul() (in module tvm.topi)": [[36, "tvm.topi.matmul"]], "matmul() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.matmul"]], "matmul_legalize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.matmul_legalize"]], "matrix_set_diag() (in module tvm.topi)": [[36, "tvm.topi.matrix_set_diag"]], "max() (in module tvm.topi)": [[36, "tvm.topi.max"]], "maximum() (in module tvm.topi)": [[36, "tvm.topi.maximum"]], "meshgrid() (in module tvm.topi)": [[36, "tvm.topi.meshgrid"]], "min() (in module tvm.topi)": [[36, "tvm.topi.min"]], "minimum() (in module tvm.topi)": [[36, "tvm.topi.minimum"]], "mirror_pad() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.mirror_pad"]], "mod() (in module tvm.topi)": [[36, "tvm.topi.mod"]], "multiply() (in module tvm.topi)": [[36, "tvm.topi.multiply"]], "namedtuple() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.namedtuple"]], "nchw_pack_layout() (in module tvm.topi.image)": [[36, "tvm.topi.image.nchw_pack_layout"]], "nchw_xc_layout() (in module tvm.topi.image)": [[36, "tvm.topi.image.nchw_xc_layout"]], "ndarray_size() (in module tvm.topi)": [[36, "tvm.topi.ndarray_size"]], "negative() (in module tvm.topi)": [[36, "tvm.topi.negative"]], "nll_loss() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.nll_loss"]], "not_equal() (in module tvm.topi)": [[36, "tvm.topi.not_equal"]], "one_hot() (in module tvm.topi)": [[36, "tvm.topi.one_hot"]], "out_dtype (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.out_dtype"]], "out_filter (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.out_filter"]], "pad() (in module tvm.topi.image)": [[36, "tvm.topi.image.pad"]], "pad() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.pad"]], "padb (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.padb"]], "padl (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.padl"]], "padr (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.padr"]], "padt (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.padt"]], "pool1d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.pool1d"]], "pool2d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.pool2d"]], "pool3d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.pool3d"]], "pool_grad() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.pool_grad"]], "power() (in module tvm.topi)": [[36, "tvm.topi.power"]], "prelu() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.prelu"]], "prod() (in module tvm.topi)": [[36, "tvm.topi.prod"]], "qnn_conv2d_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.qnn_conv2d_alter_layout"]], "qnn_dense_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.qnn_dense_alter_layout"]], "qnn_requantize_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.qnn_requantize_alter_layout"]], "reduce() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.reduce"]], "reinterpret() (in module tvm.topi)": [[36, "tvm.topi.reinterpret"]], "relu() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.relu"]], "repeat() (in module tvm.topi)": [[36, "tvm.topi.repeat"]], "reshape() (in module tvm.topi)": [[36, "tvm.topi.reshape"]], "resize1d() (in module tvm.topi.image)": [[36, "tvm.topi.image.resize1d"]], "resize2d() (in module tvm.topi.image)": [[36, "tvm.topi.image.resize2d"]], "resize3d() (in module tvm.topi.image)": [[36, "tvm.topi.image.resize3d"]], "reverse_sequence() (in module tvm.topi)": [[36, "tvm.topi.reverse_sequence"]], "right_shift() (in module tvm.topi)": [[36, "tvm.topi.right_shift"]], "rms_norm() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.rms_norm"]], "round() (in module tvm.topi)": [[36, "tvm.topi.round"]], "rsqrt() (in module tvm.topi)": [[36, "tvm.topi.rsqrt"]], "scale_shift_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.scale_shift_nchw"]], "scale_shift_nchwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.scale_shift_nchwc"]], "scale_shift_nhwc() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.scale_shift_nhwc"]], "scanop() (in module tvm.topi)": [[36, "tvm.topi.scanop"]], "scatter_elements() (in module tvm.topi)": [[36, "tvm.topi.scatter_elements"]], "scatter_nd() (in module tvm.topi)": [[36, "tvm.topi.scatter_nd"]], "searchsorted() (in module tvm.topi)": [[36, "tvm.topi.searchsorted"]], "sequence_mask() (in module tvm.topi)": [[36, "tvm.topi.sequence_mask"]], "shape() (in module tvm.topi)": [[36, "tvm.topi.shape"]], "sigmoid() (in module tvm.topi)": [[36, "tvm.topi.sigmoid"]], "sign() (in module tvm.topi)": [[36, "tvm.topi.sign"]], "simplify() (in module tvm.topi.image)": [[36, "tvm.topi.image.simplify"]], "simplify() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.simplify"]], "simulated_dequantize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.simulated_dequantize"]], "simulated_quantize() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.simulated_quantize"]], "sin() (in module tvm.topi)": [[36, "tvm.topi.sin"]], "sinh() (in module tvm.topi)": [[36, "tvm.topi.sinh"]], "sliding_window() (in module tvm.topi)": [[36, "tvm.topi.sliding_window"]], "softmax() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.softmax"]], "softmax_common() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.softmax_common"]], "sort() (in module tvm.topi)": [[36, "tvm.topi.sort"]], "space_to_batch_nd() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.space_to_batch_nd"]], "space_to_depth() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.space_to_depth"]], "sparse_add() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.sparse_add"]], "sparse_conv2d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.sparse_conv2d"]], "sparse_dense() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.sparse_dense"]], "sparse_dense_alter_layout() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.sparse_dense_alter_layout"]], "sparse_dense_sp_lhs() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.sparse_dense_sp_lhs"]], "sparse_dense_sp_rhs() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.sparse_dense_sp_rhs"]], "sparse_reshape() (in module tvm.topi)": [[36, "tvm.topi.sparse_reshape"]], "sparse_to_dense() (in module tvm.topi)": [[36, "tvm.topi.sparse_to_dense"]], "sparse_transpose() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.sparse_transpose"]], "split() (in module tvm.topi)": [[36, "tvm.topi.split"]], "sqrt() (in module tvm.topi)": [[36, "tvm.topi.sqrt"]], "squeeze() (in module tvm.topi)": [[36, "tvm.topi.squeeze"]], "stack() (in module tvm.topi)": [[36, "tvm.topi.stack"]], "stft() (in module tvm.topi)": [[36, "tvm.topi.stft"]], "stride_h (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.stride_h"]], "stride_w (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.stride_w"]], "strided_set() (in module tvm.topi)": [[36, "tvm.topi.strided_set"]], "strided_slice() (in module tvm.topi)": [[36, "tvm.topi.strided_slice"]], "strided_slice() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.strided_slice"]], "subtract() (in module tvm.topi)": [[36, "tvm.topi.subtract"]], "sum() (in module tvm.topi)": [[36, "tvm.topi.sum"]], "take() (in module tvm.topi)": [[36, "tvm.topi.take"]], "take_legalize() (in module tvm.topi)": [[36, "tvm.topi.take_legalize"]], "tan() (in module tvm.topi)": [[36, "tvm.topi.tan"]], "tanh() (in module tvm.topi)": [[36, "tvm.topi.tanh"]], "tensordot() (in module tvm.topi)": [[36, "tvm.topi.tensordot"]], "tile() (in module tvm.topi)": [[36, "tvm.topi.tile"]], "topk() (in module tvm.topi)": [[36, "tvm.topi.topk"]], "transpose() (in module tvm.topi)": [[36, "tvm.topi.transpose"]], "trilu() (in module tvm.topi)": [[36, "tvm.topi.trilu"]], "trunc() (in module tvm.topi)": [[36, "tvm.topi.trunc"]], "try_get_conv2d_sparse_input() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.try_get_conv2d_sparse_input"]], "try_get_sparse_input() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.try_get_sparse_input"]], "tvm.topi": [[36, "module-tvm.topi"]], "tvm.topi.image": [[36, "module-tvm.topi.image"]], "tvm.topi.nn": [[36, "module-tvm.topi.nn"]], "tvm.topi.sparse": [[36, "module-tvm.topi.sparse"]], "unique() (in module tvm.topi)": [[36, "tvm.topi.unique"]], "unpack_nchwc_to_nchw() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.unpack_NCHWc_to_nchw"]], "unravel_index() (in module tvm.topi)": [[36, "tvm.topi.unravel_index"]], "upsampling() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.upsampling"]], "upsampling3d() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.upsampling3d"]], "where() (in module tvm.topi)": [[36, "tvm.topi.where"]], "width (tvm.topi.nn.workload attribute)": [[36, "tvm.topi.nn.Workload.width"]], "winograd_transform_matrices() (in module tvm.topi.nn)": [[36, "tvm.topi.nn.winograd_transform_matrices"]], "within_index() (in module tvm.topi)": [[36, "tvm.topi.within_index"]], "modulepass (class in tvm.transform)": [[37, "tvm.transform.ModulePass"]], "pass (class in tvm.transform)": [[37, "tvm.transform.Pass"]], "passcontext (class in tvm.transform)": [[37, "tvm.transform.PassContext"]], "passinfo (class in tvm.transform)": [[37, "tvm.transform.PassInfo"]], "printir() (in module tvm.transform)": [[37, "tvm.transform.PrintIR"]], "sequential (class in tvm.transform)": [[37, "tvm.transform.Sequential"]], "current() (tvm.transform.passcontext static method)": [[37, "tvm.transform.PassContext.current"]], "get_current_trace() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.get_current_trace"]], "get_trace_stack() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.get_trace_stack"]], "get_trace_stack_size() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.get_trace_stack_size"]], "get_tuning_api_database() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.get_tuning_api_database"]], "inc_num_evals() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.inc_num_evals"]], "info (tvm.transform.pass property)": [[37, "tvm.transform.Pass.info"]], "list_configs() (tvm.transform.passcontext static method)": [[37, "tvm.transform.PassContext.list_configs"]], "module_pass() (in module tvm.transform)": [[37, "tvm.transform.module_pass"]], "override_instruments() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.override_instruments"]], "pop_trace() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.pop_trace"]], "push_trace() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.push_trace"]], "set_num_evals() (tvm.transform.passcontext method)": [[37, "tvm.transform.PassContext.set_num_evals"]], "tvm.transform": [[37, "module-tvm.transform"]]}})