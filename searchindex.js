Search.setIndex({"docnames": ["deep_dive/tensor_ir/abstraction", "deep_dive/tensor_ir/index", "deep_dive/tensor_ir/learning", "deep_dive/tensor_ir/tutorials/creation", "deep_dive/tensor_ir/tutorials/sg_execution_times", "deep_dive/tensor_ir/tutorials/transformation", "get_started/install", "get_started/overview", "get_started/tutorials/ir_module", "get_started/tutorials/quick_start", "get_started/tutorials/sg_execution_times", "index", "reference/api/dlight", "reference/api/error", "reference/api/index", "reference/api/instrument", "reference/api/ir", "reference/api/meta_schedule", "reference/api/relax/analysis", "reference/api/relax/block_builder", "reference/api/relax/frontend", "reference/api/relax/op", "reference/api/relax/relax", "reference/api/relax/transform", "reference/api/rpc", "reference/api/runtime/disco", "reference/api/runtime/ndarray", "reference/api/runtime/profiling", "reference/api/runtime/relax_vm", "reference/api/runtime/runtime", "reference/api/target", "reference/api/te", "reference/api/tir/analysis", "reference/api/tir/schedule", "reference/api/tir/stmt_functor", "reference/api/tir/tir", "reference/api/tir/transform", "reference/api/topi", "reference/api/transform", "reference/publications", "sg_execution_times"], "filenames": ["deep_dive/tensor_ir/abstraction.rst", "deep_dive/tensor_ir/index.rst", "deep_dive/tensor_ir/learning.rst", "deep_dive/tensor_ir/tutorials/creation.rst", "deep_dive/tensor_ir/tutorials/sg_execution_times.rst", "deep_dive/tensor_ir/tutorials/transformation.rst", "get_started/install.rst", "get_started/overview.md", "get_started/tutorials/ir_module.rst", "get_started/tutorials/quick_start.rst", "get_started/tutorials/sg_execution_times.rst", "index.rst", "reference/api/dlight.rst", "reference/api/error.rst", "reference/api/index.rst", "reference/api/instrument.rst", "reference/api/ir.rst", "reference/api/meta_schedule.rst", "reference/api/relax/analysis.rst", "reference/api/relax/block_builder.rst", "reference/api/relax/frontend.rst", "reference/api/relax/op.rst", "reference/api/relax/relax.rst", "reference/api/relax/transform.rst", "reference/api/rpc.rst", "reference/api/runtime/disco.rst", "reference/api/runtime/ndarray.rst", "reference/api/runtime/profiling.rst", "reference/api/runtime/relax_vm.rst", "reference/api/runtime/runtime.rst", "reference/api/target.rst", "reference/api/te.rst", "reference/api/tir/analysis.rst", "reference/api/tir/schedule.rst", "reference/api/tir/stmt_functor.rst", "reference/api/tir/tir.rst", "reference/api/tir/transform.rst", "reference/api/topi.rst", "reference/api/transform.rst", "reference/publications.rst", "sg_execution_times.rst"], "titles": ["Tensor Program Abstraction", "TensorIR", "Understand TensorIR Abstraction", "TensorIR Creation", "Computation times", "Transformation", "Installing Apache TVM Unity", "Overview", "IRModule", "Quick Start", "Computation times", "\ud83d\udea7 Apache TVM Unity Documentation", "tvm.dlight", "tvm.error", "API Reference", "tvm.instrument", "tvm.ir", "tvm.meta_schedule", "tvm.relax.analysis", "tvm.relax.block_builder", "tvm.relax.frontend", "tvm.relax.op", "tvm.relax", "tvm.relax.transform", "tvm.rpc", "tvm.runtime.disco", "tvm.runtime.ndarray", "tvm.runtime.profiling", "tvm.runtime.relax_vm", "tvm.runtime", "tvm.target", "tvm.te", "tvm.tir.analysis", "tvm.tir.schedule", "tvm.tir.stmt_functor", "tvm.tir", "tvm.tir.transform", "tvm.topi", "tvm.transform", "Publications", "Computation times"], "terms": {"befor": [0, 2, 5, 9, 15, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 32, 33, 34, 36, 37], "we": [0, 2, 3, 5, 7, 8, 9, 13, 16, 18, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "dive": 0, "detail": [0, 2, 8, 13, 19, 20, 21, 22, 23, 28, 29, 33, 35, 37], "let": [0, 2, 3, 5, 8, 9, 16, 32, 35, 36], "": [0, 2, 3, 5, 6, 8, 9, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 39], "first": [0, 5, 6, 7, 8, 9, 16, 18, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 35, 37], "introduc": [0, 2, 3, 7, 19, 20, 23, 33, 35, 36], "what": [0, 3, 20, 37], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "primit": [0, 1, 2, 5, 16, 21, 22, 23, 33], "function": [0, 1, 5, 8, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "ar": [0, 2, 3, 7, 8, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39], "correspond": [0, 2, 8, 9, 16, 17, 18, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 35, 36, 37], "singl": [0, 2, 5, 16, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 36, 37], "unit": [0, 2, 16, 19, 20, 21, 29, 30, 33, 35], "comput": [0, 1, 3, 8, 9, 16, 18, 19, 20, 21, 22, 23, 29, 30, 31, 33, 35, 36, 37, 39], "oper": [0, 5, 7, 8, 9, 13, 16, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 33, 35, 36, 37, 39], "For": [0, 2, 3, 6, 7, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 29, 31, 32, 33, 35, 36, 37], "exampl": [0, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40], "convolut": [0, 20, 21, 32, 37], "can": [0, 2, 3, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "fuse": [0, 8, 9, 21, 23, 32, 33, 37], "relu": [0, 2, 8, 9, 19, 20, 21, 23, 37], "also": [0, 2, 3, 5, 6, 7, 8, 9, 13, 16, 18, 19, 20, 22, 23, 24, 28, 29, 30, 31, 33, 36, 37, 38], "usual": [0, 9, 20, 23, 27, 35, 36, 37], "typic": [0, 2, 7, 29, 33], "implement": [0, 2, 5, 7, 13, 15, 20, 21, 22, 23, 24, 29, 33, 35, 36, 37, 38, 39], "contain": [0, 2, 8, 9, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "follow": [0, 2, 3, 5, 6, 7, 9, 16, 17, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39], "multi": [0, 21, 24, 25, 35, 36], "dimension": [0, 20, 21, 35, 36, 37], "buffer": [0, 1, 3, 5, 8, 9, 18, 20, 21, 23, 26, 29, 31, 32, 33, 34, 35, 36, 37], "loop": [0, 1, 3, 12, 23, 32, 33, 35, 36], "nest": [0, 2, 3, 18, 20, 22, 23, 28, 32, 33], "drive": 0, "final": [0, 19, 20, 22, 23, 29, 30, 37], "statement": [0, 2, 22, 29, 31, 32, 33, 34, 35, 36, 37], "themselv": 0, "from": [0, 2, 3, 4, 5, 7, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40], "tvm": [0, 1, 2, 3, 5, 7, 8, 39], "script": [0, 2, 3, 5, 8, 9, 19, 20, 23, 29, 31, 33], "import": [0, 3, 5, 6, 7, 19, 20, 23, 24, 29, 30, 31], "tir": [0, 3, 5, 8, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 29, 31, 37], "t": [0, 2, 3, 5, 8, 9, 16, 19, 20, 21, 23, 24, 29, 31, 32, 33, 34, 35, 36, 37, 38], "prim_func": [0, 2, 3, 5, 8, 9, 19, 21, 22, 23, 31, 33, 35], "def": [0, 2, 3, 5, 8, 9, 12, 15, 17, 18, 19, 20, 22, 23, 24, 28, 30, 31, 32, 33, 35, 36, 38], "main": [0, 5, 8, 9, 11, 17, 18, 19, 20, 21, 22, 23, 32, 33, 37], "A": [0, 2, 3, 5, 6, 8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39], "128": [0, 2, 3, 4, 5, 19, 20, 30, 31, 33, 40], "float32": [0, 2, 3, 5, 8, 9, 16, 19, 20, 21, 22, 23, 26, 29, 33, 35, 36, 37, 38], "b": [0, 2, 3, 5, 8, 18, 19, 20, 21, 23, 29, 31, 33, 35, 36, 37], "c": [0, 2, 3, 5, 6, 13, 15, 16, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 35, 36, 37], "none": [0, 5, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "rang": [0, 2, 3, 5, 8, 9, 16, 21, 31, 33, 35, 36, 37], "block": [0, 1, 3, 5, 8, 9, 12, 16, 17, 18, 19, 22, 23, 24, 29, 30, 31, 32, 33, 35, 36, 37, 38], "vi": [0, 2, 3, 5, 31, 33, 35], "axi": [0, 1, 3, 5, 8, 9, 16, 19, 20, 21, 23, 29, 31, 33, 35, 36, 37], "spatial": [0, 2, 3, 5, 9, 12, 19, 20, 29, 32, 33, 37], "The": [0, 2, 3, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "demonstr": [0, 3, 8, 18, 26], "calcul": [0, 16, 20, 21, 23, 32, 35, 37], "wise": [0, 18, 20, 21, 23, 31, 35, 37], "sum": [0, 3, 20, 21, 23, 25, 27, 29, 31, 33, 35, 37], "two": [0, 2, 3, 5, 7, 8, 9, 16, 18, 20, 21, 23, 27, 31, 32, 33, 35, 36, 37, 38], "vector": [0, 21, 30, 31, 33, 35, 36, 37], "accept": [0, 20, 21, 23, 31, 35, 36, 37], "three": [0, 2, 18, 20, 31, 32, 37], "paramet": [0, 1, 3, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "gener": [0, 2, 3, 5, 6, 7, 8, 16, 17, 19, 20, 21, 22, 23, 27, 29, 30, 31, 33, 34, 35, 36, 37], "one": [0, 1, 2, 3, 9, 16, 17, 20, 21, 22, 23, 28, 29, 32, 33, 35, 36, 37], "output": [0, 3, 5, 8, 9, 16, 18, 19, 20, 21, 22, 23, 27, 28, 29, 31, 32, 33, 35, 37], "incorpor": [0, 2, 3, 8, 20], "solitari": 0, "facilit": [0, 5, 22, 28], "featur": [0, 17, 23, 29, 37], "singular": 0, "crucial": [0, 2, 5], "unabl": 0, "execut": [0, 3, 4, 5, 9, 10, 13, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 35, 36, 38, 40], "arbitrari": [0, 12, 16, 20, 33, 35, 37], "transform": [0, 1, 4, 7, 11, 14, 15, 16, 18, 19, 20, 21, 22, 31, 32, 33, 34, 35, 37, 40], "certain": [0, 13, 21, 23, 33, 35, 37, 38], "reli": [0, 18], "sequenc": [0, 2, 3, 8, 16, 20, 21, 22, 23, 25, 26, 27, 29, 33, 35, 37, 38], "fortun": 0, "major": [0, 29, 35, 37], "focu": 0, "possess": [0, 5], "favor": [0, 3], "properti": [0, 1, 12, 16, 18, 20, 22, 23, 26, 29, 30, 31, 33, 37, 38], "independ": [0, 2], "among": [0, 18], "iter": [0, 1, 3, 12, 17, 20, 27, 31, 33, 35], "instanc": [0, 2, 3, 16, 20, 21, 23, 30, 33, 35, 36, 37, 38], "aforement": [0, 3], "includ": [0, 2, 7, 8, 9, 16, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38], "annot": [0, 3, 8, 9, 16, 18, 19, 21, 22, 23, 29, 33, 35, 36], "signifi": [0, 2], "fundament": [0, 2, 3, 8], "design": [0, 2, 8, 17, 20, 21, 22, 23, 37, 38, 39], "schedul": [0, 1, 3, 12, 14, 16, 17, 23, 30, 31, 36, 37], "mai": [0, 6, 9, 16, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "encompass": [0, 2, 8], "multipl": [0, 2, 5, 16, 20, 21, 23, 27, 29, 31, 32, 33, 35, 36, 37, 38], "opaqu": [0, 22, 32, 33, 36], "intrins": [0, 16, 21, 22, 23, 31, 33, 35, 36, 37], "core": [0, 1, 8, 17, 20, 21, 35], "instruct": [0, 2, 6, 12, 22, 25, 28, 30, 33, 35, 36], "indic": [0, 16, 18, 19, 20, 21, 22, 23, 31, 32, 33, 35, 36, 37, 38], "variabl": [0, 5, 6, 16, 18, 19, 20, 21, 22, 23, 29, 31, 32, 33, 34, 35, 36, 37, 38], "map": [0, 2, 7, 12, 16, 17, 18, 19, 20, 22, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37], "all": [0, 5, 8, 9, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40], "while": [0, 3, 6, 15, 18, 20, 21, 22, 24, 29, 33, 35, 37], "thi": [0, 2, 3, 5, 6, 8, 9, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "inform": [0, 1, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 27, 29, 30, 31, 33, 36, 37, 38, 39], "isn": 0, "specif": [0, 2, 3, 9, 13, 16, 17, 20, 21, 22, 23, 29, 30, 31, 33, 35, 36, 37, 38], "prove": [0, 18], "us": [0, 1, 2, 5, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "when": [0, 2, 6, 13, 15, 16, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "consequ": 0, "confid": 0, "parallel": [0, 6, 33, 35, 36], "reorder": [0, 5, 21, 22, 23, 33, 36], "associ": [0, 2, 5, 16, 19, 21, 22, 30, 33, 35, 37, 39], "provid": [0, 2, 5, 6, 7, 8, 9, 12, 16, 18, 19, 20, 21, 22, 23, 25, 29, 31, 35, 36, 37, 38], "travers": [0, 20], "index": [0, 3, 5, 8, 16, 18, 20, 21, 22, 23, 31, 33, 35, 36, 37], "0": [0, 2, 3, 4, 5, 6, 8, 9, 10, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 40], "abstract": [1, 3, 8, 9, 11, 16, 17, 20, 22, 39], "apach": [1, 2, 3, 7, 8, 33, 39], "uniti": [1, 3, 8], "stack": [1, 3, 7, 16, 24, 35, 37, 38], "which": [1, 2, 6, 8, 9, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37], "repres": [1, 2, 3, 9, 16, 19, 20, 21, 22, 23, 29, 30, 31, 33, 35, 36, 37], "optim": [1, 5, 7, 8, 15, 16, 17, 20, 21, 23, 33, 36, 37, 38, 39], "tensor": [1, 2, 5, 7, 8, 11, 16, 19, 20, 21, 22, 23, 26, 31, 32, 33, 35, 36, 37, 39], "program": [1, 2, 7, 8, 9, 11, 16, 20, 22, 24, 27, 29, 30, 33, 39], "kei": [1, 2, 16, 19, 20, 21, 22, 23, 24, 29, 30, 32, 33, 35, 36], "element": [1, 2, 3, 5, 15, 16, 20, 21, 24, 31, 33, 35, 37], "extra": [1, 8, 20, 22, 28, 29, 33, 37], "structur": [1, 7, 13, 16, 17, 18, 20, 21, 22, 23, 26, 29, 31, 32, 33, 35, 37], "understand": [1, 3, 5, 11], "why": 1, "sugar": [1, 29, 33, 37], "ax": [1, 8, 9, 20, 21, 35, 37], "bind": [1, 3, 8, 16, 18, 19, 20, 21, 22, 23, 24, 31, 32, 33, 35, 36, 37], "creation": [1, 4, 11, 20, 35, 37, 38, 40], "creat": [1, 6, 7, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "tvmscript": [1, 2, 9, 19, 29, 31, 33], "express": [1, 16, 18, 19, 20, 21, 22, 23, 29, 31, 32, 33, 35, 36, 37], "initi": [1, 3, 8, 19, 20, 22, 24, 25, 28, 29, 31, 35, 37, 38], "tile": [1, 21, 33, 37], "leverag": 1, "local": [1, 3, 6, 8, 9, 17, 18, 21, 22, 23, 24, 33, 35, 36, 37], "rewrit": [1, 7, 22, 23, 36, 37], "reduct": [1, 2, 9, 12, 20, 21, 31, 33, 35, 36, 37], "trace": [1, 9, 17, 20, 31, 33, 35, 38], "standard": [2, 20, 21, 30, 36, 37], "machin": [2, 7, 9, 22, 24, 28, 39], "learn": [2, 7, 12, 39], "compil": [2, 3, 6, 7, 8, 12, 16, 18, 20, 21, 22, 23, 24, 27, 29, 30, 31, 35, 37, 39], "framework": [2, 6, 7, 8, 9], "princip": 2, "object": [2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], "depict": 2, "hardwar": [2, 7], "acceler": 2, "option": [2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "thread": [2, 8, 9, 17, 25, 29, 30, 31, 33, 35, 36], "applic": [2, 5, 12, 16, 22, 37], "special": [2, 17, 20, 21, 23, 30, 31, 33, 35, 37, 38], "memori": [2, 8, 16, 17, 18, 20, 23, 26, 29, 32, 33, 35, 36, 37], "access": [2, 8, 16, 20, 22, 28, 29, 31, 32, 33, 35, 36, 37, 38], "To": [2, 6, 13, 15, 20, 22, 23, 24, 29, 33], "help": [2, 6, 8, 16, 19, 20, 21, 22, 23, 24, 29, 35, 37, 38], "our": [2, 6, 9, 33], "explan": 2, "u": [2, 9, 33], "motiv": 2, "time": [2, 3, 5, 8, 9, 15, 16, 17, 18, 20, 21, 22, 23, 24, 28, 29, 30, 33, 36, 37], "matric": [2, 20, 21, 35, 37], "perform": [2, 5, 7, 8, 9, 18, 20, 21, 22, 23, 25, 26, 27, 31, 33, 35, 36, 37], "step": [2, 5, 8, 9, 21, 29, 33, 37], "y_": [2, 3, 37], "j": [2, 3, 5, 19, 21, 22, 31, 33, 35, 36, 37], "sum_k": [2, 3], "a_": [2, 3], "k": [2, 3, 5, 8, 9, 17, 20, 21, 31, 33, 35, 37, 39], "b_": [2, 3], "c_": 2, "mathbb": 2, "max": [2, 3, 5, 8, 9, 20, 21, 25, 29, 30, 31, 33, 35, 37], "abov": [2, 18, 20, 21, 33, 37], "resembl": 2, "commonli": 2, "seen": [2, 20, 21], "neural": [2, 19, 20, 21, 37, 39], "network": [2, 19, 20, 21, 37, 39], "linear": [2, 8, 9, 19, 20, 21, 23, 37], "layer": [2, 9, 20, 21, 37], "activ": [2, 15, 20, 21, 22, 23, 28, 29, 37], "invok": [2, 9, 20, 21, 22, 23, 24, 28, 29, 33, 36, 38], "nativ": [2, 3, 7], "python": [2, 5, 6, 7, 8, 9, 13, 16, 20, 21, 22, 24, 27, 29, 30, 33, 35], "code": [2, 3, 5, 6, 7, 8, 9, 13, 16, 17, 19, 20, 22, 23, 24, 29, 30, 31, 33, 35, 36, 37, 38], "numpi": [2, 3, 5, 8, 9, 20, 21, 22, 25, 26, 31, 33, 35, 37], "show": [2, 3, 5, 6, 8, 9, 20, 22, 23, 28, 29, 33], "lnumpy_mm_relu": 2, "np": [2, 3, 5, 8, 9, 17, 20, 21, 22, 23, 28, 33, 35, 37], "ndarrai": [2, 14, 17, 20, 22, 23, 25, 28, 29, 31, 35, 36, 37], "y": [2, 3, 5, 9, 16, 19, 20, 21, 22, 23, 29, 30, 31, 32, 33, 35, 36, 37], "empti": [2, 20, 22, 23, 25, 26, 29, 31, 32, 33, 35, 36, 37, 38], "dtype": [2, 3, 5, 8, 9, 16, 19, 20, 21, 22, 23, 25, 26, 29, 31, 33, 35, 36, 37], "With": [2, 20, 21, 22, 28, 37], "low": [2, 7, 9, 16, 17, 23, 32, 35, 36, 37], "level": [2, 7, 9, 16, 17, 18, 21, 22, 23, 32, 35, 36, 37, 38], "mind": 2, "now": [2, 3, 5, 8, 9, 16, 17, 20, 21, 23, 26, 33, 36, 37, 38], "readi": 2, "below": [2, 6, 8, 15, 20, 21, 22, 28, 29, 31, 33, 35, 36, 37], "mm_relu": [2, 3, 5], "particular": [2, 9, 21, 29, 36, 37], "languag": [2, 3, 5, 7, 31, 33, 39], "call": [2, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38], "domain": [2, 3, 12, 31, 33, 35, 37], "dialect": [2, 3], "embed": [2, 7, 20], "ast": [2, 3, 19, 22, 23, 29, 32, 33, 34], "ir_modul": [2, 3, 5, 8, 9, 10, 17, 19, 23, 40], "class": [2, 3, 5, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38], "mymodul": [2, 3, 5, 20], "alloc_buff": [2, 3, 5, 8, 9, 33, 35, 36], "grid": [2, 3, 5, 8, 9, 19, 23, 31, 33, 35, 37], "vj": [2, 3, 5, 31, 33, 35], "vk": [2, 3, 5, 31, 33], "reduc": [2, 3, 5, 9, 20, 21, 23, 25, 31, 33, 35, 36, 37], "init": [2, 3, 5, 6, 8, 9, 31, 32, 33, 35, 36], "next": [2, 8, 9, 17, 35], "invest": 2, "same": [2, 3, 5, 7, 8, 13, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38], "set": [2, 6, 7, 8, 9, 16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38], "here": [2, 3, 5, 7, 8, 9, 11, 18, 23, 24, 33, 35, 36, 37, 38], "take": [2, 3, 5, 7, 8, 9, 12, 13, 20, 21, 22, 23, 27, 28, 29, 31, 35, 36, 37], "type": [2, 3, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "name": [2, 3, 5, 8, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "shape": [2, 8, 9, 16, 18, 19, 20, 21, 22, 23, 25, 26, 29, 31, 33, 35, 36, 37], "argument": [2, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37], "data": [2, 3, 7, 8, 9, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 33, 35, 36, 37, 38], "addit": [2, 5, 16, 20, 21, 22, 23, 24, 29, 30, 31, 33, 35, 37, 38], "possibl": [2, 12, 16, 21, 22, 23, 24, 28, 33, 35, 36, 37], "mlc": [2, 5, 6], "process": [2, 5, 7, 8, 9, 17, 19, 21, 24, 25, 33, 37, 39], "similarli": [2, 21, 22, 30], "intermedi": [2, 9, 19, 21, 22, 23, 29, 33, 37], "result": [2, 5, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "alloc": [2, 8, 16, 18, 20, 21, 22, 23, 32, 33, 35, 36], "There": [2, 9, 16, 31, 32, 33, 35, 37], "direct": [2, 20, 21, 22, 23, 28, 32, 36], "syntact": 2, "write": [2, 3, 5, 9, 12, 16, 19, 22, 23, 24, 32, 33, 35, 36], "signific": 2, "distinct": [2, 21, 33], "li": 2, "an": [2, 3, 5, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39], "construct": [2, 3, 7, 8, 16, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 33, 35, 37], "term": [2, 33, 35, 37], "within": [2, 3, 5, 8, 18, 19, 20, 23, 33, 36, 37, 38], "importantli": 2, "more": [2, 3, 6, 7, 8, 9, 13, 15, 16, 18, 20, 21, 22, 23, 28, 29, 32, 33, 35, 36, 37, 38], "than": [2, 5, 16, 20, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38], "It": [2, 5, 6, 7, 9, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 33, 35, 36, 37, 38], "compris": [2, 3], "delin": [2, 3], "around": [2, 36, 37], "them": [2, 8, 9, 16, 18, 20, 21, 23, 25, 33, 36], "line": [2, 16, 27, 29, 36], "declar": [2, 3, 18, 20, 22, 31, 33, 35, 37], "about": [2, 12, 16, 21, 22, 30, 31, 35, 37], "syntax": [2, 3, 8, 9, 29, 31, 33], "block_axi": 2, "axis_typ": 2, "axis_rang": 2, "mapped_valu": 2, "These": [2, 6, 8, 9, 37], "convei": 2, "thei": [2, 8, 16, 18, 20, 21, 22, 23, 28, 29, 31, 33, 36, 37, 38], "specifi": [2, 3, 6, 8, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 33, 34, 35, 36, 37], "origin": [2, 5, 9, 20, 21, 22, 23, 26, 33, 35, 36, 37], "intend": [2, 21, 23, 29, 30, 37], "announc": 2, "delv": [2, 5], "deeper": 2, "relationship": [2, 33], "progress": 2, "meanwhil": [2, 7, 8], "read": [2, 3, 5, 8, 9, 12, 16, 19, 23, 32, 33, 35, 36], "writ": 2, "strictli": [2, 20, 26], "speak": 2, "updat": [2, 5, 6, 16, 17, 19, 21, 22, 23, 31, 33, 36, 37, 38], "label": [2, 20, 21, 37], "being": [2, 3, 15, 16, 19, 21, 22, 23, 28, 29, 33, 35], "don": [2, 23, 24, 38], "requir": [2, 6, 8, 13, 18, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "valu": [2, 3, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37], "anoth": [2, 8, 16, 18, 22, 23, 24, 26, 33, 35, 36], "significantli": 2, "fix": [2, 37], "yield": [2, 5, 20, 21], "point": [2, 9, 16, 22, 25, 30, 33, 35, 36, 37], "locat": [2, 16, 17, 24, 29, 31, 33, 35, 36, 37, 39], "other": [2, 9, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37], "differ": [2, 3, 5, 6, 8, 9, 16, 20, 21, 22, 23, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38], "refer": [2, 3, 5, 7, 8, 9, 13, 16, 18, 19, 20, 21, 22, 25, 26, 30, 33, 37], "sinc": [2, 8, 18, 19, 20, 29, 36], "directli": [2, 7, 8, 9, 15, 18, 20, 21, 22, 23, 24, 29, 30, 33, 35, 36, 37, 38], "start": [2, 7, 8, 10, 16, 19, 21, 23, 24, 33, 35, 37, 40], "region": [2, 12, 21, 23, 32, 33, 35, 36, 37], "involv": [2, 5, 8, 9, 36], "One": [2, 8, 33], "observ": 2, "make": [2, 9, 13, 16, 35, 36, 37, 38], "self": [2, 8, 9, 15, 16, 17, 18, 20, 22, 23, 26, 29, 30, 36, 38], "come": [2, 7, 18, 21, 23, 31, 35], "suppos": [2, 12, 20, 21, 22, 33, 37], "carri": [2, 31, 37], "out": [2, 6, 9, 12, 17, 19, 20, 21, 23, 31, 32, 33, 35, 36, 37], "extern": [2, 8, 20, 22, 23, 29, 31, 35, 36, 37], "valid": [2, 13, 17, 20, 22, 23, 28, 30, 33, 35, 36, 37], "correct": [2, 5, 8, 9, 24, 33, 35], "error": [2, 5, 14, 16, 20, 21, 22, 23, 28, 30, 31, 32, 33, 35, 37, 38], "becaus": [2, 16, 24, 30, 33, 36, 38], "expect": [2, 16, 21, 23, 35, 36, 37], "size": [2, 3, 5, 16, 18, 20, 21, 22, 23, 29, 30, 31, 32, 33, 35, 36, 37, 38], "onli": [2, 3, 8, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "bound": [2, 16, 18, 19, 20, 21, 22, 23, 31, 32, 33, 35, 36, 37], "127": [2, 33], "wrong": 2, "due": [2, 6, 18, 22, 32], "mismatch": [2, 20], "In": [2, 3, 5, 8, 9, 15, 20, 21, 22, 23, 24, 25, 28, 29, 31, 33, 35, 36, 37, 38], "situat": [2, 19], "where": [2, 3, 12, 16, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38], "each": [2, 3, 5, 8, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "outer": [2, 5, 18, 23, 33, 36, 37], "remap": [2, 3, 5, 8, 9, 16, 19, 22, 23, 31, 32, 33, 35], "ssr": [2, 3, 5, 8, 9, 31, 33], "mean": [2, 5, 8, 9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 35, 37], "equival": [2, 3, 20, 31, 35, 37], "range_of_i": 2, "range_of_j": 2, "range_of_k": 2, "so": [2, 7, 13, 16, 18, 21, 22, 24, 28, 29, 33, 37], "mymodulewithaxisremapsugar": 2, "ss": [2, 3, 5, 8, 9, 19, 23, 31, 33, 35], "tutori": [3, 4, 5, 8, 9, 10, 33, 40], "googl": [3, 5, 8, 9], "colab": [3, 5, 8, 9], "you": [3, 5, 6, 8, 9, 13, 16, 21, 24, 29, 30, 31, 35], "click": [3, 5, 8, 9], "run": [3, 5, 6, 7, 8, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 32, 36, 37, 38], "jupyt": [3, 5, 8, 9], "notebook": [3, 5, 8, 9], "section": [3, 5, 9, 13, 16, 20, 21], "method": [3, 9, 12, 15, 17, 19, 20, 21, 22, 26, 29, 30, 33, 35, 37, 38], "presum": 3, "familiar": 3, "concept": 3, "If": [3, 6, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "alreadi": [3, 5, 19, 20], "acquaint": 3, "pleas": [3, 6, 7, 8, 9, 13, 19, 21, 26, 33, 36, 37], "concentr": 3, "standalon": [3, 16], "techniqu": [3, 5, 39], "present": [3, 8, 22, 23, 28, 29, 33, 35, 37, 39], "requisit": [3, 5], "end": [3, 16, 19, 20, 21, 22, 23, 24, 35, 37, 39], "user": [3, 6, 8, 15, 16, 20, 21, 22, 23, 25, 27, 29, 30, 33, 35, 36, 37, 38], "relax": [3, 6, 7, 9, 16, 28, 29, 38], "model": [3, 7, 17, 19, 20, 21, 23, 30], "convert": [3, 8, 9, 16, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 33, 36, 37], "todo": 3, "add": [3, 8, 9, 16, 17, 19, 20, 21, 22, 23, 29, 31, 33, 35, 36, 37], "link": [3, 6, 20, 22, 24, 29, 30, 33, 37], "most": [3, 8, 18, 20, 21, 22, 33, 35, 36], "straightforward": 3, "wai": [3, 5, 8, 9, 23, 31, 35], "via": [3, 5, 6, 7, 16, 22, 24, 27, 28, 29, 31, 33, 35, 37], "emploi": [3, 5, 39], "ensur": [3, 8, 18, 19, 20, 21, 23, 33, 35, 36], "full": [3, 20, 21, 33, 37], "compat": [3, 9, 20, 21, 22, 36, 37], "tool": [3, 20], "like": [3, 8, 9, 16, 18, 20, 23, 26, 27, 29, 30, 31, 35, 36, 37], "auto": [3, 17, 22, 29, 32, 33, 36, 37], "complet": [3, 19, 23, 29, 33, 35], "lint": 3, "cannot": [3, 12, 16, 18, 20, 21, 22, 28, 29, 31, 33, 35, 37], "interpret": [3, 20, 21, 22], "precis": [3, 20, 21, 23, 37], "decor": [3, 9, 12, 15, 17, 23, 24, 31, 36, 38], "extract": [3, 17, 20, 21, 23, 36, 37], "subsequ": [3, 5, 8, 9], "pars": [3, 8, 16], "ir": [3, 5, 8, 9, 14, 15, 17, 18, 19, 20, 21, 22, 23, 29, 31, 32, 33, 34, 35, 37, 38], "eas": 3, "streamlin": 3, "util": [3, 5, 9, 18, 21, 32, 34], "condens": 3, "abbrevi": 3, "exclud": [3, 21, 37], "whose": [3, 18, 20, 21, 22, 23, 28, 31, 33, 35, 37], "content": [3, 16, 20, 22, 29, 31, 35, 36], "infer": [3, 16, 19, 20, 21, 22, 23, 29, 30, 33, 35, 36, 37], "bodi": [3, 5, 18, 19, 22, 23, 31, 32, 33, 35, 36], "concisemodul": 3, "verifi": [3, 6, 9, 24, 32, 33, 36, 37], "modul": [3, 5, 7, 9, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 36, 37, 38], "print": [3, 5, 6, 8, 9, 15, 16, 17, 20, 21, 22, 23, 29, 30, 31, 33, 35, 38], "structural_equ": [3, 16, 32], "true": [3, 5, 8, 9, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "despit": 3, "limit": [3, 9, 23, 29, 30, 36, 37], "feasibl": 3, "ascertain": 3, "m": [3, 5, 9, 19, 21, 23, 24, 31, 33, 35, 36, 37, 38], "n": [3, 16, 19, 20, 21, 23, 27, 29, 31, 33, 35, 36, 37], "irmodul": [3, 5, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 30, 32, 33, 35, 36, 38, 40], "concisemodulefrompython": 3, "cast": [3, 19, 20, 21, 22, 23, 33, 35, 36, 37], "check": [3, 5, 8, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 31, 32, 33, 35, 36, 37], "dynamicshapemodul": 3, "handl": [3, 8, 13, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38], "definit": [3, 15, 16, 17, 18, 20, 21, 22, 23, 29, 34], "int32": [3, 16, 19, 21, 22, 29, 31, 33, 35, 36, 37], "input": [3, 5, 8, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "match_buff": [3, 19, 31, 33, 35], "runtim": [3, 7, 8, 9, 16, 20, 21, 22, 23, 24, 30, 31, 35, 36], "evaluate_dynamic_shap": 3, "lib": [3, 5, 22, 24, 29, 30], "int": [3, 12, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "nd": [3, 5, 8, 9, 20, 22, 26, 31, 35, 36, 37], "arrai": [3, 5, 8, 9, 16, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37], "random": [3, 5, 8, 9, 17, 20, 23, 33, 35, 36, 37], "uniform": [3, 5, 29, 35, 37], "astyp": [3, 5, 8, 9, 20, 21, 35, 37], "zero": [3, 5, 7, 8, 16, 20, 21, 22, 23, 24, 29, 31, 33, 35, 37], "return": [3, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "onc": [3, 6, 15, 18, 19, 20, 23, 34], "dyn_shape_lib": 3, "build": [3, 5, 7, 8, 9, 15, 17, 19, 20, 22, 26, 28, 29, 30, 35, 36, 37], "target": [3, 5, 8, 9, 12, 14, 16, 17, 20, 21, 22, 23, 24, 26, 28, 29, 33, 35, 36, 37], "llvm": [3, 5, 6, 8, 15, 17, 22, 28, 29, 30, 31, 35, 37], "abl": [3, 8], "4": [3, 5, 20, 21, 22, 29, 30, 33, 35, 36, 37, 40], "64": [3, 17, 33, 35], "5621404": 3, "543729": 3, "61239976": 3, "3138216": 3, "1": [3, 5, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39], "2092495": 3, "08359": 3, "2053614": 3, "72090256": 3, "2344809": 3, "139432": 3, "3031573": 3, "795681": 3, "895048": 3, "5549614": 3, "5495265": 3, "25517": 3, "30": 3, "134668": 3, "29": 3, "863676": 3, "32": [3, 5, 19, 31, 33, 35, 36], "996834": 3, "820768": 3, "33": [3, 37], "188026": 3, "28": [3, 31], "581135": 3, "31": [3, 17, 37], "773392": 3, "470835": 3, "417461": 3, "190342": 3, "607628": 3, "425243": 3, "34": [3, 37], "150497": 3, "43621": 3, "17341": 3, "35": [3, 39], "03381": 3, "36": 3, "493015": 3, "566217": 3, "130653": 3, "914062": 3, "77706": 3, "488625": 3, "282394": 3, "920208": 3, "484621": 3, "208483": 3, "878523": 3, "587534": 3, "167362": 3, "47426": 3, "489397": 3, "572134": 3, "110092": 3, "733181": 3, "30254": 3, "844995": 3, "often": [3, 37], "disregard": 3, "succinctli": 3, "lead": [3, 33, 35], "pragmat": 3, "te": [3, 19, 20, 21, 22, 35, 37], "becom": [3, 20, 23, 33, 35, 37], "relev": 3, "serv": [3, 20, 21, 24, 33, 37, 38], "through": [3, 22, 23, 28, 29, 30, 33, 36, 38], "api": [3, 8, 9, 11, 16, 19, 20, 21, 22, 25, 26, 28, 29, 30, 33, 36, 38], "compon": [3, 8, 20, 33, 37], "embodi": 3, "pattern": [3, 8, 9, 18, 23, 33, 35, 36, 37], "re": [3, 26, 31, 33, 34, 35, 37], "address": [3, 16, 24, 29, 33, 35, 39], "convers": [3, 22, 23, 28, 32, 33, 35], "legaci": [3, 30, 33, 36, 37], "ha": [3, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 32, 33, 36, 37, 38], "been": [3, 5, 16, 18, 19, 20, 21, 22, 23, 28, 36, 37], "supersed": 3, "last": [3, 16, 20, 21, 23, 31, 33, 35, 37], "subsect": 3, "placehold": [3, 16, 19, 20, 31, 35, 37], "reduce_axi": [3, 31, 33, 35], "lambda": [3, 19, 31, 33, 35, 37], "signatur": [3, 18, 20, 22, 23, 28, 31, 33, 34, 35, 36, 37], "output_shap": [3, 37], "fcomput": [3, 31, 37], "And": [3, 9, 21, 23, 35, 36], "describ": [3, 16, 20, 21, 23, 33, 35, 37], "how": [3, 5, 6, 8, 9, 20, 21, 23, 26, 29, 30, 33, 35, 37], "want": [3, 22, 23, 28, 29, 31, 33, 35, 37, 38], "given": [3, 5, 12, 16, 17, 18, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "encapsul": [3, 7], "upon": [3, 20, 21, 33], "defin": [3, 9, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "formul": 3, "pertin": 3, "interest": [3, 9, 21, 37], "aim": [3, 7], "te_func": [3, 19], "create_prim_func": [3, 31], "with_attr": [3, 16], "global_symbol": [3, 19, 22, 23], "temodul": 3, "func_attr": [3, 5, 8, 9, 19, 23], "noalia": [3, 5, 8, 9, 19, 23], "bool": [3, 5, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "root": [3, 5, 6, 8, 9, 19, 20, 21, 22, 29, 31, 33, 35, 37], "v_i": 3, "v_j": 3, "v_k": [3, 8, 9], "need": [3, 5, 6, 8, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 32, 35, 37, 38], "symbol": [3, 6, 9, 16, 18, 19, 20, 21, 22, 23, 28, 29, 31, 33, 35, 36, 37], "var": [3, 8, 12, 16, 18, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38], "dyn_te_func": 3, "dynamictemodul": 3, "var_a": 3, "var_b": 3, "var_c": 3, "k_1": [3, 33], "total": [3, 4, 5, 8, 9, 10, 18, 22, 23, 28, 29, 33, 40], "minut": [3, 5, 8, 9], "second": [3, 5, 8, 9, 17, 20, 21, 22, 23, 24, 28, 29, 32, 33, 35, 37], "download": [3, 5, 8, 9, 24, 30], "ipynb": [3, 5, 8, 9], "sourc": [3, 5, 8, 9, 16, 20, 21, 22, 26, 28, 29, 31, 33, 35, 37], "py": [3, 4, 5, 8, 9, 10, 17, 18, 21, 23, 27, 32, 36, 40], "00": [4, 10, 40], "379": 4, "2": [4, 5, 8, 9, 10, 16, 17, 18, 20, 21, 23, 24, 30, 31, 32, 33, 35, 36, 37, 38, 39], "file": [4, 10, 17, 20, 22, 24, 25, 29, 33, 39, 40], "deep_div": [4, 40], "tensor_ir": [4, 40], "mem": [4, 10, 40], "mb": [4, 10, 40], "251": [4, 5, 40], "tensorir": [4, 5, 8, 9, 11, 31, 33, 39, 40], "interact": [5, 8, 9, 22, 25, 35, 38], "get": [5, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 30, 31, 32, 33, 35, 37, 38], "ingredi": 5, "flow": [5, 8, 9, 18, 22, 35], "previou": [5, 8, 9, 37], "have": [5, 7, 8, 9, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 32, 33, 35, 36, 37], "practic": 5, "primarili": [5, 20, 23], "illustr": [5, 33], "rather": [5, 20, 21, 22, 33, 36, 37], "look": [5, 9, 16, 18, 20, 22, 31, 35, 36], "evalu": [5, 9, 21, 22, 28, 29, 33, 35, 37, 38], "a_np": 5, "b_np": 5, "c_np": 5, "a_nd": 5, "b_nd": 5, "c_nd": 5, "mod": [5, 8, 9, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 32, 33, 35, 36, 37, 38], "test": [5, 9, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 32, 35, 37], "assert_allclos": [5, 9, 35, 37], "rtol": [5, 9], "1e": [5, 8, 9, 20, 21, 37], "5": [5, 6, 9, 16, 20, 21, 24, 33, 35, 37], "f_timer": 5, "time_evalu": [5, 9, 22, 28, 29], "cpu": [5, 17, 20, 22, 24, 26, 28, 29, 30, 35, 36, 37], "summari": [5, 9, 24], "median": [5, 9], "min": [5, 9, 16, 20, 21, 25, 31, 33, 35, 37], "std": [5, 9, 20, 21, 25], "1703": [5, 37], "0000": [5, 9, 37], "establish": 5, "helper": [5, 20], "sch": [5, 12, 17, 31, 33], "acquir": 5, "its": [5, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 30, 32, 33, 35, 36, 37], "block_i": 5, "get_block": [5, 33], "get_loop": [5, 33], "proce": [5, 34], "modif": 5, "split": [5, 20, 21, 23, 24, 31, 33, 35, 36, 37], "separ": [5, 7, 11, 20, 21, 23, 24, 33, 35, 36, 37], "inner": [5, 19, 33, 37], "length": [5, 16, 20, 21, 29, 33, 35, 37], "procedur": 5, "thu": [5, 16, 21, 37], "inadvert": 5, "twice": [5, 8], "state": [5, 17, 20, 21, 22, 24, 28, 29, 33, 37], "non": [5, 7, 16, 20, 21, 22, 23, 29, 31, 33, 35, 36, 37], "exist": [5, 7, 20, 21, 25, 26, 29, 30, 32, 33, 35, 37, 38], "j0": 5, "j1": 5, "factor": [5, 20, 21, 33, 35, 37], "8": [5, 6, 20, 21, 26, 33, 36, 37], "outcom": [5, 17, 20], "examin": [5, 18, 23, 36], "retain": 5, "j_0": [5, 33], "j_1": [5, 33], "16": [5, 9, 33, 35, 36, 37], "phase": [5, 33], "supplementari": 5, "respect": [5, 20, 21, 23, 35, 37], "action": [5, 22, 28, 31, 35], "6824": 5, "achiev": [5, 7], "variant": [5, 15, 16, 36, 38], "known": [5, 16, 18, 22, 31, 33, 35, 37], "reverse_compute_at": [5, 33], "reloc": 5, "block_c": 5, "ax0": [5, 8, 9, 23, 33], "until": [5, 11, 17, 19, 25, 29], "maintain": [5, 21, 33, 37], "togeth": [5, 8, 9, 22, 23, 28, 37], "amalgam": 5, "form": [5, 12, 18, 22, 23, 30, 31, 32, 33, 36, 37], "remain": [5, 12, 18, 23, 29, 37], "synchron": [5, 25, 26, 29, 35], "segreg": 5, "decompose_reduct": [5, 33], "j_1_init": 5, "y_init": 5, "y_updat": 5, "2651": 5, "manner": [5, 38], "histori": 5, "ve": 5, "see": [5, 6, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 35, 36, 37], "apply_trac": 5, "b0": 5, "func_nam": [5, 13, 19, 22, 23, 27, 28, 29, 30, 33, 35], "l1": 5, "l2": [5, 29], "l3": 5, "l4": 5, "l5": 5, "preserve_unit_it": [5, 33], "b6": 5, "preserve_unit_loop": [5, 33], "fals": [5, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38], "b7": 5, "altern": [5, 8, 33], "conjunct": 5, "histor": 5, "commun": [6, 25, 35], "nightli": 6, "develop": [6, 7, 9, 11, 13, 19], "visit": [6, 16, 18, 20, 22, 34], "page": [6, 39], "http": [6, 20, 21, 31, 33, 35, 37, 39], "ai": 6, "recommend": [6, 13, 27, 35], "alwai": [6, 18, 20, 24, 29, 32, 36, 37], "custom": [6, 7, 15, 17, 22, 23, 24, 33, 36, 38], "cmake": 6, "24": [6, 20, 21, 23], "15": [6, 21, 36, 37], "git": 6, "recent": [6, 35], "support": [6, 7, 8, 9, 13, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 33, 36, 37, 39], "17": [6, 20], "minimum": [6, 7, 16, 20, 21, 22, 23, 28, 29, 31, 35, 37], "gcc": 6, "7": [6, 20, 21, 33, 36, 37], "clang": 6, "appl": 6, "9": [6, 20, 21, 26, 29, 33, 37], "visual": 6, "studio": 6, "2019": [6, 20, 21], "v16": 6, "conda": 6, "strongli": 6, "ubuntu": 6, "debian": 6, "apt": 6, "repositori": 6, "kitwar": 6, "com": [6, 20, 21, 31, 35], "org": [6, 20, 21, 33, 35, 37, 39], "choos": [6, 9, 22, 28, 29], "clone": [6, 17], "repo": [6, 11], "host": [6, 11, 21, 22, 24, 28, 29, 30, 32, 36], "under": [6, 9, 11, 17, 18, 20, 22, 28, 30, 33], "recurs": [6, 16, 18, 20, 34], "flag": [6, 12, 18, 20, 21, 24, 33, 35, 36, 38], "automat": [6, 16, 20, 21, 22, 23, 28, 29, 31, 33, 35, 36, 37, 39], "submodul": [6, 20], "forget": [6, 37], "manual": [6, 21, 31], "directori": [6, 17, 20, 22, 23, 24, 29], "cd": 6, "rm": [6, 20], "rf": [6, 33], "mkdir": 6, "cp": [6, 35], "config": [6, 36, 37, 38], "Then": [6, 9, 21, 22, 35, 38], "control": [6, 18, 20, 21, 22, 25, 29, 30, 35, 36, 37], "default": [6, 8, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38], "candid": [6, 17, 33, 36, 38], "releas": [6, 26, 29], "debug": [6, 20, 25, 27, 33], "relwithdebinfo": 6, "echo": 6, "cmake_build_typ": 6, "must": [6, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 35, 37], "use_llvm": 6, "ignor": [6, 17, 18, 20, 21, 23, 30, 31, 35, 37], "libllvm": 6, "static": [6, 12, 15, 16, 17, 18, 19, 20, 22, 23, 30, 31, 33, 35, 36, 38], "hide_private_symbol": 6, "ON": 6, "gpu": [6, 9, 24, 26, 29, 30, 33, 36, 37], "sdk": [6, 29], "turn": [6, 23, 36], "use_cuda": 6, "off": [6, 23, 36], "use_met": 6, "use_vulkan": 6, "use_opencl": 6, "cubla": 6, "cudnn": 6, "cutlass": [6, 23], "use_cubla": 6, "use_cudnn": 6, "use_cutlass": 6, "enabl": [6, 7, 16, 17, 20, 22, 23, 24, 29, 30, 31, 33, 34, 36, 37], "fvisibl": 6, "hidden": [6, 37], "prevent": 6, "potenti": [6, 8, 17, 18, 20, 22, 28, 33], "conflict": [6, 20, 23, 33], "between": [6, 12, 20, 21, 22, 23, 28, 29, 31, 33, 35, 36, 37], "pytorch": [6, 7, 8, 9, 20, 21, 37], "aris": 6, "ship": 6, "version": [6, 21, 23, 29, 30, 35, 37], "edit": 6, "accordingli": [6, 21, 23, 33, 36], "kick": 6, "command": [6, 25], "nproc": 6, "success": 6, "should": [6, 16, 18, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "produc": [6, 18, 20, 21, 23, 26, 29, 31, 33, 35, 36], "libtvm": [6, 24], "libtvm_runtim": 6, "environ": [6, 7, 16, 20, 22, 24, 29, 30, 33, 36], "pip": 6, "project": [6, 26, 37], "export": [6, 20, 22, 24, 29], "tvm_home": [6, 20], "path": [6, 9, 17, 20, 22, 24, 25, 29, 37], "pythonpath": 6, "e": [6, 8, 12, 16, 17, 19, 20, 21, 22, 23, 28, 29, 30, 33, 35, 36, 37], "__file__": 6, "ok": 6, "univers": 7, "deploy": [7, 8], "pre": [7, 17, 20, 21, 22, 30, 33, 34, 35], "train": [7, 21, 23, 37], "everywher": 7, "new": [7, 8, 9, 16, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "librari": [7, 8, 22, 24, 25, 26, 29, 30, 37], "codegen": [7, 22, 23, 30], "fulli": [7, 16, 20, 23, 32, 35, 37], "customiz": [7, 23], "easi": 7, "pipelin": [7, 8, 20, 22, 33, 36, 38], "without": [7, 16, 18, 22, 23, 28, 29, 33, 35, 36, 37], "recompil": 7, "compos": [7, 20, 23, 35, 37], "pass": [7, 8, 9, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38], "ml": [7, 8], "workload": [7, 12, 17, 37], "deploi": 7, "divers": 7, "continu": 7, "improv": [7, 9], "quickli": 7, "dispatch": [7, 17, 20, 22, 30], "bring": [7, 24, 29], "runnabl": [7, 22, 29], "quick": [7, 10, 11, 26, 29, 31, 35, 40], "variou": [7, 8, 25, 37], "tensorflow": [7, 37], "frontend": [7, 8, 9, 13, 14], "scenario": [7, 29, 36], "larg": 7, "collect": [7, 8, 16, 18, 25, 27, 29, 30, 33, 36, 37], "graph": [7, 8, 9, 16, 20, 21, 22, 23, 37], "fusion": [7, 8, 9, 23, 33, 36], "layout": [7, 18, 20, 21, 23, 31, 33, 35, 36, 37], "both": [7, 8, 9, 16, 20, 21, 22, 24, 32, 33, 35, 36, 37], "stage": [7, 8, 20, 21, 33, 36], "solut": 7, "everi": [7, 8, 18, 19, 21, 22, 23, 28, 33, 36, 37], "work": [7, 8, 9, 17, 20, 22, 23, 28, 29, 33, 34, 36, 38], "mobil": 7, "edg": [7, 21, 37], "devic": [7, 8, 9, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36], "even": [7, 18, 20, 21, 22, 28], "bare": 7, "metal": [7, 8, 24, 26, 29, 30], "addition": 7, "copi": [7, 13, 16, 20, 21, 22, 23, 25, 26, 33, 35, 36, 37], "exchang": 7, "ecosystem": 7, "tensorrt": 7, "etc": [7, 18, 20, 22, 23, 33, 37, 38], "dlpack": [7, 20, 26, 35, 37], "entireti": 8, "few": [8, 23], "torch": [8, 9, 21], "fx": [8, 9, 20], "from_fx": [8, 9, 20], "common": [8, 9, 15, 16, 18, 20, 23, 29, 32, 33, 36, 37, 38], "accommod": 8, "onnx": [8, 9, 21, 37], "sole": [8, 9], "dummi": [8, 21], "torchmodel": 8, "__init__": [8, 9, 15, 17, 20, 23, 36, 38], "super": [8, 9, 20], "fc1": [8, 9], "784": [8, 9, 19], "256": [8, 9, 29, 33], "relu1": [8, 9], "fc2": [8, 9], "10": [8, 9, 16, 19, 20, 21, 22, 27, 28, 29, 31, 33, 35, 37, 38, 39], "forward": [8, 9, 20, 33, 37], "x": [8, 9, 16, 19, 20, 21, 22, 23, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "give": [8, 13, 21, 22, 24, 37], "input_info": [8, 9, 20], "no_grad": [8, 9, 21], "torch_fx_model": [8, 9], "symbolic_trac": [8, 9, 20], "mod_from_torch": 8, "keep_params_as_input": [8, 20], "params_from_torch": 8, "detach_param": [8, 20], "r": [8, 9, 12, 19, 20, 21, 22, 23, 29, 32, 35], "inp_0": [8, 9], "fc1_bia": 8, "fc1_weight": 8, "fc2_bia": 8, "fc2_weight": 8, "num_input": [8, 16, 22, 23], "dataflow": [8, 9, 18, 19, 22, 23, 33], "lv": [8, 9], "permute_dim": [8, 9, 20, 21], "lv1": [8, 9, 19, 20, 21, 23], "matmul": [8, 9, 20, 21, 23, 31, 33, 37], "out_dtyp": [8, 9, 20, 21, 23, 37], "lv2": [8, 9, 20, 21, 23], "lv3": [8, 9], "lv4": [8, 9], "lv5": [8, 9], "lv6": [8, 9], "gv": [8, 9, 19, 38], "relaxmodel": 8, "mod_from_relax": 8, "params_from_relax": 8, "export_tvm": [8, 20], "spec": [8, 20], "void": [8, 29, 35], "permute_dims1": 8, "matmul1": 8, "add1": 8, "base": [8, 9, 13, 16, 18, 20, 21, 22, 23, 24, 25, 29, 30, 33, 35, 36, 37, 38], "dsl": 8, "obtain": [8, 22, 28], "tvmscriptmodul": 8, "mod_from_script": 8, "globalvar": [8, 16, 18, 19, 21, 22, 23, 33, 35, 38], "get_global_var": [8, 16], "global": [8, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 30, 33, 35, 36, 37], "assert": [8, 13, 16, 21, 22, 23, 26, 29, 35, 36, 38], "appli": [8, 12, 15, 17, 18, 20, 21, 22, 23, 29, 31, 32, 33, 34, 35, 36, 37, 38], "That": [8, 20, 21, 33], "legalizeop": [8, 9, 23], "mix": [8, 20, 21, 23, 37], "call_tir": [8, 9, 19, 20, 21, 22, 23, 35], "privat": [8, 9, 19, 23, 36], "int64": [8, 9, 19, 20, 23, 35, 37], "t_add": [8, 9, 23], "ax1": [8, 9, 23, 33], "v_ax0": [8, 9, 23], "v_ax1": [8, 9, 23], "i0": [8, 9, 19, 33], "i1": [8, 9, 19, 31, 33], "v_i0": [8, 9], "v_i1": [8, 9], "transpos": [8, 20, 21, 37], "t_transpos": 8, "transpose1": 8, "cl": [8, 9, 13, 17, 22, 24, 26, 29], "out_sinfo": [8, 9, 21, 22], "after": [8, 9, 15, 16, 17, 18, 20, 21, 22, 23, 28, 29, 33, 34, 35, 36, 37], "much": [8, 20, 33], "insid": [8, 18, 22, 23, 32, 33, 35, 36], "again": [8, 24, 36], "simplifi": [8, 9, 23, 33, 36, 37], "veri": [8, 35, 37], "annotatetiroppattern": [8, 9, 23], "prepar": [8, 17], "foldconst": [8, 9, 23, 38], "constant": [8, 9, 16, 20, 21, 22, 23, 29, 31, 32, 33, 35, 36, 37], "fold": [8, 9, 20, 23, 33, 36, 37], "fuseop": [8, 9, 23], "fusetir": [8, 9, 23], "useless": 8, "harmless": 8, "duplic": [8, 23, 33, 34, 37], "legal": [8, 21, 23, 36, 37], "own": [8, 23, 26, 33, 35, 37], "get_pipelin": [8, 9, 22], "fused_matmul1_add1": [8, 9], "t_add_intermedi": [8, 9], "matmul_intermedi": [8, 9], "fused_matmul_add_relu": [8, 9], "compute_intermedi": [8, 9], "op_pattern": 8, "lv_1": 8, "notabl": [8, 31, 35], "abil": [8, 9], "emerg": 8, "exec": [8, 9], "dev": [8, 9, 19, 22, 24, 26, 27, 28, 29, 30, 35, 37], "vm": [8, 9, 22, 23, 25, 28], "virtualmachin": [8, 9, 22, 28], "raw_data": 8, "rand": [8, 9, 23], "cpu_out": 8, "02063614": 8, "13640118": 8, "01651423": 8, "04815891": 8, "12119335": 8, "11605094": 8, "17876694": 8, "00359787": 8, "12607133": 8, "00460514": 8, "besid": [8, 21, 33, 37], "share": [8, 22, 23, 29, 33, 35, 36], "further": [8, 23, 29, 30, 33, 34], "dlight": [8, 9], "won": [8, 33, 34], "go": [8, 20], "dl": [8, 9], "cuda": [8, 9, 17, 20, 22, 23, 24, 26, 29, 30, 35, 36], "gpu_mod": 8, "applydefaultschedul": [8, 9, 12], "fallback": [8, 9], "similar": [8, 20, 21, 23, 24, 33, 37], "did": 8, "param": [8, 16, 17, 18, 19, 20, 21, 22, 29, 31, 35, 36, 37], "gpu_param": 8, "p": [8, 21, 37], "gpu_out": 8, "allclos": 8, "atol": [8, 9], "3": [8, 9, 20, 21, 22, 23, 30, 31, 33, 35, 37, 39], "02063618": 8, "1364012": 8, "0481589": 8, "12119331": 8, "11605088": 8, "17876688": 8, "00359782": 8, "12607124": 8, "00460513": 8, "kind": [8, 9, 12, 16, 17, 22, 23, 30, 33, 35], "rocm": [8, 24, 26, 29, 30], "vulkan": [8, 24, 26, 29, 30, 37], "opencl": [8, 24, 26, 29, 30], "x86": 8, "arm": [8, 30], "g": [8, 16, 20, 22, 23, 29, 30, 33, 36, 37], "webassembli": 8, "810": [8, 10, 40], "peopl": 9, "who": [9, 33], "simpl": [9, 20, 21, 23, 24, 33, 34, 38], "thing": [9, 20, 27], "mlp": [9, 17], "try": [9, 12, 20, 22, 23, 33, 35, 36], "real": [9, 16, 23, 37], "jump": 9, "nn": [9, 19, 23, 31], "mlpmodel": 9, "torch_model": [9, 20], "toolkit": 9, "represent": [9, 20, 21, 26, 29, 30, 32, 35, 37], "huggingfac": 9, "As": [9, 20], "doe": [9, 16, 18, 20, 21, 22, 24, 29, 30, 31, 32, 33, 35, 36, 37], "ourselv": 9, "list": [9, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "tupl": [9, 16, 19, 20, 21, 22, 23, 24, 25, 28, 31, 33, 35, 37, 38], "combin": [9, 16, 21, 22, 23, 28, 35, 36, 37], "gather": [9, 20, 21, 25, 27, 29, 37], "metadata": [9, 33, 35, 38], "expr": [9, 16, 18, 19, 20, 21, 22, 23, 29, 31, 33, 34, 35, 37], "omit": [9, 16, 33], "show_meta": [9, 29], "up": [9, 16, 21, 22, 23, 24, 28, 29, 35], "successfulli": [9, 17], "mention": 9, "central": 9, "hold": [9, 16, 20, 33], "high": [9, 17, 23, 32, 35, 37], "current": [9, 16, 17, 19, 20, 22, 23, 25, 29, 30, 31, 33, 36, 37, 38], "consist": [9, 16, 23, 27, 29, 32, 33], "mark": [9, 19, 21, 22, 23, 33, 35, 36], "varieti": 9, "predefin": [9, 16], "usag": [9, 16, 18, 20, 22, 23, 24, 29, 35, 37], "By": [9, 18, 20, 21, 22, 23, 28, 29, 30, 31, 33, 37], "order": [9, 16, 17, 18, 20, 21, 22, 23, 27, 29, 31, 32, 33, 34, 37], "param_0": 9, "param_1": 9, "chang": [9, 20, 22, 23, 33, 35, 36, 37], "note": [9, 16, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 33, 35, 37, 38], "gemv": [9, 12], "generalreduct": 9, "is_schedul": 9, "matmul_intermediate_loc": 9, "scope": [9, 16, 17, 19, 20, 21, 22, 26, 31, 32, 33, 35, 36, 37], "matmul_intermediate_rf_loc": 9, "ax0_fused_0": 9, "thread_bind": [9, 33, 35], "blockidx": [9, 33, 36], "ax0_fused_1": 9, "threadidx": [9, 29, 33, 36], "ax1_fused_1": 9, "matmul_rf_init": 9, "vax1_fused_1": 9, "v0": [9, 20, 26, 33], "ax1_fused_0": 9, "matmul_rf_upd": 9, "vax1_fused_0": 9, "ax1_fus": 9, "ax0_fused_0_1": 9, "49": 9, "still": [9, 18, 20, 22, 23, 36, 38], "backend": [9, 20, 23, 29, 35, 36, 37, 38], "llm": 9, "would": [9, 16, 18, 22, 23, 29, 37], "futur": [9, 17, 22], "virtual": [9, 21, 22, 23, 28, 36], "str": [9, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "tvm_data": [9, 37], "tvm_out": [9, 37], "compar": [9, 16, 26, 32], "torch_out": 9, "timing_r": [9, 22, 28], "0085": 9, "096": [9, 10, 40], "quick_start": [9, 10, 40], "03": [10, 40], "906": 10, "get_start": [10, 40], "github": [11, 20, 21], "branch": [11, 22, 23, 31, 33, 35, 36], "merg": [11, 16, 23, 33, 36], "overview": 11, "instal": [11, 20], "public": [11, 19, 23], "packag": [12, 17, 20, 22, 28], "effici": [12, 21, 33], "box": [12, 37], "deep": [12, 17, 23, 39], "rule": [12, 16, 17, 20, 21, 22, 23, 31, 35, 37, 38], "schedulerul": [12, 17], "primfunc": [12, 17, 18, 19, 20, 21, 22, 23, 27, 31, 32, 33, 34, 35, 36], "blockinfo": 12, "iterinfo": 12, "block_rv": 12, "blockrv": [12, 17, 33], "reduction_block": 12, "dom": [12, 31, 35], "primexpr": [12, 16, 18, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37], "dom_kind": 12, "ssss": [12, 33], "sssr": 12, "is_elementwis": 12, "whether": [12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38], "elementwis": [12, 21, 23, 37], "trivial": [12, 33], "is_gemm": 12, "gemm": [12, 23, 32], "is_gemv": 12, "is_inject": 12, "inject": [12, 33, 36], "is_reduct": 12, "liter": [12, 17, 22, 35], "o": [12, 20, 23, 26, 29, 37], "loop_rv": 12, "looprv": [12, 33], "thin": [12, 36], "wrapper": [12, 15, 20, 36, 38], "tunabl": 12, "either": [12, 15, 20, 21, 22, 23, 29, 33, 35, 37], "allow": [12, 16, 18, 20, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37], "func": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], "built": [12, 17, 19, 22, 30, 36], "union": [12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 35, 36, 38], "from_cal": 12, "callabl": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 33, 35, 36, 37, 38], "myrul": 12, "my_rul": 12, "do": [12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 29, 30, 31, 33, 34, 35, 36, 37], "someth": [12, 27], "is_target_avail": 12, "avail": [12, 16, 17, 19, 20, 23, 24, 25, 29, 30, 37], "normalize_prim_func": 12, "normal": [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 33, 35, 37], "try_inlin": 12, "inlin": [12, 23, 31, 33, 36], "mani": [12, 36], "try_inline_contiguous_spati": 12, "block_info": [12, 33], "contigu": [12, 33], "messag": [13, 21, 35], "suggest": [13, 18], "convent": [13, 16, 20, 21, 22, 25, 28, 30, 33, 37], "readabl": [13, 17, 27, 29], "rais": [13, 16, 17, 20, 22, 30, 32, 33, 35, 37], "guid": [13, 33], "except": [13, 16, 20, 21, 23, 33, 35, 37], "diagnosticerror": 13, "diagnost": 13, "were": 13, "report": [13, 18, 22, 24, 27, 28, 29, 38], "dure": [13, 16, 17, 20, 21, 22, 23, 24, 27, 29, 32, 33, 35, 36, 37, 38], "configur": [13, 20, 22, 27, 29, 36, 38], "render": [13, 15], "internalerror": 13, "msg": [13, 19], "intern": [13, 18, 22, 23, 24, 28, 29, 33, 35, 36, 37, 39], "system": [13, 16, 20, 21, 22, 24, 29, 30, 39], "log": [13, 17, 21, 24, 31, 35, 37], "fatal": 13, "opattributeinvalid": 13, "attribut": [13, 16, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 35, 36, 37], "invalid": [13, 19, 37], "format": [13, 16, 17, 20, 21, 22, 24, 27, 28, 29, 30, 33, 35, 37], "attr_nam": [13, 16, 30], "op_nam": [13, 16, 21, 23, 37], "opattributerequir": 13, "found": [13, 16, 17, 21, 32, 35, 37], "opattributeunimpl": 13, "operror": 13, "opnotimpl": 13, "missing_op": 13, "frontend_nam": 13, "rpcerror": 13, "thrown": [13, 20, 21], "remot": [13, 22, 24, 25, 28, 29], "server": [13, 24], "rpc": [13, 14, 17, 22, 28, 29], "rpcsessiontimeouterror": 13, "session": [13, 24, 25], "expir": 13, "tvmerror": [13, 16, 22], "ani": [13, 16, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30, 31, 33, 35, 36, 37], "register_error": 13, "regist": [13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 33, 35, 38], "recogn": [13, 30], "ffi": 13, "handler": 13, "fregist": [13, 16], "f": [13, 16, 21, 22, 24, 29, 31, 33, 35, 37], "myerror": 13, "runtimeerror": [13, 20], "err_inst": 13, "create_ffi_error": 13, "xyz": 13, "isinst": [13, 16, 20, 23, 36, 38], "instrument": [14, 22, 28, 36, 38], "relax_vm": 14, "disco": 14, "profil": [14, 15, 17, 22, 28, 29, 35, 36], "topi": [14, 21, 23, 31], "analysi": [14, 16, 17, 23, 33, 36, 38], "stmt_functor": 14, "block_build": 14, "op": [14, 15, 16, 18, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37], "across": [15, 16, 21, 22, 37, 38], "passinstru": [15, 38], "subclass": [15, 17, 20, 29, 37], "pass_instru": 15, "case": [15, 16, 17, 18, 20, 21, 22, 23, 24, 28, 29, 33, 35, 36, 37, 38], "enter_pass_ctx": [15, 38], "exit_pass_ctx": [15, 38], "should_run": 15, "run_before_pass": 15, "run_after_pass": 15, "adjust": [15, 16, 20, 22, 28, 29, 36], "behavior": [15, 21, 23, 29, 31, 33, 34, 35, 36, 37, 38], "enter": 15, "context": [15, 17, 18, 23, 29, 30, 31, 36, 38], "exit": 15, "info": [15, 16, 18, 19, 20, 21, 22, 23, 35, 36, 38], "passinfo": [15, 38], "determin": [15, 21, 23, 29, 32, 33, 35, 37], "skip": [15, 16, 33, 36], "passprintinginstru": 15, "print_before_pass_nam": 15, "print_after_pass_nam": 15, "passtiminginstru": 15, "retriev": [15, 17, 32, 33, 35], "string": [15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37], "rtype": [15, 23, 35, 38], "timing_inst": 15, "passcontext": [15, 23, 36, 38], "relay_mod": 15, "relai": [15, 16, 18, 21, 32, 37, 38], "infertyp": 15, "foldscaleaxi": 15, "pi_cl": 15, "pi_class": 15, "skippass": 15, "skip_pass_nam": 15, "uncom": 15, "keyword": [15, 19, 21, 22, 30, 37, 39], "pass_info": 15, "skip_annot": 15, "annotatespan": 15, "explicitli": [16, 29, 33], "attr": [16, 19, 20, 22, 31, 33, 35, 36, 37], "node": [16, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36], "mainli": [16, 23, 33], "side": [16, 18, 20, 21, 22, 25, 29, 32, 33, 36], "alter_layout": 16, "get_int": 16, "get_int_tupl": 16, "get_str": 16, "list_field_info": 16, "field": [16, 18, 21, 22, 28, 35, 37], "attrfieldinfo": 16, "baseexpr": 16, "basefunc": [16, 19], "member": [16, 18, 21, 22, 36, 37, 38], "attr_key_or_dict": 16, "attr_valu": 16, "dict": [16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38], "pair": [16, 23, 29, 33, 37], "attr_map": 16, "dictattr": [16, 21, 22], "without_attr": 16, "attr_kei": [16, 35, 36], "delet": 16, "attrubt": 16, "callingconv": 16, "constantmemorypool": 16, "pool": [16, 21, 37], "constantpoolinfo": 16, "pool_nam": 16, "constant_info_arr": 16, "pool_info_properti": 16, "relat": [16, 18, 21, 23, 24, 33, 36], "ro": 16, "could": [16, 17, 18, 20, 22, 23, 28, 33, 36, 38], "poolinfoproperti": 16, "constructor": [16, 22, 24, 30], "name_hint": [16, 19, 20, 22, 35], "belong_to": 16, "adt": 16, "hint": [16, 19, 20, 21, 22, 31, 33, 35, 36, 37], "globaltypevar": 16, "denot": [16, 21, 22, 23, 32, 37], "belong": 16, "dictionari": [16, 20, 22, 28, 29, 30, 31, 37], "item": [16, 21, 22, 23, 33, 37], "dummyglobalinfo": 16, "envfunc": [16, 22], "serial": [16, 19, 27, 29, 33, 36], "env": [16, 24], "functyp": [16, 32], "arg_typ": 16, "ret_typ": [16, 21, 35, 37], "type_param": 16, "type_constraint": 16, "constraint": [16, 20, 32, 35], "foral": 16, "typevar": [16, 20], "typeconstraint": 16, "globalinfo": 16, "appear": [16, 18, 32, 33, 36, 37], "same_a": [16, 22, 26, 32], "overload": [16, 20, 22, 35], "equal": [16, 17, 18, 20, 21, 22, 26, 29, 35, 37], "typekind": 16, "adthandl": 16, "alias": [16, 21, 22], "act": 16, "type_annot": [16, 35], "store": [16, 17, 21, 30, 33, 35, 36], "astext": 16, "show_meta_data": [16, 38], "text": [16, 20, 21, 22, 24, 29], "meta": [16, 17, 29, 30, 35, 37, 38], "comment": 16, "necessari": [16, 17, 36, 37], "howev": [16, 23, 29, 32], "dump": [16, 17, 38], "big": [16, 23], "weight": [16, 17, 20, 21, 23, 36, 37], "type_definit": 16, "global_info": 16, "basic": [16, 36, 37], "from_expr": 16, "type_def": 16, "relayexpr": [16, 21, 22], "global_func": 16, "entri": [16, 20, 21, 23, 29, 36, 37], "wrap": [16, 18, 20, 23, 27, 30, 32, 36, 37], "functions_item": 16, "alphabet": 16, "get_attr": 16, "get_constructor": 16, "tag": [16, 30, 31, 35, 36, 37], "get_global_type_var": 16, "global_type_var": 16, "find": [16, 18, 20, 21, 32, 37], "global_var": [16, 35], "insert": [16, 20, 21, 22, 23, 33, 36, 37], "update_func": [16, 19], "update_global_info": 16, "remov": [16, 18, 20, 21, 22, 23, 24, 26, 29, 33, 36, 37], "incompletetyp": 16, "incomplet": 16, "add_argu": 16, "descript": [16, 18, 30, 31], "add_type_rel": 16, "rel_nam": 16, "type_rel_func": 16, "attach": [16, 20, 23, 24, 25, 36], "arg": [16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 33, 35, 37], "back": [16, 22, 24, 25, 29, 33, 37], "solv": 16, "opaddtyperel": 16, "typereport": 16, "accord": [16, 18, 19, 20, 23, 31, 32, 33, 35, 36, 37], "type_rel": 16, "has_attr": 16, "list_op_nam": 16, "registri": [16, 30, 36], "reset_attr": 16, "reset": [16, 21], "set_attr": 16, "plevel": 16, "prioriti": [16, 21, 23, 24], "set_attrs_type_kei": 16, "set_num_input": 16, "number": [16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38], "set_support_level": 16, "pointertyp": 16, "element_typ": 16, "storage_scop": [16, 21, 33, 35, 36], "pointer": [16, 26, 35, 36, 37], "storag": [16, 18, 21, 23, 32, 33, 35, 36, 37], "poolinfo": 16, "workspacepoolinfo": 16, "size_hint_byt": 16, "clock_frequency_hz": 16, "read_bandwidth_bytes_per_cycl": 16, "write_bandwidth_bytes_per_cycl": 16, "read_latency_cycl": 16, "write_latency_cycl": 16, "target_burst_byt": 16, "restrict": [16, 32], "clock": [16, 29], "frequenc": [16, 20, 29, 37], "hz": 16, "hasn": 16, "bandwidth": 16, "byte": [16, 20, 24, 29, 30, 32, 35, 37], "cycl": [16, 18], "latenc": 16, "burst": 16, "per": [16, 17, 18, 22, 23, 27, 28, 29, 32, 36, 37], "assum": [16, 18, 20, 21, 22, 23, 33, 35, 36, 37], "integ": [16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37], "primtyp": 16, "begin": [16, 19, 20, 21, 35, 37], "span": [16, 22, 23, 29, 31, 35, 36, 37], "otherwis": [16, 17, 20, 21, 22, 23, 29, 30, 32, 33, 35, 36, 37, 38], "from_min_ext": 16, "min_valu": [16, 31, 35], "extent": [16, 33, 35, 36], "rng": 16, "checked_typ": 16, "struct_info": [16, 19, 20, 21, 22], "structinfo": [16, 18, 19, 21, 22, 23], "struct": [16, 18, 19, 21, 22, 23, 35], "relayreftyp": 16, "sequentialspan": 16, "sourcenam": 16, "identifi": [16, 20, 22, 23, 24, 33], "source_nam": 16, "end_lin": 16, "column": [16, 21, 27, 29, 35], "end_column": 16, "lineno": [16, 20], "col_offset": 16, "offset": [16, 20, 21, 33, 35, 37], "tensoraffinetyp": 16, "scale": [16, 20, 21, 37], "zero_point": [16, 21], "quantiz": [16, 21, 37], "datatyp": [16, 20, 21, 22, 29, 36, 37], "space": [16, 17, 20, 21, 23, 29, 35, 36, 37], "x_q": 16, "channel": [16, 20, 21, 35, 37], "tensortyp": [16, 38], "concret": [16, 20], "assign": [16, 20, 22, 25], "concrete_shap": 16, "typeerror": [16, 20], "tupleaffinetyp": 16, "affin": [16, 33, 37], "tupletyp": 16, "referenti": 16, "typecal": 16, "type_cal": 16, "typedata": 16, "header": [16, 38], "type_var": 16, "algebra": [16, 33], "treat": [16, 20, 21, 22, 30], "typerel": 16, "fill": [16, 20, 21, 22, 33, 35, 36, 37], "later": [16, 18, 29, 33], "over": [16, 18, 20, 21, 22, 27, 28, 29, 31, 33, 35, 37], "vdevic": [16, 21, 22, 23], "vdevice_id": 16, "memory_scop": [16, 30], "workspacememorypool": 16, "workspac": [16, 23, 32, 35], "rw": [16, 35], "assert_structural_equ": 16, "lh": [16, 18, 21, 22, 23, 31, 32, 33, 35, 37], "rh": [16, 18, 21, 22, 23, 31, 32, 33, 35, 37], "map_free_var": 16, "left": [16, 17, 18, 20, 21, 31, 32, 35, 37], "operand": [16, 18, 21, 23, 31, 32, 35, 37], "shall": 16, "free": [16, 18, 21, 23, 29, 35], "valueerror": [16, 30], "load_json": 16, "json_str": 16, "load": [16, 17, 20, 22, 23, 24, 25, 29, 30, 33, 35, 36], "json": [16, 17, 27, 29, 33], "make_nod": 16, "type_kei": [16, 29], "kwarg": [16, 17, 19, 20, 21, 22, 23, 28, 29, 30, 31, 33], "attrsnod": 16, "creator": 16, "setup": [16, 19, 22], "intimm": [16, 30, 35, 37], "register_intrin_low": 16, "lower": [16, 21, 23, 32, 33, 35, 36, 37], "register_op_attr": 16, "save_json": 16, "save": [16, 17, 20, 21, 22, 28, 29, 33], "dag": 16, "irnod": 16, "condit": [16, 21, 22, 31, 32, 33, 35, 36, 37], "varnod": [16, 22], "occur": [16, 35, 36, 37], "site": [16, 22, 23, 36], "comparison": [16, 32, 35], "structural_hash": 16, "assert_strucural_equ": 16, "hash": [16, 17], "uniqu": [16, 19, 21, 22, 23, 25, 33, 37], "made": [16, 21, 22, 33, 35], "concist": 16, "well": [16, 18, 20, 22, 23, 32, 36, 37, 38], "highli": 16, "rare": [16, 24], "collison": 16, "occurr": [16, 18, 22], "structrual_equ": 16, "infrastructur": [17, 38], "builder": [17, 18, 19, 20, 22], "interfac": [17, 22, 24, 27, 28, 29, 30], "build_input": 17, "builderinput": 17, "builderresult": 17, "build_result": 17, "costmodel": 17, "cost": [17, 22, 23, 28, 29], "xgb": 17, "cost_model": 17, "predict": [17, 21, 37], "tunecontext": 17, "measurecandid": 17, "score": [17, 21], "tune": [17, 23, 30, 36, 38], "measur": [17, 22, 28, 29], "runnerresult": 17, "databas": [17, 23, 38], "commit_tuning_record": 17, "record": [17, 38], "tuningrecord": 17, "commit": [17, 35], "commit_workload": 17, "miss": [17, 20, 35], "search": [17, 23, 24, 29, 33, 36, 37], "ad": [17, 19, 20, 21, 23, 33, 36, 37, 38], "ordered_union": 17, "dump_prun": 17, "destin": [17, 20, 21, 22, 33, 35, 36, 37], "prune": 17, "jsondatabas": [17, 38], "get_all_tuning_record": 17, "tuning_record": 17, "get_top_k": 17, "top_k": 17, "top": [17, 20, 21, 33, 37, 38], "top_k_record": 17, "has_workload": 17, "queri": [17, 20, 21, 29, 33, 35], "workload_nam": 17, "best": [17, 19, 23], "query_ir_modul": 17, "query_schedul": 17, "query_tuning_record": 17, "extractedtask": 17, "task_nam": 17, "task": [17, 23], "featureextractor": 17, "extractor": 17, "extract_from": 17, "measurecallback": 17, "task_schedul": 17, "taskschedul": 17, "task_id": 17, "measure_candid": 17, "builder_result": 17, "runner_result": 17, "callback": [17, 19, 23, 29, 33, 35, 36, 38], "id": [17, 22, 25, 26, 29, 35], "runner": [17, 23], "args_info": 17, "arginfo": 17, "mutat": [17, 20, 21, 22, 33, 34], "explor": 17, "fail": [17, 18, 20, 21, 33], "tensorcor": [17, 36], "hexagon": [17, 24, 26, 30], "float": [17, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 35, 37], "postproc": 17, "postprocessor": 17, "post": [17, 18, 22, 34], "wa": [17, 32], "cloned_postproc": 17, "tabl": [17, 19, 27, 29, 33], "timeit": 17, "runner_input": 17, "runnerinput": 17, "runnerfutur": 17, "artifact": [17, 20, 22, 29], "runner_futur": 17, "modifi": [17, 21, 22, 23, 36, 37], "design_spac": 17, "cloned_rul": 17, "searchstrategi": 17, "strategi": 17, "evolutionari": 17, "replai": 17, "generate_measure_candid": 17, "finish": [17, 25, 29, 36], "notify_runner_result": 17, "post_tun": 17, "pre_tun": 17, "max_trial": 17, "num_trials_per_it": 17, "maximum": [17, 20, 21, 23, 24, 29, 31, 33, 35, 36, 37], "trial": [17, 22, 23, 28], "spacegener": 17, "cloned_sg": 17, "generate_design_spac": 17, "round": [17, 21, 31, 35, 37], "robin": 17, "gradient": [17, 19, 20, 21, 22, 23, 31, 37], "join_running_task": 17, "wait": [17, 25, 35], "join": [17, 27, 29, 37], "next_task_id": 17, "fetch": [17, 22, 25, 28], "print_tuning_statist": 17, "human": [17, 27, 29], "statist": [17, 21, 22], "terminate_task": 17, "termin": [17, 24, 35], "touch_task": 17, "touch": 17, "statu": 17, "task_weight": 17, "max_trials_glob": [17, 23], "max_trials_per_task": [17, 23], "measure_callback": 17, "space_gener": 17, "spacegeneratortyp": 17, "search_strategi": 17, "searchstrategytyp": 17, "rand_stat": 17, "num_thread": [17, 29], "physic": [17, 29], "logic": [17, 20, 21, 37], "logger": 17, "resourc": [17, 24, 35], "schedulefntyp": 17, "blank": 17, "count": [17, 20, 21, 23, 27, 31, 32, 35, 37], "cloned_context": 17, "deleg": 17, "batch": [17, 20, 21, 23, 32, 37], "cleanup": 17, "evolutionarysearch": 17, "memorydatabas": 17, "randommodel": 17, "derived_object": 17, "deriv": [17, 18, 22, 32], "register_object": 17, "pyrunn": 17, "_pyrunn": 17, "f_run": 17, "__init_handle_by_constructor__": 17, "_ffi_api": 17, "runnerpyrunn": 17, "_tvm_metadata": [17, 22], "notimplementederror": 17, "localrunn": 17, "is_meta_schedule_en": 17, "tune_task": 17, "work_dir": [17, 23], "module_equ": 17, "buildertyp": 17, "runnertyp": 17, "databasetyp": 17, "costmodeltyp": 17, "callbacklisttyp": 17, "taskschedulertyp": 17, "structuralequ": [17, 32], "raw": [17, 33, 36, 37], "anchor": [17, 32], "varint": 17, "tune_tir": 17, "num_tuning_cor": 17, "seed": [17, 33], "special_spac": 17, "basecheckresult": 18, "fine": 18, "grain": 18, "fail_l0": 18, "intersect": [18, 31, 35], "fail_l1": 18, "failur": 18, "fail_l2": 18, "unknown": [18, 22, 29, 30], "all_global_var": 18, "ret": [18, 19, 20, 21, 22, 23, 26, 28, 35, 36, 37], "df": [18, 19, 34], "all_var": 18, "bound_var": 18, "computable_at_compile_tim": 18, "knuminput": [18, 23], "depend": [18, 20, 21, 23, 24, 27, 29, 33, 35, 36, 37, 38], "indirectli": 18, "analyz": [18, 37], "contains_impure_cal": 18, "own_nam": 18, "impur": [18, 22], "puriti": [18, 22, 23], "visibl": [18, 19, 22, 32], "effect": [18, 20, 21, 22, 23, 27, 35], "definable_tir_vars_in_struct_info": 18, "sinfo": 18, "dedupl": 18, "defined_symbolic_var": 18, "derive_call_ret_struct_info": 18, "func_sinfo": 18, "funcstructinfo": [18, 22], "ctx": [18, 21, 23, 36, 38], "blockbuild": [18, 19, 20, 21, 23], "detect_recurs": 18, "mutual": 18, "some": [18, 20, 21, 22, 23, 29, 31, 33, 35, 37, 38], "simpli": [18, 29, 31, 34, 35], "group": [18, 20, 21, 22, 23, 35, 37], "itself": [18, 24, 25, 35], "singleton": [18, 20, 21, 22, 29], "erase_to_well_defin": 18, "shape_var_map": 18, "var_map": 18, "eras": [18, 29], "estimate_memory_usag": 18, "estim": [18, 32], "plan": [18, 21, 23, 36], "might": [18, 20, 26], "consid": [18, 20, 21, 22, 32, 35, 37], "cross": [18, 20, 21, 24, 29, 30, 36], "accumul": [18, 21, 23, 33, 35, 37], "alloc_tensor": [18, 21, 23], "alloc_storag": [18, 21, 23], "est": 18, "regard": [18, 21, 33], "free_symbolic_var": 18, "free_var": 18, "varbind": [18, 22, 23], "get_static_typ": 18, "get_var2v": 18, "has_reshape_pattern": 18, "essenti": [18, 20], "reshap": [18, 20, 21, 23, 36, 37], "expand_dim": [18, 21, 23, 37], "squeez": [18, 20, 21, 37], "flatten": [18, 20, 21, 23, 35, 36, 37], "l_0": 18, "l_1": [18, 33], "l_b": 18, "r_0": [18, 37], "r_1": [18, 37], "r_a": 18, "boolean": [18, 19, 20, 21, 23, 24, 31, 33, 35, 36, 37, 38], "neg": [18, 20, 21, 31, 33, 35, 37], "posit": [18, 20, 21, 24, 29, 31, 33, 35, 36, 37], "whenev": 18, "guarante": [18, 20, 21, 22, 33, 34], "safeti": 18, "name_to_bind": 18, "post_order_visit": [18, 34], "fvisit": [18, 34], "visitor": [18, 22, 34], "remove_all_unus": [18, 22, 23], "unus": [18, 22, 23], "dataflowblock": [18, 19, 22, 23], "dce": [18, 23], "deadcodeelimin": [18, 23], "struct_info_base_check": 18, "subsum": 18, "struct_info_lca": 18, "unifi": [18, 36], "least": [18, 20, 21, 22, 33], "ancestor": [18, 32, 33], "right": [18, 21, 31, 32, 33, 35, 37], "lca": [18, 32, 33, 36], "suggest_layout_transform": 18, "write_buffer_transform": 18, "indexmap": [18, 21, 23, 33, 35, 36], "match": [18, 19, 20, 22, 23, 24, 30, 33, 35, 36, 37], "tir_vars_in_struct_info": 18, "udchain": 18, "dfb": [18, 22], "chain": [18, 23, 33], "well_form": 18, "check_struct_info": 18, "rx": [19, 20], "tensorstructinfo": [19, 20, 21, 22, 23], "float16": [19, 21, 33, 36], "bb": [19, 20, 21, 23, 35, 37], "lv0": [19, 23], "emit": [19, 20, 22, 23], "multipli": [19, 20, 21, 23, 31, 35, 37], "gv0": [19, 23], "emit_output": 19, "emit_func_output": 19, "input_s": 19, "hidden_s": [19, 20], "output_s": [19, 21, 37], "sequenti": [19, 37, 38], "logsoftmax": 19, "add_func": 19, "gvar": [19, 21, 22], "begin_scop": 19, "seq": [19, 35, 37], "properli": 19, "track": [19, 23, 33, 35], "effort": [19, 23], "deduct": [19, 20, 21], "call_t": [19, 23], "emit_t": 19, "reserv": [19, 21, 26, 29], "primfunc_name_hint": 19, "primfunc_attr": 19, "newli": 19, "call_te_with_grad": 19, "te_grad_nam": [19, 21, 22], "te_grad_kwarg": [19, 21, 22], "call_tir_with_grad": [19, 21, 22], "current_block_is_dataflow": 19, "dataflowscop": 19, "emit_norm": 19, "args_dict": 19, "rx_func": 19, "hello": 19, "var_rxplacehold": 19, "var_rxplaceholder_1": 19, "var_comput": 19, "rxplacehold": 19, "rxplaceholder_1": 19, "x1": [19, 20, 21, 35], "ndim": [19, 20, 21, 22, 31, 33, 35, 37], "end_scop": 19, "possibli": [19, 23, 33], "renam": [19, 23, 37], "invari": [19, 20, 23, 36], "previous": 19, "normalizeglobalvar": [19, 23], "functionscop": 19, "defer": [19, 20], "middl": 19, "get_unique_nam": 19, "name_prefix": 19, "prefix": [19, 20, 23, 29, 31, 37], "lookup_bind": [19, 22], "lookup": [19, 20, 22, 28, 29], "match_cast": 19, "matchcast": [19, 22], "testing_scop": 19, "def_var": 19, "testingscop": 19, "purpos": [19, 21, 22, 23, 25, 35, 36], "updated_func": 19, "auxiliari": [19, 21, 31, 33, 37, 38], "detach": 20, "detached_mod": 20, "params_dict": 20, "conv1d": [20, 21, 37], "in_channel": [20, 21, 37], "out_channel": [20, 21, 37], "kernel_s": [20, 37], "stride": [20, 21, 33, 35, 36, 37], "pad": [20, 21, 33, 35, 37], "dilat": [20, 21, 37], "bia": [20, 21, 23, 37], "convtranspose1d": 20, "output_pad": [20, 21, 37], "conv": [20, 23, 31, 37], "1d": [20, 21, 36, 37], "face": [20, 22, 33], "implicit": [20, 21, 37], "emit_init": 20, "dataflowvar": [20, 22], "set_stat": 20, "state_var": 20, "num": [20, 35, 38], "dim": [20, 23, 29, 37], "externmodul": [20, 23], "handcraft": 20, "kernel": [20, 21, 24, 31, 36, 37], "gelu": [20, 21, 23], "ioeffect": 20, "io": 20, "screen": 20, "breakpoint": 20, "kvcach": 20, "init_seq_len": 20, "unit_shap": 20, "append": [20, 23, 33], "new_el": 20, "view": [20, 26], "seq_len": [20, 21, 37], "layernorm": 20, "normalized_shap": 20, "ep": 20, "05": [20, 21, 37], "elementwise_affin": 20, "in_featur": 20, "out_featur": 20, "overrid": [20, 22, 23, 28, 30, 35, 38], "your": [20, 29, 37], "tree": [20, 23, 33], "regular": [20, 37], "_spec": 20, "modulespectyp": 20, "allow_extern": 20, "ext_mod": 20, "jit": [20, 22], "modulespec": 20, "default_build": [20, 22], "out_format": 20, "just": [20, 21, 22, 23, 36, 37, 38], "load_state_dict": 20, "state_dict": 20, "strict": 20, "descend": [20, 21, 27, 29, 37], "exactli": [20, 33, 37], "whole": [20, 21, 37], "enforc": [20, 33], "missing_kei": 20, "unexpected_kei": 20, "unexpect": [20, 35], "named_paramet": 20, "prepend": [20, 21], "modulelist": 20, "feed": 20, "visit_": 20, "parent": [20, 33, 35], "ret_nod": 20, "replac": [20, 21, 22, 23, 33, 36, 37], "visit_effect": 20, "visit_modul": 20, "visit_modulelist": 20, "momodulelistdul": 20, "visit_param": 20, "_expr": 20, "_name": 20, "objectstructinfo": [20, 22], "kv": 20, "cach": [20, 27, 29, 33, 36, 37], "objectmodul": 20, "filepath": 20, "unbound": [20, 30], "rmsnorm": 20, "epsilon": [20, 21, 37], "norm": [20, 23], "silu": [20, 21, 23], "sourcemodul": 20, "source_cod": 20, "source_format": 20, "compile_opt": 20, "output_format": 20, "obj": [20, 29, 32], "eventu": 20, "my_func": [20, 30], "z": [20, 21, 22, 23, 29, 31, 33, 35, 36, 37], "shape_dtype_infer": 20, "_": [20, 31, 33, 35, 37], "style": [20, 21, 22, 29, 33, 37], "dp": [20, 32], "reus": [20, 23, 24, 33, 37], "dltensor": [20, 22, 25, 26, 28, 29, 35, 36, 37], "de": 20, "facto": 20, "dmlc": 20, "blob": [20, 21, 24], "h": [20, 21, 37], "l163": 20, "l206": 20, "expos": [20, 29, 33, 35, 36], "tvm_dll_export_typed_func": 20, "attachexternmodul": [20, 23], "external_mod": 20, "caveat": 20, "add_extern": 20, "avoid": [20, 21, 22, 28, 29, 33, 36, 37], "output_path": 20, "get_compile_opt": 20, "tvm_pkg": 20, "inlcud": 20, "w": [20, 21, 23, 26, 31, 32, 35, 37], "o3": 20, "cpp": [20, 31, 35], "cu": 20, "3rdparti": 20, "rel": [20, 24], "get_includ": 20, "pathlib": 20, "home": 20, "saniti": 20, "subdirectori": 20, "subroutinemixin": 20, "mixin": 20, "conveni": [20, 22, 28, 29, 38], "symbolc": 20, "done": [20, 21, 22, 23], "eagerli": 20, "from_const": 20, "from_scalar": 20, "scalar": [20, 21, 22, 23, 31, 35, 36, 37], "dimens": [20, 21, 22, 29, 30, 31, 33, 35, 37], "never": [20, 36], "dynam": [20, 21, 22, 23, 28, 29, 30, 36, 37], "covari": 20, "contravari": 20, "anyth": 20, "benefit": [20, 35, 37], "checker": [20, 36], "repeat": [20, 21, 22, 28, 29, 33, 37], "longest": 20, "len": [20, 37], "els": [20, 21, 37], "latter": [20, 32], "plain": [20, 37], "At": [20, 21, 22, 33], "issubclass": 20, "pep": 20, "484": 20, "introspect": 20, "__name__": 20, "__constraints__": 20, "__covariant__": 20, "__contravariant__": 20, "pickl": 20, "broadcast": [20, 21, 25, 35, 37], "broadcast_to": [20, 21, 23, 37], "intexpr": 20, "ccl_allreduc": 20, "op_typ": [20, 21], "ccl": [20, 25], "allreduc": [20, 21, 25, 35], "prod": [20, 21, 25, 37], "avg": [20, 21, 25, 37], "ccl_broadcast_from_worker0": 20, "broadcast_from_work": 20, "worker": [20, 21, 25], "chunk": [20, 21, 33], "along": [20, 21, 33, 37, 38], "piec": 20, "slice": [20, 21, 23, 31, 33, 37], "concat": [20, 21, 35, 37], "concaten": [20, 21, 37], "expand": [20, 21, 23, 33, 37], "convolv": [20, 21], "data_layout": [20, 21, 37], "ncw": [20, 21, 37], "kernel_layout": [20, 21, 37], "oiw": [20, 21, 37], "batch_siz": [20, 21, 35, 37], "width": [20, 21, 35, 37], "kernel_w": [20, 21, 37], "mbox": [20, 21], "sum_": [20, 21, 37], "dx": [20, 21], "semant": [20, 21, 22, 31, 33, 35, 37], "canon": [20, 21, 30], "out_layout": [20, 21, 37], "rate": [20, 21, 37], "divis": [20, 21, 31, 33, 35, 37], "conv1d_transpos": [20, 21], "explain": [20, 21], "iow": [20, 21], "in_w": [20, 21], "weight_w": [20, 21], "assur": [20, 21], "out_w": [20, 21], "disambigu": [20, 21], "conv2d": [20, 21, 23, 31, 32, 37], "2d": [20, 21, 36, 37], "imag": 20, "sevar": 20, "plane": 20, "filter": [20, 23, 31, 35, 36, 37], "kh": [20, 21, 37], "kw": [20, 21, 37], "sh": 20, "sw": 20, "dh": 20, "dw": 20, "oh": [20, 39], "ow": 20, "debug_func": 20, "_line_info": 20, "register_func": [20, 24, 29], "name_of_debug_func": 20, "arg_0": 20, "arg_1": 20, "_tir": 20, "divid": [20, 21, 31, 35, 37], "uniniti": 20, "outtyp": 20, "tvm_register_glob": 20, "fill_valu": [20, 21, 37], "approxim": [20, 21, 23, 37], "gaussian": [20, 21], "erf": [20, 21, 31, 35, 37], "gauss": [20, 21, 31, 35, 37], "tanh": [20, 21, 31, 35, 37], "cdf": 20, "get_default_dtyp": 20, "get_timestep_embed": 20, "embedding_dim": 20, "flip_sin_to_co": 20, "downscale_freq_shift": 20, "max_period": 20, "10000": 20, "timestep": 20, "denois": 20, "diffus": 20, "probabilist": [20, 39], "d": [20, 21, 35, 37, 39], "sine": 20, "cosin": 20, "sinusoid": 20, "sampl": [20, 23, 33, 37], "magnitud": 20, "group_norm": [20, 21, 37], "num_group": [20, 21, 37], "channel_axi": [20, 21, 37], "mini": 20, "paper": [20, 39], "frac": [20, 21], "mathrm": 20, "sqrt": [20, 21, 31, 35, 37], "gamma": [20, 21, 37], "beta": [20, 21, 37], "rms_norm": [20, 21, 37], "small": [20, 21, 37], "squar": [20, 21, 31, 35, 37], "groupnorm": 20, "interpol": [20, 21, 37], "scale_factor": 20, "mode": [20, 21, 22, 23, 24, 30, 31, 35, 37, 38], "nearest": [20, 21, 31, 35, 37], "align_corn": [20, 21, 37], "recompute_scale_factor": 20, "antialia": 20, "resiz": [20, 21, 33, 37], "request": [20, 24, 35], "algorithm": [20, 21, 23, 37], "pixel": [20, 21, 37], "recomput": [20, 21, 33], "antialias": 20, "layer_norm": [20, 21, 37], "lei": [20, 21], "ba": [20, 21], "et": [20, 21, 23], "al": [20, 21, 23], "2016": [20, 21, 23], "unlik": [20, 21, 29, 31, 33, 35, 37], "awai": [20, 21], "varianc": [20, 21, 37], "matrix": [20, 21, 23, 35, 37], "latest": [20, 21], "api_specif": [20, 21], "array_api": [20, 21], "html": [20, 21, 33, 35, 37], "x2": [20, 21, 35], "mul": [20, 21, 35, 37], "ones": [20, 21, 22, 23, 36], "before_0": 20, "after_0": 20, "before_1": [20, 21], "after_1": [20, 21], "impli": [20, 29], "permut": [20, 21, 36, 37], "revers": [20, 21, 23, 31, 33, 37], "print_": 20, "rectifi": [20, 21], "ext": 20, "repetit": [20, 21, 37], "backward": [20, 21, 37], "flat": [20, 21, 35, 37], "np_x": 20, "remaind": [20, 21, 23, 31, 35], "keep": [20, 21, 23, 29, 33], "6": [20, 21, 33, 37], "sai": [20, 21], "biao": [20, 21], "zhang": [20, 21], "scaled_dot_product_attent": 20, "attn_mask": 20, "is_caus": 20, "dot": 20, "product": [20, 21, 37], "attent": [20, 21, 23], "compliant": 20, "mask": [20, 21, 26, 29, 35, 37], "yet": [20, 22, 26, 33], "causal": [20, 21], "sigmoid": [20, 21, 31, 35, 37], "softmax": [20, 21, 37], "_i": [20, 21], "exp": [20, 21, 31, 35, 37], "x_i": [20, 21], "sum_j": [20, 21], "x_j": [20, 21], "ari": [20, 37], "indices_or_sect": [20, 21, 37], "sub": [20, 22, 23, 33, 35, 37], "subtract": [20, 21, 31, 35, 37], "keepdim": [20, 21, 23, 37], "correctli": [20, 21, 22, 33, 36, 37], "against": [20, 21, 31, 35, 37], "Its": [20, 21, 31], "mostli": [20, 21], "doc": [20, 21, 33, 35, 37, 40], "stabl": [20, 21, 22], "cover": [20, 21, 33], "changelog": [20, 21], "md": [20, 21], "13": [20, 21, 37], "select": [20, 21, 22, 31, 33, 35, 36, 37], "taken": [20, 21, 22, 28], "tensor_expr_op": 20, "tensor_expr_func": 20, "tensor_ir_op": 20, "shapeexpr": [20, 21, 22], "triu": [20, 21], "diagon": [20, 21, 37], "upper": [20, 21, 23, 35, 37], "triangular": [20, 21, 37], "part": [20, 21, 23, 29, 33, 37], "unsqueez": [20, 37], "wrap_nest": 20, "from_onnx": 20, "graphproto": 20, "shape_dict": 20, "dtype_dict": 20, "opset": 20, "keep_params_in_input": 20, "sanitize_input_nam": 20, "protobuf": 20, "v1": [20, 33], "modelproto": 20, "autodetect": [20, 30], "sanit": 20, "from_stablehlo": 20, "stablehlo_modul": 20, "mlir": 20, "dynamo_capture_subgraph": 20, "captur": [20, 23, 30, 32], "subgraph": [20, 37], "translat": [20, 33, 35], "importeroutput": 20, "unwrap_unit_return_tupl": 20, "no_bind_return_tupl": 20, "graphmodul": [20, 29], "unwrap": [20, 23], "place": [20, 21, 22, 23, 25, 33, 36, 37], "tracer": 20, "dynamo": 20, "torch_fx": 20, "_dynamo": 20, "instanti": [20, 37], "input_tensor": [20, 21, 31], "astensor": 20, "randn": 20, "graph_modul": 20, "print_tabular": 20, "tabular": 20, "row": [20, 21, 35, 37], "relax_dynamo": 20, "sent": [20, 21], "ab": [21, 31, 35, 37, 38], "absolut": [21, 31, 35, 37], "aco": [21, 31, 35, 37], "arc": [21, 37], "co": [21, 31, 35, 36, 37], "acosh": [21, 31, 35, 37], "cosh": [21, 31, 35, 37], "arang": [21, 37], "primvalu": [21, 22], "evenli": [21, 33, 37], "primexprlik": 21, "interv": [21, 22, 28, 29, 37], "argmax": [21, 37], "argmin": [21, 37], "argsort": [21, 37], "sort": [21, 27, 29, 32, 37], "long": [21, 29, 30, 37], "asin": [21, 31, 35, 37], "sin": [21, 31, 35, 37], "asinh": [21, 31, 35, 37], "sinh": [21, 31, 35, 37], "assert_op": 21, "format_arg": 21, "stringimm": [21, 22, 35], "atan": [21, 31, 35, 37], "tan": [21, 31, 35, 37], "atanh": [21, 31, 35, 37], "bitwise_and": [21, 35, 37], "bitwis": [21, 35, 37], "AND": [21, 37], "bitwise_not": [21, 35, 37], "NOT": 21, "bitwise_or": [21, 35, 37], "OR": [21, 37], "bitwise_xor": [21, 35, 37], "xor": [21, 35, 37], "call_builtin_with_ctx": [21, 22], "sinfo_arg": [21, 22], "call_dps_pack": [21, 22, 23], "pack": [21, 22, 25, 29, 30, 31, 35, 36, 37], "_pure_": [21, 22], "_does_": [21, 22], "those": [21, 22, 23, 33, 37], "externfunc": [21, 22, 23], "call_inplace_pack": 21, "inplace_indic": [21, 22], "consum": [21, 33, 36], "pure": [21, 22, 23, 33, 35], "know": [21, 22], "realiti": [21, 22], "caus": [21, 22, 37], "calle": [21, 22], "warn": [21, 22, 23, 30], "though": [21, 22, 28, 36], "therefor": 21, "incumb": 21, "safe": [21, 22, 24], "viz": 21, "live": [21, 22], "alia": [21, 22, 29, 33, 37], "packedfunc": [21, 22, 25, 27, 28, 29, 30, 31, 35, 36, 37], "input_indic": [21, 22], "th": [21, 22, 23, 33, 37], "freshli": [21, 22], "call_pure_pack": [21, 22], "tir_var": [21, 22], "unpack": [21, 22, 35, 37], "null": [21, 22, 29, 37], "call_tir_inplac": [21, 22, 23], "actual": [21, 22, 24, 29, 36, 37], "ceil": [21, 31, 35, 37], "clip": [21, 37], "collapse_sum_lik": 21, "collapse_target": 21, "summat": [21, 37], "collapse_sum_to": 21, "collaps": [21, 37], "differenti": [21, 23, 31, 37], "cumprod": [21, 37], "exclus": [21, 37], "cumul": [21, 37], "120": 21, "720": 21, "18": [21, 39], "20": 21, "cumsum": [21, 31, 37], "inclus": 21, "21": 21, "dequant": [21, 37], "clamp": 21, "dynamic_strided_slic": [21, 37], "dyn_strided_slic": 21, "rank": [21, 33, 37], "einsum": [21, 33, 37], "subscript": [21, 37], "einstein": [21, 37], "ewise_fma": 21, "x3": 21, "hand": [21, 31, 35, 37], "lie": 21, "flip": [21, 37], "preserv": [21, 33], "floor": [21, 31, 35, 37], "floor_divid": [21, 37], "full_lik": [21, 31, 37], "greater": [21, 35, 37], "greater_equ": [21, 37], "hint_on_devic": 21, "dst_vdevic": 21, "realizevdevic": [21, 23], "propag": [21, 23], "dst_devic": 21, "invoke_closur": [21, 22, 28], "closur": [21, 22, 28], "vmclosur": [21, 22, 28], "type_arg": 21, "callnod": [21, 22, 23], "invoke_pure_closur": 21, "isfinit": [21, 31, 35, 37], "finit": [21, 31, 35, 37], "isinf": [21, 31, 35, 37], "infinit": [21, 31, 35, 37], "isnan": [21, 31, 35, 37], "nan": [21, 31, 35, 37], "layout_transform": [21, 37], "index_map": [21, 23, 33, 35], "pad_valu": [21, 33, 36, 37], "axis_separ": [21, 23, 33, 35, 37], "less": [21, 22, 28, 37], "less_equ": [21, 37], "incom": 21, "xa": 21, "natur": [21, 22], "logarithm": [21, 37], "logical_and": [21, 37], "logical_not": [21, 37], "logical_or": [21, 37], "logical_xor": [21, 37], "make_closur": 21, "masked_fil": 21, "not_equ": [21, 37], "null_valu": 21, "ones_lik": 21, "power": [21, 31, 35, 37], "int8": [21, 33, 37], "q_output": 21, "register_gradi": 21, "fgradient": 21, "orig_var": 21, "orig_cal": 21, "output_grad": 21, "partial": [21, 33], "const": [21, 22, 23, 29, 31, 33, 35, 37], "rsqrt": [21, 31, 35, 37], "reciproc": [21, 31, 35], "scatter_el": [21, 37], "scatter": [21, 25, 37], "shape_of": [21, 22], "shape_to_tensor": 21, "sign": [21, 31, 35, 37], "smaller": [21, 29, 36, 37], "mixtur": 21, "deviat": [21, 37], "strided_slic": [21, 37], "assume_inbound": 21, "tensor_to_shap": [21, 23], "l": [21, 24, 31, 35, 37], "promot": [21, 36], "replic": 21, "desir": [21, 22, 23, 28, 37], "rep": [21, 37], "pend": [21, 35], "to_vdevic": 21, "transfer": 21, "heterogen": [21, 30], "topk": [21, 37], "largest": 21, "smallest": 21, "tril": 21, "return_index": 21, "return_invers": 21, "return_count": [21, 37], "reconstruct": [21, 33], "ascend": [21, 37], "wrap_param": 21, "zeros_lik": 21, "adaptive_avg_pool2d": 21, "nchw": [21, 23, 37], "adapt": 21, "averag": [21, 22, 28, 29], "experiment": [21, 32], "window": [21, 37], "wxh": 21, "height": [21, 35, 37], "output_height": 21, "output_width": 21, "chosen": [21, 30, 37], "floatimm": [21, 35], "causal_mask": 21, "window_s": 21, "head": [21, 31, 35], "bsnh": 21, "fma": 21, "q": [21, 35, 37], "v": [21, 30, 32, 37], "num_head": 21, "head_dim": 21, "seq_len_kv": 21, "head_dim_v": 21, "topleft": 21, "bottomright": 21, "slide": [21, 37], "attention_var_len": 21, "seqstart_q": 21, "max_seqlen_q": 21, "seqstart_k": 21, "max_seqlen_k": 21, "individu": [21, 27, 29], "total_seq_len": 21, "total_seq_len_kv": 21, "avg_pool2d": 21, "pool_siz": 21, "ceil_mod": [21, 37], "avarag": 21, "ldot": 21, "batch_norm": [21, 37], "moving_mean": [21, 37], "moving_var": [21, 37], "center": [21, 37], "momentum": [21, 37], "ioff": [21, 37], "szegedi": [21, 37], "2014": [21, 37], "close": [21, 24, 37], "_mean": 21, "_var": 21, "dataset": 21, "data_mean": 21, "data_var": 21, "running_mean": 21, "running_var": 21, "decomposeopsforinfer": [21, 23], "decompos": [21, 23, 33, 37], "decomposeopsfortrain": [21, 23], "oihw": [21, 37], "kernel_h": [21, 37], "dy": 21, "conv2d_transpos": [21, 37], "iohw": 21, "data_grad": 21, "out_grad": [21, 37], "in_h": 21, "weight_h": 21, "out_h": 21, "conv3d": [21, 37], "ncdhw": [21, 37], "oidhw": 21, "3d": [21, 37], "depth": [21, 33, 37], "kernel_d": 21, "dz": 21, "cross_entropy_with_logit": 21, "crossentropi": 21, "logit": 21, "_entropi": 21, "_with": 21, "_logit": 21, "y_i": 21, "sum_i": 21, "cdot": 21, "ground": 21, "truth": 21, "dropout": [21, 24], "probabl": [21, 33], "unchang": [21, 33], "drop": [21, 23], "gelu_tanh": [21, 23], "pi": 21, "044715": 21, "yuxin": 21, "wu": 21, "leakyrelu": 21, "alpha": [21, 37], "01": 21, "negative_slop": 21, "angl": 21, "slope": [21, 37], "nag": 21, "log_softmax": [21, 37], "_softmax": 21, "max_pool2d": 21, "max_": 21, "nll_loss": [21, 37], "ignore_index": [21, 37], "100": [21, 29, 35, 37], "likelihood": [21, 37], "loss": [21, 37], "i_1": [21, 33, 37], "i_2": [21, 37], "i_k": [21, 37], "d_1": [21, 37], "d_2": [21, 37], "d_k": [21, 37], "pad_width": [21, 37], "pad_mod": 21, "before_n": 21, "after_n": 21, "reflect": [21, 26, 29, 35, 37], "constant_valu": 21, "runtime_device_index": 21, "stop_lift_param": 21, "lift": [21, 23, 36], "transform_param": [21, 23], "allgath": [21, 25], "num_work": [21, 25], "broadcast_from_worker0": [21, 25], "scatter_from_worker0": [21, 25], "receiv": [21, 35], "annotate_shard": 21, "device_mesh": 21, "devicemesh": 21, "placement": 21, "shard": 21, "mesh": 21, "unmodifi": 21, "call_tir_local_view": 21, "dtensorstructinfo": 21, "instead": [21, 22, 23, 26, 29, 31, 33, 35, 36, 37, 38], "unpartit": 21, "dtensor": 21, "redistribut": 21, "redistribute_replica_to_shard": 21, "sever": [21, 22, 23, 31, 37], "ident": [21, 26, 31, 35, 37], "kept": [21, 24, 37], "avg_pool2d_backward": 21, "end_checkpoint": 21, "checkpoint": [21, 23], "start_checkpoint": 21, "max_pool2d_backward": 21, "nll_loss_backward": 21, "No": [21, 26, 33, 36], "entir": [21, 27, 29], "c_cp": 21, "d_cp": 21, "e_out": 21, "take_backward": 21, "resize2d": [21, 37], "roi": [21, 37], "coordinate_transformation_mod": [21, 37], "half_pixel": [21, 37], "rounding_method": [21, 37], "cubic_alpha": 21, "cubic_exclud": 21, "extrapolation_valu": [21, 37], "nearest_neighbor": [21, 37], "cubic": 21, "crop": [21, 37], "start_h": [21, 37], "start_w": [21, 37], "end_h": [21, 37], "end_w": [21, 37], "tf_crop_and_res": [21, 37], "coordin": [21, 37], "asymmetr": [21, 37], "pytorch_half_pixel": [21, 37], "tf_half_pixel_for_nn": [21, 37], "spline": [21, 37], "coeffici": [21, 37], "bicub": [21, 37], "exterior": 21, "outsid": [21, 32, 33, 36, 37], "virtual_device_index": 21, "kill_storag": 21, "kill": [21, 24], "kill_tensor": 21, "adaptivepool2dattr": 21, "argmaxargminattr": 21, "argsortattr": 21, "astypeattr": 21, "batchnormattr": 21, "calltirwithgradattr": 21, "concatattr": 21, "conv2dattr": 21, "conv2dtransposeattr": 21, "dropoutattr": 21, "einsumattr": 21, "expanddimsattr": 21, "flipattr": 21, "initattr": 21, "layernormattr": 21, "layouttransformattr": 21, "matmulattr": 21, "permutedimsattr": 21, "pool2dattr": 21, "repeatattr": 21, "resize2dattr": 21, "scanopattr": 21, "scan": [21, 31, 37], "softmaxattr": 21, "sortattr": 21, "splitattr": 21, "squeezeattr": 21, "statisticalattr": 21, "stridedsliceattr": 21, "takeattr": 21, "tileattr": 21, "topkattr": 21, "triluattr": 21, "namespac": [22, 24, 29, 31, 33, 35, 36], "bindingblock": [22, 23], "terminologi": 22, "datatypeimm": 22, "dataflowblockrewrit": 22, "root_fn": 22, "immut": 22, "mutated_dfb": 22, "mutated_root_fn": 22, "mutate_irmodul": 22, "old": [22, 33], "is_dfvar": 22, "tmp": 22, "counter": [22, 27], "Being": 22, "remove_unus": 22, "allow_undef": 22, "undefin": [22, 32, 35, 36, 37], "replace_all_us": 22, "old_var": 22, "new_var": 22, "dyntensortyp": 22, "execbuild": 22, "idx": 22, "declare_funct": 22, "vmfunckind": 22, "packed_func": 22, "emit_cal": 22, "dst": [22, 25, 33, 35, 36, 37], "emit_goto": 22, "pc_offset": 22, "goto": 22, "emit_if": 22, "cond": [22, 31, 35], "false_offset": 22, "emit_ret": 22, "param_nam": [22, 35], "vmfuncscop": 22, "imm": 22, "immedi": [22, 23], "as_python": [22, 33], "as_text": 22, "export_librari": [22, 24, 29], "file_nam": [22, 29], "fcompil": [22, 24, 29], "workspace_dir": [22, 29], "file_list": [22, 29], "temporari": [22, 23, 29], "dir": [22, 24, 29], "ex": [22, 28], "rt_mod": [22, 28], "load_modul": [22, 24, 29], "addon": [22, 29], "nvcc": 22, "everyth": 22, "stat": 22, "exprfunctor": 22, "memoiz": 22, "visit_expr": 22, "opaque_func": 22, "derive_func": 22, "specifici": 22, "simultan": 22, "ret_struct_info": 22, "is_pur": [22, 33], "bind_param": 22, "binding_map": [22, 23], "_np": 22, "bind_symbolic_var": 22, "create_empti": 22, "true_branch": 22, "false_branch": 22, "popul": 22, "un": 22, "objecttyp": 22, "packedfunctyp": 22, "primstructinfo": 22, "pod": [22, 35], "dtype_or_expr": 22, "prim": 22, "pyexprmut": 22, "exprmut": 22, "overwrit": 22, "inherit": 22, "discrib": 22, "expr_functor": 22, "proper": 22, "_pyexprvisitor": 22, "myexprmut": 22, "get_var_remap": 22, "vid": 22, "nullopt": [22, 33], "set_var_remap": 22, "visit_bind": 22, "visitbind": 22, "visit_binding_block": 22, "visitbindingblock": 22, "visit_binding_block_": 22, "visitbindingblock_": 22, "bindingblocknod": 22, "visit_call_": 22, "visitexpr_": 22, "visit_constant_": 22, "constantnod": 22, "visit_data_type_imm_": 22, "datatypeimmnod": 22, "visit_dataflow_block_": 22, "dataflowblocknod": 22, "visit_dataflow_var_": 22, "dataflowvarnod": 22, "visit_dataflow_var_def_": 22, "visitvardef_": 22, "rewritten": [22, 23, 32], "visitexpr": 22, "visit_expr_post_ord": 22, "visit_extern_func_": 22, "externfuncnod": 22, "visit_function_": 22, "functionnod": 22, "visit_global_var_": 22, "globalvarnod": 22, "visit_if_": 22, "ifnod": 22, "visit_match_cast_": 22, "visitbinding_": 22, "matchcastnod": 22, "visit_op_": 22, "opnod": 22, "visit_prim_value_": 22, "primvaluenod": 22, "visit_seq_expr_": 22, "seqexpr": 22, "seqexprnod": 22, "visit_shape_expr_": 22, "shapeexprnod": 22, "visit_span": 22, "visitspan": 22, "visit_string_imm_": 22, "stringimmnod": 22, "visit_tuple_": 22, "tuplenod": 22, "visit_tuple_getitem_": 22, "tuplegetitem": 22, "tuplegetitemnod": 22, "visit_var_": 22, "visit_var_binding_": 22, "varbindingnod": 22, "visit_var_def": 22, "visitvardef": 22, "visit_var_def_": 22, "visit_with_new_scop": 22, "with_struct_info": 22, "pyexprvisitor": 22, "exprvisitor": 22, "myexprvisitor": 22, "shapestructinfo": 22, "shapetyp": 22, "is_base_of": 22, "tuple_valu": 22, "tuplestructinfo": 22, "vminstrumentreturnkind": [22, 28], "enumer": [22, 28, 37], "he": 22, "memory_cfg": [22, 28], "get_output": [22, 28], "invoke_st": [22, 28], "earlier": [22, 23, 28], "arbitrili": [22, 28], "set_input": [22, 28], "save_funct": [22, 28], "saved_nam": [22, 28], "include_return": [22, 28], "overhead": [22, 28], "overridden": [22, 23, 28, 30], "realli": [22, 28], "confus": [22, 28], "meant": [22, 28], "send": [22, 28], "minim": [22, 26, 28, 37], "set_instru": [22, 28], "func_symbol": [22, 28], "before_run": [22, 28], "ret_valu": [22, 28], "instr": [22, 28], "min_repeat_m": [22, 28, 29], "cooldown_interval_m": [22, 28, 29], "repeats_to_cooldown": [22, 28, 29], "f_preproc": [22, 28, 29], "benchmarkresult": [22, 28, 29], "warm": [22, 28, 29], "discard": [22, 28, 29], "durat": [22, 24, 27, 28, 29], "millisecond": [22, 28, 29], "meet": [22, 28, 29, 36], "fall": [22, 28, 29], "increas": [22, 28, 29, 35, 37], "cooldown": [22, 28, 29], "preprocess": [22, 28, 29, 37], "lazi": [22, 23, 28, 29], "testtimeevalu": [22, 28], "arg0": [22, 28], "arg1": [22, 28], "argn": [22, 28], "fewer": [22, 28], "portion": [22, 28], "func_name_sav": [22, 28], "ftimer": [22, 28, 29], "profileresult": [22, 28, 29], "exec_mod": 22, "bytecod": 22, "system_lib": [22, 24, 29, 30], "driver": [22, 29], "stackvm": 22, "detect": [22, 23, 29, 30, 31, 32, 33, 36], "inputmodul": 22, "foo": 22, "get_shape_of": 22, "register_pipelin": 22, "adjustmatmulord": 23, "lora": 23, "loraa": 23, "lorab": 23, "allocateworkspac": 23, "enough": [23, 38], "kworkspaces": 23, "alteropimpl": 23, "op_impl_map": 23, "op_buffer_transform": 23, "op_buffer_axis_separ": 23, "operator_nam": 23, "op_kind": 23, "extern_modul": 23, "attachglobalsymbol": 23, "bindparam": 23, "bindsymbolicvar": 23, "varnam": 23, "bundlemodelparam": 23, "bundl": 23, "paramt": 23, "calltirrewrit": 23, "explicit": [23, 36, 37], "canonicalizebind": 23, "canonic": 23, "elimin": [23, 33], "redund": [23, 36], "combineparallelmatmul": 23, "unwant": 23, "convertlayout": 23, "desired_layout": [23, 37], "nhwc": [23, 37], "ohwi": 23, "converttodataflow": 23, "min_siz": 23, "consecut": [23, 33, 36], "dataflowblockpass": 23, "dataflowuseinplacecal": 23, "entry_funct": 23, "dead": [23, 33], "composit": [23, 33], "tripl": [23, 30], "eliminatecommonsubexpr": [23, 38], "call_onli": 23, "functionpass": [23, 36, 38], "subexpress": 23, "cse": [23, 38], "expandmatmulofsum": 23, "expans": 23, "suppress": 23, "expandtupleargu": 23, "fastmathtransform": 23, "expens": 23, "fast": [23, 37], "counterpart": 23, "fewshottun": 23, "valid_count": [23, 37], "benchmark": [23, 36], "shot": 23, "conduct": [23, 33, 36, 38], "metaschedul": [23, 36, 39], "function_pass": [23, 36], "fuse_opt_level": 23, "substitut": [23, 34, 36], "manipul": [23, 33], "fuseopsbypattern": 23, "fusionpattern": 23, "bind_const": 23, "annotate_codegen": 23, "driven": 23, "higher": [23, 33, 37, 38], "dnnl": 23, "conv2d_relu": 23, "offload": 23, "mergecompositefunct": 23, "larger": [23, 27, 37], "dfpattern": 23, "annotation_pattern": 23, "patterncheckcontext": 23, "attrs_gett": 23, "require_grad": 23, "target_index": 23, "_adjoint": 23, "main_adjoint": 23, "original_paramet": 23, "original_output": 23, "grad_1": 23, "grad_2": 23, "original_return_valu": 23, "net": 23, "sublinear": 23, "chen": [23, 39], "tianqi": [23, 39], "adjoint": [23, 31], "lv2_adjoint": 23, "lv1_adjoint": 23, "x_adjoint": 23, "y_adjoint": 23, "orig_return_valu": 23, "inlineprivatefunct": [23, 36], "killafterlastus": 23, "lambdalift": 23, "lazytransformparam": 23, "fget_item": 23, "get_item": 23, "fset_item": 23, "set_item": 23, "extra_get_item_param": 23, "extra_set_item_param": 23, "demand": 23, "tonondataflow": 23, "removepuritytrack": 23, "param1": [23, 29], "param2": 23, "call_pack": [23, 25, 31, 35, 37], "customize_legalize_map": 23, "enable_warn": 23, "flegal": 23, "legalizefunc": 23, "customize_legalize_add": 23, "t_multipli": 23, "lifttransformparam": 23, "loweralloctensor": 23, "builtin": [23, 36], "planner": 23, "intent": 23, "metascheduleapplydatabas": 23, "deduc": 23, "metascheduletuneirmod": 23, "max_trials_gloabl": 23, "metascheduletunetir": 23, "henc": 23, "anf": 23, "checked_type_": 23, "shape_": 23, "optimizelayouttransform": 23, "matched_expr": 23, "annotated_expr": 23, "matched_bind": 23, "var_usag": 23, "value_to_bound_var": 23, "doesn": [23, 33, 35], "removepuritycheck": 23, "force_pur": 23, "removeredundantreshap": 23, "removeunusedoutput": 23, "removeunusedparamet": 23, "reordertakeaftermatmul": 23, "rewritecudagraph": 23, "rewritedataflowreshap": 23, "createview": 23, "runcodegen": 23, "target_opt": 23, "splitcalltirbypattern": 23, "fcodegen": 23, "rest": 23, "matchresult": 23, "staticplanblockmemori": 23, "amount": [23, 29], "tir_var_upper_bound": 23, "clariti": 23, "1024": 23, "tomixedprecis": 23, "fp16_input_nam": 23, "fp32": [23, 37], "fp16": [23, 37], "updateparamstructinfo": 23, "sinfo_func": 23, "updatevdevic": 23, "new_vdevic": 23, "vmbuiltinlow": 23, "vmshapelow": 23, "emit_err_ctx": 23, "err": 23, "dataflowblock_pass": 23, "pass_func": [23, 36, 38], "opt_level": [23, 36, 38], "traceabl": [23, 36, 38], "create_dataflowblock_pass": 23, "testreplacebind": 23, "val": [23, 35], "56": 23, "new_bind": 23, "transform_dataflowblock": 23, "demo": [23, 36], "new_block": 23, "inputmod": 23, "f1": 23, "block_pass": 23, "updated_mod": [23, 36, 38], "my": [23, 36], "follwo": [23, 38], "create_function_pass": [23, 36], "testreplacefunc": [23, 36], "new_func": [23, 35, 36], "transform_funct": [23, 36], "f2": 23, "fpass": [23, 32, 36], "lightweight": [24, 26], "connect": 24, "upload": 24, "launch": 24, "localsess": 24, "rpcsession": 24, "ran": 24, "popensess": 24, "binari": [24, 29, 31, 35, 37], "popen": 24, "sess": 24, "client": 24, "dev_id": [24, 26, 29], "dev_typ": [24, 26, 29], "encod": [24, 37], "temp": 24, "folder": 24, "bytearrai": [24, 29], "download_linked_modul": 24, "linker": 24, "build_module_with_cross_compil": 24, "tar": [24, 29], "open": 24, "wb": [24, 33], "ext_dev": [24, 26, 29], "extens": [24, 26, 29], "get_funct": [24, 29], "listdir": 24, "token": 24, "wide": [24, 29], "webgpu": [24, 26], "port": 24, "9091": 24, "port_end": 24, "9199": 24, "is_proxi": 24, "tracker_addr": 24, "load_librari": 24, "custom_addr": 24, "silent": 24, "no_fork": 24, "server_init_callback": 24, "reuse_addr": 24, "timeout": 24, "url": [24, 39], "proxi": 24, "tracker": 24, "ip": 24, "forbid": 24, "fork": [24, 33], "multiprocess": 24, "socket": 24, "time_wait": 24, "mypackag": 24, "trackersess": 24, "addr": 24, "session_timeout": 24, "max_retri": 24, "session_constructor_arg": 24, "longer": 24, "aliv": 24, "retri": 24, "request_and_run": 24, "guard": [24, 31, 35], "stateless": 24, "text_summari": 24, "enable_log": 24, "disabl": [24, 29, 30, 33, 38], "server_url": 24, "server_port": 24, "server_kei": 24, "session_constructor": 24, "rpcclientsess": 24, "endpoint": 24, "client_via_proxi": 24, "proxy_server_url": 24, "proxy_server_port": 24, "proxy_server_kei": 24, "internal_url": 24, "internal_port": 24, "internal_kei": 24, "internal_log": 24, "connect_track": 24, "with_minrpc": 24, "compile_func": 24, "posix_popen_serv": 24, "minrpc": 24, "distribut": [25, 33], "dmodul": 25, "dref": 25, "dpackedfunc": 25, "resid": 25, "debug_copy_from": 25, "worker_id": 25, "debug_get_from_remot": 25, "processsess": 25, "entrypoint": 25, "pipe": 25, "queue": [25, 37], "src": [25, 33, 35, 36, 37], "variad": [25, 35], "dldatatyp": 25, "dldevic": 25, "return_valu": 25, "unsupport": 25, "copy_from_worker_0": 25, "host_arrai": 25, "remote_arrai": 25, "copy_to_worker_0": 25, "gather_to_worker0": 25, "from_arrai": 25, "to_arrai": 25, "get_global_func": [25, 29], "init_ccl": 25, "device_id": [25, 29, 35], "underli": [25, 26, 29, 33, 39], "nccl": 25, "rccl": 25, "mpi": 25, "load_vm_modul": 25, "sync_worker_0": 25, "threadedsess": 25, "arthimet": 26, "goal": 26, "asnumpi": 26, "deprec": [26, 29, 30, 33, 36], "copyfrom": 26, "source_arrai": 26, "array_lik": 26, "arr": [26, 35], "copyto": 26, "mem_scop": 26, "np_arr": 26, "shapetupl": [26, 29], "supportsint": 26, "plugin": [26, 29], "from_dlpack": 26, "__dlpack__": 26, "retreiv": 26, "destructor": 26, "respons": [26, 33, 35, 37], "destruct": 26, "capsul": 26, "mtl": [26, 29], "numpyasarrai": 26, "np_data": [26, 37], "tvmarrai": 26, "vpi": [26, 29], "simul": [26, 29, 37], "registr": [27, 30], "devicewrapp": 27, "metriccollector": 27, "metric": [27, 29], "percent": 27, "ratio": 27, "device_metr": [27, 29], "csv": [27, 29], "overal": [27, 29], "classmethod": [27, 29], "from_json": [27, 29], "deseri": [27, 29, 33], "aggreg": [27, 29], "col_sum": [27, 29], "frame": [27, 29, 37], "appearancei": [27, 29], "profile_funct": 27, "collector": 27, "warmup_it": 27, "hit": 27, "flop": [27, 32], "issu": [27, 33], "entry_nam": 27, "prof": 27, "objectref": [27, 34], "countnod": 27, "durationnod": 27, "percentnod": 27, "type_str": 29, "datatypecod": 29, "device_typ": [29, 30, 35], "strucur": 29, "mask2str": 29, "str2mask": 29, "dldevicetyp": 29, "tvmdeviceexttyp": 29, "enum": 29, "api_vers": 29, "cuda_vers": 29, "vk_header_vers": 29, "compute_vers": 29, "minor": [29, 37], "create_raw_stream": 29, "stream": 29, "tvmstreamhandl": 29, "device_nam": 29, "vendor": 29, "driver_vers": 29, "450": 29, "408": 29, "nvidia": [29, 35], "patch": 29, "appropri": [29, 30, 37], "free_raw_stream": 29, "l2_cache_size_byt": 29, "max_clock_r": 29, "khz": 29, "max_shared_memory_per_block": 29, "max_thread_dimens": 29, "max_threads_per_block": 29, "multi_processor_count": 29, "thee": 29, "set_raw_stream": 29, "sync": [29, 36], "job": 29, "texture_spatial_limit": 29, "textur": 29, "total_global_memori": 29, "warp_siz": 29, "concurr": 29, "regardless": 29, "clear_import": 29, "entry_func": 29, "fpack_import": 29, "mechan": 29, "_cc": 29, "create_shar": 29, "suppli": [29, 31], "object_format": 29, "is_system_lib": 29, "symbol_prefix": 29, "suitabl": [29, 37], "query_import": 29, "get_property_mask": 29, "modulepropertymask": 29, "bitmask": [29, 33, 35], "get_sourc": 29, "fmt": 29, "implements_funct": 29, "has_funct": 29, "eg": [29, 30], "csourcemodul": 29, "import_modul": 29, "imported_modul": 29, "is_binary_serializ": 29, "serializ": 29, "ie": 29, "serialz": 29, "is_dso_export": 29, "dso": 29, "is_runn": 29, "export_shar": 29, "limit_zero_time_iter": 29, "cache_flush_byt": 29, "hang": 29, "flush": 29, "objectgener": 29, "asobject": [29, 31], "objectpath": 29, "objectpathpair": 29, "plai": 29, "role": 29, "bridg": 29, "front": [29, 37], "exposur": 29, "inspect": 29, "hook": 29, "scriptabl": 29, "ir_prefix": 29, "tir_prefix": 29, "relax_prefix": 29, "module_alia": 29, "buffer_dtyp": 29, "int_dtyp": 29, "float_dtyp": 29, "verbose_expr": 29, "indent_spac": 29, "print_line_numb": 29, "num_context_lin": 29, "syntax_sugar": 29, "show_object_address": 29, "path_to_underlin": 29, "path_to_annot": 29, "obj_to_underlin": 29, "obj_to_annot": 29, "indent": 29, "underlin": 29, "black_format": [29, 33], "highlight": [29, 33], "pygment": [29, 33], "cprint": [29, 33], "formatt": [29, 33], "black": [29, 33], "tvm_black_format": [29, 33], "unset": 29, "prefer": 29, "const_val": 29, "tvm_val": 29, "redirect": 29, "convert_to_object": 29, "codebas": 29, "itervar": [29, 31, 33, 35, 36], "suffix": 29, "cc": [29, 37, 39], "load_param_dict": 29, "param_byt": 29, "load_param_dict_from_fil": 29, "load_static_librari": 29, "static_librari": 29, "relink": 29, "fly": [29, 33, 35], "save_param_dict": 29, "load_param": 29, "param0": 29, "arr0": 29, "arr1": 29, "save_param_dict_to_fil": 29, "startup": [29, 30], "dlopen": [29, 30], "ban": [29, 30], "life": 29, "cyle": 29, "codgen": 30, "target_kind": 30, "mtripl": 30, "mcpu": 30, "cpunam": 30, "chip": 30, "architectur": [30, 39], "mattr": 30, "a1": 30, "a2": 30, "a3": 30, "simd": 30, "mabi": 30, "abi": 30, "lp64d": 30, "genericfunc": 30, "ever": 30, "get_packed_func": 30, "key_list": 30, "allow_overrid": 30, "set_default": 30, "arm_cpu": 30, "mali": 30, "intel_graph": 30, "intel": 30, "graphic": 30, "arch": 30, "canon_multi_target": 30, "multi_target": 30, "canon_target": 30, "canon_multi_target_and_host": 30, "target_host": 30, "sm_80": 30, "canon_target_and_host": 30, "canon_target_map_and_host": 30, "target_map": 30, "allow_non": 30, "from_devic": 30, "get_kind_attr": 30, "get_target_device_typ": 30, "list_kind": 30, "max_block_size_x": 30, "max_block_size_i": 30, "max_num_thread": 30, "target_or_curr": 30, "thread_warp_s": 30, "targetkind": 30, "options_from_nam": 30, "kind_nam": 30, "virtualdevic": 30, "soc": 30, "phone": 30, "board": 30, "bifrost": 30, "1080ti": 30, "sm_61": 30, "generic_func": 30, "fdefault": 30, "fgener": 30, "my_func_cuda": 30, "displai": [30, 38], "get_native_generic_func": 30, "cpu_ver": 30, "v68": 30, "Not": [30, 33, 35, 37], "throw": [30, 35], "hvx": 30, "llvm_option": 30, "use_qfloat": 30, "qfloat": 30, "use_ieee_fp": 30, "ieee": 30, "num_cor": 30, "vtcm_capac": 30, "vtcm": [30, 32, 36], "capac": 30, "14": [30, 35, 37, 39], "list_tag": 30, "tag_dict": 30, "make_compilation_config": 30, "ctxt": 30, "compilationconfig": 30, "override_native_generic_func": 30, "rasp": 30, "raspberri": 30, "3b": 30, "riscv_cpu": 30, "sifiv": 30, "u54": 30, "risc": 30, "rv64gc": 30, "stm32": 30, "seri": [30, 38, 39], "stm32h7xx": 30, "stm32f4xx": 30, "computeop": 31, "externop": 31, "hybridop": 31, "hybrid": 31, "placeholderop": 31, "scanop": [31, 37], "scan_axi": 31, "specializedcondit": 31, "corresspond": 31, "value_index": [31, 35], "tensorcomputeop": 31, "tensorslic": 31, "operaton": [31, 35], "experss": [31, 35], "comm_reduc": [31, 35], "fcombin": [31, 35], "fident": [31, 35], "commut": [31, 35, 37], "mysum": [31, 35], "varargs_nam": 31, "vararg": 31, "i2": [31, 33], "index_dtype_overrid": 31, "_tensor": 31, "tir_matmul": 31, "create_schedul": [31, 35, 37], "decl_tensor_intrin": 31, "tensor_intrin": [31, 33], "scalar_param": 31, "default_buffer_param": 31, "stmt": [31, 32, 33, 34, 35, 36, 37], "ins": [31, 37], "reduce_init": 31, "reduce_upd": 31, "compact": [31, 32, 33, 35, 36, 37], "scalar_input": 31, "intrin": [31, 33, 35], "tensorintrin": [31, 33, 35], "div": [31, 35, 37], "truncdiv": [31, 35, 37], "exponenti": [31, 35, 37], "in_buff": [31, 37], "out_buff": [31, 37], "additon": [31, 37], "contrib": [31, 37], "cbla": [31, 37], "extern_primfunc": 31, "before_split": [31, 33], "primexprwithop": [31, 35], "floordiv": [31, 33, 35, 36, 37], "floormod": [31, 33, 35, 36, 37], "fmod": [31, 35], "wrt": [31, 37], "word": 31, "jacobian": 31, "w1": 31, "w2": 31, "z1": 31, "z2": 31, "dw1": 31, "dw2": 31, "jw1": 31, "jw2": 31, "if_then_els": [31, 33, 35, 36], "satisfi": [31, 33, 35, 36], "lane": [31, 35], "indexdiv": [31, 35], "advantag": [31, 35], "indexmod": [31, 35], "log10": [31, 35, 37], "log2": [31, 35, 37], "predic": [31, 33, 35], "max_r": [31, 35], "max_valu": [31, 35], "min_r": [31, 35], "nearbyint": [31, 35], "faster": [31, 32, 35, 37], "wherea": [31, 35], "en": [31, 35], "cpprefer": [31, 35], "numer": [31, 35, 37], "math": [31, 35], "popcount": [31, 35], "bit": [31, 33, 35, 36, 37], "expon": [31, 35, 37], "rv": 31, "thread_tag": [31, 35], "state_placehold": 31, "timestamp": 31, "s_state": 31, "s_init": 31, "s_updat": 31, "size_var": 31, "sizevar": [31, 35], "sum_r": [31, 35], "tag_scop": 31, "manger": 31, "tagscop": 31, "compute_relu": 31, "hyperbol": [31, 35, 37], "thread_axi": [31, 33, 35], "trace_act": [31, 35], "default_trace_act": [31, 35], "trunc": [31, 35, 37], "truncat": [31, 35, 37], "closer": [31, 35], "truncmod": [31, 35], "tindex": 31, "oobcheck": 32, "apply_prim_func_arg_and_result_memory_constraint": 32, "relay_func_typ": 32, "arg_and_result_memory_scop": 32, "written": [32, 33], "aka": [32, 33], "caution": [32, 33], "account": 32, "anystr": 32, "calculate_allocated_byt": 32, "func_or_mod": 32, "calculate_constant_byt": 32, "constant_byte_align": 32, "align": [32, 33, 35, 37], "calculate_workspace_byt": 32, "workspace_byte_align": 32, "detect_buffer_access_lca": 32, "lowest": 32, "bufferload": [32, 33, 35, 36], "bufferstor": [32, 33, 35, 36], "estimate_tir_flop": 32, "stmt_or_mod": 32, "fragment": [32, 35, 36], "expr_deep_equ": 32, "deepli": 32, "unless": [32, 35, 37], "arithmet": [32, 36], "simplif": [32, 35, 36], "find_anchor_block": 32, "biggest": 32, "winograd": [32, 37], "anchor_block": 32, "get_block_access_region": 32, "buffer_var_map": 32, "bufferregion": [32, 35], "third": 32, "get_block_read_write_region": 32, "get_prim_func_arg_and_result_memory_constraint": 32, "get_vtcm_compaction_pass": 32, "undefined_var": 32, "verify_gpu_cod": 32, "illeg": [32, 36], "verif": [32, 33], "verify_memori": 32, "verify_ssa": 32, "ssa": [32, 36], "verify_well_form": 32, "assert_mod": 32, "blockscop": [33, 35], "sref": [33, 35], "glossari": 33, "subtre": 33, "leav": 33, "child": 33, "leaf": 33, "get_deps_by_dst": 33, "stmtsref": [33, 35], "get_deps_by_src": 33, "depkind": 33, "waw": 33, "war": 33, "kraw": 33, "exprrv": 33, "instructionkind": 33, "input_rv_typ": 33, "getblock": 33, "attr_typ": 33, "atom": 33, "output_rv_typ": 33, "noth": 33, "functor": [33, 34], "unstructur": 33, "usecas": 33, "moment": 33, "alon": 33, "computeinlin": 33, "debug_mask": 33, "error_render_level": 33, "enable_check": 33, "schedule_primit": 33, "add_unit_loop": 33, "block_or_loop": 33, "new_loop": 33, "before_add_unit_loop": 33, "after_add_unit_loop": 33, "ann_kei": 33, "ann_val": 33, "annotationvaluet": 33, "before_annot": 33, "ann_valu": 33, "after_annot": 33, "block_attr": 33, "vthread": [33, 36], "before_bind": 33, "after_bind": 33, "blockiz": 33, "before_block": 33, "i_0": 33, "set_scop": 33, "after_block": 33, "b_o": 33, "vio": 33, "vjo": 33, "subspac": 33, "cache_index": 33, "cse_thresh": 33, "precomput": [33, 37], "threshold": 33, "cached_block": 33, "cache_inplac": 33, "40": 33, "80": 33, "i3": 33, "block_a": 33, "resize_cache_index": 33, "index_var_0": 33, "index_var_1": 33, "index_0": 33, "index_1": 33, "read_buffer_index": 33, "inplac": 33, "before_cache_inplac": 33, "data_io": 33, "call_extern": [33, 35], "call_impl": 33, "data_io_loc": 33, "cache_read": 33, "consumer_block": 33, "before_cache_read": 33, "block_b": 33, "after_cache_read": 33, "a_loc": 33, "cache_writ": 33, "write_buffer_index": 33, "before_cache_writ": 33, "after_cache_writ": 33, "b_local": 33, "can_decompose_pad": 33, "compute_at": 33, "move": [33, 36], "regener": 33, "induc": 33, "nonneg": 33, "before_compute_at": 33, "after_compute_at": 33, "compute_inlin": 33, "before_inlin": 33, "after_inlin": 33, "untouch": 33, "decompose_pad": 33, "pad_value_block": 33, "before_decompos": 33, "140": 33, "134": 33, "after_decompos": 33, "block_pad_const": 33, "init_block": 33, "ty": 33, "enter_postproc": 33, "postprocess": 33, "fork_se": 33, "func_working_on": 33, "fused_loop": 33, "before_fus": 33, "after_fus": 33, "i_j_fus": 33, "16384": 33, "rand_var_or_sref": 33, "switch": [33, 38], "work_on": 33, "indexerror": 33, "get_child_block": 33, "get_consum": 33, "get_output_block": 33, "scope_block": 33, "atleast": 33, "output_block": 33, "get_produc": 33, "get_sref": [33, 35], "rand_var_or_stmt": 33, "loop_partit": 33, "partit": 33, "partition_loop": 33, "before_partit": 33, "after_partit": 33, "b_i_common": 33, "b_i0_partit": 33, "b_i0": 33, "b_i1_partit": 33, "66": 33, "b_i1": 33, "b_partition_2": 33, "b_i2": 33, "before_merg": 33, "i_m": 33, "pad_einsum": 33, "On": 33, "132": 33, "144": 33, "before_pad_einsum": 33, "c_share": 33, "a_pad": 33, "b_pad": 33, "c_pad": 33, "before_parallel": 33, "after_parallel": 33, "reindex": 33, "reindex_block": 33, "before_reindex": 33, "after_reindex": 33, "a_reindex": 33, "reindex_cache_read": 33, "transform_block_layout": 33, "surround": 33, "before_reindex_cache_read": 33, "after_reindex_cache_read": 33, "reindex_cache_writ": 33, "transform_layout": 33, "before_reindex_cache_writ": 33, "remove_rv": 33, "rand_var": 33, "ordered_loop": 33, "l_2": 33, "l_n": 33, "l_i": 33, "l_": 33, "before_reord": 33, "after_reord": 33, "reorder_block_iter_var": 33, "new_ord": 33, "matmul_after_reorder_block_iter_var": 33, "rss": 33, "before_reverse_compute_at": 33, "after_reverse_compute_at": 33, "reverse_compute_inlin": 33, "rfactor": 33, "factor_axi": 33, "race": 33, "opportun": 33, "pseudocod": 33, "innermost": [33, 37], "b_rf": 33, "rf_block": 33, "before_rfactor": 33, "ii": 33, "vii": 33, "srr": 33, "after_rfactor": 33, "vi2": 33, "sr": 33, "unrol": [33, 36], "outermost": [33, 36], "unari": 33, "plu": 33, "rolling_buff": 33, "roll": [33, 36], "rollabl": 33, "overlap": [33, 37], "circular": 33, "cascad": 33, "before_rolling_buff": 33, "12": [33, 37], "ax2": 33, "ax3": 33, "ax0_1": 33, "ax1_1": 33, "rv0": 33, "rv1": 33, "rr": 33, "after_rolling_buff": 33, "region_cov": 33, "sample_categor": 33, "prob": 33, "decis": 33, "sample_compute_loc": 33, "sample_partitioned_til": 33, "partition_po": 33, "innerpart_factor": 33, "sample_perfect_til": 33, "max_innermost_factor": 33, "perfect": 33, "set_axis_separ": 33, "before_set_axis_separ": 33, "buffer_index": 33, "buffer_index_typ": 33, "after_set_axis_separ": 33, "before_set_scop": 33, "after_set_scop": 33, "b_share": 33, "split_loop": 33, "after_split": 33, "schedulest": 33, "storage_align": 33, "friendli": 33, "bank": 33, "before_storage_align": 33, "after_storage_align": 33, "buffer_dim_align": 33, "129": 33, "enclos": 33, "before_tensor": 33, "k_0": 33, "mma_desc": 33, "offset_factor": [33, 35, 37], "mma_intrin": 33, "tvm_mma_sync": [33, 35], "elem_offset": [33, 35, 36, 37], "test_mma_intrin": 33, "after_tensor": 33, "update_o": 33, "vko": 33, "a_1": 33, "b_1": 33, "c_1": 33, "before_transform_block_layout": 33, "after_transform_block_layout": 33, "assume_injective_transform": 33, "setaxissepar": 33, "transformlayout": 33, "symplif": 33, "precondit": 33, "met": 33, "incorrect": 33, "complic": 33, "caller": 33, "before_transform_layout": 33, "two_elementwise_transformed_intermediate_buff": 33, "unannot": 33, "before_unannot": 33, "after_unannot": 33, "before_unrol": 33, "after_unrol": 33, "unsafe_hide_buffer_access": 33, "buf_typ": 33, "buf_index_arrai": 33, "hide": 33, "unsaf": [33, 36], "spars": [33, 35], "unsafe_set_dtyp": 33, "before_set_dtyp": 33, "set_dtyp": 33, "after_set_dtyp": 33, "before_vector": 33, "after_vector": 33, "scheduledebugmask": 33, "correpsond": [33, 35], "verify_sref_tre": 33, "verify_cached_flag": 33, "affine_bind": 33, "stage_pipelin": 33, "scheduleerror": 33, "happen": [33, 37], "primari": [33, 36], "resort": 33, "prerequisit": 33, "get_block_scop": [33, 35], "block_sref": [33, 35], "src_sref": 33, "tgt_stmt": 33, "blockreal": [33, 35, 36], "block_sref_reus": 33, "closest": [33, 37], "children": [33, 34], "inline_mark": 33, "root_mark": 33, "inst": 33, "far": 33, "roundtripp": 33, "past": 33, "reproduc": 33, "decision_typ": 33, "apply_json_to_schedul": 33, "json_obj": 33, "json_typ": 33, "apply_to_schedul": 33, "remove_postproc": 33, "decision_provid": 33, "onto": 33, "1st": 33, "2nd": 33, "3rd": 33, "4th": 33, "as_json": 33, "py_stmt": 33, "get_decis": 33, "pop": [33, 38], "popped_inst": 33, "with_decis": 33, "ir_transform": 34, "preorder": 34, "postord": 34, "only_en": 34, "pre_order_visit": 34, "renew_def": 34, "vardef": 34, "bufferdef": 34, "deepcopi": 34, "vmap": 34, "buffer_var": 35, "allocateconst": 35, "data_or_idx": 35, "assertstmt": 35, "attrstmt": [35, 36], "bijectivelayout": 35, "biject": 35, "bijective_layout": 35, "document": 35, "src_layout": [35, 37], "dst_layout": [35, 37], "backward_index": 35, "src_index": 35, "backward_shap": 35, "src_shape": 35, "forward_index": 35, "dst_index": 35, "forward_shap": 35, "dst_shape": 35, "iter_var": [35, 36], "matchbufferregion": 35, "subregion": 35, "blockdependenceinfo": 35, "sref2scop": 35, "stmt2ref": 35, "retriv": 35, "iter_valu": [35, 36], "realiz": 35, "block_real": 35, "decl_buff": [35, 37], "access_ptr": 35, "access_mask": 35, "ptr_type": 35, "content_lan": 35, "ptress": 35, "ptr": 35, "get_flattened_buff": 35, "offset_of": 35, "flattened_indic": 35, "vload": 35, "vstore": 35, "bufferr": 35, "calleffectkind": 35, "commreduc": 35, "identity_el": 35, "dataproduc": 35, "declbuff": 35, "eq": 35, "loop_var": 35, "forkind": 35, "threadbind": 35, "ge": 35, "gt": 35, "ifthenels": [35, 36], "then_cas": 35, "else_cas": 35, "initial_indic": 35, "final_indic": 35, "inverse_index_map": 35, "prior": [35, 36], "invers": [35, 37], "from_func": 35, "mapping_funct": 35, "index_dtyp": 35, "from_func_with_separ": 35, "is_equivalent_to": 35, "other_map": 35, "is_equival": 35, "map_indic": 35, "map_ndarrai": 35, "arr_src": 35, "thie": 35, "arr_dst": 35, "map_shap": 35, "non_surjective_invers": 35, "inverse_map": 35, "axis0": 35, "axis2": 35, "iter_typ": 35, "le": 35, "lt": 35, "primal": 35, "subordin": 35, "nchw16c": [35, 37], "channel_block": [35, 37], "factor_of": 35, "index_of": 35, "letstmt": [35, 36], "ne": 35, "Or": 35, "prefetch": [35, 36], "buffer_map": [35, 36], "param_map": 35, "mem_copi": 35, "mem_copy_16_16": 35, "with_bodi": 35, "new_bodi": 35, "producerload": 35, "producerr": 35, "producerstor": 35, "ramp": 35, "rdom": 35, "true_valu": 35, "false_valu": 35, "seqstmt": 35, "shuffl": 35, "tvmbackendallocworkspac": 35, "nbyte": 35, "dtype_code_hint": 35, "dtype_bits_hint": 35, "tempor": 35, "opengl": 35, "tvmbackendfreeworkspac": 35, "desc": 35, "impl": 35, "allow_miss": 35, "address_of": 35, "buffer_load": 35, "atan2": 35, "arctan2": 35, "call_cpack": 35, "call_cpacked_low": 35, "call_intrin": 35, "call_llvm_intrin": 35, "call_llvm_pure_intrin": 35, "tvmarrayhandl": 35, "period": 35, "call_packed_low": 35, "reciev": 35, "call_pure_extern": 35, "ceildiv": 35, "clz": [35, 37], "copysign": 35, "create_barri": 35, "barrier_count": 35, "barrier": 35, "data_align": [35, 37], "buffer_typ": [35, 37], "discuss": [35, 37], "pssed": [35, 37], "auto_broadcast": [35, 37], "m0": [35, 37], "m1": [35, 37], "m2": [35, 37], "n0": [35, 37], "n1": [35, 37], "n2": [35, 37], "o0": [35, 37], "o1": [35, 37], "o2": [35, 37], "fadd": [35, 37], "bcast_add": [35, 37], "end_profile_intrins": 35, "exp10": 35, "exp2": 35, "hypot": 35, "infin": 35, "isnullptr": 35, "nullptr": 35, "layout_str": 35, "ldexp": 35, "log1p": 35, "lookup_param": 35, "mma_fil": 35, "local_s": 35, "local_ptr": 35, "mma": [35, 36], "registor": 35, "mma_stor": 35, "dst_ptr": 35, "src_ptr": 35, "src_offset": 35, "dst_stride": 35, "ptx": 35, "nextaft": 35, "toward": 35, "pow": 35, "ptx_arrive_barri": 35, "barrier_id": 35, "arriv": 35, "mbarrier": 35, "ptx_arrive_barrier_expect_tx": 35, "byte_count": 35, "tx": 35, "expect_tx": 35, "addtion": 35, "async": 35, "transact": 35, "ptx_commit_group": 35, "movement": 35, "ptx_cp_async": 35, "shared_ptr": 35, "shared_offset": 35, "global_ptr": 35, "global_offset": 35, "ptx_cp_async_barri": 35, "ptx_cp_async_bulk": 35, "bulk": 35, "ptx_init_barrier_thread_count": 35, "thread_count": 35, "ptx_ldmatrix": 35, "tran": 35, "local_offset": 35, "smem_ptr": 35, "smem_offset": 35, "warp": [35, 36], "ldmatrix": 35, "b16": 35, "memort": 35, "ptx_mma": 35, "a_layout": 35, "b_layout": 35, "a_dtyp": 35, "b_dtype": 35, "c_dtype": 35, "multiplicand_a": 35, "a_index": 35, "multiplicand_b": 35, "b_index": 35, "c_index": 35, "satur": 35, "col": 35, "multiplicand": 35, "ptx_mma_sp": 35, "meta_index": 35, "sparse_selector": 35, "selector": 35, "ptx_wait_barri": 35, "try_wait": 35, "ptx_wait_group": 35, "uncommit": 35, "q_multiply_shift": 35, "shift": [35, 37], "mathemat": 35, "wikipedia": 35, "wiki": 35, "q_": 35, "number_format": 35, "half": 35, "fraction": [35, 37], "q_multiply_shift_per_axi": 35, "is_lshift_requir": [35, 37], "is_rshift_requir": [35, 37], "reinterpret": [35, 37], "shift_left": 35, "shift_right": 35, "start_profile_intrins": 35, "stmt_list": 35, "stmt_seq": 35, "tvm_access_ptr": 35, "ptype": 35, "rw_mask": 35, "tvm_bmma_sync": 35, "fragment_d": 35, "index_d": 35, "fragment_a": 35, "index_a": 35, "fragment_b": 35, "index_b": 35, "fragment_c": 35, "index_c": 35, "bmma_sync": 35, "bwmma": 35, "tvm_check_return": 35, "return_unexpect": 35, "nested_cal": 35, "tvm_fill_frag": 35, "fill_frag": 35, "wmma": 35, "uintimm": 35, "tvm_load_matrix_sync": 35, "buffer_ptr": 35, "row_major": 35, "column_major": 35, "mma_sync": 35, "tvm_stack_alloca": 35, "dtype_str": 35, "tvm_stack_make_arrai": 35, "arr_dtyp": 35, "elem_offs": 35, "tvm_stack_make_shap": 35, "tvm_store_matrix_sync": 35, "tvm_struct_get": 35, "date": 35, "structtyp": 35, "tvm_struct_set": 35, "tvm_thread_allreduc": 35, "freduce_arg": 35, "threadblock": 35, "tvm_throw_last_error": 35, "tvmgetlasterror": 35, "tvm_tupl": 35, "undef": 35, "vectorcombin": 35, "vec1": 35, "vec2": 35, "vectorhigh": 35, "vec": 35, "vectorlow": 35, "annotatedeviceregion": 36, "ktarget": 36, "annotateentryfunc": 36, "ftransform": 36, "prim_func_pass": 36, "applylayouttransform": 36, "layout_transform_map": 36, "fucntion": 36, "bf16computeleg": 36, "bf16": 36, "bf16storageleg": 36, "u16": 36, "bindtarget": 36, "coprocsync": 36, "processor": 36, "combinecontextcal": 36, "commonsubexprelimtir": 36, "enable_cse_tir": 36, "identify_equiv_term": 36, "compactbufferalloc": 36, "is_strict": 36, "narrow": 36, "skinni": 36, "grow": 36, "convertblockstoopaqu": 36, "convertforloopstoseri": 36, "convertssa": 36, "hoist": 36, "decoratedevicescop": 36, "defaultgpuschedul": 36, "unschedul": 36, "extractprimfuncconst": 36, "unif": 36, "fp8computeleg": 36, "promote_dtype_str": 36, "fp8": 36, "promote_dtyp": 36, "fp8storageleg": 36, "u8": 36, "fcond": 36, "flattenbuff": 36, "forcenarrowindextoint32": 36, "forc": 36, "down": [36, 37], "hoistexpress": 36, "verison": 36, "hoistifthenels": 36, "elig": 36, "advanc": [36, 39], "support_block_scope_host": 36, "hoistedcondit": 36, "hoistexpressionconfig": 36, "conditional_typ": 36, "bitflag": 36, "booleanexpress": 36, "ifelseexpr": 36, "ifelsestmt": 36, "usingblockvar": 36, "hoistedletbind": 36, "let_binding_typ": 36, "letexpr": 36, "requiredbycondit": 36, "inferfrag": 36, "infom": 36, "injectcopyintrin": 36, "pragma_kei": 36, "fintrin": 36, "pragma": 36, "copyintrin": 36, "pad_befor": [36, 37], "pad_aft": [36, 37], "injectdoublebuff": 36, "doubl": 36, "injectptxasynccopi": 36, "asyncron": 36, "injectpermutedlayout": 36, "injectprefetch": 36, "injectrollingbuff": 36, "injectsoftwarepipelin": 36, "injectvirtualthread": 36, "installdebugspan": 36, "printer": 36, "instrumentboundcheck": 36, "instrumentprofileintrins": 36, "legalizepackedcal": 36, "tvmvalu": 36, "liftattrscop": 36, "liftthreadbind": 36, "looppartit": 36, "lowerautocopi": 36, "lowercrossthreadreduct": 36, "lowercustomdatatyp": 36, "lowerdevicekernellaunch": 36, "subroutin": 36, "env_thread": 36, "kglobalsymbol": 36, "tvm_call_pack": 36, "lowerdevicestorageaccessinfo": 36, "lowerinitblock": 36, "lowerintrin": 36, "lowermatchbuff": 36, "loweropaqueblock": 36, "lowertvmbuiltin": 36, "lowerthreadallreduc": 36, "alleduc": 36, "lowerwarpmemori": 36, "makepackedapi": 36, "primfuncnod": 36, "tvmarg": 36, "tvmretvalu": 36, "buffernod": 36, "makeunpackedapi": 36, "confirm": 36, "manifestsharedmemorylocalstag": 36, "mergesharedmemoryalloc": 36, "narrowdatatyp": 36, "target_bit": 36, "storageflatten": 36, "planandupdatebufferallocationloc": 36, "exact": 36, "pointervaluetyperewrit": 36, "frequent": 36, "primfuncpass": 36, "reducebranchingthroughovercomput": 36, "overcomput": 36, "removeassum": 36, "removenoop": 36, "removestoreundef": 36, "removeweightlayoutrewriteblock": 36, "skip_ndarray_rewrit": 36, "matter": 36, "mapndarrai": 36, "slow": 36, "sometim": 36, "renormalizesplitpattern": 36, "renorm": 36, "rewriteunsafeselect": 36, "skipassert": 36, "splithostdevic": 36, "cache_line_s": 36, "create_bound_attribut": 36, "storagerewrit": 36, "textureflatten": 36, "threadsync": 36, "transformmmabufferlayout": 36, "unifythreadbind": 36, "consolid": 36, "unrollloop": 36, "vectorizeloop": 36, "enable_vector": 36, "Will": 36, "verifymemori": 36, "verifyvtcmlimit": 36, "inventori": 37, "invalidshapeerror": 37, "templat": 37, "3x3": 37, "adv_index": 37, "stop": 37, "select_last_index": 37, "is_ascend": 37, "dshape": 37, "schedule_argsort": 37, "argwher": 37, "binary_search": 37, "ib": 37, "sequence_offset": 37, "search_rang": 37, "sorted_sequ": 37, "linearl": 37, "scipi": 37, "ceil_log2": 37, "spir": 37, "fp64": 37, "a_min": 37, "a_max": 37, "collapse_sum": 37, "target_shap": 37, "a_tupl": 37, "const_vector": 37, "cumproduct": 37, "dft": 37, "re_data": 37, "im_data": 37, "discret": 37, "fourier": 37, "signal": 37, "imaginari": 37, "re_output": 37, "im_output": 37, "comma": 37, "classic": 37, "bracket": 37, "ij": 37, "jk": 37, "ik": 37, "elemwise_sum": 37, "erf_leg": 37, "num_newaxi": 37, "newaxi": 37, "expand_lik": 37, "shape_lik": 37, "19": 37, "27": 37, "new_shape_arrai": 37, "fast_erf": 37, "fast_exp": 37, "fast_tanh": 37, "tangent": 37, "fixed_point_multipli": 37, "fixed_point_multiply_per_axi": 37, "lshift": 37, "rshift": 37, "reveres": 37, "floor_mod": 37, "modulu": 37, "gather_nd": 37, "get_const_tupl": 37, "in_tupl": 37, "out_tupl": 37, "hybrid_argwhere_1d": 37, "hybrid_argwhere_2d": 37, "hybrid_argwhere_3d": 37, "hybrid_argwhere_4d": 37, "hybrid_argwhere_5d": 37, "invert_permut": 37, "schedule_rul": 37, "left_shift": 37, "make_idx": 37, "meaning": 37, "within_index": 37, "transp_a": 37, "transp_b": 37, "notat": 37, "trans_a": 37, "trans_b": 37, "matrix_set_diag": 37, "right_left": 37, "superdiagon": 37, "subdiagon": 37, "band": 37, "shorter": 37, "max_diag_len": 37, "four": 37, "left_right": 37, "left_left": 37, "right_right": 37, "lapack": 37, "cuspars": 37, "opposit": 37, "meshgrid": 37, "xy": 37, "ndarray_s": 37, "negat": 37, "one_hot": 37, "on_valu": 37, "off_valu": 37, "hot": 37, "repsent": 37, "newshap": 37, "reverse_sequ": 37, "seq_length": 37, "seq_axi": 37, "batch_axi": 37, "right_shift": 37, "binop": 37, "identity_valu": 37, "idx1": 37, "idx2": 37, "five": 37, "choic": 37, "maxim": 37, "scatter_nd": 37, "y_0": 37, "x_m": 37, "x_": 37, "x_0": 37, "x_1": 37, "determint": 37, "searchsort": 37, "monoton": 37, "land": 37, "sequence_mask": 37, "valid_length": 37, "mask_valu": 37, "max_length": 37, "sliding_window": 37, "window_shap": 37, "slid": 37, "sparse_reshap": 37, "sparse_indic": 37, "prev_shap": 37, "new_shap": 37, "new_sparse_indices_shap": 37, "new_shape_shap": 37, "n_dim": 37, "dense_shap": 37, "dens": 37, "new_sparse_indic": 37, "sparse_to_dens": 37, "sparse_valu": 37, "default_valu": 37, "subset": 37, "stft": 37, "n_fft": 37, "hop_length": 37, "win_length": 37, "onesid": 37, "short": 37, "distanc": 37, "neighbor": 37, "conjug": 37, "symmetri": 37, "5000": 37, "8660": 37, "7321": 37, "strided_set": 37, "slice_mod": 37, "sizeof": 37, "batch_dim": 37, "behav": 37, "sure": 37, "take_leg": 37, "dyn": 37, "tensordot": 37, "trilu": 37, "is_sort": 37, "num_uniqu": 37, "inverse_indic": 37, "unravel_index": 37, "22": 37, "41": 37, "37": 37, "in_dtyp": 37, "in_filt": 37, "out_filt": 37, "padt": 37, "padl": 37, "padb": 37, "padr": 37, "dilation_h": 37, "dilation_w": 37, "stride_h": 37, "stride_w": 37, "11": 37, "adaptive_pool": 37, "pool_typ": 37, "decid": 37, "nchw16w": 37, "nchw16h": 37, "adaptive_pool3d": 37, "add_alter_layout": 37, "_attr": 37, "_input": 37, "_tinfo": 37, "_out_typ": 37, "qnn": 37, "tinfo": 37, "out_typ": 37, "batch_matmul": 37, "tensor_a": 37, "tensor_b": 37, "oshap": 37, "transpose_a": 37, "transpose_b": 37, "auto_scheduler_rewritten_layout": 37, "meta_schedule_original_shap": 37, "reason": 37, "nt": 37, "batch_matmul_leg": 37, "defualt": 37, "batch_to_space_nd": 37, "block_shap": 37, "crop_begin_list": 37, "crop_end_list": 37, "spatial_shap": 37, "remaining_shap": 37, "block_siz": 37, "bias_add_leg": 37, "bias_add": 37, "excis": 37, "binarize_pack": 37, "packedinput": 37, "binar": 37, "uint32": 37, "binary_dens": 37, "in_dim": 37, "out_dim": 37, "bitpack": 37, "pack_axi": 37, "bit_axi": 37, "pack_typ": 37, "quantizeinput": 37, "bitseri": 37, "bitserial_conv2d_leg": 37, "bitserial_conv2d_nchw": 37, "activation_bit": 37, "weight_bit": 37, "pack_dtyp": 37, "int16": 37, "unipolar": 37, "in_height": 37, "in_width": 37, "num_filt": 37, "filter_height": 37, "filter_width": 37, "stride_height": 37, "stride_width": 37, "pad_height": 37, "pad_top": 37, "pad_left": 37, "pad_down": 37, "pad_right": 37, "bipolar": 37, "out_height": 37, "out_width": 37, "bitserial_conv2d_nhwc": 37, "bitserial_dens": 37, "data_bit": 37, "inp": 37, "filt": 37, "auto_scheduler_should_rewrite_layout": 37, "nch": 37, "pad_bottom": 37, "dilation_height": 37, "dilation_width": 37, "charact": 37, "hw": 37, "hwd": 37, "hwio": 37, "autoschedul": 37, "nwc": 37, "filter_s": 37, "wio": 37, "laid": 37, "optiona": 37, "unspecifi": 37, "conv1d_ncw": 37, "conv1d_nwc": 37, "conv1d_transpose_ncw": 37, "recov": 37, "conv2d_nchwc": 37, "in_channel_chunk": 37, "in_channel_block": 37, "num_filter_chunk": 37, "num_filter_block": 37, "out_channel_chunk": 37, "out_channel_block": 37, "conv2d_nchwc_int8": 37, "n_elem": 37, "conv2d_alter_layout": 37, "conv2d_gemm_weight_transform": 37, "tile_n": 37, "tile_k": 37, "convgemm": 37, "oc": 37, "ic": 37, "ci": 37, "conv2d_hwcn": 37, "hwcn": 37, "conv2d_infer_layout": 37, "cfg": 37, "autotvm": 37, "conv2d_leg": 37, "conv2d_nchw": 37, "conv2d_nhwc": 37, "conv2d_transpose_alter_layout": 37, "conv2d_transpose_leg": 37, "conv2d_transpose_nchw": 37, "conv2d_transpose_nchw_preprocess": 37, "conv2d_winograd_nchw": 37, "pre_comput": 37, "clean": 37, "conv2d_winograd_nchw_without_weight_transform": 37, "conv2d_winograd_nhwc": 37, "conv2d_winograd_nhwc_without_weight_transform": 37, "conv2d_winograd_nnpack_weight_transform": 37, "convolution_algorithm": 37, "nnpack": 37, "conv2d_winograd_weight_transform": 37, "tile_s": 37, "2x2": 37, "4x4": 37, "conv3d_alter_layout": 37, "conv3d_ncdhw": 37, "in_depth": 37, "filter_depth": 37, "strid_depth": 37, "dilation_depth": 37, "out_depth": 37, "conv3d_ndhwc": 37, "meta_schedule_origin_shap": 37, "ndhwc": 37, "stride_depth": 37, "conv3d_transpose_leg": 37, "conv3d_transpose_ncdhw": 37, "conv3d_transpose_ncdhw_preprocess": 37, "conv3d_transpos": 37, "conv3d_winograd_weight_transform": 37, "correlation_nchw": 37, "data1": 37, "data2": 37, "max_displac": 37, "stride1": 37, "stride2": 37, "is_multipli": 37, "correl": 37, "odd": 37, "displac": 37, "neightborhood": 37, "substract": 37, "declaration_conv2d_transpose_impl": 37, "declaration_conv3d_transpose_impl": 37, "deformable_conv2d_nchw": 37, "deformable_group": 37, "deform": 37, "arxiv": 37, "06211": 37, "deformable_conv2d_nhwc": 37, "matmul_nt": 37, "dense_alter_layout": 37, "dense_leg": 37, "dense_pack": 37, "depth_to_spac": 37, "dcr": 37, "cdr": 37, "interwoven": 37, "depthwise_conv2d_nchwc": 37, "depthwis": 37, "nchwc": 37, "channel_multipli": 37, "depthwise_conv2d_backward_input_nhwc": 37, "ishap": 37, "depthwise_conv2d_backward_weight_nhwc": 37, "fshape": 37, "depthwise_conv2d_infer_layout": 37, "depthwise_conv2d_nchw": 37, "depthwise_conv2d_nhwc": 37, "hwoi": 37, "dilation_valu": 37, "dilatedinput": 37, "equal_const_int": 37, "fast_softmax": 37, "speed": 37, "fifo_buff": 37, "fifo": 37, "cnn": 37, "indow": 37, "slice_axi": 37, "wavenet": 37, "get_const_int": 37, "out_valu": 37, "get_pad_tupl": 37, "get_pad_tuple1d": 37, "get_pad_tuple3d": 37, "pad_front": 37, "pad_back": 37, "get_pad_tuple_gener": 37, "global_pool": 37, "group_conv1d_ncw": 37, "group_conv1d_nwc": 37, "group_conv1d_transpose_ncw": 37, "group_conv2d_nchw": 37, "group_conv2d_nhwc": 37, "group_conv2d_transpose_nchw": 37, "group_conv3d_transpose_ncdhw": 37, "d_0": 37, "d_": 37, "instance_norm": 37, "r_": 37, "axis_k": 37, "r_k": 37, "current_layout": 37, "cnhw": 37, "leaky_relu": 37, "leaki": 37, "lrn": 37, "0001": 37, "75": 37, "normalis": 37, "sum_sqr_up": 37, "lstm": 37, "wi": 37, "wh": 37, "bi": 37, "bh": 37, "h_init": 37, "c_init": 37, "proj": 37, "p_i": 37, "p_f": 37, "p_o": 37, "f_act": 37, "g_act": 37, "h_act": 37, "weight_layout": 37, "ifgo": 37, "hidden_dim": 37, "proj_dim": 37, "cell": 37, "peephol": 37, "gate": 37, "matmul_leg": 37, "mirror_pad": 37, "symmetr": 37, "mirrorpadinput": 37, "mirror": 37, "namedtupl": 37, "typenam": 37, "field_nam": 37, "__doc__": 37, "docstr": 37, "_asdict": 37, "_replac": 37, "padinput": 37, "pool1d": 37, "count_include_pad": 37, "ncw16c": 37, "ncw16w": 37, "kernel_width": 37, "pool2d": 37, "kernel_height": 37, "pool3d": 37, "ncdhw16c": 37, "ncdhw16d": 37, "ncdhw16w": 37, "ncdhw16h": 37, "kernel_depth": 37, "six": 37, "pool_grad": 37, "grad": 37, "prelu": 37, "channelis": 37, "pdf": [37, 39], "1502": 37, "01852v1": 37, "qnn_conv2d_alter_layout": 37, "qnn_dense_alter_layout": 37, "qnn_requantize_alter_layout": 37, "requant": 37, "scale_shift_nchw": 37, "scale_shift_nchwc": 37, "channel_chunk": 37, "scale_shift_nhwc": 37, "simulated_dequant": 37, "input_scal": 37, "input_zero_point": 37, "mimic": 37, "sqnn_dtype_to_cod": 37, "simulated_quant": 37, "output_scal": 37, "output_zero_point": 37, "softmax_common": 37, "use_fast_exp": 37, "space_to_batch_nd": 37, "space_to_depth": 37, "sparse_add": 37, "dense_data": 37, "sparse_data": 37, "sparse_indptr": 37, "nnz": 37, "csr": 37, "sparse_conv2d": 37, "weight_data": 37, "weight_indic": 37, "weight_indptr": 37, "num_block": 37, "bs_r": 37, "bsr": 37, "bs_c": 37, "sparse_dens": 37, "sparse_lh": 37, "data_data": 37, "data_indic": 37, "data_indptr": 37, "sparse_dense_alter_layout": 37, "amen": 37, "sparse_dense_sp_lh": 37, "sparse_dense_sp_rh": 37, "sparse_transpos": 37, "nonzero": 37, "out_data": 37, "out_indic": 37, "out_indptr": 37, "try_get_conv2d_sparse_input": 37, "searchtask": 37, "task_input": 37, "try_get_sparse_input": 37, "unpack_nchwc_to_nchw": 37, "packed_out": 37, "unpacked_out": 37, "upsampl": 37, "scale_h": 37, "scale_w": 37, "bilinear": 37, "upsampling3d": 37, "scale_d": 37, "trilinear": 37, "winograd_transform_matric": 37, "affine_grid": 37, "1506": 37, "02025": 37, "target_height": 37, "target_width": 37, "can_convert_multiply_to_intdiv": 37, "origin_s": 37, "scaled_s": 37, "crop_and_res": 37, "box_indic": 37, "crop_siz": 37, "num_box": 37, "extrapol": 37, "crop_height": 37, "crop_width": 37, "dilation2d_nchw": 37, "morpholog": 37, "dilation2d_nhwc": 37, "get_1d_indic": 37, "get_1d_pixel": 37, "image_width": 37, "get_2d_indic": 37, "get_2d_pixel": 37, "image_height": 37, "get_3d_indic": 37, "get_3d_pixel": 37, "image_depth": 37, "get_closest_index": 37, "in_x": 37, "use_int_div": 37, "get_inx": 37, "start_x": 37, "end_x": 37, "grid_sampl": 37, "padding_mod": 37, "boundari": 37, "border": 37, "corner": 37, "bottom": 37, "cooper": 37, "geometr": 37, "extrema": 37, "resolut": 37, "agnost": 37, "nchw_pack_layout": 37, "layout_info": 37, "nchwinic": 37, "nchw_xc_layout": 37, "nchwxc": 37, "resize1d": 37, "bicubic_alpha": 37, "bicubic_exclud": 37, "ncwc": 37, "fdor": 37, "chananel": 37, "resize3d": 37, "start_d": 37, "end_d": 37, "ncdhwc": 37, "csrmm": 37, "routin": 37, "csrndarrai": 37, "csrmv": 37, "xw": 37, "modulepass": 38, "module_pass": 38, "flexibl": 38, "required_pass": 38, "disabled_pass": 38, "trace_stack": 38, "make_trac": 38, "num_ev": 38, "tuning_api_databas": 38, "basi": 38, "Such": 38, "tuning_api": 38, "get_current_trac": 38, "get_trace_stack": 38, "get_trace_stack_s": 38, "get_tuning_api_databas": 38, "inc_num_ev": 38, "increment": 38, "list_config": 38, "override_instru": 38, "pop_trac": 38, "return_curr": 38, "topmost": 38, "push_trac": 38, "push": 38, "set_num_ev": 38, "extend": 38, "printir": 38, "resolv": 38, "sequanti": 38, "transform_modul": 38, "create_module_pass": 38, "custompipelin": 38, "enable_fold": 38, "const_fold": 38, "output_modul": 38, "input_modul": 38, "tp": 38, "new_mod": 38, "outlin": 39, "inproceed": 39, "author": 39, "feng": 39, "siyuan": 39, "hou": 39, "bohan": 39, "jin": 39, "hongyi": 39, "lin": 39, "wuwei": 39, "shao": 39, "junru": 39, "lai": 39, "ruihang": 39, "ye": 39, "zihao": 39, "zheng": 39, "lianmin": 39, "yu": 39, "codi": 39, "hao": 39, "yong": 39, "titl": 39, "year": 39, "2023": 39, "isbn": 39, "9781450399166": 39, "publish": 39, "machineri": 39, "york": 39, "ny": 39, "usa": 39, "doi": 39, "1145": 39, "3575693": 39, "3576933": 39, "booktitl": 39, "proceed": 39, "28th": 39, "acm": 39, "confer": 39, "volum": 39, "804": 39, "817": 39, "numpag": 39, "vancouv": 39, "bc": 39, "canada": 39, "asplo": 39, "zhou": 39, "xiyou": 39, "masuda": 39, "masahiro": 39, "editor": 39, "koyejo": 39, "moham": 39, "agarw": 39, "belgrav": 39, "cho": 39, "35783": 39, "35796": 39, "curran": 39, "inc": 39, "neurip": 39, "paper_fil": 39, "2022": 39, "e894eafae43e68b4c8dfdacf742bcbf3": 39, "thierri": 39, "moreau": 39, "ziheng": 39, "jiang": 39, "eddi": 39, "yan": 39, "haichen": 39, "shen": 39, "meghan": 39, "cowan": 39, "leyuan": 39, "wang": 39, "yuwei": 39, "hu": 39, "lui": 39, "ceze": 39, "carlo": 39, "guestrin": 39, "arvind": 39, "krishnamurthi": 39, "autom": 39, "13th": 39, "usenix": 39, "symposium": 39, "osdi": 39, "2018": 39, "978": 39, "939133": 39, "08": 39, "carlsbad": 39, "ca": 39, "578": 39, "594": 39, "www": 39, "osdi18": 39, "month": 39, "oct": 39, "04": 40, "285": 40, "galleri": 40}, "objects": {"tvm": [[12, 0, 0, "-", "dlight"], [13, 0, 0, "-", "error"], [15, 0, 0, "-", "instrument"], [16, 0, 0, "-", "ir"], [17, 0, 0, "-", "meta_schedule"], [22, 0, 0, "-", "relax"], [24, 0, 0, "-", "rpc"], [29, 0, 0, "-", "runtime"], [30, 0, 0, "-", "target"], [31, 0, 0, "-", "te"], [35, 0, 0, "-", "tir"], [37, 0, 0, "-", "topi"], [38, 0, 0, "-", "transform"]], "tvm.dlight": [[12, 1, 1, "", "ApplyDefaultSchedule"], [12, 1, 1, "", "BlockInfo"], [12, 1, 1, "", "IterInfo"], [12, 1, 1, "", "ScheduleRule"], [12, 4, 1, "", "normalize_prim_func"], [12, 4, 1, "", "try_inline"], [12, 4, 1, "", "try_inline_contiguous_spatial"]], "tvm.dlight.BlockInfo": [[12, 2, 1, "", "dom"], [12, 2, 1, "", "dom_kind"], [12, 2, 1, "", "is_elementwise"], [12, 2, 1, "", "is_gemm"], [12, 2, 1, "", "is_gemv"], [12, 2, 1, "", "is_injective"], [12, 2, 1, "", "is_reduction"]], "tvm.dlight.IterInfo": [[12, 3, 1, "", "dom"]], "tvm.dlight.ScheduleRule": [[12, 2, 1, "", "apply"], [12, 2, 1, "", "from_callable"], [12, 2, 1, "", "is_target_available"]], "tvm.error": [[13, 5, 1, "", "DiagnosticError"], [13, 5, 1, "", "InternalError"], [13, 5, 1, "", "OpAttributeInvalid"], [13, 5, 1, "", "OpAttributeRequired"], [13, 5, 1, "", "OpAttributeUnImplemented"], [13, 5, 1, "", "OpError"], [13, 5, 1, "", "OpNotImplemented"], [13, 5, 1, "", "RPCError"], [13, 5, 1, "", "RPCSessionTimeoutError"], [13, 5, 1, "", "TVMError"], [13, 4, 1, "", "register_error"]], "tvm.instrument": [[15, 1, 1, "", "PassInstrument"], [15, 1, 1, "", "PassPrintingInstrument"], [15, 1, 1, "", "PassTimingInstrument"], [15, 4, 1, "", "pass_instrument"]], "tvm.instrument.PassInstrument": [[15, 2, 1, "", "enter_pass_ctx"], [15, 2, 1, "", "exit_pass_ctx"], [15, 2, 1, "", "run_after_pass"], [15, 2, 1, "", "run_before_pass"], [15, 2, 1, "", "should_run"]], "tvm.instrument.PassTimingInstrument": [[15, 2, 1, "", "render"]], "tvm.ir": [[16, 1, 1, "", "Array"], [16, 1, 1, "", "Attrs"], [16, 1, 1, "", "BaseExpr"], [16, 1, 1, "", "BaseFunc"], [16, 1, 1, "", "CallingConv"], [16, 1, 1, "", "ConstantMemoryPools"], [16, 1, 1, "", "ConstantPoolInfo"], [16, 1, 1, "", "Constructor"], [16, 1, 1, "", "DictAttrs"], [16, 1, 1, "", "DummyGlobalInfo"], [16, 1, 1, "", "EnvFunc"], [16, 1, 1, "", "FuncType"], [16, 1, 1, "", "GlobalInfo"], [16, 1, 1, "", "GlobalTypeVar"], [16, 1, 1, "", "GlobalVar"], [16, 1, 1, "", "IRModule"], [16, 1, 1, "", "IncompleteType"], [16, 1, 1, "", "Map"], [16, 1, 1, "", "Node"], [16, 1, 1, "", "Op"], [16, 1, 1, "", "PointerType"], [16, 1, 1, "", "PoolInfo"], [16, 1, 1, "", "PoolInfoProperties"], [16, 1, 1, "", "PrimExpr"], [16, 1, 1, "", "PrimType"], [16, 1, 1, "", "Range"], [16, 1, 1, "", "RelayExpr"], [16, 1, 1, "", "RelayRefType"], [16, 1, 1, "", "SequentialSpan"], [16, 1, 1, "", "SourceName"], [16, 1, 1, "", "Span"], [16, 1, 1, "", "TensorAffineType"], [16, 1, 1, "", "TensorType"], [16, 1, 1, "", "TupleAffineType"], [16, 1, 1, "", "TupleType"], [16, 1, 1, "", "Type"], [16, 1, 1, "", "TypeCall"], [16, 1, 1, "", "TypeConstraint"], [16, 1, 1, "", "TypeData"], [16, 1, 1, "", "TypeKind"], [16, 1, 1, "", "TypeRelation"], [16, 1, 1, "", "TypeVar"], [16, 1, 1, "", "VDevice"], [16, 1, 1, "", "WorkspaceMemoryPools"], [16, 1, 1, "", "WorkspacePoolInfo"], [16, 4, 1, "", "assert_structural_equal"], [16, 4, 1, "", "load_json"], [16, 4, 1, "", "make_node"], [16, 4, 1, "", "register_intrin_lowering"], [16, 4, 1, "", "register_op_attr"], [16, 4, 1, "", "save_json"], [16, 4, 1, "", "structural_equal"], [16, 4, 1, "", "structural_hash"]], "tvm.ir.Attrs": [[16, 2, 1, "", "get_int"], [16, 2, 1, "", "get_int_tuple"], [16, 2, 1, "", "get_str"], [16, 2, 1, "", "keys"], [16, 2, 1, "", "list_field_info"]], "tvm.ir.BaseFunc": [[16, 3, 1, "", "attrs"], [16, 2, 1, "", "with_attr"], [16, 2, 1, "", "with_attrs"], [16, 2, 1, "", "without_attr"]], "tvm.ir.DictAttrs": [[16, 2, 1, "", "items"], [16, 2, 1, "", "keys"]], "tvm.ir.EnvFunc": [[16, 2, 1, "", "get"]], "tvm.ir.GlobalInfo": [[16, 2, 1, "", "same_as"]], "tvm.ir.GlobalVar": [[16, 2, 1, "", "astext"]], "tvm.ir.IRModule": [[16, 2, 1, "", "astext"], [16, 2, 1, "", "from_expr"], [16, 2, 1, "", "functions_items"], [16, 2, 1, "", "get_attr"], [16, 2, 1, "", "get_constructor"], [16, 2, 1, "", "get_global_type_var"], [16, 2, 1, "", "get_global_type_vars"], [16, 2, 1, "", "get_global_var"], [16, 2, 1, "", "get_global_vars"], [16, 2, 1, "", "update"], [16, 2, 1, "", "update_func"], [16, 2, 1, "", "update_global_info"], [16, 2, 1, "", "with_attr"], [16, 2, 1, "", "with_attrs"], [16, 2, 1, "", "without_attr"]], "tvm.ir.Map": [[16, 2, 1, "", "get"], [16, 2, 1, "", "items"]], "tvm.ir.Op": [[16, 2, 1, "", "add_argument"], [16, 2, 1, "", "add_type_rel"], [16, 2, 1, "", "astext"], [16, 2, 1, "", "get"], [16, 2, 1, "", "get_attr"], [16, 2, 1, "", "has_attr"], [16, 2, 1, "", "list_op_names"], [16, 2, 1, "", "reset_attr"], [16, 2, 1, "", "set_attr"], [16, 2, 1, "", "set_attrs_type_key"], [16, 2, 1, "", "set_num_inputs"], [16, 2, 1, "", "set_support_level"]], "tvm.ir.Range": [[16, 2, 1, "", "from_min_extent"]], "tvm.ir.RelayExpr": [[16, 3, 1, "", "checked_type"], [16, 3, 1, "", "struct_info"]], "tvm.ir.TensorType": [[16, 3, 1, "", "concrete_shape"]], "tvm.ir.Type": [[16, 2, 1, "", "same_as"]], "tvm.meta_schedule": [[17, 1, 1, "", "Builder"], [17, 1, 1, "", "CostModel"], [17, 1, 1, "", "Database"], [17, 1, 1, "", "ExtractedTask"], [17, 1, 1, "", "FeatureExtractor"], [17, 1, 1, "", "MeasureCallback"], [17, 1, 1, "", "MeasureCandidate"], [17, 1, 1, "", "Mutator"], [17, 1, 1, "", "Postproc"], [17, 1, 1, "", "Profiler"], [17, 1, 1, "", "Runner"], [17, 1, 1, "", "ScheduleRule"], [17, 1, 1, "", "SearchStrategy"], [17, 1, 1, "", "SpaceGenerator"], [17, 1, 1, "", "TaskScheduler"], [17, 1, 1, "", "TuneContext"], [17, 4, 1, "", "derived_object"], [17, 4, 1, "", "is_meta_schedule_enabled"], [17, 4, 1, "", "tune_tasks"], [17, 4, 1, "", "tune_tir"]], "tvm.meta_schedule.Builder": [[17, 2, 1, "", "build"], [17, 2, 1, "", "create"]], "tvm.meta_schedule.CostModel": [[17, 2, 1, "", "create"], [17, 2, 1, "", "load"], [17, 2, 1, "", "predict"], [17, 2, 1, "", "save"], [17, 2, 1, "", "update"]], "tvm.meta_schedule.Database": [[17, 2, 1, "", "commit_tuning_record"], [17, 2, 1, "", "commit_workload"], [17, 2, 1, "", "create"], [17, 2, 1, "", "current"], [17, 2, 1, "", "dump_pruned"], [17, 2, 1, "", "get_all_tuning_records"], [17, 2, 1, "", "get_top_k"], [17, 2, 1, "", "has_workload"], [17, 2, 1, "", "query"], [17, 2, 1, "", "query_ir_module"], [17, 2, 1, "", "query_schedule"], [17, 2, 1, "", "query_tuning_record"]], "tvm.meta_schedule.FeatureExtractor": [[17, 2, 1, "", "create"], [17, 2, 1, "", "extract_from"]], "tvm.meta_schedule.MeasureCallback": [[17, 2, 1, "", "apply"], [17, 2, 1, "", "create"]], "tvm.meta_schedule.Mutator": [[17, 2, 1, "", "apply"], [17, 2, 1, "", "clone"], [17, 2, 1, "", "create"]], "tvm.meta_schedule.Postproc": [[17, 2, 1, "", "apply"], [17, 2, 1, "", "clone"], [17, 2, 1, "", "create"]], "tvm.meta_schedule.Profiler": [[17, 2, 1, "", "current"], [17, 2, 1, "", "get"], [17, 2, 1, "", "table"], [17, 2, 1, "", "timeit"]], "tvm.meta_schedule.Runner": [[17, 2, 1, "", "create"], [17, 2, 1, "", "run"]], "tvm.meta_schedule.ScheduleRule": [[17, 2, 1, "", "apply"], [17, 2, 1, "", "clone"], [17, 2, 1, "", "create"]], "tvm.meta_schedule.SearchStrategy": [[17, 2, 1, "", "clone"], [17, 2, 1, "", "create"], [17, 2, 1, "", "generate_measure_candidates"], [17, 2, 1, "", "notify_runner_results"], [17, 2, 1, "", "post_tuning"], [17, 2, 1, "", "pre_tuning"]], "tvm.meta_schedule.SpaceGenerator": [[17, 2, 1, "", "clone"], [17, 2, 1, "", "create"], [17, 2, 1, "", "generate_design_space"]], "tvm.meta_schedule.TaskScheduler": [[17, 2, 1, "", "create"], [17, 2, 1, "", "join_running_task"], [17, 2, 1, "", "next_task_id"], [17, 2, 1, "", "print_tuning_statistics"], [17, 2, 1, "", "terminate_task"], [17, 2, 1, "", "touch_task"], [17, 2, 1, "", "tune"]], "tvm.meta_schedule.TuneContext": [[17, 2, 1, "", "clone"], [17, 2, 1, "", "generate_design_space"], [17, 2, 1, "", "generate_measure_candidates"], [17, 2, 1, "", "notify_runner_results"], [17, 2, 1, "", "post_tuning"], [17, 2, 1, "", "pre_tuning"]], "tvm.relax": [[22, 1, 1, "", "Binding"], [22, 1, 1, "", "BindingBlock"], [22, 1, 1, "", "Call"], [22, 1, 1, "", "Constant"], [22, 1, 1, "", "DataTypeImm"], [22, 1, 1, "", "DataflowBlock"], [22, 1, 1, "", "DataflowBlockRewrite"], [22, 1, 1, "", "DataflowVar"], [22, 1, 1, "", "DynTensorType"], [22, 1, 1, "", "ExecBuilder"], [22, 1, 1, "", "Executable"], [22, 6, 1, "", "Expr"], [22, 1, 1, "", "ExprFunctor"], [22, 1, 1, "", "ExternFunc"], [22, 1, 1, "", "FuncStructInfo"], [22, 1, 1, "", "Function"], [22, 1, 1, "", "Id"], [22, 1, 1, "", "If"], [22, 1, 1, "", "MatchCast"], [22, 1, 1, "", "ObjectStructInfo"], [22, 1, 1, "", "ObjectType"], [22, 1, 1, "", "PackedFuncType"], [22, 1, 1, "", "PrimStructInfo"], [22, 1, 1, "", "PrimValue"], [22, 1, 1, "", "PyExprMutator"], [22, 1, 1, "", "PyExprVisitor"], [22, 1, 1, "", "SeqExpr"], [22, 1, 1, "", "ShapeExpr"], [22, 1, 1, "", "ShapeStructInfo"], [22, 1, 1, "", "ShapeType"], [22, 1, 1, "", "StringImm"], [22, 1, 1, "", "StructInfo"], [22, 1, 1, "", "TensorStructInfo"], [22, 1, 1, "", "Tuple"], [22, 1, 1, "", "TupleGetItem"], [22, 1, 1, "", "TupleStructInfo"], [22, 1, 1, "", "VMInstrumentReturnKind"], [22, 1, 1, "", "Var"], [22, 1, 1, "", "VarBinding"], [22, 1, 1, "", "VirtualMachine"], [18, 0, 0, "-", "analysis"], [19, 0, 0, "-", "block_builder"], [22, 4, 1, "", "build"], [22, 4, 1, "", "call_dps_packed"], [22, 4, 1, "", "call_pure_packed"], [22, 4, 1, "", "call_tir"], [22, 4, 1, "", "call_tir_inplace"], [22, 4, 1, "", "call_tir_with_grad"], [22, 4, 1, "", "const"], [22, 4, 1, "", "extern"], [20, 0, 0, "-", "frontend"], [22, 4, 1, "", "get_pipeline"], [22, 4, 1, "", "get_shape_of"], [21, 0, 0, "-", "op"], [22, 4, 1, "", "register_pipeline"], [23, 0, 0, "-", "transform"]], "tvm.relax.DataflowBlockRewrite": [[22, 2, 1, "", "add"], [22, 2, 1, "", "mutate_irmodule"], [22, 2, 1, "", "mutated_dfb"], [22, 2, 1, "", "mutated_root_fn"], [22, 2, 1, "", "remove_all_unused"], [22, 2, 1, "", "remove_unused"], [22, 2, 1, "", "replace_all_uses"]], "tvm.relax.ExecBuilder": [[22, 2, 1, "", "c"], [22, 2, 1, "", "declare_function"], [22, 2, 1, "", "emit_call"], [22, 2, 1, "", "emit_goto"], [22, 2, 1, "", "emit_if"], [22, 2, 1, "", "emit_ret"], [22, 2, 1, "", "f"], [22, 2, 1, "", "function"], [22, 2, 1, "", "get"], [22, 2, 1, "", "imm"], [22, 2, 1, "", "r"]], "tvm.relax.Executable": [[22, 2, 1, "", "as_python"], [22, 2, 1, "", "as_text"], [22, 2, 1, "", "export_library"], [22, 2, 1, "", "jit"], [22, 2, 1, "", "stats"]], "tvm.relax.ExprFunctor": [[22, 2, 1, "", "visit_expr"]], "tvm.relax.FuncStructInfo": [[22, 2, 1, "", "opaque_func"]], "tvm.relax.Function": [[22, 2, 1, "", "bind_params"], [22, 2, 1, "", "bind_symbolic_vars"], [22, 2, 1, "", "create_empty"]], "tvm.relax.PyExprMutator": [[22, 2, 1, "", "get_var_remap"], [22, 2, 1, "", "lookup_binding"], [22, 2, 1, "", "set_var_remap"], [22, 2, 1, "", "visit_binding"], [22, 2, 1, "", "visit_binding_block"], [22, 2, 1, "", "visit_binding_block_"], [22, 2, 1, "", "visit_call_"], [22, 2, 1, "", "visit_constant_"], [22, 2, 1, "", "visit_data_type_imm_"], [22, 2, 1, "", "visit_dataflow_block_"], [22, 2, 1, "", "visit_dataflow_var_"], [22, 2, 1, "", "visit_dataflow_var_def_"], [22, 2, 1, "", "visit_expr"], [22, 2, 1, "", "visit_expr_post_order"], [22, 2, 1, "", "visit_extern_func_"], [22, 2, 1, "", "visit_function_"], [22, 2, 1, "", "visit_global_var_"], [22, 2, 1, "", "visit_if_"], [22, 2, 1, "", "visit_match_cast_"], [22, 2, 1, "", "visit_op_"], [22, 2, 1, "", "visit_prim_value_"], [22, 2, 1, "", "visit_seq_expr_"], [22, 2, 1, "", "visit_shape_expr_"], [22, 2, 1, "", "visit_span"], [22, 2, 1, "", "visit_string_imm_"], [22, 2, 1, "", "visit_tuple_"], [22, 2, 1, "", "visit_tuple_getitem_"], [22, 2, 1, "", "visit_var_"], [22, 2, 1, "", "visit_var_binding_"], [22, 2, 1, "", "visit_var_def"], [22, 2, 1, "", "visit_var_def_"], [22, 2, 1, "", "visit_with_new_scope"], [22, 2, 1, "", "with_struct_info"]], "tvm.relax.PyExprVisitor": [[22, 2, 1, "", "visit_binding"], [22, 2, 1, "", "visit_binding_block"], [22, 2, 1, "", "visit_binding_block_"], [22, 2, 1, "", "visit_call_"], [22, 2, 1, "", "visit_constant_"], [22, 2, 1, "", "visit_data_type_imm_"], [22, 2, 1, "", "visit_dataflow_block_"], [22, 2, 1, "", "visit_dataflow_var_"], [22, 2, 1, "", "visit_dataflow_var_def_"], [22, 2, 1, "", "visit_expr"], [22, 2, 1, "", "visit_extern_func_"], [22, 2, 1, "", "visit_function_"], [22, 2, 1, "", "visit_global_var_"], [22, 2, 1, "", "visit_if_"], [22, 2, 1, "", "visit_match_cast_"], [22, 2, 1, "", "visit_op_"], [22, 2, 1, "", "visit_prim_value_"], [22, 2, 1, "", "visit_seq_expr_"], [22, 2, 1, "", "visit_shape_expr_"], [22, 2, 1, "", "visit_span"], [22, 2, 1, "", "visit_string_imm_"], [22, 2, 1, "", "visit_tuple_"], [22, 2, 1, "", "visit_tuple_getitem_"], [22, 2, 1, "", "visit_var_"], [22, 2, 1, "", "visit_var_binding_"], [22, 2, 1, "", "visit_var_def"], [22, 2, 1, "", "visit_var_def_"]], "tvm.relax.StructInfo": [[22, 2, 1, "", "is_base_of"], [22, 2, 1, "", "same_as"]], "tvm.relax.Var": [[22, 3, 1, "", "name_hint"]], "tvm.relax.VirtualMachine": [[22, 2, 1, "", "get_outputs"], [22, 2, 1, "", "invoke_closure"], [22, 2, 1, "", "invoke_stateful"], [22, 2, 1, "", "profile"], [22, 2, 1, "", "save_function"], [22, 2, 1, "", "set_input"], [22, 2, 1, "", "set_instrument"], [22, 2, 1, "", "time_evaluator"]], "tvm.relax.analysis": [[18, 1, 1, "", "BaseCheckResult"], [18, 4, 1, "", "all_global_vars"], [18, 4, 1, "", "all_vars"], [18, 4, 1, "", "bound_vars"], [18, 4, 1, "", "computable_at_compile_time"], [18, 4, 1, "", "contains_impure_call"], [18, 4, 1, "", "definable_tir_vars_in_struct_info"], [18, 4, 1, "", "defined_symbolic_vars"], [18, 4, 1, "", "derive_call_ret_struct_info"], [18, 4, 1, "", "detect_recursion"], [18, 4, 1, "", "erase_to_well_defined"], [18, 4, 1, "", "estimate_memory_usage"], [18, 4, 1, "", "free_symbolic_vars"], [18, 4, 1, "", "free_vars"], [18, 4, 1, "", "get_static_type"], [18, 4, 1, "", "get_var2val"], [18, 4, 1, "", "has_reshape_pattern"], [18, 4, 1, "", "name_to_binding"], [18, 4, 1, "", "post_order_visit"], [18, 4, 1, "", "remove_all_unused"], [18, 4, 1, "", "struct_info_base_check"], [18, 4, 1, "", "struct_info_lca"], [18, 4, 1, "", "suggest_layout_transforms"], [18, 4, 1, "", "tir_vars_in_struct_info"], [18, 4, 1, "", "udchain"], [18, 4, 1, "", "well_formed"]], "tvm.relax.block_builder": [[19, 1, 1, "", "BlockBuilder"], [19, 1, 1, "", "DataflowScope"], [19, 1, 1, "", "FunctionScope"], [19, 1, 1, "", "TestingScope"]], "tvm.relax.block_builder.BlockBuilder": [[19, 2, 1, "", "add_func"], [19, 2, 1, "", "begin_scope"], [19, 2, 1, "", "call_te"], [19, 2, 1, "", "call_te_with_grad"], [19, 2, 1, "", "current"], [19, 2, 1, "", "current_block_is_dataflow"], [19, 2, 1, "", "dataflow"], [19, 2, 1, "", "emit"], [19, 2, 1, "", "emit_func_output"], [19, 2, 1, "", "emit_normalized"], [19, 2, 1, "", "emit_output"], [19, 2, 1, "", "emit_te"], [19, 2, 1, "", "end_scope"], [19, 2, 1, "", "finalize"], [19, 2, 1, "", "function"], [19, 2, 1, "", "get"], [19, 2, 1, "", "get_unique_name"], [19, 2, 1, "", "lookup_binding"], [19, 2, 1, "", "match_cast"], [19, 2, 1, "", "normalize"], [19, 2, 1, "", "testing_scope"], [19, 2, 1, "", "update_func"]], "tvm.relax.frontend": [[20, 4, 1, "", "detach_params"], [20, 0, 0, "-", "onnx"], [20, 0, 0, "-", "stablehlo"], [20, 0, 0, "-", "torch"]], "tvm.relax.frontend.onnx": [[20, 4, 1, "", "from_onnx"]], "tvm.relax.frontend.stablehlo": [[20, 4, 1, "", "from_stablehlo"]], "tvm.relax.frontend.torch": [[20, 4, 1, "", "dynamo_capture_subgraphs"], [20, 4, 1, "", "from_fx"], [20, 4, 1, "", "relax_dynamo"]], "tvm.relax.op": [[21, 4, 1, "", "abs"], [21, 4, 1, "", "acos"], [21, 4, 1, "", "acosh"], [21, 4, 1, "", "add"], [21, 4, 1, "", "arange"], [21, 4, 1, "", "argmax"], [21, 4, 1, "", "argmin"], [21, 4, 1, "", "argsort"], [21, 4, 1, "", "asin"], [21, 4, 1, "", "asinh"], [21, 4, 1, "", "assert_op"], [21, 4, 1, "", "astype"], [21, 4, 1, "", "atan"], [21, 4, 1, "", "atanh"], [21, 4, 1, "", "bitwise_and"], [21, 4, 1, "", "bitwise_not"], [21, 4, 1, "", "bitwise_or"], [21, 4, 1, "", "bitwise_xor"], [21, 4, 1, "", "broadcast_to"], [21, 0, 0, "-", "builtin"], [21, 4, 1, "", "call_builtin_with_ctx"], [21, 4, 1, "", "call_dps_packed"], [21, 4, 1, "", "call_inplace_packed"], [21, 4, 1, "", "call_pure_packed"], [21, 4, 1, "", "call_tir"], [21, 4, 1, "", "call_tir_inplace"], [21, 4, 1, "", "call_tir_with_grad"], [21, 0, 0, "-", "ccl"], [21, 4, 1, "", "ceil"], [21, 4, 1, "", "clip"], [21, 4, 1, "", "collapse_sum_like"], [21, 4, 1, "", "collapse_sum_to"], [21, 4, 1, "", "concat"], [21, 4, 1, "", "cos"], [21, 4, 1, "", "cosh"], [21, 4, 1, "", "cumprod"], [21, 4, 1, "", "cumsum"], [21, 4, 1, "", "dequantize"], [21, 0, 0, "-", "distributed"], [21, 4, 1, "", "divide"], [21, 4, 1, "", "dynamic_strided_slice"], [21, 4, 1, "", "einsum"], [21, 4, 1, "", "equal"], [21, 4, 1, "", "erf"], [21, 4, 1, "", "ewise_fma"], [21, 4, 1, "", "exp"], [21, 4, 1, "", "expand_dims"], [21, 4, 1, "", "flatten"], [21, 4, 1, "", "flip"], [21, 4, 1, "", "floor"], [21, 4, 1, "", "floor_divide"], [21, 4, 1, "", "full"], [21, 4, 1, "", "full_like"], [21, 0, 0, "-", "grad"], [21, 4, 1, "", "greater"], [21, 4, 1, "", "greater_equal"], [21, 4, 1, "", "hint_on_device"], [21, 0, 0, "-", "image"], [21, 4, 1, "", "invoke_closure"], [21, 4, 1, "", "invoke_pure_closure"], [21, 4, 1, "", "isfinite"], [21, 4, 1, "", "isinf"], [21, 4, 1, "", "isnan"], [21, 4, 1, "", "layout_transform"], [21, 4, 1, "", "less"], [21, 4, 1, "", "less_equal"], [21, 4, 1, "", "linear"], [21, 4, 1, "", "log"], [21, 4, 1, "", "logical_and"], [21, 4, 1, "", "logical_not"], [21, 4, 1, "", "logical_or"], [21, 4, 1, "", "logical_xor"], [21, 4, 1, "", "make_closure"], [21, 4, 1, "", "masked_fill"], [21, 4, 1, "", "matmul"], [21, 4, 1, "", "max"], [21, 4, 1, "", "maximum"], [21, 4, 1, "", "mean"], [21, 0, 0, "-", "memory"], [21, 4, 1, "", "min"], [21, 4, 1, "", "minimum"], [21, 4, 1, "", "multiply"], [21, 4, 1, "", "negative"], [21, 0, 0, "-", "nn"], [21, 4, 1, "", "not_equal"], [21, 4, 1, "", "null_value"], [21, 4, 1, "", "ones"], [21, 4, 1, "", "ones_like"], [21, 0, 0, "-", "op_attrs"], [21, 4, 1, "", "permute_dims"], [21, 4, 1, "", "power"], [21, 4, 1, "", "print"], [21, 4, 1, "", "prod"], [21, 4, 1, "", "quantize"], [21, 4, 1, "", "register_gradient"], [21, 4, 1, "", "repeat"], [21, 4, 1, "", "reshape"], [21, 4, 1, "", "round"], [21, 4, 1, "", "rsqrt"], [21, 4, 1, "", "scatter_elements"], [21, 4, 1, "", "shape_of"], [21, 4, 1, "", "shape_to_tensor"], [21, 4, 1, "", "sigmoid"], [21, 4, 1, "", "sign"], [21, 4, 1, "", "sin"], [21, 4, 1, "", "sinh"], [21, 4, 1, "", "sort"], [21, 4, 1, "", "split"], [21, 4, 1, "", "sqrt"], [21, 4, 1, "", "square"], [21, 4, 1, "", "squeeze"], [21, 4, 1, "", "std"], [21, 4, 1, "", "strided_slice"], [21, 4, 1, "", "subtract"], [21, 4, 1, "", "sum"], [21, 4, 1, "", "take"], [21, 4, 1, "", "tan"], [21, 4, 1, "", "tanh"], [21, 4, 1, "", "tensor_to_shape"], [21, 4, 1, "", "tile"], [21, 4, 1, "", "to_vdevice"], [21, 4, 1, "", "topk"], [21, 4, 1, "", "tril"], [21, 4, 1, "", "triu"], [21, 4, 1, "", "unique"], [21, 4, 1, "", "variance"], [21, 4, 1, "", "where"], [21, 4, 1, "", "wrap_param"], [21, 4, 1, "", "zeros"], [21, 4, 1, "", "zeros_like"]], "tvm.relax.op.builtin": [[21, 4, 1, "", "alloc_tensor"], [21, 4, 1, "", "stop_lift_params"]], "tvm.relax.op.ccl": [[21, 4, 1, "", "allgather"], [21, 4, 1, "", "allreduce"], [21, 4, 1, "", "broadcast_from_worker0"], [21, 4, 1, "", "scatter_from_worker0"]], "tvm.relax.op.distributed": [[21, 4, 1, "", "annotate_sharding"], [21, 4, 1, "", "call_tir_local_view"], [21, 4, 1, "", "redistribute"], [21, 4, 1, "", "redistribute_replica_to_shard"]], "tvm.relax.op.grad": [[21, 6, 1, "", "Expr"], [21, 4, 1, "", "avg_pool2d_backward"], [21, 4, 1, "", "end_checkpoint"], [21, 4, 1, "", "max_pool2d_backward"], [21, 4, 1, "", "nll_loss_backward"], [21, 4, 1, "", "no_grad"], [21, 4, 1, "", "start_checkpoint"], [21, 4, 1, "", "take_backward"]], "tvm.relax.op.image": [[21, 4, 1, "", "resize2d"]], "tvm.relax.op.memory": [[21, 4, 1, "", "alloc_storage"], [21, 4, 1, "", "alloc_tensor"], [21, 4, 1, "", "kill_storage"], [21, 4, 1, "", "kill_tensor"]], "tvm.relax.op.nn": [[21, 4, 1, "", "adaptive_avg_pool2d"], [21, 4, 1, "", "attention"], [21, 4, 1, "", "attention_var_len"], [21, 4, 1, "", "avg_pool2d"], [21, 4, 1, "", "batch_norm"], [21, 4, 1, "", "conv1d"], [21, 4, 1, "", "conv1d_transpose"], [21, 4, 1, "", "conv2d"], [21, 4, 1, "", "conv2d_transpose"], [21, 4, 1, "", "conv3d"], [21, 4, 1, "", "cross_entropy_with_logits"], [21, 4, 1, "", "dropout"], [21, 4, 1, "", "gelu"], [21, 4, 1, "", "gelu_tanh"], [21, 4, 1, "", "group_norm"], [21, 4, 1, "", "layer_norm"], [21, 4, 1, "", "leakyrelu"], [21, 4, 1, "", "log_softmax"], [21, 4, 1, "", "max_pool2d"], [21, 4, 1, "", "nll_loss"], [21, 4, 1, "", "pad"], [21, 4, 1, "", "relu"], [21, 4, 1, "", "rms_norm"], [21, 4, 1, "", "silu"], [21, 4, 1, "", "softmax"]], "tvm.relax.op.op_attrs": [[21, 1, 1, "", "AdaptivePool2DAttrs"], [21, 1, 1, "", "ArgmaxArgminAttrs"], [21, 1, 1, "", "ArgsortAttrs"], [21, 1, 1, "", "AstypeAttrs"], [21, 1, 1, "", "BatchNormAttrs"], [21, 1, 1, "", "CallTIRWithGradAttrs"], [21, 1, 1, "", "ConcatAttrs"], [21, 1, 1, "", "Conv2DAttrs"], [21, 1, 1, "", "Conv2DTransposeAttrs"], [21, 1, 1, "", "DropoutAttrs"], [21, 1, 1, "", "EinsumAttrs"], [21, 1, 1, "", "ExpandDimsAttrs"], [21, 1, 1, "", "FlipAttrs"], [21, 1, 1, "", "InitAttrs"], [21, 1, 1, "", "LayerNormAttrs"], [21, 1, 1, "", "LayoutTransformAttrs"], [21, 1, 1, "", "MatmulAttrs"], [21, 1, 1, "", "PermuteDimsAttrs"], [21, 1, 1, "", "Pool2DAttrs"], [21, 1, 1, "", "RepeatAttrs"], [21, 1, 1, "", "Resize2DAttrs"], [21, 1, 1, "", "ScanopAttrs"], [21, 1, 1, "", "SoftmaxAttrs"], [21, 1, 1, "", "SortAttrs"], [21, 1, 1, "", "SplitAttrs"], [21, 1, 1, "", "SqueezeAttrs"], [21, 1, 1, "", "StatisticalAttrs"], [21, 1, 1, "", "StridedSliceAttrs"], [21, 1, 1, "", "TakeAttrs"], [21, 1, 1, "", "TileAttrs"], [21, 1, 1, "", "TopKAttrs"], [21, 1, 1, "", "TriluAttrs"]], "tvm.relax.transform": [[23, 4, 1, "", "AdjustMatmulOrder"], [23, 4, 1, "", "AllocateWorkspace"], [23, 4, 1, "", "AlterOpImpl"], [23, 4, 1, "", "AnnotateTIROpPattern"], [23, 1, 1, "", "AttachExternModules"], [23, 4, 1, "", "AttachGlobalSymbol"], [23, 4, 1, "", "BindParams"], [23, 4, 1, "", "BindSymbolicVars"], [23, 4, 1, "", "BundleModelParams"], [23, 4, 1, "", "CallTIRRewrite"], [23, 4, 1, "", "CanonicalizeBindings"], [23, 4, 1, "", "CombineParallelMatmul"], [23, 4, 1, "", "ConvertLayout"], [23, 4, 1, "", "ConvertToDataflow"], [23, 1, 1, "", "DataflowBlockPass"], [23, 4, 1, "", "DataflowUseInplaceCalls"], [23, 4, 1, "", "DeadCodeElimination"], [23, 4, 1, "", "DecomposeOpsForInference"], [23, 4, 1, "", "DecomposeOpsForTraining"], [23, 4, 1, "", "EliminateCommonSubexpr"], [23, 4, 1, "", "ExpandMatmulOfSum"], [23, 4, 1, "", "ExpandTupleArguments"], [23, 1, 1, "", "FastMathTransform"], [23, 4, 1, "", "FewShotTuning"], [23, 4, 1, "", "FoldConstant"], [23, 1, 1, "", "FunctionPass"], [23, 4, 1, "", "FuseOps"], [23, 4, 1, "", "FuseOpsByPattern"], [23, 4, 1, "", "FuseTIR"], [23, 1, 1, "", "FusionPattern"], [23, 4, 1, "", "Gradient"], [23, 4, 1, "", "InlinePrivateFunctions"], [23, 4, 1, "", "KillAfterLastUse"], [23, 4, 1, "", "LambdaLift"], [23, 1, 1, "", "LazyTransformParams"], [23, 4, 1, "", "LegalizeOps"], [23, 4, 1, "", "LiftTransformParams"], [23, 4, 1, "", "LowerAllocTensor"], [23, 4, 1, "", "MergeCompositeFunctions"], [23, 4, 1, "", "MetaScheduleApplyDatabase"], [23, 4, 1, "", "MetaScheduleTuneIRMod"], [23, 4, 1, "", "MetaScheduleTuneTIR"], [23, 4, 1, "", "Normalize"], [23, 4, 1, "", "NormalizeGlobalVar"], [23, 1, 1, "", "OptimizeLayoutTransform"], [23, 1, 1, "", "PatternCheckContext"], [23, 4, 1, "", "RealizeVDevice"], [23, 4, 1, "", "RemovePurityChecking"], [23, 1, 1, "", "RemoveRedundantReshape"], [23, 4, 1, "", "RemoveUnusedOutputs"], [23, 4, 1, "", "RemoveUnusedParameters"], [23, 4, 1, "", "ReorderTakeAfterMatmul"], [23, 4, 1, "", "RewriteCUDAGraph"], [23, 4, 1, "", "RewriteDataflowReshape"], [23, 4, 1, "", "RunCodegen"], [23, 4, 1, "", "SplitCallTIRByPattern"], [23, 4, 1, "", "StaticPlanBlockMemory"], [23, 4, 1, "", "ToMixedPrecision"], [23, 4, 1, "", "ToNonDataflow"], [23, 4, 1, "", "UpdateParamStructInfo"], [23, 4, 1, "", "UpdateVDevice"], [23, 4, 1, "", "VMBuiltinLower"], [23, 4, 1, "", "VMShapeLower"], [23, 4, 1, "", "dataflowblock_pass"], [23, 4, 1, "", "function_pass"]], "tvm.rpc": [[24, 1, 1, "", "LocalSession"], [24, 1, 1, "", "PopenSession"], [24, 1, 1, "", "RPCSession"], [24, 1, 1, "", "Server"], [24, 1, 1, "", "TrackerSession"], [24, 4, 1, "", "connect"], [24, 4, 1, "", "connect_tracker"], [24, 4, 1, "", "with_minrpc"]], "tvm.rpc.RPCSession": [[24, 2, 1, "", "cl"], [24, 2, 1, "", "cpu"], [24, 2, 1, "", "cuda"], [24, 2, 1, "", "device"], [24, 2, 1, "", "download"], [24, 2, 1, "", "download_linked_module"], [24, 2, 1, "", "ext_dev"], [24, 2, 1, "", "get_function"], [24, 2, 1, "", "hexagon"], [24, 2, 1, "", "listdir"], [24, 2, 1, "", "load_module"], [24, 2, 1, "", "metal"], [24, 2, 1, "", "remove"], [24, 2, 1, "", "rocm"], [24, 2, 1, "", "system_lib"], [24, 2, 1, "", "upload"], [24, 2, 1, "", "vulkan"], [24, 2, 1, "", "webgpu"]], "tvm.rpc.Server": [[24, 2, 1, "", "terminate"]], "tvm.rpc.TrackerSession": [[24, 2, 1, "", "close"], [24, 2, 1, "", "request"], [24, 2, 1, "", "request_and_run"], [24, 2, 1, "", "summary"], [24, 2, 1, "", "text_summary"]], "tvm.runtime": [[29, 1, 1, "", "DataType"], [29, 1, 1, "", "DataTypeCode"], [29, 1, 1, "", "Device"], [29, 1, 1, "", "Module"], [29, 1, 1, "", "Object"], [29, 1, 1, "", "ObjectGeneric"], [29, 1, 1, "", "ObjectPath"], [29, 1, 1, "", "ObjectPathPair"], [29, 1, 1, "", "PackedFunc"], [29, 1, 1, "", "Report"], [29, 1, 1, "", "Scriptable"], [29, 1, 1, "", "ShapeTuple"], [29, 1, 1, "", "String"], [29, 4, 1, "", "cl"], [29, 4, 1, "", "const"], [29, 4, 1, "", "convert"], [29, 4, 1, "", "convert_to_object"], [29, 4, 1, "", "cpu"], [29, 4, 1, "", "cuda"], [29, 4, 1, "", "device"], [25, 0, 0, "-", "disco"], [29, 4, 1, "", "enabled"], [29, 4, 1, "", "ext_dev"], [29, 4, 1, "", "gpu"], [29, 4, 1, "", "load_module"], [29, 4, 1, "", "load_param_dict"], [29, 4, 1, "", "load_param_dict_from_file"], [29, 4, 1, "", "load_static_library"], [29, 4, 1, "", "metal"], [29, 4, 1, "", "mtl"], [26, 0, 0, "-", "ndarray"], [29, 4, 1, "", "num_threads"], [29, 4, 1, "", "opencl"], [27, 0, 0, "-", "profiling"], [28, 0, 0, "-", "relax_vm"], [29, 4, 1, "", "rocm"], [29, 4, 1, "", "save_param_dict"], [29, 4, 1, "", "save_param_dict_to_file"], [29, 4, 1, "", "system_lib"], [29, 4, 1, "", "vpi"], [29, 4, 1, "", "vulkan"]], "tvm.runtime.Device": [[29, 3, 1, "", "api_version"], [29, 3, 1, "", "compute_version"], [29, 2, 1, "", "create_raw_stream"], [29, 3, 1, "", "device_name"], [29, 3, 1, "", "driver_version"], [29, 3, 1, "", "exist"], [29, 2, 1, "", "free_raw_stream"], [29, 3, 1, "", "l2_cache_size_bytes"], [29, 3, 1, "", "max_clock_rate"], [29, 3, 1, "", "max_shared_memory_per_block"], [29, 3, 1, "", "max_thread_dimensions"], [29, 3, 1, "", "max_threads_per_block"], [29, 3, 1, "", "multi_processor_count"], [29, 2, 1, "", "set_raw_stream"], [29, 2, 1, "", "sync"], [29, 2, 1, "", "texture_spatial_limit"], [29, 3, 1, "", "total_global_memory"], [29, 3, 1, "", "warp_size"]], "tvm.runtime.Module": [[29, 2, 1, "", "clear_imports"], [29, 3, 1, "", "entry_func"], [29, 2, 1, "", "export_library"], [29, 3, 1, "", "format"], [29, 2, 1, "", "get_function"], [29, 2, 1, "", "get_property_mask"], [29, 2, 1, "", "get_source"], [29, 2, 1, "", "implements_function"], [29, 2, 1, "", "import_module"], [29, 3, 1, "", "imported_modules"], [29, 3, 1, "", "is_binary_serializable"], [29, 3, 1, "", "is_dso_exportable"], [29, 3, 1, "", "is_runnable"], [29, 2, 1, "", "save"], [29, 2, 1, "", "time_evaluator"], [29, 3, 1, "", "type_key"]], "tvm.runtime.ObjectGeneric": [[29, 2, 1, "", "asobject"]], "tvm.runtime.Report": [[29, 6, 1, "", "calls"], [29, 2, 1, "", "csv"], [29, 6, 1, "", "device_metrics"], [29, 2, 1, "", "from_json"], [29, 2, 1, "", "json"], [29, 2, 1, "", "table"]], "tvm.runtime.Scriptable": [[29, 2, 1, "", "script"], [29, 2, 1, "", "show"]], "tvm.runtime.disco": [[25, 1, 1, "", "DModule"], [25, 1, 1, "", "DPackedFunc"], [25, 1, 1, "", "DRef"], [25, 1, 1, "", "ProcessSession"], [25, 1, 1, "", "Session"], [25, 1, 1, "", "ThreadedSession"]], "tvm.runtime.disco.DRef": [[25, 2, 1, "", "debug_copy_from"], [25, 2, 1, "", "debug_get_from_remote"]], "tvm.runtime.disco.Session": [[25, 2, 1, "", "allgather"], [25, 2, 1, "", "allreduce"], [25, 2, 1, "", "broadcast_from_worker0"], [25, 2, 1, "", "call_packed"], [25, 2, 1, "", "copy_from_worker_0"], [25, 2, 1, "", "copy_to_worker_0"], [25, 2, 1, "", "empty"], [25, 2, 1, "", "gather_to_worker0"], [25, 2, 1, "", "get_global_func"], [25, 2, 1, "", "init_ccl"], [25, 2, 1, "", "load_vm_module"], [25, 2, 1, "", "scatter_from_worker0"], [25, 2, 1, "", "sync_worker_0"]], "tvm.runtime.ndarray": [[26, 1, 1, "", "NDArray"], [26, 4, 1, "", "array"], [26, 4, 1, "", "cl"], [26, 4, 1, "", "cpu"], [26, 4, 1, "", "cuda"], [26, 4, 1, "", "device"], [26, 4, 1, "", "empty"], [26, 4, 1, "", "ext_dev"], [26, 4, 1, "", "from_dlpack"], [26, 4, 1, "", "gpu"], [26, 4, 1, "", "hexagon"], [26, 4, 1, "", "metal"], [26, 4, 1, "", "mtl"], [26, 4, 1, "", "numpyasarray"], [26, 4, 1, "", "opencl"], [26, 4, 1, "", "rocm"], [26, 4, 1, "", "vpi"], [26, 4, 1, "", "vulkan"], [26, 4, 1, "", "webgpu"]], "tvm.runtime.ndarray.NDArray": [[26, 2, 1, "", "asnumpy"], [26, 2, 1, "", "copyfrom"], [26, 2, 1, "", "copyto"], [26, 3, 1, "", "device"], [26, 3, 1, "", "dtype"], [26, 2, 1, "", "numpy"], [26, 2, 1, "", "same_as"]], "tvm.runtime.profiling": [[27, 1, 1, "", "Count"], [27, 1, 1, "", "DeviceWrapper"], [27, 1, 1, "", "Duration"], [27, 1, 1, "", "MetricCollector"], [27, 1, 1, "", "Percent"], [27, 1, 1, "", "Ratio"], [27, 1, 1, "", "Report"], [27, 4, 1, "", "profile_function"]], "tvm.runtime.profiling.Report": [[27, 6, 1, "", "calls"], [27, 2, 1, "", "csv"], [27, 6, 1, "", "device_metrics"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "json"], [27, 2, 1, "", "table"]], "tvm.runtime.relax_vm": [[28, 1, 1, "", "VMInstrumentReturnKind"], [28, 1, 1, "", "VirtualMachine"]], "tvm.runtime.relax_vm.VirtualMachine": [[28, 2, 1, "", "get_outputs"], [28, 2, 1, "", "invoke_closure"], [28, 2, 1, "", "invoke_stateful"], [28, 2, 1, "", "profile"], [28, 2, 1, "", "save_function"], [28, 2, 1, "", "set_input"], [28, 2, 1, "", "set_instrument"], [28, 2, 1, "", "time_evaluator"]], "tvm.target": [[30, 1, 1, "", "GenericFunc"], [30, 1, 1, "", "Target"], [30, 1, 1, "", "TargetKind"], [30, 1, 1, "", "VirtualDevice"], [30, 4, 1, "", "arm_cpu"], [30, 4, 1, "", "bifrost"], [30, 4, 1, "", "create"], [30, 4, 1, "", "cuda"], [30, 4, 1, "", "generic_func"], [30, 4, 1, "", "get_native_generic_func"], [30, 4, 1, "", "hexagon"], [30, 4, 1, "", "intel_graphics"], [30, 4, 1, "", "list_tags"], [30, 4, 1, "", "make_compilation_config"], [30, 4, 1, "", "mali"], [30, 4, 1, "", "override_native_generic_func"], [30, 4, 1, "", "rasp"], [30, 4, 1, "", "riscv_cpu"], [30, 4, 1, "", "rocm"], [30, 4, 1, "", "stm32"]], "tvm.target.GenericFunc": [[30, 2, 1, "", "get_packed_func"], [30, 2, 1, "", "register"], [30, 2, 1, "", "set_default"]], "tvm.target.Target": [[30, 3, 1, "", "arch"], [30, 2, 1, "", "canon_multi_target"], [30, 2, 1, "", "canon_multi_target_and_host"], [30, 2, 1, "", "canon_target"], [30, 2, 1, "", "canon_target_and_host"], [30, 2, 1, "", "canon_target_map_and_host"], [30, 2, 1, "", "current"], [30, 2, 1, "", "from_device"], [30, 2, 1, "", "get_kind_attr"], [30, 2, 1, "", "get_target_device_type"], [30, 2, 1, "", "list_kinds"], [30, 3, 1, "", "mattr"], [30, 3, 1, "", "max_block_size_x"], [30, 3, 1, "", "max_block_size_y"], [30, 3, 1, "", "max_num_threads"], [30, 3, 1, "", "mcpu"], [30, 3, 1, "", "model"], [30, 2, 1, "", "target_or_current"], [30, 3, 1, "", "thread_warp_size"]], "tvm.target.TargetKind": [[30, 3, 1, "", "options"], [30, 2, 1, "", "options_from_name"]], "tvm.te": [[31, 1, 1, "", "ComputeOp"], [31, 1, 1, "", "ExternOp"], [31, 1, 1, "", "HybridOp"], [31, 1, 1, "", "PlaceholderOp"], [31, 1, 1, "", "ScanOp"], [31, 1, 1, "", "SpecializedCondition"], [31, 1, 1, "", "Tensor"], [31, 1, 1, "", "TensorComputeOp"], [31, 1, 1, "", "TensorSlice"], [31, 4, 1, "", "abs"], [31, 4, 1, "", "acos"], [31, 4, 1, "", "acosh"], [31, 4, 1, "", "add"], [31, 4, 1, "", "all"], [31, 4, 1, "", "any"], [31, 4, 1, "", "asin"], [31, 4, 1, "", "asinh"], [31, 4, 1, "", "atan"], [31, 4, 1, "", "atanh"], [31, 4, 1, "", "ceil"], [31, 4, 1, "", "comm_reducer"], [31, 4, 1, "", "compute"], [31, 4, 1, "", "const"], [31, 4, 1, "", "cos"], [31, 4, 1, "", "cosh"], [31, 4, 1, "", "create_prim_func"], [31, 4, 1, "", "create_schedule"], [31, 4, 1, "", "decl_tensor_intrin"], [31, 4, 1, "", "div"], [31, 4, 1, "", "erf"], [31, 4, 1, "", "exp"], [31, 4, 1, "", "extern"], [31, 4, 1, "", "extern_primfunc"], [31, 4, 1, "", "floor"], [31, 4, 1, "", "floordiv"], [31, 4, 1, "", "floormod"], [31, 4, 1, "", "fmod"], [31, 4, 1, "", "gradient"], [31, 4, 1, "", "if_then_else"], [31, 4, 1, "", "indexdiv"], [31, 4, 1, "", "indexmod"], [31, 4, 1, "", "isfinite"], [31, 4, 1, "", "isinf"], [31, 4, 1, "", "isnan"], [31, 4, 1, "", "log"], [31, 4, 1, "", "log10"], [31, 4, 1, "", "log2"], [31, 4, 1, "", "max"], [31, 4, 1, "", "max_value"], [31, 4, 1, "", "min"], [31, 4, 1, "", "min_value"], [31, 4, 1, "", "multiply"], [31, 4, 1, "", "nearbyint"], [31, 4, 1, "", "placeholder"], [31, 4, 1, "", "popcount"], [31, 4, 1, "", "power"], [31, 4, 1, "", "reduce_axis"], [31, 4, 1, "", "round"], [31, 4, 1, "", "rsqrt"], [31, 4, 1, "", "scan"], [31, 4, 1, "", "sigmoid"], [31, 4, 1, "", "sin"], [31, 4, 1, "", "sinh"], [31, 4, 1, "", "size_var"], [31, 4, 1, "", "sqrt"], [31, 4, 1, "", "subtract"], [31, 4, 1, "", "sum"], [31, 4, 1, "", "tag_scope"], [31, 4, 1, "", "tan"], [31, 4, 1, "", "tanh"], [31, 4, 1, "", "thread_axis"], [31, 4, 1, "", "trace"], [31, 4, 1, "", "trunc"], [31, 4, 1, "", "truncdiv"], [31, 4, 1, "", "truncmod"], [31, 4, 1, "", "var"]], "tvm.te.HybridOp": [[31, 3, 1, "", "axis"]], "tvm.te.ScanOp": [[31, 3, 1, "", "scan_axis"]], "tvm.te.SpecializedCondition": [[31, 2, 1, "", "current"]], "tvm.te.Tensor": [[31, 3, 1, "", "axis"], [31, 3, 1, "", "ndim"], [31, 3, 1, "", "op"], [31, 3, 1, "", "shape"], [31, 3, 1, "", "value_index"]], "tvm.te.TensorSlice": [[31, 2, 1, "", "asobject"], [31, 3, 1, "", "dtype"]], "tvm.tir": [[35, 1, 1, "", "Add"], [35, 1, 1, "", "Allocate"], [35, 1, 1, "", "AllocateConst"], [35, 1, 1, "", "And"], [35, 1, 1, "", "Any"], [35, 1, 1, "", "AssertStmt"], [35, 1, 1, "", "AttrStmt"], [35, 1, 1, "", "BijectiveLayout"], [35, 1, 1, "", "Block"], [35, 1, 1, "", "BlockDependenceInfo"], [35, 1, 1, "", "BlockRealize"], [35, 1, 1, "", "Broadcast"], [35, 1, 1, "", "Buffer"], [35, 1, 1, "", "BufferLoad"], [35, 1, 1, "", "BufferRealize"], [35, 1, 1, "", "BufferRegion"], [35, 1, 1, "", "BufferStore"], [35, 1, 1, "", "Call"], [35, 1, 1, "", "CallEffectKind"], [35, 1, 1, "", "Cast"], [35, 1, 1, "", "CommReducer"], [35, 1, 1, "", "DataProducer"], [35, 1, 1, "", "DeclBuffer"], [35, 1, 1, "", "Div"], [35, 1, 1, "", "EQ"], [35, 1, 1, "", "Evaluate"], [35, 1, 1, "", "FloatImm"], [35, 1, 1, "", "FloorDiv"], [35, 1, 1, "", "FloorMod"], [35, 1, 1, "", "For"], [35, 1, 1, "", "ForKind"], [35, 1, 1, "", "GE"], [35, 1, 1, "", "GT"], [35, 1, 1, "", "IfThenElse"], [35, 1, 1, "", "IndexMap"], [35, 1, 1, "", "IntImm"], [35, 1, 1, "", "IterVar"], [35, 1, 1, "", "LE"], [35, 1, 1, "", "LT"], [35, 1, 1, "", "Layout"], [35, 1, 1, "", "Let"], [35, 1, 1, "", "LetStmt"], [35, 1, 1, "", "MatchBufferRegion"], [35, 1, 1, "", "Max"], [35, 1, 1, "", "Min"], [35, 1, 1, "", "Mod"], [35, 1, 1, "", "Mul"], [35, 1, 1, "", "NE"], [35, 1, 1, "", "Not"], [35, 1, 1, "", "Or"], [35, 1, 1, "", "Prefetch"], [35, 1, 1, "", "PrimFunc"], [35, 1, 1, "", "ProducerLoad"], [35, 1, 1, "", "ProducerRealize"], [35, 1, 1, "", "ProducerStore"], [35, 1, 1, "", "Ramp"], [35, 1, 1, "", "Reduce"], [35, 1, 1, "", "Select"], [35, 1, 1, "", "SeqStmt"], [35, 1, 1, "", "Shuffle"], [35, 1, 1, "", "SizeVar"], [35, 1, 1, "", "Stmt"], [35, 1, 1, "", "StringImm"], [35, 1, 1, "", "Sub"], [35, 4, 1, "", "TVMBackendAllocWorkspace"], [35, 4, 1, "", "TVMBackendFreeWorkspace"], [35, 1, 1, "", "TensorIntrin"], [35, 1, 1, "", "Var"], [35, 1, 1, "", "While"], [35, 4, 1, "", "abs"], [35, 4, 1, "", "acos"], [35, 4, 1, "", "acosh"], [35, 4, 1, "", "add"], [35, 4, 1, "", "address_of"], [35, 4, 1, "", "all"], [35, 4, 1, "", "any"], [35, 4, 1, "", "asin"], [35, 4, 1, "", "asinh"], [35, 4, 1, "", "assume"], [35, 4, 1, "", "atan"], [35, 4, 1, "", "atan2"], [35, 4, 1, "", "atanh"], [35, 4, 1, "", "bijective_layout"], [35, 4, 1, "", "bitwise_and"], [35, 4, 1, "", "bitwise_not"], [35, 4, 1, "", "bitwise_or"], [35, 4, 1, "", "bitwise_xor"], [35, 4, 1, "", "call_cpacked"], [35, 4, 1, "", "call_cpacked_lowered"], [35, 4, 1, "", "call_extern"], [35, 4, 1, "", "call_intrin"], [35, 4, 1, "", "call_llvm_intrin"], [35, 4, 1, "", "call_llvm_pure_intrin"], [35, 4, 1, "", "call_packed"], [35, 4, 1, "", "call_packed_lowered"], [35, 4, 1, "", "call_pure_extern"], [35, 4, 1, "", "call_tir"], [35, 4, 1, "", "ceil"], [35, 4, 1, "", "ceildiv"], [35, 4, 1, "", "clz"], [35, 4, 1, "", "comm_reducer"], [35, 4, 1, "", "copysign"], [35, 4, 1, "", "cos"], [35, 4, 1, "", "cosh"], [35, 4, 1, "", "create_barriers"], [35, 4, 1, "", "decl_buffer"], [35, 4, 1, "", "div"], [35, 4, 1, "", "end_profile_intrinsic"], [35, 4, 1, "", "erf"], [35, 4, 1, "", "exp"], [35, 4, 1, "", "exp10"], [35, 4, 1, "", "exp2"], [35, 4, 1, "", "floor"], [35, 4, 1, "", "floordiv"], [35, 4, 1, "", "floormod"], [35, 4, 1, "", "fmod"], [35, 4, 1, "", "hypot"], [35, 4, 1, "", "if_then_else"], [35, 4, 1, "", "indexdiv"], [35, 4, 1, "", "indexmod"], [35, 4, 1, "", "infinity"], [35, 4, 1, "", "isfinite"], [35, 4, 1, "", "isinf"], [35, 4, 1, "", "isnan"], [35, 4, 1, "", "isnullptr"], [35, 4, 1, "", "layout"], [35, 4, 1, "", "ldexp"], [35, 4, 1, "", "likely"], [35, 4, 1, "", "log"], [35, 4, 1, "", "log10"], [35, 4, 1, "", "log1p"], [35, 4, 1, "", "log2"], [35, 4, 1, "", "lookup_param"], [35, 4, 1, "", "max"], [35, 4, 1, "", "max_value"], [35, 4, 1, "", "min"], [35, 4, 1, "", "min_value"], [35, 4, 1, "", "mma_fill"], [35, 4, 1, "", "mma_store"], [35, 4, 1, "", "multiply"], [35, 4, 1, "", "nearbyint"], [35, 4, 1, "", "nextafter"], [35, 4, 1, "", "popcount"], [35, 4, 1, "", "pow"], [35, 4, 1, "", "power"], [35, 4, 1, "", "ptx_arrive_barrier"], [35, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [35, 4, 1, "", "ptx_commit_group"], [35, 4, 1, "", "ptx_cp_async"], [35, 4, 1, "", "ptx_cp_async_barrier"], [35, 4, 1, "", "ptx_cp_async_bulk"], [35, 4, 1, "", "ptx_init_barrier_thread_count"], [35, 4, 1, "", "ptx_ldmatrix"], [35, 4, 1, "", "ptx_mma"], [35, 4, 1, "", "ptx_mma_sp"], [35, 4, 1, "", "ptx_wait_barrier"], [35, 4, 1, "", "ptx_wait_group"], [35, 4, 1, "", "q_multiply_shift"], [35, 4, 1, "", "q_multiply_shift_per_axis"], [35, 4, 1, "", "reinterpret"], [35, 4, 1, "", "ret"], [35, 4, 1, "", "round"], [35, 4, 1, "", "rsqrt"], [33, 0, 0, "-", "schedule"], [35, 4, 1, "", "shift_left"], [35, 4, 1, "", "shift_right"], [35, 4, 1, "", "sigmoid"], [35, 4, 1, "", "sin"], [35, 4, 1, "", "sinh"], [35, 4, 1, "", "sqrt"], [35, 4, 1, "", "start_profile_intrinsic"], [34, 0, 0, "-", "stmt_functor"], [35, 4, 1, "", "stmt_list"], [35, 4, 1, "", "stmt_seq"], [35, 4, 1, "", "subtract"], [35, 4, 1, "", "sum"], [35, 4, 1, "", "tan"], [35, 4, 1, "", "tanh"], [35, 4, 1, "", "trace"], [36, 0, 0, "-", "transform"], [35, 4, 1, "", "trunc"], [35, 4, 1, "", "truncdiv"], [35, 4, 1, "", "truncmod"], [35, 4, 1, "", "tvm_access_ptr"], [35, 4, 1, "", "tvm_bmma_sync"], [35, 4, 1, "", "tvm_check_return"], [35, 4, 1, "", "tvm_fill_fragment"], [35, 4, 1, "", "tvm_load_matrix_sync"], [35, 4, 1, "", "tvm_mma_sync"], [35, 4, 1, "", "tvm_stack_alloca"], [35, 4, 1, "", "tvm_stack_make_array"], [35, 4, 1, "", "tvm_stack_make_shape"], [35, 4, 1, "", "tvm_store_matrix_sync"], [35, 4, 1, "", "tvm_struct_get"], [35, 4, 1, "", "tvm_struct_set"], [35, 4, 1, "", "tvm_thread_allreduce"], [35, 4, 1, "", "tvm_throw_last_error"], [35, 4, 1, "", "tvm_tuple"], [35, 4, 1, "", "type_annotation"], [35, 4, 1, "", "undef"], [35, 4, 1, "", "vectorcombine"], [35, 4, 1, "", "vectorhigh"], [35, 4, 1, "", "vectorlow"]], "tvm.tir.BijectiveLayout": [[35, 2, 1, "", "backward_index"], [35, 2, 1, "", "backward_shape"], [35, 2, 1, "", "forward_index"], [35, 2, 1, "", "forward_shape"]], "tvm.tir.BlockDependenceInfo": [[35, 2, 1, "", "get_block_scope"], [35, 2, 1, "", "get_sref"]], "tvm.tir.Buffer": [[35, 2, 1, "", "access_ptr"], [35, 2, 1, "", "get_flattened_buffer"], [35, 2, 1, "", "offset_of"], [35, 2, 1, "", "scope"], [35, 2, 1, "", "vload"], [35, 2, 1, "", "vstore"]], "tvm.tir.IndexMap": [[35, 2, 1, "", "from_func"], [35, 2, 1, "", "from_func_with_separators"], [35, 2, 1, "", "inverse"], [35, 2, 1, "", "is_equivalent_to"], [35, 2, 1, "", "map_indices"], [35, 2, 1, "", "map_ndarray"], [35, 2, 1, "", "map_shape"], [35, 2, 1, "", "non_surjective_inverse"]], "tvm.tir.Layout": [[35, 2, 1, "", "factor_of"], [35, 2, 1, "", "index_of"]], "tvm.tir.PrimFunc": [[35, 2, 1, "", "specialize"], [35, 2, 1, "", "with_body"]], "tvm.tir.TensorIntrin": [[35, 2, 1, "", "get"], [35, 2, 1, "", "register"]], "tvm.tir.analysis": [[32, 0, 0, "-", "analysis"]], "tvm.tir.analysis.analysis": [[32, 4, 1, "", "OOBChecker"], [32, 4, 1, "", "apply_prim_func_arg_and_result_memory_constraints"], [32, 4, 1, "", "calculate_allocated_bytes"], [32, 4, 1, "", "calculate_constant_bytes"], [32, 4, 1, "", "calculate_workspace_bytes"], [32, 4, 1, "", "detect_buffer_access_lca"], [32, 4, 1, "", "estimate_tir_flops"], [32, 4, 1, "", "expr_deep_equal"], [32, 4, 1, "", "find_anchor_block"], [32, 4, 1, "", "get_block_access_region"], [32, 4, 1, "", "get_block_read_write_region"], [32, 4, 1, "", "get_prim_func_arg_and_result_memory_constraints"], [32, 4, 1, "", "get_vtcm_compaction_passes"], [32, 4, 1, "", "undefined_vars"], [32, 4, 1, "", "verify_gpu_code"], [32, 4, 1, "", "verify_memory"], [32, 4, 1, "", "verify_ssa"], [32, 4, 1, "", "verify_well_formed"]], "tvm.tir.schedule": [[33, 1, 1, "", "BlockRV"], [33, 1, 1, "", "BlockScope"], [33, 1, 1, "", "DepKind"], [33, 1, 1, "", "Dependency"], [33, 6, 1, "", "ExprRV"], [33, 1, 1, "", "Instruction"], [33, 1, 1, "", "InstructionKind"], [33, 1, 1, "", "LoopRV"], [33, 1, 1, "", "Schedule"], [33, 1, 1, "", "ScheduleDebugMask"], [33, 5, 1, "", "ScheduleError"], [33, 1, 1, "", "ScheduleState"], [33, 1, 1, "", "StmtSRef"], [33, 1, 1, "", "Trace"]], "tvm.tir.schedule.BlockScope": [[33, 2, 1, "", "get_deps_by_dst"], [33, 2, 1, "", "get_deps_by_src"]], "tvm.tir.schedule.DepKind": [[33, 6, 1, "", "OPAQUE"], [33, 6, 1, "", "RAW"], [33, 6, 1, "", "WAR"], [33, 6, 1, "", "WAW"]], "tvm.tir.schedule.Instruction": [[33, 6, 1, "", "attrs"], [33, 6, 1, "", "inputs"], [33, 6, 1, "", "kind"], [33, 6, 1, "", "outputs"]], "tvm.tir.schedule.InstructionKind": [[33, 2, 1, "", "get"], [33, 3, 1, "", "is_pure"], [33, 6, 1, "", "name"]], "tvm.tir.schedule.Schedule": [[33, 2, 1, "", "add_unit_loop"], [33, 2, 1, "", "annotate"], [33, 2, 1, "", "bind"], [33, 2, 1, "", "blockize"], [33, 2, 1, "", "cache_index"], [33, 2, 1, "", "cache_inplace"], [33, 2, 1, "", "cache_read"], [33, 2, 1, "", "cache_write"], [33, 2, 1, "", "can_decompose_padding"], [33, 2, 1, "", "compute_at"], [33, 2, 1, "", "compute_inline"], [33, 2, 1, "", "copy"], [33, 2, 1, "", "decompose_padding"], [33, 2, 1, "", "decompose_reduction"], [33, 2, 1, "", "enter_postproc"], [33, 2, 1, "", "fork_seed"], [33, 3, 1, "", "func_working_on"], [33, 2, 1, "", "fuse"], [33, 2, 1, "", "get"], [33, 2, 1, "", "get_block"], [33, 2, 1, "", "get_child_blocks"], [33, 2, 1, "", "get_consumers"], [33, 2, 1, "", "get_loops"], [33, 2, 1, "", "get_output_blocks"], [33, 2, 1, "", "get_producers"], [33, 2, 1, "", "get_sref"], [33, 2, 1, "", "loop_partition"], [33, 2, 1, "", "merge"], [33, 3, 1, "", "mod"], [33, 2, 1, "", "pad_einsum"], [33, 2, 1, "", "parallel"], [33, 2, 1, "", "reindex"], [33, 2, 1, "", "reindex_cache_read"], [33, 2, 1, "", "reindex_cache_write"], [33, 2, 1, "", "remove_rv"], [33, 2, 1, "", "reorder"], [33, 2, 1, "", "reorder_block_iter_var"], [33, 2, 1, "", "reverse_compute_at"], [33, 2, 1, "", "reverse_compute_inline"], [33, 2, 1, "", "rfactor"], [33, 2, 1, "", "rolling_buffer"], [33, 2, 1, "", "sample_categorical"], [33, 2, 1, "", "sample_compute_location"], [33, 2, 1, "", "sample_partitioned_tile"], [33, 2, 1, "", "sample_perfect_tile"], [33, 2, 1, "", "seed"], [33, 2, 1, "", "set_axis_separator"], [33, 2, 1, "", "set_scope"], [33, 2, 1, "", "show"], [33, 2, 1, "", "split"], [33, 3, 1, "", "state"], [33, 2, 1, "", "storage_align"], [33, 2, 1, "", "tensorize"], [33, 3, 1, "", "trace"], [33, 2, 1, "", "transform_block_layout"], [33, 2, 1, "", "transform_layout"], [33, 2, 1, "", "unannotate"], [33, 2, 1, "", "unroll"], [33, 2, 1, "", "unsafe_hide_buffer_access"], [33, 2, 1, "", "unsafe_set_dtype"], [33, 2, 1, "", "vectorize"], [33, 2, 1, "", "work_on"]], "tvm.tir.schedule.ScheduleDebugMask": [[33, 6, 1, "", "VERIFY_CACHED_FLAGS"], [33, 6, 1, "", "VERIFY_SREF_TREE"]], "tvm.tir.schedule.ScheduleState": [[33, 2, 1, "", "get_block_scope"], [33, 2, 1, "", "get_sref"], [33, 2, 1, "", "replace"]], "tvm.tir.schedule.StmtSRef": [[33, 2, 1, "", "inline_mark"], [33, 3, 1, "", "parent"], [33, 2, 1, "", "root_mark"], [33, 3, 1, "", "stmt"]], "tvm.tir.schedule.Trace": [[33, 2, 1, "", "append"], [33, 2, 1, "", "apply_json_to_schedule"], [33, 2, 1, "", "apply_to_schedule"], [33, 2, 1, "", "as_json"], [33, 2, 1, "", "as_python"], [33, 6, 1, "", "decisions"], [33, 2, 1, "", "get_decision"], [33, 6, 1, "", "insts"], [33, 2, 1, "", "pop"], [33, 2, 1, "", "show"], [33, 2, 1, "", "simplified"], [33, 2, 1, "", "with_decision"]], "tvm.tir.stmt_functor": [[34, 4, 1, "", "ir_transform"], [34, 4, 1, "", "post_order_visit"], [34, 4, 1, "", "pre_order_visit"], [34, 4, 1, "", "renew_defs"], [34, 4, 1, "", "substitute"]], "tvm.tir.transform": [[36, 4, 1, "", "AnnotateDeviceRegions"], [36, 4, 1, "", "AnnotateEntryFunc"], [36, 4, 1, "", "Apply"], [36, 4, 1, "", "ApplyLayoutTransforms"], [36, 4, 1, "", "BF16ComputeLegalize"], [36, 4, 1, "", "BF16StorageLegalize"], [36, 4, 1, "", "BindTarget"], [36, 4, 1, "", "CoProcSync"], [36, 4, 1, "", "CombineContextCall"], [36, 4, 1, "", "CommonSubexprElimTIR"], [36, 4, 1, "", "CompactBufferAllocation"], [36, 4, 1, "", "ConvertBlocksToOpaque"], [36, 4, 1, "", "ConvertForLoopsToSerial"], [36, 4, 1, "", "ConvertSSA"], [36, 4, 1, "", "DecorateDeviceScope"], [36, 4, 1, "", "DefaultGPUSchedule"], [36, 4, 1, "", "ExtractPrimFuncConstants"], [36, 4, 1, "", "FP8ComputeLegalize"], [36, 4, 1, "", "FP8StorageLegalize"], [36, 4, 1, "", "Filter"], [36, 4, 1, "", "FlattenBuffer"], [36, 4, 1, "", "ForceNarrowIndexToInt32"], [36, 4, 1, "", "HoistExpression"], [36, 4, 1, "", "HoistIfThenElse"], [36, 1, 1, "", "HoistedConditionals"], [36, 1, 1, "", "HoistedLetBindings"], [36, 4, 1, "", "InferFragment"], [36, 4, 1, "", "InjectCopyIntrin"], [36, 4, 1, "", "InjectDoubleBuffer"], [36, 4, 1, "", "InjectPTXAsyncCopy"], [36, 4, 1, "", "InjectPermutedLayout"], [36, 4, 1, "", "InjectPrefetch"], [36, 4, 1, "", "InjectRollingBuffer"], [36, 4, 1, "", "InjectSoftwarePipeline"], [36, 4, 1, "", "InjectVirtualThread"], [36, 4, 1, "", "InlinePrivateFunctions"], [36, 4, 1, "", "InstallDebugSpans"], [36, 4, 1, "", "InstrumentBoundCheckers"], [36, 4, 1, "", "InstrumentProfileIntrinsics"], [36, 4, 1, "", "LegalizePackedCalls"], [36, 4, 1, "", "LiftAttrScope"], [36, 4, 1, "", "LiftThreadBinding"], [36, 4, 1, "", "LoopPartition"], [36, 4, 1, "", "LowerAutoCopy"], [36, 4, 1, "", "LowerCrossThreadReduction"], [36, 4, 1, "", "LowerCustomDatatypes"], [36, 4, 1, "", "LowerDeviceKernelLaunch"], [36, 4, 1, "", "LowerDeviceStorageAccessInfo"], [36, 4, 1, "", "LowerInitBlock"], [36, 4, 1, "", "LowerIntrin"], [36, 4, 1, "", "LowerMatchBuffer"], [36, 4, 1, "", "LowerOpaqueBlock"], [36, 4, 1, "", "LowerTVMBuiltin"], [36, 4, 1, "", "LowerThreadAllreduce"], [36, 4, 1, "", "LowerWarpMemory"], [36, 4, 1, "", "MakePackedAPI"], [36, 4, 1, "", "MakeUnpackedAPI"], [36, 4, 1, "", "ManifestSharedMemoryLocalStage"], [36, 4, 1, "", "MergeSharedMemoryAllocations"], [36, 4, 1, "", "NarrowDataType"], [36, 4, 1, "", "PlanAndUpdateBufferAllocationLocation"], [36, 4, 1, "", "PointerValueTypeRewrite"], [36, 1, 1, "", "PrimFuncPass"], [36, 4, 1, "", "ReduceBranchingThroughOvercompute"], [36, 4, 1, "", "RemoveAssume"], [36, 4, 1, "", "RemoveNoOp"], [36, 4, 1, "", "RemoveStoreUndef"], [36, 4, 1, "", "RemoveWeightLayoutRewriteBlock"], [36, 4, 1, "", "RenormalizeSplitPattern"], [36, 4, 1, "", "RewriteUnsafeSelect"], [36, 4, 1, "", "Simplify"], [36, 4, 1, "", "SkipAssert"], [36, 4, 1, "", "SplitHostDevice"], [36, 4, 1, "", "StorageFlatten"], [36, 4, 1, "", "StorageRewrite"], [36, 4, 1, "", "TextureFlatten"], [36, 4, 1, "", "ThreadSync"], [36, 4, 1, "", "TransformMmaBufferLayout"], [36, 4, 1, "", "UnifyThreadBinding"], [36, 4, 1, "", "UnrollLoop"], [36, 4, 1, "", "VectorizeLoop"], [36, 4, 1, "", "VerifyMemory"], [36, 4, 1, "", "VerifyVTCMLimit"], [36, 4, 1, "", "prim_func_pass"]], "tvm.tir.transform.HoistedConditionals": [[36, 6, 1, "", "All"], [36, 6, 1, "", "BooleanExpression"], [36, 6, 1, "", "IfElseExpr"], [36, 6, 1, "", "IfElseStmt"], [36, 6, 1, "", "Never"], [36, 6, 1, "", "UsingBlockVar"]], "tvm.tir.transform.HoistedLetBindings": [[36, 6, 1, "", "All"], [36, 6, 1, "", "LetExpr"], [36, 6, 1, "", "LetStmt"], [36, 6, 1, "", "Never"], [36, 6, 1, "", "RequiredByConditional"]], "tvm.topi": [[37, 5, 1, "", "InvalidShapeError"], [37, 4, 1, "", "abs"], [37, 4, 1, "", "acos"], [37, 4, 1, "", "acosh"], [37, 4, 1, "", "add"], [37, 4, 1, "", "adv_index"], [37, 4, 1, "", "all"], [37, 4, 1, "", "any"], [37, 4, 1, "", "arange"], [37, 4, 1, "", "argmax"], [37, 4, 1, "", "argmin"], [37, 4, 1, "", "argsort"], [37, 4, 1, "", "argwhere"], [37, 4, 1, "", "asin"], [37, 4, 1, "", "asinh"], [37, 4, 1, "", "atan"], [37, 4, 1, "", "atanh"], [37, 4, 1, "", "binary_search"], [37, 4, 1, "", "bitwise_and"], [37, 4, 1, "", "bitwise_not"], [37, 4, 1, "", "bitwise_or"], [37, 4, 1, "", "bitwise_xor"], [37, 4, 1, "", "broadcast_to"], [37, 4, 1, "", "cast"], [37, 4, 1, "", "ceil"], [37, 4, 1, "", "ceil_log2"], [37, 4, 1, "", "clip"], [37, 4, 1, "", "collapse_sum"], [37, 4, 1, "", "concatenate"], [37, 4, 1, "", "const_vector"], [37, 4, 1, "", "cos"], [37, 4, 1, "", "cosh"], [37, 4, 1, "", "cumprod"], [37, 4, 1, "", "cumsum"], [37, 4, 1, "", "decl_buffer"], [37, 4, 1, "", "dft"], [37, 4, 1, "", "div"], [37, 4, 1, "", "divide"], [37, 4, 1, "", "dynamic_strided_slice"], [37, 4, 1, "", "einsum"], [37, 4, 1, "", "elemwise_sum"], [37, 4, 1, "", "equal"], [37, 4, 1, "", "erf"], [37, 4, 1, "", "erf_legalize"], [37, 4, 1, "", "exp"], [37, 4, 1, "", "expand_dims"], [37, 4, 1, "", "expand_like"], [37, 4, 1, "", "extern"], [37, 4, 1, "", "fast_erf"], [37, 4, 1, "", "fast_exp"], [37, 4, 1, "", "fast_tanh"], [37, 4, 1, "", "fixed_point_multiply"], [37, 4, 1, "", "fixed_point_multiply_per_axis"], [37, 4, 1, "", "flip"], [37, 4, 1, "", "floor"], [37, 4, 1, "", "floor_divide"], [37, 4, 1, "", "floor_mod"], [37, 4, 1, "", "floordiv"], [37, 4, 1, "", "floormod"], [37, 4, 1, "", "full"], [37, 4, 1, "", "full_like"], [37, 4, 1, "", "gather"], [37, 4, 1, "", "gather_nd"], [37, 4, 1, "", "get_const_tuple"], [37, 4, 1, "", "greater"], [37, 4, 1, "", "greater_equal"], [37, 4, 1, "", "hybrid_argwhere_1d"], [37, 4, 1, "", "hybrid_argwhere_2d"], [37, 4, 1, "", "hybrid_argwhere_3d"], [37, 4, 1, "", "hybrid_argwhere_4d"], [37, 4, 1, "", "hybrid_argwhere_5d"], [37, 4, 1, "", "identity"], [37, 0, 0, "-", "image"], [37, 4, 1, "", "invert_permutation"], [37, 4, 1, "", "isfinite"], [37, 4, 1, "", "isinf"], [37, 4, 1, "", "isnan"], [37, 4, 1, "", "layout_transform"], [37, 4, 1, "", "left_shift"], [37, 4, 1, "", "less"], [37, 4, 1, "", "less_equal"], [37, 4, 1, "", "log"], [37, 4, 1, "", "log10"], [37, 4, 1, "", "log2"], [37, 4, 1, "", "logical_and"], [37, 4, 1, "", "logical_not"], [37, 4, 1, "", "logical_or"], [37, 4, 1, "", "logical_xor"], [37, 4, 1, "", "make_idx"], [37, 4, 1, "", "matmul"], [37, 4, 1, "", "matrix_set_diag"], [37, 4, 1, "", "max"], [37, 4, 1, "", "maximum"], [37, 4, 1, "", "meshgrid"], [37, 4, 1, "", "min"], [37, 4, 1, "", "minimum"], [37, 4, 1, "", "mod"], [37, 4, 1, "", "multiply"], [37, 4, 1, "", "ndarray_size"], [37, 4, 1, "", "negative"], [37, 0, 0, "-", "nn"], [37, 4, 1, "", "not_equal"], [37, 4, 1, "", "one_hot"], [37, 4, 1, "", "power"], [37, 4, 1, "", "prod"], [37, 4, 1, "", "reinterpret"], [37, 4, 1, "", "repeat"], [37, 4, 1, "", "reshape"], [37, 4, 1, "", "reverse_sequence"], [37, 4, 1, "", "right_shift"], [37, 4, 1, "", "round"], [37, 4, 1, "", "rsqrt"], [37, 4, 1, "", "scanop"], [37, 4, 1, "", "scatter_elements"], [37, 4, 1, "", "scatter_nd"], [37, 4, 1, "", "searchsorted"], [37, 4, 1, "", "sequence_mask"], [37, 4, 1, "", "shape"], [37, 4, 1, "", "sigmoid"], [37, 4, 1, "", "sign"], [37, 4, 1, "", "sin"], [37, 4, 1, "", "sinh"], [37, 4, 1, "", "sliding_window"], [37, 4, 1, "", "sort"], [37, 0, 0, "-", "sparse"], [37, 4, 1, "", "sparse_reshape"], [37, 4, 1, "", "sparse_to_dense"], [37, 4, 1, "", "split"], [37, 4, 1, "", "sqrt"], [37, 4, 1, "", "squeeze"], [37, 4, 1, "", "stack"], [37, 4, 1, "", "stft"], [37, 4, 1, "", "strided_set"], [37, 4, 1, "", "strided_slice"], [37, 4, 1, "", "subtract"], [37, 4, 1, "", "sum"], [37, 4, 1, "", "take"], [37, 4, 1, "", "take_legalize"], [37, 4, 1, "", "tan"], [37, 4, 1, "", "tanh"], [37, 4, 1, "", "tensordot"], [37, 4, 1, "", "tile"], [37, 4, 1, "", "topk"], [37, 4, 1, "", "transpose"], [37, 4, 1, "", "trilu"], [37, 4, 1, "", "trunc"], [37, 4, 1, "", "unique"], [37, 4, 1, "", "unravel_index"], [37, 4, 1, "", "where"], [37, 4, 1, "", "within_index"]], "tvm.topi.image": [[37, 4, 1, "", "affine_grid"], [37, 4, 1, "", "can_convert_multiply_to_intdiv"], [37, 4, 1, "", "crop_and_resize"], [37, 4, 1, "", "dilation2d_nchw"], [37, 4, 1, "", "dilation2d_nhwc"], [37, 4, 1, "", "get_1d_indices"], [37, 4, 1, "", "get_1d_pixel"], [37, 4, 1, "", "get_2d_indices"], [37, 4, 1, "", "get_2d_pixel"], [37, 4, 1, "", "get_3d_indices"], [37, 4, 1, "", "get_3d_pixel"], [37, 4, 1, "", "get_closest_index"], [37, 4, 1, "", "get_inx"], [37, 4, 1, "", "get_pad_tuple"], [37, 4, 1, "", "grid_sample"], [37, 4, 1, "", "nchw_pack_layout"], [37, 4, 1, "", "nchw_xc_layout"], [37, 4, 1, "", "pad"], [37, 4, 1, "", "resize1d"], [37, 4, 1, "", "resize2d"], [37, 4, 1, "", "resize3d"], [37, 4, 1, "", "simplify"]], "tvm.topi.nn": [[37, 1, 1, "", "Workload"], [37, 4, 1, "", "adaptive_pool"], [37, 4, 1, "", "adaptive_pool3d"], [37, 4, 1, "", "add"], [37, 4, 1, "", "add_alter_layout"], [37, 4, 1, "", "batch_matmul"], [37, 4, 1, "", "batch_matmul_legalize"], [37, 4, 1, "", "batch_norm"], [37, 4, 1, "", "batch_to_space_nd"], [37, 4, 1, "", "bias_add_legalize"], [37, 4, 1, "", "binarize_pack"], [37, 4, 1, "", "binary_dense"], [37, 4, 1, "", "bitpack"], [37, 4, 1, "", "bitserial_conv2d_legalize"], [37, 4, 1, "", "bitserial_conv2d_nchw"], [37, 4, 1, "", "bitserial_conv2d_nhwc"], [37, 4, 1, "", "bitserial_dense"], [37, 4, 1, "", "concatenate"], [37, 4, 1, "", "conv"], [37, 4, 1, "", "conv1d"], [37, 4, 1, "", "conv1d_ncw"], [37, 4, 1, "", "conv1d_nwc"], [37, 4, 1, "", "conv1d_transpose_ncw"], [37, 4, 1, "", "conv2d"], [37, 4, 1, "", "conv2d_NCHWc"], [37, 4, 1, "", "conv2d_NCHWc_int8"], [37, 4, 1, "", "conv2d_alter_layout"], [37, 4, 1, "", "conv2d_gemm_weight_transform"], [37, 4, 1, "", "conv2d_hwcn"], [37, 4, 1, "", "conv2d_infer_layout"], [37, 4, 1, "", "conv2d_legalize"], [37, 4, 1, "", "conv2d_nchw"], [37, 4, 1, "", "conv2d_nhwc"], [37, 4, 1, "", "conv2d_transpose_alter_layout"], [37, 4, 1, "", "conv2d_transpose_legalize"], [37, 4, 1, "", "conv2d_transpose_nchw"], [37, 4, 1, "", "conv2d_transpose_nchw_preprocess"], [37, 4, 1, "", "conv2d_winograd_nchw"], [37, 4, 1, "", "conv2d_winograd_nchw_without_weight_transform"], [37, 4, 1, "", "conv2d_winograd_nhwc"], [37, 4, 1, "", "conv2d_winograd_nhwc_without_weight_transform"], [37, 4, 1, "", "conv2d_winograd_nnpack_weight_transform"], [37, 4, 1, "", "conv2d_winograd_weight_transform"], [37, 4, 1, "", "conv3d_alter_layout"], [37, 4, 1, "", "conv3d_ncdhw"], [37, 4, 1, "", "conv3d_ndhwc"], [37, 4, 1, "", "conv3d_transpose_legalize"], [37, 4, 1, "", "conv3d_transpose_ncdhw"], [37, 4, 1, "", "conv3d_transpose_ncdhw_preprocess"], [37, 4, 1, "", "conv3d_winograd_weight_transform"], [37, 4, 1, "", "correlation_nchw"], [37, 4, 1, "", "declaration_conv2d_transpose_impl"], [37, 4, 1, "", "declaration_conv3d_transpose_impl"], [37, 4, 1, "", "deformable_conv2d_nchw"], [37, 4, 1, "", "deformable_conv2d_nhwc"], [37, 4, 1, "", "dense"], [37, 4, 1, "", "dense_alter_layout"], [37, 4, 1, "", "dense_legalize"], [37, 4, 1, "", "dense_pack"], [37, 4, 1, "", "depth_to_space"], [37, 4, 1, "", "depthwise_conv2d_NCHWc"], [37, 4, 1, "", "depthwise_conv2d_backward_input_nhwc"], [37, 4, 1, "", "depthwise_conv2d_backward_weight_nhwc"], [37, 4, 1, "", "depthwise_conv2d_infer_layout"], [37, 4, 1, "", "depthwise_conv2d_nchw"], [37, 4, 1, "", "depthwise_conv2d_nhwc"], [37, 4, 1, "", "dilate"], [37, 4, 1, "", "equal_const_int"], [37, 4, 1, "", "fast_softmax"], [37, 4, 1, "", "fifo_buffer"], [37, 4, 1, "", "flatten"], [37, 4, 1, "", "get_const_int"], [37, 4, 1, "", "get_const_tuple"], [37, 4, 1, "", "get_pad_tuple"], [37, 4, 1, "", "get_pad_tuple1d"], [37, 4, 1, "", "get_pad_tuple3d"], [37, 4, 1, "", "get_pad_tuple_generic"], [37, 4, 1, "", "global_pool"], [37, 4, 1, "", "group_conv1d_ncw"], [37, 4, 1, "", "group_conv1d_nwc"], [37, 4, 1, "", "group_conv1d_transpose_ncw"], [37, 4, 1, "", "group_conv2d_nchw"], [37, 4, 1, "", "group_conv2d_nhwc"], [37, 4, 1, "", "group_conv2d_transpose_nchw"], [37, 4, 1, "", "group_conv3d_transpose_ncdhw"], [37, 4, 1, "", "group_norm"], [37, 4, 1, "", "instance_norm"], [37, 4, 1, "", "layer_norm"], [37, 4, 1, "", "layout_transform"], [37, 4, 1, "", "leaky_relu"], [37, 4, 1, "", "log_softmax"], [37, 4, 1, "", "lrn"], [37, 4, 1, "", "lstm"], [37, 4, 1, "", "matmul"], [37, 4, 1, "", "matmul_legalize"], [37, 4, 1, "", "mirror_pad"], [37, 4, 1, "", "namedtuple"], [37, 4, 1, "", "nll_loss"], [37, 4, 1, "", "pad"], [37, 4, 1, "", "pool1d"], [37, 4, 1, "", "pool2d"], [37, 4, 1, "", "pool3d"], [37, 4, 1, "", "pool_grad"], [37, 4, 1, "", "prelu"], [37, 4, 1, "", "qnn_conv2d_alter_layout"], [37, 4, 1, "", "qnn_dense_alter_layout"], [37, 4, 1, "", "qnn_requantize_alter_layout"], [37, 4, 1, "", "reduce"], [37, 4, 1, "", "relu"], [37, 4, 1, "", "rms_norm"], [37, 4, 1, "", "scale_shift_nchw"], [37, 4, 1, "", "scale_shift_nchwc"], [37, 4, 1, "", "scale_shift_nhwc"], [37, 4, 1, "", "simplify"], [37, 4, 1, "", "simulated_dequantize"], [37, 4, 1, "", "simulated_quantize"], [37, 4, 1, "", "softmax"], [37, 4, 1, "", "softmax_common"], [37, 4, 1, "", "space_to_batch_nd"], [37, 4, 1, "", "space_to_depth"], [37, 4, 1, "", "sparse_add"], [37, 4, 1, "", "sparse_conv2d"], [37, 4, 1, "", "sparse_dense"], [37, 4, 1, "", "sparse_dense_alter_layout"], [37, 4, 1, "", "sparse_dense_sp_lhs"], [37, 4, 1, "", "sparse_dense_sp_rhs"], [37, 4, 1, "", "sparse_transpose"], [37, 4, 1, "", "strided_slice"], [37, 4, 1, "", "try_get_conv2d_sparse_input"], [37, 4, 1, "", "try_get_sparse_input"], [37, 4, 1, "", "unpack_NCHWc_to_nchw"], [37, 4, 1, "", "upsampling"], [37, 4, 1, "", "upsampling3d"], [37, 4, 1, "", "winograd_transform_matrices"]], "tvm.topi.nn.Workload": [[37, 6, 1, "", "dilation_h"], [37, 6, 1, "", "dilation_w"], [37, 6, 1, "", "height"], [37, 6, 1, "", "in_dtype"], [37, 6, 1, "", "in_filter"], [37, 6, 1, "", "kernel_h"], [37, 6, 1, "", "kernel_w"], [37, 6, 1, "", "out_dtype"], [37, 6, 1, "", "out_filter"], [37, 6, 1, "", "padb"], [37, 6, 1, "", "padl"], [37, 6, 1, "", "padr"], [37, 6, 1, "", "padt"], [37, 6, 1, "", "stride_h"], [37, 6, 1, "", "stride_w"], [37, 6, 1, "", "width"]], "tvm.topi.sparse": [[37, 4, 1, "", "csrmm"], [37, 4, 1, "", "csrmv"], [37, 4, 1, "", "dense"]], "tvm.transform": [[38, 1, 1, "", "ModulePass"], [38, 1, 1, "", "Pass"], [38, 1, 1, "", "PassContext"], [38, 1, 1, "", "PassInfo"], [38, 4, 1, "", "PrintIR"], [38, 1, 1, "", "Sequential"], [38, 4, 1, "", "module_pass"]], "tvm.transform.Pass": [[38, 3, 1, "", "info"]], "tvm.transform.PassContext": [[38, 2, 1, "", "current"], [38, 2, 1, "", "get_current_trace"], [38, 2, 1, "", "get_trace_stack"], [38, 2, 1, "", "get_trace_stack_size"], [38, 2, 1, "", "get_tuning_api_database"], [38, 2, 1, "", "inc_num_evals"], [38, 2, 1, "", "list_configs"], [38, 2, 1, "", "override_instruments"], [38, 2, 1, "", "pop_trace"], [38, 2, 1, "", "push_trace"], [38, 2, 1, "", "set_num_evals"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"tensor": [0, 3, 9], "program": 0, "abstract": [0, 2], "kei": [0, 7], "element": 0, "extra": [0, 2], "structur": 0, "tensorir": [0, 1, 2, 3], "understand": 2, "function": [2, 3, 9], "paramet": 2, "buffer": 2, "loop": [2, 5], "iter": 2, "comput": [2, 4, 10, 40], "block": 2, "axi": 2, "properti": 2, "why": 2, "inform": 2, "sugar": [2, 3], "ax": 2, "bind": 2, "creation": 3, "creat": [3, 8], "us": 3, "tvmscript": [3, 8], "standard": 3, "format": 3, "concis": 3, "syntact": 3, "interact": 3, "python": 3, "variabl": 3, "dynam": 3, "shape": 3, "express": 3, "static": 3, "time": [4, 10, 40], "transform": [5, 8, 9, 23, 36, 38], "initi": 5, "schedul": [5, 33], "tile": 5, "leverag": 5, "local": 5, "rewrit": 5, "reduct": 5, "trace": 5, "instal": 6, "apach": [6, 9, 11], "tvm": [6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "uniti": [6, 9, 11], "tabl": [6, 8], "content": [6, 8], "option": 6, "1": 6, "prebuilt": 6, "packag": 6, "2": 6, "build": 6, "from": [6, 8], "sourc": 6, "step": 6, "depend": 6, "get": [6, 11], "github": 6, "3": 6, "configur": 6, "4": 6, "valid": 6, "overview": 7, "principl": 7, "goal": 7, "flow": 7, "irmodul": 8, "import": [8, 9], "exist": 8, "model": [8, 9], "write": 8, "relax": [8, 14, 18, 19, 20, 21, 22, 23], "nn": [8, 20, 21, 37], "modul": 8, "via": 8, "attribut": 8, "an": 8, "deploi": 8, "univers": 8, "cpu": 8, "gpu": 8, "other": 8, "backend": 8, "quick": 9, "start": [9, 11], "prepar": 9, "neural": 9, "network": 9, "The": 9, "appli": 9, "optim": 9, "compil": 9, "run": 9, "document": 11, "deep": 11, "dive": 11, "refer": [11, 14], "dlight": [12, 14], "error": 13, "api": 14, "runtim": [14, 25, 26, 27, 28, 29], "te": [14, 31], "tir": [14, 32, 33, 34, 35, 36], "meta_schedul": [14, 17], "misc": 14, "instrument": 15, "ir": 16, "analysi": [18, 32], "block_build": 19, "frontend": 20, "onnx": 20, "stablehlo": 20, "torch": 20, "op": 21, "builtin": 21, "ccl": 21, "distribut": 21, "grad": 21, "imag": [21, 37], "memori": 21, "op_attr": 21, "param": 23, "rpc": 24, "disco": 25, "ndarrai": 26, "profil": 27, "relax_vm": 28, "target": 30, "stmt_functor": 34, "topi": 37, "spars": 37, "public": 39}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Tensor Program Abstraction": [[0, "tensor-program-abstraction"]], "Key Elements of Tensor Programs": [[0, "key-elements-of-tensor-programs"]], "Extra Structure in TensorIR": [[0, "extra-structure-in-tensorir"]], "TensorIR": [[1, "tensorir"]], "Understand TensorIR Abstraction": [[2, "understand-tensorir-abstraction"]], "Function Parameters and Buffers": [[2, "function-parameters-and-buffers"]], "Loop Iterations": [[2, "loop-iterations"]], "Computational Block": [[2, "computational-block"]], "Block Axis Properties": [[2, "block-axis-properties"]], "Why Extra Information in Block": [[2, "why-extra-information-in-block"]], "Sugars for Block Axes Binding": [[2, "sugars-for-block-axes-binding"]], "TensorIR Creation": [[3, "tensorir-creation"]], "Create TensorIR using TVMScript": [[3, "create-tensorir-using-tvmscript"]], "Standard Format": [[3, "standard-format"]], "Concise with Syntactic Sugar": [[3, "concise-with-syntactic-sugar"]], "Interactive with Python Variables": [[3, "interactive-with-python-variables"]], "TensorIR Function with Dynamic Shapes": [[3, "tensorir-function-with-dynamic-shapes"]], "Create TensorIR using Tensor Expression": [[3, "create-tensorir-using-tensor-expression"]], "Create Static-Shape Functions": [[3, "create-static-shape-functions"]], "Create Dynamic-Shape Functions": [[3, "create-dynamic-shape-functions"]], "Computation times": [[4, "computation-times"], [10, "computation-times"], [40, "computation-times"]], "Transformation": [[5, "transformation"]], "Initialization Schedule": [[5, "initialization-schedule"]], "Loop Tiling": [[5, "loop-tiling"]], "Leverage Localities": [[5, "leverage-localities"]], "Rewrite Reduction": [[5, "rewrite-reduction"]], "Trace the Transformation": [[5, "trace-the-transformation"]], "Installing Apache TVM Unity": [[6, "installing-apache-tvm-unity"]], "Table of Contents": [[6, "table-of-contents"], [8, "table-of-contents"]], "Option 1. Prebuilt Package": [[6, "option-1-prebuilt-package"]], "Option 2. Build from Source": [[6, "option-2-build-from-source"]], "Step 1. Install Dependencies": [[6, "step-1-install-dependencies"]], "Step 2. Get Source from Github": [[6, "step-2-get-source-from-github"]], "Step 3. Configure and Build": [[6, "step-3-configure-and-build"]], "Step 4. Validate Installation": [[6, "step-4-validate-installation"]], "Overview": [[7, "overview"]], "Key Principle": [[7, "key-principle"]], "Key Goals": [[7, "key-goals"]], "Key Flow": [[7, "key-flow"]], "IRModule": [[8, "irmodule"]], "Create IRModule": [[8, "create-irmodule"]], "Import from existing models": [[8, "import-from-existing-models"]], "Write with Relax NN Module": [[8, "write-with-relax-nn-module"]], "Create via TVMScript": [[8, "create-via-tvmscript"]], "Attributes of an IRModule": [[8, "attributes-of-an-irmodule"]], "Transformations on IRModules": [[8, "transformations-on-irmodules"]], "Deploy the IRModule Universally": [[8, "deploy-the-irmodule-universally"]], "Deploy on CPU": [[8, "deploy-on-cpu"]], "Deploy on GPU": [[8, "deploy-on-gpu"]], "Deploy on Other Backends": [[8, "deploy-on-other-backends"]], "Quick Start": [[9, "quick-start"]], "Prepare the Neural Network Model": [[9, "prepare-the-neural-network-model"]], "Import Model into Apache TVM Unity": [[9, "import-model-into-apache-tvm-unity"]], "Transform The Model": [[9, "transform-the-model"]], "Apply Optimization Transforms": [[9, "apply-optimization-transforms"]], "Tensor Function Optimization": [[9, "tensor-function-optimization"]], "Compile and Run": [[9, "compile-and-run"]], "\ud83d\udea7 Apache TVM Unity Documentation": [[11, "apache-tvm-unity-documentation"]], "Get Started": [[11, null]], "Deep Dive": [[11, null]], "References": [[11, null]], "tvm.dlight": [[12, "module-tvm.dlight"], [14, null]], "tvm.error": [[13, "module-tvm.error"]], "API Reference": [[14, "api-reference"]], "tvm": [[14, null]], "tvm.runtime": [[14, null], [29, "module-tvm.runtime"]], "tvm.te": [[14, null], [31, "tvm-te"]], "tvm.tir": [[14, null], [35, "module-tvm.tir"]], "tvm.meta_schedule": [[14, null], [17, "module-tvm.meta_schedule"]], "tvm.relax": [[14, null], [22, "module-tvm.relax"]], "Misc": [[14, null]], "tvm.instrument": [[15, "module-tvm.instrument"]], "tvm.ir": [[16, "module-tvm.ir"]], "tvm.relax.analysis": [[18, "module-tvm.relax.analysis"]], "tvm.relax.block_builder": [[19, "module-tvm.relax.block_builder"]], "tvm.relax.frontend": [[20, "module-tvm.relax.frontend"]], "tvm.relax.frontend.nn": [[20, "tvm-relax-frontend-nn"]], "tvm.relax.frontend.onnx": [[20, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[20, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[20, "module-tvm.relax.frontend.torch"]], "tvm.relax.op": [[21, "tvm-relax-op"], [21, "id1"]], "tvm.relax.op.nn": [[21, "module-tvm.relax.op.nn"]], "tvm.relax.op.builtin": [[21, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[21, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[21, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[21, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[21, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[21, "module-tvm.relax.op.memory"]], "tvm.relax.op.op_attrs": [[21, "module-tvm.relax.op.op_attrs"]], "tvm.relax.transform": [[23, "module-tvm.relax.transform"]], "Params": [[23, "params"]], "tvm.rpc": [[24, "module-tvm.rpc"]], "tvm.runtime.disco": [[25, "module-tvm.runtime.disco"]], "tvm.runtime.ndarray": [[26, "module-tvm.runtime.ndarray"]], "tvm.runtime.profiling": [[27, "module-tvm.runtime.profiling"]], "tvm.runtime.relax_vm": [[28, "module-tvm.runtime.relax_vm"]], "tvm.target": [[30, "module-tvm.target"]], "tvm.tir.analysis": [[32, "module-tvm.tir.analysis.analysis"]], "tvm.tir.schedule": [[33, "module-tvm.tir.schedule"]], "tvm.tir.stmt_functor": [[34, "module-tvm.tir.stmt_functor"]], "tvm.tir.transform": [[36, "module-tvm.tir.transform"]], "tvm.topi": [[37, "tvm-topi"], [37, "id1"]], "tvm.topi.nn": [[37, "module-tvm.topi.nn"]], "tvm.topi.image": [[37, "module-tvm.topi.image"]], "tvm.topi.sparse": [[37, "module-tvm.topi.sparse"]], "tvm.transform": [[38, "module-tvm.transform"]], "Publications": [[39, "publications"]]}, "indexentries": {"applydefaultschedule (class in tvm.dlight)": [[12, "tvm.dlight.ApplyDefaultSchedule"]], "blockinfo (class in tvm.dlight)": [[12, "tvm.dlight.BlockInfo"]], "iterinfo (class in tvm.dlight)": [[12, "tvm.dlight.IterInfo"]], "schedulerule (class in tvm.dlight)": [[12, "tvm.dlight.ScheduleRule"]], "apply() (tvm.dlight.schedulerule method)": [[12, "tvm.dlight.ScheduleRule.apply"]], "dom (tvm.dlight.iterinfo property)": [[12, "tvm.dlight.IterInfo.dom"]], "dom() (tvm.dlight.blockinfo method)": [[12, "tvm.dlight.BlockInfo.dom"]], "dom_kind() (tvm.dlight.blockinfo method)": [[12, "tvm.dlight.BlockInfo.dom_kind"]], "from_callable() (tvm.dlight.schedulerule static method)": [[12, "tvm.dlight.ScheduleRule.from_callable"]], "is_elementwise() (tvm.dlight.blockinfo method)": [[12, "tvm.dlight.BlockInfo.is_elementwise"]], "is_gemm() (tvm.dlight.blockinfo method)": [[12, "tvm.dlight.BlockInfo.is_gemm"]], "is_gemv() (tvm.dlight.blockinfo method)": [[12, "tvm.dlight.BlockInfo.is_gemv"]], "is_injective() (tvm.dlight.blockinfo method)": [[12, "tvm.dlight.BlockInfo.is_injective"]], "is_reduction() (tvm.dlight.blockinfo method)": [[12, "tvm.dlight.BlockInfo.is_reduction"]], "is_target_available() (tvm.dlight.schedulerule method)": [[12, "tvm.dlight.ScheduleRule.is_target_available"]], "module": [[12, "module-tvm.dlight"], [13, "module-tvm.error"], [15, "module-tvm.instrument"], [16, "module-tvm.ir"], [17, "module-tvm.meta_schedule"], [18, "module-tvm.relax.analysis"], [19, "module-tvm.relax.block_builder"], [20, "module-tvm.relax.frontend"], [20, "module-tvm.relax.frontend.onnx"], [20, "module-tvm.relax.frontend.stablehlo"], [20, "module-tvm.relax.frontend.torch"], [21, "module-tvm.relax.op"], [21, "module-tvm.relax.op.builtin"], [21, "module-tvm.relax.op.ccl"], [21, "module-tvm.relax.op.distributed"], [21, "module-tvm.relax.op.grad"], [21, "module-tvm.relax.op.image"], [21, "module-tvm.relax.op.memory"], [21, "module-tvm.relax.op.nn"], [21, "module-tvm.relax.op.op_attrs"], [22, "module-tvm.relax"], [23, "module-tvm.relax.transform"], [24, "module-tvm.rpc"], [25, "module-tvm.runtime.disco"], [26, "module-tvm.runtime.ndarray"], [27, "module-tvm.runtime.profiling"], [28, "module-tvm.runtime.relax_vm"], [29, "module-tvm.runtime"], [30, "module-tvm.target"], [31, "module-tvm.te"], [32, "module-tvm.tir.analysis.analysis"], [33, "module-tvm.tir.schedule"], [34, "module-tvm.tir.stmt_functor"], [35, "module-tvm.tir"], [36, "module-tvm.tir.transform"], [37, "module-tvm.topi"], [37, "module-tvm.topi.image"], [37, "module-tvm.topi.nn"], [37, "module-tvm.topi.sparse"], [38, "module-tvm.transform"]], "normalize_prim_func() (in module tvm.dlight)": [[12, "tvm.dlight.normalize_prim_func"]], "try_inline() (in module tvm.dlight)": [[12, "tvm.dlight.try_inline"]], "try_inline_contiguous_spatial() (in module tvm.dlight)": [[12, "tvm.dlight.try_inline_contiguous_spatial"]], "tvm.dlight": [[12, "module-tvm.dlight"]], "diagnosticerror": [[13, "tvm.error.DiagnosticError"]], "internalerror": [[13, "tvm.error.InternalError"]], "opattributeinvalid": [[13, "tvm.error.OpAttributeInvalid"]], "opattributerequired": [[13, "tvm.error.OpAttributeRequired"]], "opattributeunimplemented": [[13, "tvm.error.OpAttributeUnImplemented"]], "operror": [[13, "tvm.error.OpError"]], "opnotimplemented": [[13, "tvm.error.OpNotImplemented"]], "rpcerror": [[13, "tvm.error.RPCError"]], "rpcsessiontimeouterror": [[13, "tvm.error.RPCSessionTimeoutError"]], "tvmerror": [[13, "tvm.error.TVMError"]], "register_error() (in module tvm.error)": [[13, "tvm.error.register_error"]], "tvm.error": [[13, "module-tvm.error"]], "passinstrument (class in tvm.instrument)": [[15, "tvm.instrument.PassInstrument"]], "passprintinginstrument (class in tvm.instrument)": [[15, "tvm.instrument.PassPrintingInstrument"]], "passtiminginstrument (class in tvm.instrument)": [[15, "tvm.instrument.PassTimingInstrument"]], "enter_pass_ctx() (tvm.instrument.passinstrument method)": [[15, "tvm.instrument.PassInstrument.enter_pass_ctx"]], "exit_pass_ctx() (tvm.instrument.passinstrument method)": [[15, "tvm.instrument.PassInstrument.exit_pass_ctx"]], "pass_instrument() (in module tvm.instrument)": [[15, "tvm.instrument.pass_instrument"]], "render() (tvm.instrument.passtiminginstrument static method)": [[15, "tvm.instrument.PassTimingInstrument.render"]], "run_after_pass() (tvm.instrument.passinstrument method)": [[15, "tvm.instrument.PassInstrument.run_after_pass"]], "run_before_pass() (tvm.instrument.passinstrument method)": [[15, "tvm.instrument.PassInstrument.run_before_pass"]], "should_run() (tvm.instrument.passinstrument method)": [[15, "tvm.instrument.PassInstrument.should_run"]], "tvm.instrument": [[15, "module-tvm.instrument"]], "array (class in tvm.ir)": [[16, "tvm.ir.Array"]], "attrs (class in tvm.ir)": [[16, "tvm.ir.Attrs"]], "baseexpr (class in tvm.ir)": [[16, "tvm.ir.BaseExpr"]], "basefunc (class in tvm.ir)": [[16, "tvm.ir.BaseFunc"]], "callingconv (class in tvm.ir)": [[16, "tvm.ir.CallingConv"]], "constantmemorypools (class in tvm.ir)": [[16, "tvm.ir.ConstantMemoryPools"]], "constantpoolinfo (class in tvm.ir)": [[16, "tvm.ir.ConstantPoolInfo"]], "constructor (class in tvm.ir)": [[16, "tvm.ir.Constructor"]], "dictattrs (class in tvm.ir)": [[16, "tvm.ir.DictAttrs"]], "dummyglobalinfo (class in tvm.ir)": [[16, "tvm.ir.DummyGlobalInfo"]], "envfunc (class in tvm.ir)": [[16, "tvm.ir.EnvFunc"]], "functype (class in tvm.ir)": [[16, "tvm.ir.FuncType"]], "globalinfo (class in tvm.ir)": [[16, "tvm.ir.GlobalInfo"]], "globaltypevar (class in tvm.ir)": [[16, "tvm.ir.GlobalTypeVar"]], "globalvar (class in tvm.ir)": [[16, "tvm.ir.GlobalVar"]], "irmodule (class in tvm.ir)": [[16, "tvm.ir.IRModule"]], "incompletetype (class in tvm.ir)": [[16, "tvm.ir.IncompleteType"]], "map (class in tvm.ir)": [[16, "tvm.ir.Map"]], "node (class in tvm.ir)": [[16, "tvm.ir.Node"]], "op (class in tvm.ir)": [[16, "tvm.ir.Op"]], "pointertype (class in tvm.ir)": [[16, "tvm.ir.PointerType"]], "poolinfo (class in tvm.ir)": [[16, "tvm.ir.PoolInfo"]], "poolinfoproperties (class in tvm.ir)": [[16, "tvm.ir.PoolInfoProperties"]], "primexpr (class in tvm.ir)": [[16, "tvm.ir.PrimExpr"]], "primtype (class in tvm.ir)": [[16, "tvm.ir.PrimType"]], "range (class in tvm.ir)": [[16, "tvm.ir.Range"]], "relayexpr (class in tvm.ir)": [[16, "tvm.ir.RelayExpr"]], "relayreftype (class in tvm.ir)": [[16, "tvm.ir.RelayRefType"]], "sequentialspan (class in tvm.ir)": [[16, "tvm.ir.SequentialSpan"]], "sourcename (class in tvm.ir)": [[16, "tvm.ir.SourceName"]], "span (class in tvm.ir)": [[16, "tvm.ir.Span"]], "tensoraffinetype (class in tvm.ir)": [[16, "tvm.ir.TensorAffineType"]], "tensortype (class in tvm.ir)": [[16, "tvm.ir.TensorType"]], "tupleaffinetype (class in tvm.ir)": [[16, "tvm.ir.TupleAffineType"]], "tupletype (class in tvm.ir)": [[16, "tvm.ir.TupleType"]], "type (class in tvm.ir)": [[16, "tvm.ir.Type"]], "typecall (class in tvm.ir)": [[16, "tvm.ir.TypeCall"]], "typeconstraint (class in tvm.ir)": [[16, "tvm.ir.TypeConstraint"]], "typedata (class in tvm.ir)": [[16, "tvm.ir.TypeData"]], "typekind (class in tvm.ir)": [[16, "tvm.ir.TypeKind"]], "typerelation (class in tvm.ir)": [[16, "tvm.ir.TypeRelation"]], "typevar (class in tvm.ir)": [[16, "tvm.ir.TypeVar"]], "vdevice (class in tvm.ir)": [[16, "tvm.ir.VDevice"]], "workspacememorypools (class in tvm.ir)": [[16, "tvm.ir.WorkspaceMemoryPools"]], "workspacepoolinfo (class in tvm.ir)": [[16, "tvm.ir.WorkspacePoolInfo"]], "add_argument() (tvm.ir.op method)": [[16, "tvm.ir.Op.add_argument"]], "add_type_rel() (tvm.ir.op method)": [[16, "tvm.ir.Op.add_type_rel"]], "assert_structural_equal() (in module tvm.ir)": [[16, "tvm.ir.assert_structural_equal"]], "astext() (tvm.ir.globalvar method)": [[16, "tvm.ir.GlobalVar.astext"]], "astext() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.astext"]], "astext() (tvm.ir.op method)": [[16, "tvm.ir.Op.astext"]], "attrs (tvm.ir.basefunc property)": [[16, "tvm.ir.BaseFunc.attrs"]], "checked_type (tvm.ir.relayexpr property)": [[16, "tvm.ir.RelayExpr.checked_type"]], "concrete_shape (tvm.ir.tensortype property)": [[16, "tvm.ir.TensorType.concrete_shape"]], "from_expr() (tvm.ir.irmodule static method)": [[16, "tvm.ir.IRModule.from_expr"]], "from_min_extent() (tvm.ir.range static method)": [[16, "tvm.ir.Range.from_min_extent"]], "functions_items() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.functions_items"]], "get() (tvm.ir.envfunc static method)": [[16, "tvm.ir.EnvFunc.get"]], "get() (tvm.ir.map method)": [[16, "tvm.ir.Map.get"]], "get() (tvm.ir.op static method)": [[16, "tvm.ir.Op.get"]], "get_attr() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.get_attr"]], "get_attr() (tvm.ir.op method)": [[16, "tvm.ir.Op.get_attr"]], "get_constructor() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.get_constructor"]], "get_global_type_var() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.get_global_type_var"]], "get_global_type_vars() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.get_global_type_vars"]], "get_global_var() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.get_global_var"]], "get_global_vars() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.get_global_vars"]], "get_int() (tvm.ir.attrs method)": [[16, "tvm.ir.Attrs.get_int"]], "get_int_tuple() (tvm.ir.attrs method)": [[16, "tvm.ir.Attrs.get_int_tuple"]], "get_str() (tvm.ir.attrs method)": [[16, "tvm.ir.Attrs.get_str"]], "has_attr() (tvm.ir.op method)": [[16, "tvm.ir.Op.has_attr"]], "items() (tvm.ir.dictattrs method)": [[16, "tvm.ir.DictAttrs.items"]], "items() (tvm.ir.map method)": [[16, "tvm.ir.Map.items"]], "keys() (tvm.ir.attrs method)": [[16, "tvm.ir.Attrs.keys"]], "keys() (tvm.ir.dictattrs method)": [[16, "tvm.ir.DictAttrs.keys"]], "list_field_info() (tvm.ir.attrs method)": [[16, "tvm.ir.Attrs.list_field_info"]], "list_op_names() (tvm.ir.op static method)": [[16, "tvm.ir.Op.list_op_names"]], "load_json() (in module tvm.ir)": [[16, "tvm.ir.load_json"]], "make_node() (in module tvm.ir)": [[16, "tvm.ir.make_node"]], "register_intrin_lowering() (in module tvm.ir)": [[16, "tvm.ir.register_intrin_lowering"]], "register_op_attr() (in module tvm.ir)": [[16, "tvm.ir.register_op_attr"]], "reset_attr() (tvm.ir.op method)": [[16, "tvm.ir.Op.reset_attr"]], "same_as() (tvm.ir.globalinfo method)": [[16, "tvm.ir.GlobalInfo.same_as"]], "same_as() (tvm.ir.type method)": [[16, "tvm.ir.Type.same_as"]], "save_json() (in module tvm.ir)": [[16, "tvm.ir.save_json"]], "set_attr() (tvm.ir.op method)": [[16, "tvm.ir.Op.set_attr"]], "set_attrs_type_key() (tvm.ir.op method)": [[16, "tvm.ir.Op.set_attrs_type_key"]], "set_num_inputs() (tvm.ir.op method)": [[16, "tvm.ir.Op.set_num_inputs"]], "set_support_level() (tvm.ir.op method)": [[16, "tvm.ir.Op.set_support_level"]], "struct_info (tvm.ir.relayexpr property)": [[16, "tvm.ir.RelayExpr.struct_info"]], "structural_equal() (in module tvm.ir)": [[16, "tvm.ir.structural_equal"]], "structural_hash() (in module tvm.ir)": [[16, "tvm.ir.structural_hash"]], "tvm.ir": [[16, "module-tvm.ir"]], "update() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.update"]], "update_func() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.update_func"]], "update_global_info() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.update_global_info"]], "with_attr() (tvm.ir.basefunc method)": [[16, "tvm.ir.BaseFunc.with_attr"]], "with_attr() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.with_attr"]], "with_attrs() (tvm.ir.basefunc method)": [[16, "tvm.ir.BaseFunc.with_attrs"]], "with_attrs() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.with_attrs"]], "without_attr() (tvm.ir.basefunc method)": [[16, "tvm.ir.BaseFunc.without_attr"]], "without_attr() (tvm.ir.irmodule method)": [[16, "tvm.ir.IRModule.without_attr"]], "builder (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.Builder"]], "costmodel (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.CostModel"]], "database (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.Database"]], "extractedtask (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.ExtractedTask"]], "featureextractor (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.FeatureExtractor"]], "measurecallback (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.MeasureCallback"]], "measurecandidate (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.MeasureCandidate"]], "mutator (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.Mutator"]], "postproc (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.Postproc"]], "profiler (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.Profiler"]], "runner (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.Runner"]], "schedulerule (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.ScheduleRule"]], "searchstrategy (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.SearchStrategy"]], "spacegenerator (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.SpaceGenerator"]], "taskscheduler (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.TaskScheduler"]], "tunecontext (class in tvm.meta_schedule)": [[17, "tvm.meta_schedule.TuneContext"]], "apply() (tvm.meta_schedule.measurecallback method)": [[17, "tvm.meta_schedule.MeasureCallback.apply"]], "apply() (tvm.meta_schedule.mutator method)": [[17, "tvm.meta_schedule.Mutator.apply"]], "apply() (tvm.meta_schedule.postproc method)": [[17, "tvm.meta_schedule.Postproc.apply"]], "apply() (tvm.meta_schedule.schedulerule method)": [[17, "tvm.meta_schedule.ScheduleRule.apply"]], "build() (tvm.meta_schedule.builder method)": [[17, "tvm.meta_schedule.Builder.build"]], "clone() (tvm.meta_schedule.mutator method)": [[17, "tvm.meta_schedule.Mutator.clone"]], "clone() (tvm.meta_schedule.postproc method)": [[17, "tvm.meta_schedule.Postproc.clone"]], "clone() (tvm.meta_schedule.schedulerule method)": [[17, "tvm.meta_schedule.ScheduleRule.clone"]], "clone() (tvm.meta_schedule.searchstrategy method)": [[17, "tvm.meta_schedule.SearchStrategy.clone"]], "clone() (tvm.meta_schedule.spacegenerator method)": [[17, "tvm.meta_schedule.SpaceGenerator.clone"]], "clone() (tvm.meta_schedule.tunecontext method)": [[17, "tvm.meta_schedule.TuneContext.clone"]], "commit_tuning_record() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.commit_tuning_record"]], "commit_workload() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.commit_workload"]], "create() (tvm.meta_schedule.builder static method)": [[17, "tvm.meta_schedule.Builder.create"]], "create() (tvm.meta_schedule.costmodel static method)": [[17, "tvm.meta_schedule.CostModel.create"]], "create() (tvm.meta_schedule.database static method)": [[17, "tvm.meta_schedule.Database.create"]], "create() (tvm.meta_schedule.featureextractor static method)": [[17, "tvm.meta_schedule.FeatureExtractor.create"]], "create() (tvm.meta_schedule.measurecallback static method)": [[17, "tvm.meta_schedule.MeasureCallback.create"]], "create() (tvm.meta_schedule.mutator static method)": [[17, "tvm.meta_schedule.Mutator.create"]], "create() (tvm.meta_schedule.postproc static method)": [[17, "tvm.meta_schedule.Postproc.create"]], "create() (tvm.meta_schedule.runner static method)": [[17, "tvm.meta_schedule.Runner.create"]], "create() (tvm.meta_schedule.schedulerule static method)": [[17, "tvm.meta_schedule.ScheduleRule.create"]], "create() (tvm.meta_schedule.searchstrategy static method)": [[17, "tvm.meta_schedule.SearchStrategy.create"]], "create() (tvm.meta_schedule.spacegenerator static method)": [[17, "tvm.meta_schedule.SpaceGenerator.create"]], "create() (tvm.meta_schedule.taskscheduler static method)": [[17, "tvm.meta_schedule.TaskScheduler.create"]], "current() (tvm.meta_schedule.database static method)": [[17, "tvm.meta_schedule.Database.current"]], "current() (tvm.meta_schedule.profiler static method)": [[17, "tvm.meta_schedule.Profiler.current"]], "derived_object() (in module tvm.meta_schedule)": [[17, "tvm.meta_schedule.derived_object"]], "dump_pruned() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.dump_pruned"]], "extract_from() (tvm.meta_schedule.featureextractor method)": [[17, "tvm.meta_schedule.FeatureExtractor.extract_from"]], "generate_design_space() (tvm.meta_schedule.spacegenerator method)": [[17, "tvm.meta_schedule.SpaceGenerator.generate_design_space"]], "generate_design_space() (tvm.meta_schedule.tunecontext method)": [[17, "tvm.meta_schedule.TuneContext.generate_design_space"]], "generate_measure_candidates() (tvm.meta_schedule.searchstrategy method)": [[17, "tvm.meta_schedule.SearchStrategy.generate_measure_candidates"]], "generate_measure_candidates() (tvm.meta_schedule.tunecontext method)": [[17, "tvm.meta_schedule.TuneContext.generate_measure_candidates"]], "get() (tvm.meta_schedule.profiler method)": [[17, "tvm.meta_schedule.Profiler.get"]], "get_all_tuning_records() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.get_all_tuning_records"]], "get_top_k() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.get_top_k"]], "has_workload() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.has_workload"]], "is_meta_schedule_enabled() (in module tvm.meta_schedule)": [[17, "tvm.meta_schedule.is_meta_schedule_enabled"]], "join_running_task() (tvm.meta_schedule.taskscheduler method)": [[17, "tvm.meta_schedule.TaskScheduler.join_running_task"]], "load() (tvm.meta_schedule.costmodel method)": [[17, "tvm.meta_schedule.CostModel.load"]], "next_task_id() (tvm.meta_schedule.taskscheduler method)": [[17, "tvm.meta_schedule.TaskScheduler.next_task_id"]], "notify_runner_results() (tvm.meta_schedule.searchstrategy method)": [[17, "tvm.meta_schedule.SearchStrategy.notify_runner_results"]], "notify_runner_results() (tvm.meta_schedule.tunecontext method)": [[17, "tvm.meta_schedule.TuneContext.notify_runner_results"]], "post_tuning() (tvm.meta_schedule.searchstrategy method)": [[17, "tvm.meta_schedule.SearchStrategy.post_tuning"]], "post_tuning() (tvm.meta_schedule.tunecontext method)": [[17, "tvm.meta_schedule.TuneContext.post_tuning"]], "pre_tuning() (tvm.meta_schedule.searchstrategy method)": [[17, "tvm.meta_schedule.SearchStrategy.pre_tuning"]], "pre_tuning() (tvm.meta_schedule.tunecontext method)": [[17, "tvm.meta_schedule.TuneContext.pre_tuning"]], "predict() (tvm.meta_schedule.costmodel method)": [[17, "tvm.meta_schedule.CostModel.predict"]], "print_tuning_statistics() (tvm.meta_schedule.taskscheduler method)": [[17, "tvm.meta_schedule.TaskScheduler.print_tuning_statistics"]], "query() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.query"]], "query_ir_module() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.query_ir_module"]], "query_schedule() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.query_schedule"]], "query_tuning_record() (tvm.meta_schedule.database method)": [[17, "tvm.meta_schedule.Database.query_tuning_record"]], "run() (tvm.meta_schedule.runner method)": [[17, "tvm.meta_schedule.Runner.run"]], "save() (tvm.meta_schedule.costmodel method)": [[17, "tvm.meta_schedule.CostModel.save"]], "table() (tvm.meta_schedule.profiler method)": [[17, "tvm.meta_schedule.Profiler.table"]], "terminate_task() (tvm.meta_schedule.taskscheduler method)": [[17, "tvm.meta_schedule.TaskScheduler.terminate_task"]], "timeit() (tvm.meta_schedule.profiler static method)": [[17, "tvm.meta_schedule.Profiler.timeit"]], "touch_task() (tvm.meta_schedule.taskscheduler method)": [[17, "tvm.meta_schedule.TaskScheduler.touch_task"]], "tune() (tvm.meta_schedule.taskscheduler method)": [[17, "tvm.meta_schedule.TaskScheduler.tune"]], "tune_tasks() (in module tvm.meta_schedule)": [[17, "tvm.meta_schedule.tune_tasks"]], "tune_tir() (in module tvm.meta_schedule)": [[17, "tvm.meta_schedule.tune_tir"]], "tvm.meta_schedule": [[17, "module-tvm.meta_schedule"]], "update() (tvm.meta_schedule.costmodel method)": [[17, "tvm.meta_schedule.CostModel.update"]], "basecheckresult (class in tvm.relax.analysis)": [[18, "tvm.relax.analysis.BaseCheckResult"]], "all_global_vars() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.all_global_vars"]], "all_vars() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.all_vars"]], "bound_vars() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.bound_vars"]], "computable_at_compile_time() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.computable_at_compile_time"]], "contains_impure_call() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.contains_impure_call"]], "definable_tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.definable_tir_vars_in_struct_info"]], "defined_symbolic_vars() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.defined_symbolic_vars"]], "derive_call_ret_struct_info() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.derive_call_ret_struct_info"]], "detect_recursion() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.detect_recursion"]], "erase_to_well_defined() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.erase_to_well_defined"]], "estimate_memory_usage() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.estimate_memory_usage"]], "free_symbolic_vars() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.free_symbolic_vars"]], "free_vars() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.free_vars"]], "get_static_type() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.get_static_type"]], "get_var2val() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.get_var2val"]], "has_reshape_pattern() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.has_reshape_pattern"]], "name_to_binding() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.name_to_binding"]], "post_order_visit() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.post_order_visit"]], "remove_all_unused() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.remove_all_unused"]], "struct_info_base_check() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.struct_info_base_check"]], "struct_info_lca() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.struct_info_lca"]], "suggest_layout_transforms() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.suggest_layout_transforms"]], "tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.tir_vars_in_struct_info"]], "tvm.relax.analysis": [[18, "module-tvm.relax.analysis"]], "udchain() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.udchain"]], "well_formed() (in module tvm.relax.analysis)": [[18, "tvm.relax.analysis.well_formed"]], "blockbuilder (class in tvm.relax.block_builder)": [[19, "tvm.relax.block_builder.BlockBuilder"]], "dataflowscope (class in tvm.relax.block_builder)": [[19, "tvm.relax.block_builder.DataflowScope"]], "functionscope (class in tvm.relax.block_builder)": [[19, "tvm.relax.block_builder.FunctionScope"]], "testingscope (class in tvm.relax.block_builder)": [[19, "tvm.relax.block_builder.TestingScope"]], "add_func() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.add_func"]], "begin_scope() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.begin_scope"]], "call_te() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.call_te"]], "call_te_with_grad() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.call_te_with_grad"]], "current() (tvm.relax.block_builder.blockbuilder static method)": [[19, "tvm.relax.block_builder.BlockBuilder.current"]], "current_block_is_dataflow() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.current_block_is_dataflow"]], "dataflow() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.dataflow"]], "emit() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.emit"]], "emit_func_output() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.emit_func_output"]], "emit_normalized() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.emit_normalized"]], "emit_output() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.emit_output"]], "emit_te() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.emit_te"]], "end_scope() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.end_scope"]], "finalize() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.finalize"]], "function() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.function"]], "get() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.get"]], "get_unique_name() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.get_unique_name"]], "lookup_binding() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.lookup_binding"]], "match_cast() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.match_cast"]], "normalize() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.normalize"]], "testing_scope() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.testing_scope"]], "tvm.relax.block_builder": [[19, "module-tvm.relax.block_builder"]], "update_func() (tvm.relax.block_builder.blockbuilder method)": [[19, "tvm.relax.block_builder.BlockBuilder.update_func"]], "detach_params() (in module tvm.relax.frontend)": [[20, "tvm.relax.frontend.detach_params"]], "dynamo_capture_subgraphs() (in module tvm.relax.frontend.torch)": [[20, "tvm.relax.frontend.torch.dynamo_capture_subgraphs"]], "from_fx() (in module tvm.relax.frontend.torch)": [[20, "tvm.relax.frontend.torch.from_fx"]], "from_onnx() (in module tvm.relax.frontend.onnx)": [[20, "tvm.relax.frontend.onnx.from_onnx"]], "from_stablehlo() (in module tvm.relax.frontend.stablehlo)": [[20, "tvm.relax.frontend.stablehlo.from_stablehlo"]], "relax_dynamo() (in module tvm.relax.frontend.torch)": [[20, "tvm.relax.frontend.torch.relax_dynamo"]], "tvm.relax.frontend": [[20, "module-tvm.relax.frontend"]], "tvm.relax.frontend.onnx": [[20, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[20, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[20, "module-tvm.relax.frontend.torch"]], "adaptivepool2dattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.AdaptivePool2DAttrs"]], "argmaxargminattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.ArgmaxArgminAttrs"]], "argsortattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.ArgsortAttrs"]], "astypeattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.AstypeAttrs"]], "batchnormattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.BatchNormAttrs"]], "calltirwithgradattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.CallTIRWithGradAttrs"]], "concatattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.ConcatAttrs"]], "conv2dattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.Conv2DAttrs"]], "conv2dtransposeattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.Conv2DTransposeAttrs"]], "dropoutattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.DropoutAttrs"]], "einsumattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.EinsumAttrs"]], "expanddimsattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.ExpandDimsAttrs"]], "expr (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.Expr"]], "flipattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.FlipAttrs"]], "initattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.InitAttrs"]], "layernormattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.LayerNormAttrs"]], "layouttransformattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.LayoutTransformAttrs"]], "matmulattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.MatmulAttrs"]], "permutedimsattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.PermuteDimsAttrs"]], "pool2dattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.Pool2DAttrs"]], "repeatattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.RepeatAttrs"]], "resize2dattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.Resize2DAttrs"]], "scanopattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.ScanopAttrs"]], "softmaxattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.SoftmaxAttrs"]], "sortattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.SortAttrs"]], "splitattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.SplitAttrs"]], "squeezeattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.SqueezeAttrs"]], "statisticalattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.StatisticalAttrs"]], "stridedsliceattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.StridedSliceAttrs"]], "takeattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.TakeAttrs"]], "tileattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.TileAttrs"]], "topkattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.TopKAttrs"]], "triluattrs (class in tvm.relax.op.op_attrs)": [[21, "tvm.relax.op.op_attrs.TriluAttrs"]], "abs() (in module tvm.relax.op)": [[21, "tvm.relax.op.abs"]], "acos() (in module tvm.relax.op)": [[21, "tvm.relax.op.acos"]], "acosh() (in module tvm.relax.op)": [[21, "tvm.relax.op.acosh"]], "adaptive_avg_pool2d() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.adaptive_avg_pool2d"]], "add() (in module tvm.relax.op)": [[21, "tvm.relax.op.add"]], "allgather() (in module tvm.relax.op.ccl)": [[21, "tvm.relax.op.ccl.allgather"]], "alloc_storage() (in module tvm.relax.op.memory)": [[21, "tvm.relax.op.memory.alloc_storage"]], "alloc_tensor() (in module tvm.relax.op.builtin)": [[21, "tvm.relax.op.builtin.alloc_tensor"]], "alloc_tensor() (in module tvm.relax.op.memory)": [[21, "tvm.relax.op.memory.alloc_tensor"]], "allreduce() (in module tvm.relax.op.ccl)": [[21, "tvm.relax.op.ccl.allreduce"]], "annotate_sharding() (in module tvm.relax.op.distributed)": [[21, "tvm.relax.op.distributed.annotate_sharding"]], "arange() (in module tvm.relax.op)": [[21, "tvm.relax.op.arange"]], "argmax() (in module tvm.relax.op)": [[21, "tvm.relax.op.argmax"]], "argmin() (in module tvm.relax.op)": [[21, "tvm.relax.op.argmin"]], "argsort() (in module tvm.relax.op)": [[21, "tvm.relax.op.argsort"]], "asin() (in module tvm.relax.op)": [[21, "tvm.relax.op.asin"]], "asinh() (in module tvm.relax.op)": [[21, "tvm.relax.op.asinh"]], "assert_op() (in module tvm.relax.op)": [[21, "tvm.relax.op.assert_op"]], "astype() (in module tvm.relax.op)": [[21, "tvm.relax.op.astype"]], "atan() (in module tvm.relax.op)": [[21, "tvm.relax.op.atan"]], "atanh() (in module tvm.relax.op)": [[21, "tvm.relax.op.atanh"]], "attention() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.attention"]], "attention_var_len() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.attention_var_len"]], "avg_pool2d() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.avg_pool2d"]], "avg_pool2d_backward() (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.avg_pool2d_backward"]], "batch_norm() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.batch_norm"]], "bitwise_and() (in module tvm.relax.op)": [[21, "tvm.relax.op.bitwise_and"]], "bitwise_not() (in module tvm.relax.op)": [[21, "tvm.relax.op.bitwise_not"]], "bitwise_or() (in module tvm.relax.op)": [[21, "tvm.relax.op.bitwise_or"]], "bitwise_xor() (in module tvm.relax.op)": [[21, "tvm.relax.op.bitwise_xor"]], "broadcast_from_worker0() (in module tvm.relax.op.ccl)": [[21, "tvm.relax.op.ccl.broadcast_from_worker0"]], "broadcast_to() (in module tvm.relax.op)": [[21, "tvm.relax.op.broadcast_to"]], "call_builtin_with_ctx() (in module tvm.relax.op)": [[21, "tvm.relax.op.call_builtin_with_ctx"]], "call_dps_packed() (in module tvm.relax.op)": [[21, "tvm.relax.op.call_dps_packed"]], "call_inplace_packed() (in module tvm.relax.op)": [[21, "tvm.relax.op.call_inplace_packed"]], "call_pure_packed() (in module tvm.relax.op)": [[21, "tvm.relax.op.call_pure_packed"]], "call_tir() (in module tvm.relax.op)": [[21, "tvm.relax.op.call_tir"]], "call_tir_inplace() (in module tvm.relax.op)": [[21, "tvm.relax.op.call_tir_inplace"]], "call_tir_local_view() (in module tvm.relax.op.distributed)": [[21, "tvm.relax.op.distributed.call_tir_local_view"]], "call_tir_with_grad() (in module tvm.relax.op)": [[21, "tvm.relax.op.call_tir_with_grad"]], "ceil() (in module tvm.relax.op)": [[21, "tvm.relax.op.ceil"]], "clip() (in module tvm.relax.op)": [[21, "tvm.relax.op.clip"]], "collapse_sum_like() (in module tvm.relax.op)": [[21, "tvm.relax.op.collapse_sum_like"]], "collapse_sum_to() (in module tvm.relax.op)": [[21, "tvm.relax.op.collapse_sum_to"]], "concat() (in module tvm.relax.op)": [[21, "tvm.relax.op.concat"]], "conv1d() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.conv1d"]], "conv1d_transpose() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.conv1d_transpose"]], "conv2d() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.conv2d"]], "conv2d_transpose() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.conv2d_transpose"]], "conv3d() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.conv3d"]], "cos() (in module tvm.relax.op)": [[21, "tvm.relax.op.cos"]], "cosh() (in module tvm.relax.op)": [[21, "tvm.relax.op.cosh"]], "cross_entropy_with_logits() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.cross_entropy_with_logits"]], "cumprod() (in module tvm.relax.op)": [[21, "tvm.relax.op.cumprod"]], "cumsum() (in module tvm.relax.op)": [[21, "tvm.relax.op.cumsum"]], "dequantize() (in module tvm.relax.op)": [[21, "tvm.relax.op.dequantize"]], "divide() (in module tvm.relax.op)": [[21, "tvm.relax.op.divide"]], "dropout() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.dropout"]], "dynamic_strided_slice() (in module tvm.relax.op)": [[21, "tvm.relax.op.dynamic_strided_slice"]], "einsum() (in module tvm.relax.op)": [[21, "tvm.relax.op.einsum"]], "end_checkpoint() (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.end_checkpoint"]], "equal() (in module tvm.relax.op)": [[21, "tvm.relax.op.equal"]], "erf() (in module tvm.relax.op)": [[21, "tvm.relax.op.erf"]], "ewise_fma() (in module tvm.relax.op)": [[21, "tvm.relax.op.ewise_fma"]], "exp() (in module tvm.relax.op)": [[21, "tvm.relax.op.exp"]], "expand_dims() (in module tvm.relax.op)": [[21, "tvm.relax.op.expand_dims"]], "flatten() (in module tvm.relax.op)": [[21, "tvm.relax.op.flatten"]], "flip() (in module tvm.relax.op)": [[21, "tvm.relax.op.flip"]], "floor() (in module tvm.relax.op)": [[21, "tvm.relax.op.floor"]], "floor_divide() (in module tvm.relax.op)": [[21, "tvm.relax.op.floor_divide"]], "full() (in module tvm.relax.op)": [[21, "tvm.relax.op.full"]], "full_like() (in module tvm.relax.op)": [[21, "tvm.relax.op.full_like"]], "gelu() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.gelu"]], "gelu_tanh() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.gelu_tanh"]], "greater() (in module tvm.relax.op)": [[21, "tvm.relax.op.greater"]], "greater_equal() (in module tvm.relax.op)": [[21, "tvm.relax.op.greater_equal"]], "group_norm() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.group_norm"]], "hint_on_device() (in module tvm.relax.op)": [[21, "tvm.relax.op.hint_on_device"]], "invoke_closure() (in module tvm.relax.op)": [[21, "tvm.relax.op.invoke_closure"]], "invoke_pure_closure() (in module tvm.relax.op)": [[21, "tvm.relax.op.invoke_pure_closure"]], "isfinite() (in module tvm.relax.op)": [[21, "tvm.relax.op.isfinite"]], "isinf() (in module tvm.relax.op)": [[21, "tvm.relax.op.isinf"]], "isnan() (in module tvm.relax.op)": [[21, "tvm.relax.op.isnan"]], "kill_storage() (in module tvm.relax.op.memory)": [[21, "tvm.relax.op.memory.kill_storage"]], "kill_tensor() (in module tvm.relax.op.memory)": [[21, "tvm.relax.op.memory.kill_tensor"]], "layer_norm() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.layer_norm"]], "layout_transform() (in module tvm.relax.op)": [[21, "tvm.relax.op.layout_transform"]], "leakyrelu() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.leakyrelu"]], "less() (in module tvm.relax.op)": [[21, "tvm.relax.op.less"]], "less_equal() (in module tvm.relax.op)": [[21, "tvm.relax.op.less_equal"]], "linear() (in module tvm.relax.op)": [[21, "tvm.relax.op.linear"]], "log() (in module tvm.relax.op)": [[21, "tvm.relax.op.log"]], "log_softmax() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.log_softmax"]], "logical_and() (in module tvm.relax.op)": [[21, "tvm.relax.op.logical_and"]], "logical_not() (in module tvm.relax.op)": [[21, "tvm.relax.op.logical_not"]], "logical_or() (in module tvm.relax.op)": [[21, "tvm.relax.op.logical_or"]], "logical_xor() (in module tvm.relax.op)": [[21, "tvm.relax.op.logical_xor"]], "make_closure() (in module tvm.relax.op)": [[21, "tvm.relax.op.make_closure"]], "masked_fill() (in module tvm.relax.op)": [[21, "tvm.relax.op.masked_fill"]], "matmul() (in module tvm.relax.op)": [[21, "tvm.relax.op.matmul"]], "max() (in module tvm.relax.op)": [[21, "tvm.relax.op.max"]], "max_pool2d() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.max_pool2d"]], "max_pool2d_backward() (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.max_pool2d_backward"]], "maximum() (in module tvm.relax.op)": [[21, "tvm.relax.op.maximum"]], "mean() (in module tvm.relax.op)": [[21, "tvm.relax.op.mean"]], "min() (in module tvm.relax.op)": [[21, "tvm.relax.op.min"]], "minimum() (in module tvm.relax.op)": [[21, "tvm.relax.op.minimum"]], "multiply() (in module tvm.relax.op)": [[21, "tvm.relax.op.multiply"]], "negative() (in module tvm.relax.op)": [[21, "tvm.relax.op.negative"]], "nll_loss() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.nll_loss"]], "nll_loss_backward() (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.nll_loss_backward"]], "no_grad() (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.no_grad"]], "not_equal() (in module tvm.relax.op)": [[21, "tvm.relax.op.not_equal"]], "null_value() (in module tvm.relax.op)": [[21, "tvm.relax.op.null_value"]], "ones() (in module tvm.relax.op)": [[21, "tvm.relax.op.ones"]], "ones_like() (in module tvm.relax.op)": [[21, "tvm.relax.op.ones_like"]], "pad() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.pad"]], "permute_dims() (in module tvm.relax.op)": [[21, "tvm.relax.op.permute_dims"]], "power() (in module tvm.relax.op)": [[21, "tvm.relax.op.power"]], "print() (in module tvm.relax.op)": [[21, "tvm.relax.op.print"]], "prod() (in module tvm.relax.op)": [[21, "tvm.relax.op.prod"]], "quantize() (in module tvm.relax.op)": [[21, "tvm.relax.op.quantize"]], "redistribute() (in module tvm.relax.op.distributed)": [[21, "tvm.relax.op.distributed.redistribute"]], "redistribute_replica_to_shard() (in module tvm.relax.op.distributed)": [[21, "tvm.relax.op.distributed.redistribute_replica_to_shard"]], "register_gradient() (in module tvm.relax.op)": [[21, "tvm.relax.op.register_gradient"]], "relu() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.relu"]], "repeat() (in module tvm.relax.op)": [[21, "tvm.relax.op.repeat"]], "reshape() (in module tvm.relax.op)": [[21, "tvm.relax.op.reshape"]], "resize2d() (in module tvm.relax.op.image)": [[21, "tvm.relax.op.image.resize2d"]], "rms_norm() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.rms_norm"]], "round() (in module tvm.relax.op)": [[21, "tvm.relax.op.round"]], "rsqrt() (in module tvm.relax.op)": [[21, "tvm.relax.op.rsqrt"]], "scatter_elements() (in module tvm.relax.op)": [[21, "tvm.relax.op.scatter_elements"]], "scatter_from_worker0() (in module tvm.relax.op.ccl)": [[21, "tvm.relax.op.ccl.scatter_from_worker0"]], "shape_of() (in module tvm.relax.op)": [[21, "tvm.relax.op.shape_of"]], "shape_to_tensor() (in module tvm.relax.op)": [[21, "tvm.relax.op.shape_to_tensor"]], "sigmoid() (in module tvm.relax.op)": [[21, "tvm.relax.op.sigmoid"]], "sign() (in module tvm.relax.op)": [[21, "tvm.relax.op.sign"]], "silu() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.silu"]], "sin() (in module tvm.relax.op)": [[21, "tvm.relax.op.sin"]], "sinh() (in module tvm.relax.op)": [[21, "tvm.relax.op.sinh"]], "softmax() (in module tvm.relax.op.nn)": [[21, "tvm.relax.op.nn.softmax"]], "sort() (in module tvm.relax.op)": [[21, "tvm.relax.op.sort"]], "split() (in module tvm.relax.op)": [[21, "tvm.relax.op.split"]], "sqrt() (in module tvm.relax.op)": [[21, "tvm.relax.op.sqrt"]], "square() (in module tvm.relax.op)": [[21, "tvm.relax.op.square"]], "squeeze() (in module tvm.relax.op)": [[21, "tvm.relax.op.squeeze"]], "start_checkpoint() (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.start_checkpoint"]], "std() (in module tvm.relax.op)": [[21, "tvm.relax.op.std"]], "stop_lift_params() (in module tvm.relax.op.builtin)": [[21, "tvm.relax.op.builtin.stop_lift_params"]], "strided_slice() (in module tvm.relax.op)": [[21, "tvm.relax.op.strided_slice"]], "subtract() (in module tvm.relax.op)": [[21, "tvm.relax.op.subtract"]], "sum() (in module tvm.relax.op)": [[21, "tvm.relax.op.sum"]], "take() (in module tvm.relax.op)": [[21, "tvm.relax.op.take"]], "take_backward() (in module tvm.relax.op.grad)": [[21, "tvm.relax.op.grad.take_backward"]], "tan() (in module tvm.relax.op)": [[21, "tvm.relax.op.tan"]], "tanh() (in module tvm.relax.op)": [[21, "tvm.relax.op.tanh"]], "tensor_to_shape() (in module tvm.relax.op)": [[21, "tvm.relax.op.tensor_to_shape"]], "tile() (in module tvm.relax.op)": [[21, "tvm.relax.op.tile"]], "to_vdevice() (in module tvm.relax.op)": [[21, "tvm.relax.op.to_vdevice"]], "topk() (in module tvm.relax.op)": [[21, "tvm.relax.op.topk"]], "tril() (in module tvm.relax.op)": [[21, "tvm.relax.op.tril"]], "triu() (in module tvm.relax.op)": [[21, "tvm.relax.op.triu"]], "tvm.relax.op": [[21, "module-tvm.relax.op"]], "tvm.relax.op.builtin": [[21, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[21, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[21, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[21, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[21, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[21, "module-tvm.relax.op.memory"]], "tvm.relax.op.nn": [[21, "module-tvm.relax.op.nn"]], "tvm.relax.op.op_attrs": [[21, "module-tvm.relax.op.op_attrs"]], "unique() (in module tvm.relax.op)": [[21, "tvm.relax.op.unique"]], "variance() (in module tvm.relax.op)": [[21, "tvm.relax.op.variance"]], "where() (in module tvm.relax.op)": [[21, "tvm.relax.op.where"]], "wrap_param() (in module tvm.relax.op)": [[21, "tvm.relax.op.wrap_param"]], "zeros() (in module tvm.relax.op)": [[21, "tvm.relax.op.zeros"]], "zeros_like() (in module tvm.relax.op)": [[21, "tvm.relax.op.zeros_like"]], "binding (class in tvm.relax)": [[22, "tvm.relax.Binding"]], "bindingblock (class in tvm.relax)": [[22, "tvm.relax.BindingBlock"]], "call (class in tvm.relax)": [[22, "tvm.relax.Call"]], "constant (class in tvm.relax)": [[22, "tvm.relax.Constant"]], "datatypeimm (class in tvm.relax)": [[22, "tvm.relax.DataTypeImm"]], "dataflowblock (class in tvm.relax)": [[22, "tvm.relax.DataflowBlock"]], "dataflowblockrewrite (class in tvm.relax)": [[22, "tvm.relax.DataflowBlockRewrite"]], "dataflowvar (class in tvm.relax)": [[22, "tvm.relax.DataflowVar"]], "dyntensortype (class in tvm.relax)": [[22, "tvm.relax.DynTensorType"]], "execbuilder (class in tvm.relax)": [[22, "tvm.relax.ExecBuilder"]], "executable (class in tvm.relax)": [[22, "tvm.relax.Executable"]], "expr (in module tvm.relax)": [[22, "tvm.relax.Expr"]], "exprfunctor (class in tvm.relax)": [[22, "tvm.relax.ExprFunctor"]], "externfunc (class in tvm.relax)": [[22, "tvm.relax.ExternFunc"]], "funcstructinfo (class in tvm.relax)": [[22, "tvm.relax.FuncStructInfo"]], "function (class in tvm.relax)": [[22, "tvm.relax.Function"]], "id (class in tvm.relax)": [[22, "tvm.relax.Id"]], "if (class in tvm.relax)": [[22, "tvm.relax.If"]], "matchcast (class in tvm.relax)": [[22, "tvm.relax.MatchCast"]], "objectstructinfo (class in tvm.relax)": [[22, "tvm.relax.ObjectStructInfo"]], "objecttype (class in tvm.relax)": [[22, "tvm.relax.ObjectType"]], "packedfunctype (class in tvm.relax)": [[22, "tvm.relax.PackedFuncType"]], "primstructinfo (class in tvm.relax)": [[22, "tvm.relax.PrimStructInfo"]], "primvalue (class in tvm.relax)": [[22, "tvm.relax.PrimValue"]], "pyexprmutator (class in tvm.relax)": [[22, "tvm.relax.PyExprMutator"]], "pyexprvisitor (class in tvm.relax)": [[22, "tvm.relax.PyExprVisitor"]], "seqexpr (class in tvm.relax)": [[22, "tvm.relax.SeqExpr"]], "shapeexpr (class in tvm.relax)": [[22, "tvm.relax.ShapeExpr"]], "shapestructinfo (class in tvm.relax)": [[22, "tvm.relax.ShapeStructInfo"]], "shapetype (class in tvm.relax)": [[22, "tvm.relax.ShapeType"]], "stringimm (class in tvm.relax)": [[22, "tvm.relax.StringImm"]], "structinfo (class in tvm.relax)": [[22, "tvm.relax.StructInfo"]], "tensorstructinfo (class in tvm.relax)": [[22, "tvm.relax.TensorStructInfo"]], "tuple (class in tvm.relax)": [[22, "tvm.relax.Tuple"]], "tuplegetitem (class in tvm.relax)": [[22, "tvm.relax.TupleGetItem"]], "tuplestructinfo (class in tvm.relax)": [[22, "tvm.relax.TupleStructInfo"]], "vminstrumentreturnkind (class in tvm.relax)": [[22, "tvm.relax.VMInstrumentReturnKind"]], "var (class in tvm.relax)": [[22, "tvm.relax.Var"]], "varbinding (class in tvm.relax)": [[22, "tvm.relax.VarBinding"]], "virtualmachine (class in tvm.relax)": [[22, "tvm.relax.VirtualMachine"]], "add() (tvm.relax.dataflowblockrewrite method)": [[22, "tvm.relax.DataflowBlockRewrite.add"]], "as_python() (tvm.relax.executable method)": [[22, "tvm.relax.Executable.as_python"]], "as_text() (tvm.relax.executable method)": [[22, "tvm.relax.Executable.as_text"]], "bind_params() (tvm.relax.function method)": [[22, "tvm.relax.Function.bind_params"]], "bind_symbolic_vars() (tvm.relax.function method)": [[22, "tvm.relax.Function.bind_symbolic_vars"]], "build() (in module tvm.relax)": [[22, "tvm.relax.build"]], "c() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.c"]], "call_dps_packed() (in module tvm.relax)": [[22, "tvm.relax.call_dps_packed"]], "call_pure_packed() (in module tvm.relax)": [[22, "tvm.relax.call_pure_packed"]], "call_tir() (in module tvm.relax)": [[22, "tvm.relax.call_tir"]], "call_tir_inplace() (in module tvm.relax)": [[22, "tvm.relax.call_tir_inplace"]], "call_tir_with_grad() (in module tvm.relax)": [[22, "tvm.relax.call_tir_with_grad"]], "const() (in module tvm.relax)": [[22, "tvm.relax.const"]], "create_empty() (tvm.relax.function static method)": [[22, "tvm.relax.Function.create_empty"]], "declare_function() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.declare_function"]], "emit_call() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.emit_call"]], "emit_goto() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.emit_goto"]], "emit_if() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.emit_if"]], "emit_ret() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.emit_ret"]], "export_library() (tvm.relax.executable method)": [[22, "tvm.relax.Executable.export_library"]], "extern() (in module tvm.relax)": [[22, "tvm.relax.extern"]], "f() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.f"]], "function() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.function"]], "get() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.get"]], "get_outputs() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.get_outputs"]], "get_pipeline() (in module tvm.relax)": [[22, "tvm.relax.get_pipeline"]], "get_shape_of() (in module tvm.relax)": [[22, "tvm.relax.get_shape_of"]], "get_var_remap() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.get_var_remap"]], "imm() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.imm"]], "invoke_closure() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.invoke_closure"]], "invoke_stateful() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.invoke_stateful"]], "is_base_of() (tvm.relax.structinfo method)": [[22, "tvm.relax.StructInfo.is_base_of"]], "jit() (tvm.relax.executable method)": [[22, "tvm.relax.Executable.jit"]], "lookup_binding() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.lookup_binding"]], "mutate_irmodule() (tvm.relax.dataflowblockrewrite method)": [[22, "tvm.relax.DataflowBlockRewrite.mutate_irmodule"]], "mutated_dfb() (tvm.relax.dataflowblockrewrite method)": [[22, "tvm.relax.DataflowBlockRewrite.mutated_dfb"]], "mutated_root_fn() (tvm.relax.dataflowblockrewrite method)": [[22, "tvm.relax.DataflowBlockRewrite.mutated_root_fn"]], "name_hint (tvm.relax.var property)": [[22, "tvm.relax.Var.name_hint"]], "opaque_func() (tvm.relax.funcstructinfo static method)": [[22, "tvm.relax.FuncStructInfo.opaque_func"]], "profile() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.profile"]], "r() (tvm.relax.execbuilder method)": [[22, "tvm.relax.ExecBuilder.r"]], "register_pipeline() (in module tvm.relax)": [[22, "tvm.relax.register_pipeline"]], "remove_all_unused() (tvm.relax.dataflowblockrewrite method)": [[22, "tvm.relax.DataflowBlockRewrite.remove_all_unused"]], "remove_unused() (tvm.relax.dataflowblockrewrite method)": [[22, "tvm.relax.DataflowBlockRewrite.remove_unused"]], "replace_all_uses() (tvm.relax.dataflowblockrewrite method)": [[22, "tvm.relax.DataflowBlockRewrite.replace_all_uses"]], "same_as() (tvm.relax.structinfo method)": [[22, "tvm.relax.StructInfo.same_as"]], "save_function() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.save_function"]], "set_input() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.set_input"]], "set_instrument() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.set_instrument"]], "set_var_remap() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.set_var_remap"]], "stats() (tvm.relax.executable method)": [[22, "tvm.relax.Executable.stats"]], "time_evaluator() (tvm.relax.virtualmachine method)": [[22, "tvm.relax.VirtualMachine.time_evaluator"]], "tvm.relax": [[22, "module-tvm.relax"]], "visit_binding() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_binding"]], "visit_binding() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_binding"]], "visit_binding_block() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_binding_block"]], "visit_binding_block() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_binding_block"]], "visit_binding_block_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_binding_block_"]], "visit_binding_block_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_binding_block_"]], "visit_call_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_call_"]], "visit_call_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_call_"]], "visit_constant_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_constant_"]], "visit_constant_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_constant_"]], "visit_data_type_imm_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_data_type_imm_"]], "visit_data_type_imm_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_data_type_imm_"]], "visit_dataflow_block_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_dataflow_block_"]], "visit_dataflow_block_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_dataflow_block_"]], "visit_dataflow_var_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_dataflow_var_"]], "visit_dataflow_var_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_dataflow_var_"]], "visit_dataflow_var_def_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_dataflow_var_def_"]], "visit_dataflow_var_def_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_dataflow_var_def_"]], "visit_expr() (tvm.relax.exprfunctor method)": [[22, "tvm.relax.ExprFunctor.visit_expr"]], "visit_expr() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_expr"]], "visit_expr() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_expr"]], "visit_expr_post_order() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_expr_post_order"]], "visit_extern_func_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_extern_func_"]], "visit_extern_func_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_extern_func_"]], "visit_function_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_function_"]], "visit_function_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_function_"]], "visit_global_var_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_global_var_"]], "visit_global_var_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_global_var_"]], "visit_if_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_if_"]], "visit_if_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_if_"]], "visit_match_cast_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_match_cast_"]], "visit_match_cast_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_match_cast_"]], "visit_op_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_op_"]], "visit_op_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_op_"]], "visit_prim_value_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_prim_value_"]], "visit_prim_value_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_prim_value_"]], "visit_seq_expr_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_seq_expr_"]], "visit_seq_expr_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_seq_expr_"]], "visit_shape_expr_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_shape_expr_"]], "visit_shape_expr_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_shape_expr_"]], "visit_span() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_span"]], "visit_span() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_span"]], "visit_string_imm_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_string_imm_"]], "visit_string_imm_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_string_imm_"]], "visit_tuple_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_tuple_"]], "visit_tuple_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_tuple_"]], "visit_tuple_getitem_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_tuple_getitem_"]], "visit_tuple_getitem_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_tuple_getitem_"]], "visit_var_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_var_"]], "visit_var_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_var_"]], "visit_var_binding_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_var_binding_"]], "visit_var_binding_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_var_binding_"]], "visit_var_def() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_var_def"]], "visit_var_def() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_var_def"]], "visit_var_def_() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_var_def_"]], "visit_var_def_() (tvm.relax.pyexprvisitor method)": [[22, "tvm.relax.PyExprVisitor.visit_var_def_"]], "visit_with_new_scope() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.visit_with_new_scope"]], "with_struct_info() (tvm.relax.pyexprmutator method)": [[22, "tvm.relax.PyExprMutator.with_struct_info"]], "adjustmatmulorder() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.AdjustMatmulOrder"]], "allocateworkspace() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.AllocateWorkspace"]], "alteropimpl() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.AlterOpImpl"]], "annotatetiroppattern() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.AnnotateTIROpPattern"]], "attachexternmodules (class in tvm.relax.transform)": [[23, "tvm.relax.transform.AttachExternModules"]], "attachglobalsymbol() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.AttachGlobalSymbol"]], "bindparams() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.BindParams"]], "bindsymbolicvars() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.BindSymbolicVars"]], "bundlemodelparams() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.BundleModelParams"]], "calltirrewrite() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.CallTIRRewrite"]], "canonicalizebindings() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.CanonicalizeBindings"]], "combineparallelmatmul() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.CombineParallelMatmul"]], "convertlayout() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.ConvertLayout"]], "converttodataflow() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.ConvertToDataflow"]], "dataflowblockpass (class in tvm.relax.transform)": [[23, "tvm.relax.transform.DataflowBlockPass"]], "dataflowuseinplacecalls() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.DataflowUseInplaceCalls"]], "deadcodeelimination() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.DeadCodeElimination"]], "decomposeopsforinference() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.DecomposeOpsForInference"]], "decomposeopsfortraining() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.DecomposeOpsForTraining"]], "eliminatecommonsubexpr() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.EliminateCommonSubexpr"]], "expandmatmulofsum() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.ExpandMatmulOfSum"]], "expandtuplearguments() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.ExpandTupleArguments"]], "fastmathtransform (class in tvm.relax.transform)": [[23, "tvm.relax.transform.FastMathTransform"]], "fewshottuning() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.FewShotTuning"]], "foldconstant() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.FoldConstant"]], "functionpass (class in tvm.relax.transform)": [[23, "tvm.relax.transform.FunctionPass"]], "fuseops() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.FuseOps"]], "fuseopsbypattern() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.FuseOpsByPattern"]], "fusetir() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.FuseTIR"]], "fusionpattern (class in tvm.relax.transform)": [[23, "tvm.relax.transform.FusionPattern"]], "gradient() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.Gradient"]], "inlineprivatefunctions() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.InlinePrivateFunctions"]], "killafterlastuse() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.KillAfterLastUse"]], "lambdalift() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.LambdaLift"]], "lazytransformparams (class in tvm.relax.transform)": [[23, "tvm.relax.transform.LazyTransformParams"]], "legalizeops() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.LegalizeOps"]], "lifttransformparams() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.LiftTransformParams"]], "loweralloctensor() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.LowerAllocTensor"]], "mergecompositefunctions() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.MergeCompositeFunctions"]], "metascheduleapplydatabase() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.MetaScheduleApplyDatabase"]], "metascheduletuneirmod() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.MetaScheduleTuneIRMod"]], "metascheduletunetir() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.MetaScheduleTuneTIR"]], "normalize() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.Normalize"]], "normalizeglobalvar() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.NormalizeGlobalVar"]], "optimizelayouttransform (class in tvm.relax.transform)": [[23, "tvm.relax.transform.OptimizeLayoutTransform"]], "patterncheckcontext (class in tvm.relax.transform)": [[23, "tvm.relax.transform.PatternCheckContext"]], "realizevdevice() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.RealizeVDevice"]], "removepuritychecking() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.RemovePurityChecking"]], "removeredundantreshape (class in tvm.relax.transform)": [[23, "tvm.relax.transform.RemoveRedundantReshape"]], "removeunusedoutputs() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.RemoveUnusedOutputs"]], "removeunusedparameters() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.RemoveUnusedParameters"]], "reordertakeaftermatmul() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.ReorderTakeAfterMatmul"]], "rewritecudagraph() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.RewriteCUDAGraph"]], "rewritedataflowreshape() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.RewriteDataflowReshape"]], "runcodegen() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.RunCodegen"]], "splitcalltirbypattern() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.SplitCallTIRByPattern"]], "staticplanblockmemory() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.StaticPlanBlockMemory"]], "tomixedprecision() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.ToMixedPrecision"]], "tonondataflow() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.ToNonDataflow"]], "updateparamstructinfo() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.UpdateParamStructInfo"]], "updatevdevice() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.UpdateVDevice"]], "vmbuiltinlower() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.VMBuiltinLower"]], "vmshapelower() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.VMShapeLower"]], "dataflowblock_pass() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.dataflowblock_pass"]], "function_pass() (in module tvm.relax.transform)": [[23, "tvm.relax.transform.function_pass"]], "tvm.relax.transform": [[23, "module-tvm.relax.transform"]], "localsession (class in tvm.rpc)": [[24, "tvm.rpc.LocalSession"]], "popensession (class in tvm.rpc)": [[24, "tvm.rpc.PopenSession"]], "rpcsession (class in tvm.rpc)": [[24, "tvm.rpc.RPCSession"]], "server (class in tvm.rpc)": [[24, "tvm.rpc.Server"]], "trackersession (class in tvm.rpc)": [[24, "tvm.rpc.TrackerSession"]], "cl() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.cl"]], "close() (tvm.rpc.trackersession method)": [[24, "tvm.rpc.TrackerSession.close"]], "connect() (in module tvm.rpc)": [[24, "tvm.rpc.connect"]], "connect_tracker() (in module tvm.rpc)": [[24, "tvm.rpc.connect_tracker"]], "cpu() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.cpu"]], "cuda() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.cuda"]], "device() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.device"]], "download() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.download"]], "download_linked_module() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.download_linked_module"]], "ext_dev() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.ext_dev"]], "get_function() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.get_function"]], "hexagon() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.hexagon"]], "listdir() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.listdir"]], "load_module() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.load_module"]], "metal() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.metal"]], "remove() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.remove"]], "request() (tvm.rpc.trackersession method)": [[24, "tvm.rpc.TrackerSession.request"]], "request_and_run() (tvm.rpc.trackersession method)": [[24, "tvm.rpc.TrackerSession.request_and_run"]], "rocm() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.rocm"]], "summary() (tvm.rpc.trackersession method)": [[24, "tvm.rpc.TrackerSession.summary"]], "system_lib() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.system_lib"]], "terminate() (tvm.rpc.server method)": [[24, "tvm.rpc.Server.terminate"]], "text_summary() (tvm.rpc.trackersession method)": [[24, "tvm.rpc.TrackerSession.text_summary"]], "tvm.rpc": [[24, "module-tvm.rpc"]], "upload() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.upload"]], "vulkan() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.vulkan"]], "webgpu() (tvm.rpc.rpcsession method)": [[24, "tvm.rpc.RPCSession.webgpu"]], "with_minrpc() (in module tvm.rpc)": [[24, "tvm.rpc.with_minrpc"]], "dmodule (class in tvm.runtime.disco)": [[25, "tvm.runtime.disco.DModule"]], "dpackedfunc (class in tvm.runtime.disco)": [[25, "tvm.runtime.disco.DPackedFunc"]], "dref (class in tvm.runtime.disco)": [[25, "tvm.runtime.disco.DRef"]], "processsession (class in tvm.runtime.disco)": [[25, "tvm.runtime.disco.ProcessSession"]], "session (class in tvm.runtime.disco)": [[25, "tvm.runtime.disco.Session"]], "threadedsession (class in tvm.runtime.disco)": [[25, "tvm.runtime.disco.ThreadedSession"]], "allgather() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.allgather"]], "allreduce() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.allreduce"]], "broadcast_from_worker0() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.broadcast_from_worker0"]], "call_packed() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.call_packed"]], "copy_from_worker_0() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.copy_from_worker_0"]], "copy_to_worker_0() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.copy_to_worker_0"]], "debug_copy_from() (tvm.runtime.disco.dref method)": [[25, "tvm.runtime.disco.DRef.debug_copy_from"]], "debug_get_from_remote() (tvm.runtime.disco.dref method)": [[25, "tvm.runtime.disco.DRef.debug_get_from_remote"]], "empty() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.empty"]], "gather_to_worker0() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.gather_to_worker0"]], "get_global_func() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.get_global_func"]], "init_ccl() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.init_ccl"]], "load_vm_module() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.load_vm_module"]], "scatter_from_worker0() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.scatter_from_worker0"]], "sync_worker_0() (tvm.runtime.disco.session method)": [[25, "tvm.runtime.disco.Session.sync_worker_0"]], "tvm.runtime.disco": [[25, "module-tvm.runtime.disco"]], "ndarray (class in tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.NDArray"]], "array() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.array"]], "asnumpy() (tvm.runtime.ndarray.ndarray method)": [[26, "tvm.runtime.ndarray.NDArray.asnumpy"]], "cl() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.cl"]], "copyfrom() (tvm.runtime.ndarray.ndarray method)": [[26, "tvm.runtime.ndarray.NDArray.copyfrom"]], "copyto() (tvm.runtime.ndarray.ndarray method)": [[26, "tvm.runtime.ndarray.NDArray.copyto"]], "cpu() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.cpu"]], "cuda() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.cuda"]], "device (tvm.runtime.ndarray.ndarray property)": [[26, "tvm.runtime.ndarray.NDArray.device"]], "device() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.device"]], "dtype (tvm.runtime.ndarray.ndarray property)": [[26, "tvm.runtime.ndarray.NDArray.dtype"]], "empty() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.empty"]], "ext_dev() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.ext_dev"]], "from_dlpack() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.from_dlpack"]], "gpu() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.gpu"]], "hexagon() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.hexagon"]], "metal() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.metal"]], "mtl() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.mtl"]], "numpy() (tvm.runtime.ndarray.ndarray method)": [[26, "tvm.runtime.ndarray.NDArray.numpy"]], "numpyasarray() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.numpyasarray"]], "opencl() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.opencl"]], "rocm() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.rocm"]], "same_as() (tvm.runtime.ndarray.ndarray method)": [[26, "tvm.runtime.ndarray.NDArray.same_as"]], "tvm.runtime.ndarray": [[26, "module-tvm.runtime.ndarray"]], "vpi() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.vpi"]], "vulkan() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.vulkan"]], "webgpu() (in module tvm.runtime.ndarray)": [[26, "tvm.runtime.ndarray.webgpu"]], "count (class in tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.Count"]], "devicewrapper (class in tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.DeviceWrapper"]], "duration (class in tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.Duration"]], "metriccollector (class in tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.MetricCollector"]], "percent (class in tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.Percent"]], "ratio (class in tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.Ratio"]], "report (class in tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.Report"]], "calls (tvm.runtime.profiling.report attribute)": [[27, "tvm.runtime.profiling.Report.calls"]], "csv() (tvm.runtime.profiling.report method)": [[27, "tvm.runtime.profiling.Report.csv"]], "device_metrics (tvm.runtime.profiling.report attribute)": [[27, "tvm.runtime.profiling.Report.device_metrics"]], "from_json() (tvm.runtime.profiling.report class method)": [[27, "tvm.runtime.profiling.Report.from_json"]], "json() (tvm.runtime.profiling.report method)": [[27, "tvm.runtime.profiling.Report.json"]], "profile_function() (in module tvm.runtime.profiling)": [[27, "tvm.runtime.profiling.profile_function"]], "table() (tvm.runtime.profiling.report method)": [[27, "tvm.runtime.profiling.Report.table"]], "tvm.runtime.profiling": [[27, "module-tvm.runtime.profiling"]], "vminstrumentreturnkind (class in tvm.runtime.relax_vm)": [[28, "tvm.runtime.relax_vm.VMInstrumentReturnKind"]], "virtualmachine (class in tvm.runtime.relax_vm)": [[28, "tvm.runtime.relax_vm.VirtualMachine"]], "get_outputs() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.get_outputs"]], "invoke_closure() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.invoke_closure"]], "invoke_stateful() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.invoke_stateful"]], "profile() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.profile"]], "save_function() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.save_function"]], "set_input() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.set_input"]], "set_instrument() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.set_instrument"]], "time_evaluator() (tvm.runtime.relax_vm.virtualmachine method)": [[28, "tvm.runtime.relax_vm.VirtualMachine.time_evaluator"]], "tvm.runtime.relax_vm": [[28, "module-tvm.runtime.relax_vm"]], "datatype (class in tvm.runtime)": [[29, "tvm.runtime.DataType"]], "datatypecode (class in tvm.runtime)": [[29, "tvm.runtime.DataTypeCode"]], "device (class in tvm.runtime)": [[29, "tvm.runtime.Device"]], "module (class in tvm.runtime)": [[29, "tvm.runtime.Module"]], "object (class in tvm.runtime)": [[29, "tvm.runtime.Object"]], "objectgeneric (class in tvm.runtime)": [[29, "tvm.runtime.ObjectGeneric"]], "objectpath (class in tvm.runtime)": [[29, "tvm.runtime.ObjectPath"]], "objectpathpair (class in tvm.runtime)": [[29, "tvm.runtime.ObjectPathPair"]], "packedfunc (class in tvm.runtime)": [[29, "tvm.runtime.PackedFunc"]], "report (class in tvm.runtime)": [[29, "tvm.runtime.Report"]], "scriptable (class in tvm.runtime)": [[29, "tvm.runtime.Scriptable"]], "shapetuple (class in tvm.runtime)": [[29, "tvm.runtime.ShapeTuple"]], "string (class in tvm.runtime)": [[29, "tvm.runtime.String"]], "api_version (tvm.runtime.device property)": [[29, "tvm.runtime.Device.api_version"]], "asobject() (tvm.runtime.objectgeneric method)": [[29, "tvm.runtime.ObjectGeneric.asobject"]], "calls (tvm.runtime.report attribute)": [[29, "tvm.runtime.Report.calls"]], "cl() (in module tvm.runtime)": [[29, "tvm.runtime.cl"]], "clear_imports() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.clear_imports"]], "compute_version (tvm.runtime.device property)": [[29, "tvm.runtime.Device.compute_version"]], "const() (in module tvm.runtime)": [[29, "tvm.runtime.const"]], "convert() (in module tvm.runtime)": [[29, "tvm.runtime.convert"]], "convert_to_object() (in module tvm.runtime)": [[29, "tvm.runtime.convert_to_object"]], "cpu() (in module tvm.runtime)": [[29, "tvm.runtime.cpu"]], "create_raw_stream() (tvm.runtime.device method)": [[29, "tvm.runtime.Device.create_raw_stream"]], "csv() (tvm.runtime.report method)": [[29, "tvm.runtime.Report.csv"]], "cuda() (in module tvm.runtime)": [[29, "tvm.runtime.cuda"]], "device() (in module tvm.runtime)": [[29, "tvm.runtime.device"]], "device_metrics (tvm.runtime.report attribute)": [[29, "tvm.runtime.Report.device_metrics"]], "device_name (tvm.runtime.device property)": [[29, "tvm.runtime.Device.device_name"]], "driver_version (tvm.runtime.device property)": [[29, "tvm.runtime.Device.driver_version"]], "enabled() (in module tvm.runtime)": [[29, "tvm.runtime.enabled"]], "entry_func (tvm.runtime.module property)": [[29, "tvm.runtime.Module.entry_func"]], "exist (tvm.runtime.device property)": [[29, "tvm.runtime.Device.exist"]], "export_library() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.export_library"]], "ext_dev() (in module tvm.runtime)": [[29, "tvm.runtime.ext_dev"]], "format (tvm.runtime.module property)": [[29, "tvm.runtime.Module.format"]], "free_raw_stream() (tvm.runtime.device method)": [[29, "tvm.runtime.Device.free_raw_stream"]], "from_json() (tvm.runtime.report class method)": [[29, "tvm.runtime.Report.from_json"]], "get_function() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.get_function"]], "get_property_mask() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.get_property_mask"]], "get_source() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.get_source"]], "gpu() (in module tvm.runtime)": [[29, "tvm.runtime.gpu"]], "implements_function() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.implements_function"]], "import_module() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.import_module"]], "imported_modules (tvm.runtime.module property)": [[29, "tvm.runtime.Module.imported_modules"]], "is_binary_serializable (tvm.runtime.module property)": [[29, "tvm.runtime.Module.is_binary_serializable"]], "is_dso_exportable (tvm.runtime.module property)": [[29, "tvm.runtime.Module.is_dso_exportable"]], "is_runnable (tvm.runtime.module property)": [[29, "tvm.runtime.Module.is_runnable"]], "json() (tvm.runtime.report method)": [[29, "tvm.runtime.Report.json"]], "l2_cache_size_bytes (tvm.runtime.device property)": [[29, "tvm.runtime.Device.l2_cache_size_bytes"]], "load_module() (in module tvm.runtime)": [[29, "tvm.runtime.load_module"]], "load_param_dict() (in module tvm.runtime)": [[29, "tvm.runtime.load_param_dict"]], "load_param_dict_from_file() (in module tvm.runtime)": [[29, "tvm.runtime.load_param_dict_from_file"]], "load_static_library() (in module tvm.runtime)": [[29, "tvm.runtime.load_static_library"]], "max_clock_rate (tvm.runtime.device property)": [[29, "tvm.runtime.Device.max_clock_rate"]], "max_shared_memory_per_block (tvm.runtime.device property)": [[29, "tvm.runtime.Device.max_shared_memory_per_block"]], "max_thread_dimensions (tvm.runtime.device property)": [[29, "tvm.runtime.Device.max_thread_dimensions"]], "max_threads_per_block (tvm.runtime.device property)": [[29, "tvm.runtime.Device.max_threads_per_block"]], "metal() (in module tvm.runtime)": [[29, "tvm.runtime.metal"]], "mtl() (in module tvm.runtime)": [[29, "tvm.runtime.mtl"]], "multi_processor_count (tvm.runtime.device property)": [[29, "tvm.runtime.Device.multi_processor_count"]], "num_threads() (in module tvm.runtime)": [[29, "tvm.runtime.num_threads"]], "opencl() (in module tvm.runtime)": [[29, "tvm.runtime.opencl"]], "rocm() (in module tvm.runtime)": [[29, "tvm.runtime.rocm"]], "save() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.save"]], "save_param_dict() (in module tvm.runtime)": [[29, "tvm.runtime.save_param_dict"]], "save_param_dict_to_file() (in module tvm.runtime)": [[29, "tvm.runtime.save_param_dict_to_file"]], "script() (tvm.runtime.scriptable method)": [[29, "tvm.runtime.Scriptable.script"]], "set_raw_stream() (tvm.runtime.device method)": [[29, "tvm.runtime.Device.set_raw_stream"]], "show() (tvm.runtime.scriptable method)": [[29, "tvm.runtime.Scriptable.show"]], "sync() (tvm.runtime.device method)": [[29, "tvm.runtime.Device.sync"]], "system_lib() (in module tvm.runtime)": [[29, "tvm.runtime.system_lib"]], "table() (tvm.runtime.report method)": [[29, "tvm.runtime.Report.table"]], "texture_spatial_limit() (tvm.runtime.device method)": [[29, "tvm.runtime.Device.texture_spatial_limit"]], "time_evaluator() (tvm.runtime.module method)": [[29, "tvm.runtime.Module.time_evaluator"]], "total_global_memory (tvm.runtime.device property)": [[29, "tvm.runtime.Device.total_global_memory"]], "tvm.runtime": [[29, "module-tvm.runtime"]], "type_key (tvm.runtime.module property)": [[29, "tvm.runtime.Module.type_key"]], "vpi() (in module tvm.runtime)": [[29, "tvm.runtime.vpi"]], "vulkan() (in module tvm.runtime)": [[29, "tvm.runtime.vulkan"]], "warp_size (tvm.runtime.device property)": [[29, "tvm.runtime.Device.warp_size"]], "genericfunc (class in tvm.target)": [[30, "tvm.target.GenericFunc"]], "target (class in tvm.target)": [[30, "tvm.target.Target"]], "targetkind (class in tvm.target)": [[30, "tvm.target.TargetKind"]], "virtualdevice (class in tvm.target)": [[30, "tvm.target.VirtualDevice"]], "arch (tvm.target.target property)": [[30, "tvm.target.Target.arch"]], "arm_cpu() (in module tvm.target)": [[30, "tvm.target.arm_cpu"]], "bifrost() (in module tvm.target)": [[30, "tvm.target.bifrost"]], "canon_multi_target() (tvm.target.target static method)": [[30, "tvm.target.Target.canon_multi_target"]], "canon_multi_target_and_host() (tvm.target.target static method)": [[30, "tvm.target.Target.canon_multi_target_and_host"]], "canon_target() (tvm.target.target static method)": [[30, "tvm.target.Target.canon_target"]], "canon_target_and_host() (tvm.target.target static method)": [[30, "tvm.target.Target.canon_target_and_host"]], "canon_target_map_and_host() (tvm.target.target static method)": [[30, "tvm.target.Target.canon_target_map_and_host"]], "create() (in module tvm.target)": [[30, "tvm.target.create"]], "cuda() (in module tvm.target)": [[30, "tvm.target.cuda"]], "current() (tvm.target.target static method)": [[30, "tvm.target.Target.current"]], "from_device() (tvm.target.target static method)": [[30, "tvm.target.Target.from_device"]], "generic_func() (in module tvm.target)": [[30, "tvm.target.generic_func"]], "get_kind_attr() (tvm.target.target method)": [[30, "tvm.target.Target.get_kind_attr"]], "get_native_generic_func() (in module tvm.target)": [[30, "tvm.target.get_native_generic_func"]], "get_packed_func() (tvm.target.genericfunc method)": [[30, "tvm.target.GenericFunc.get_packed_func"]], "get_target_device_type() (tvm.target.target method)": [[30, "tvm.target.Target.get_target_device_type"]], "hexagon() (in module tvm.target)": [[30, "tvm.target.hexagon"]], "intel_graphics() (in module tvm.target)": [[30, "tvm.target.intel_graphics"]], "list_kinds() (tvm.target.target static method)": [[30, "tvm.target.Target.list_kinds"]], "list_tags() (in module tvm.target)": [[30, "tvm.target.list_tags"]], "make_compilation_config() (in module tvm.target)": [[30, "tvm.target.make_compilation_config"]], "mali() (in module tvm.target)": [[30, "tvm.target.mali"]], "mattr (tvm.target.target property)": [[30, "tvm.target.Target.mattr"]], "max_block_size_x (tvm.target.target property)": [[30, "tvm.target.Target.max_block_size_x"]], "max_block_size_y (tvm.target.target property)": [[30, "tvm.target.Target.max_block_size_y"]], "max_num_threads (tvm.target.target property)": [[30, "tvm.target.Target.max_num_threads"]], "mcpu (tvm.target.target property)": [[30, "tvm.target.Target.mcpu"]], "model (tvm.target.target property)": [[30, "tvm.target.Target.model"]], "options (tvm.target.targetkind property)": [[30, "tvm.target.TargetKind.options"]], "options_from_name() (tvm.target.targetkind static method)": [[30, "tvm.target.TargetKind.options_from_name"]], "override_native_generic_func() (in module tvm.target)": [[30, "tvm.target.override_native_generic_func"]], "rasp() (in module tvm.target)": [[30, "tvm.target.rasp"]], "register() (tvm.target.genericfunc method)": [[30, "tvm.target.GenericFunc.register"]], "riscv_cpu() (in module tvm.target)": [[30, "tvm.target.riscv_cpu"]], "rocm() (in module tvm.target)": [[30, "tvm.target.rocm"]], "set_default() (tvm.target.genericfunc method)": [[30, "tvm.target.GenericFunc.set_default"]], "stm32() (in module tvm.target)": [[30, "tvm.target.stm32"]], "target_or_current() (tvm.target.target static method)": [[30, "tvm.target.Target.target_or_current"]], "thread_warp_size (tvm.target.target property)": [[30, "tvm.target.Target.thread_warp_size"]], "tvm.target": [[30, "module-tvm.target"]], "computeop (class in tvm.te)": [[31, "tvm.te.ComputeOp"]], "externop (class in tvm.te)": [[31, "tvm.te.ExternOp"]], "hybridop (class in tvm.te)": [[31, "tvm.te.HybridOp"]], "placeholderop (class in tvm.te)": [[31, "tvm.te.PlaceholderOp"]], "scanop (class in tvm.te)": [[31, "tvm.te.ScanOp"]], "specializedcondition (class in tvm.te)": [[31, "tvm.te.SpecializedCondition"]], "tensor (class in tvm.te)": [[31, "tvm.te.Tensor"]], "tensorcomputeop (class in tvm.te)": [[31, "tvm.te.TensorComputeOp"]], "tensorslice (class in tvm.te)": [[31, "tvm.te.TensorSlice"]], "abs() (in module tvm.te)": [[31, "tvm.te.abs"]], "acos() (in module tvm.te)": [[31, "tvm.te.acos"]], "acosh() (in module tvm.te)": [[31, "tvm.te.acosh"]], "add() (in module tvm.te)": [[31, "tvm.te.add"]], "all() (in module tvm.te)": [[31, "tvm.te.all"]], "any() (in module tvm.te)": [[31, "tvm.te.any"]], "asin() (in module tvm.te)": [[31, "tvm.te.asin"]], "asinh() (in module tvm.te)": [[31, "tvm.te.asinh"]], "asobject() (tvm.te.tensorslice method)": [[31, "tvm.te.TensorSlice.asobject"]], "atan() (in module tvm.te)": [[31, "tvm.te.atan"]], "atanh() (in module tvm.te)": [[31, "tvm.te.atanh"]], "axis (tvm.te.hybridop property)": [[31, "tvm.te.HybridOp.axis"]], "axis (tvm.te.tensor property)": [[31, "tvm.te.Tensor.axis"]], "ceil() (in module tvm.te)": [[31, "tvm.te.ceil"]], "comm_reducer() (in module tvm.te)": [[31, "tvm.te.comm_reducer"]], "compute() (in module tvm.te)": [[31, "tvm.te.compute"]], "const() (in module tvm.te)": [[31, "tvm.te.const"]], "cos() (in module tvm.te)": [[31, "tvm.te.cos"]], "cosh() (in module tvm.te)": [[31, "tvm.te.cosh"]], "create_prim_func() (in module tvm.te)": [[31, "tvm.te.create_prim_func"]], "create_schedule() (in module tvm.te)": [[31, "tvm.te.create_schedule"]], "current() (tvm.te.specializedcondition static method)": [[31, "tvm.te.SpecializedCondition.current"]], "decl_tensor_intrin() (in module tvm.te)": [[31, "tvm.te.decl_tensor_intrin"]], "div() (in module tvm.te)": [[31, "tvm.te.div"]], "dtype (tvm.te.tensorslice property)": [[31, "tvm.te.TensorSlice.dtype"]], "erf() (in module tvm.te)": [[31, "tvm.te.erf"]], "exp() (in module tvm.te)": [[31, "tvm.te.exp"]], "extern() (in module tvm.te)": [[31, "tvm.te.extern"]], "extern_primfunc() (in module tvm.te)": [[31, "tvm.te.extern_primfunc"]], "floor() (in module tvm.te)": [[31, "tvm.te.floor"]], "floordiv() (in module tvm.te)": [[31, "tvm.te.floordiv"]], "floormod() (in module tvm.te)": [[31, "tvm.te.floormod"]], "fmod() (in module tvm.te)": [[31, "tvm.te.fmod"]], "gradient() (in module tvm.te)": [[31, "tvm.te.gradient"]], "if_then_else() (in module tvm.te)": [[31, "tvm.te.if_then_else"]], "indexdiv() (in module tvm.te)": [[31, "tvm.te.indexdiv"]], "indexmod() (in module tvm.te)": [[31, "tvm.te.indexmod"]], "isfinite() (in module tvm.te)": [[31, "tvm.te.isfinite"]], "isinf() (in module tvm.te)": [[31, "tvm.te.isinf"]], "isnan() (in module tvm.te)": [[31, "tvm.te.isnan"]], "log() (in module tvm.te)": [[31, "tvm.te.log"]], "log10() (in module tvm.te)": [[31, "tvm.te.log10"]], "log2() (in module tvm.te)": [[31, "tvm.te.log2"]], "max() (in module tvm.te)": [[31, "tvm.te.max"]], "max_value() (in module tvm.te)": [[31, "tvm.te.max_value"]], "min() (in module tvm.te)": [[31, "tvm.te.min"]], "min_value() (in module tvm.te)": [[31, "tvm.te.min_value"]], "multiply() (in module tvm.te)": [[31, "tvm.te.multiply"]], "ndim (tvm.te.tensor property)": [[31, "tvm.te.Tensor.ndim"]], "nearbyint() (in module tvm.te)": [[31, "tvm.te.nearbyint"]], "op (tvm.te.tensor property)": [[31, "tvm.te.Tensor.op"]], "placeholder() (in module tvm.te)": [[31, "tvm.te.placeholder"]], "popcount() (in module tvm.te)": [[31, "tvm.te.popcount"]], "power() (in module tvm.te)": [[31, "tvm.te.power"]], "reduce_axis() (in module tvm.te)": [[31, "tvm.te.reduce_axis"]], "round() (in module tvm.te)": [[31, "tvm.te.round"]], "rsqrt() (in module tvm.te)": [[31, "tvm.te.rsqrt"]], "scan() (in module tvm.te)": [[31, "tvm.te.scan"]], "scan_axis (tvm.te.scanop property)": [[31, "tvm.te.ScanOp.scan_axis"]], "shape (tvm.te.tensor property)": [[31, "tvm.te.Tensor.shape"]], "sigmoid() (in module tvm.te)": [[31, "tvm.te.sigmoid"]], "sin() (in module tvm.te)": [[31, "tvm.te.sin"]], "sinh() (in module tvm.te)": [[31, "tvm.te.sinh"]], "size_var() (in module tvm.te)": [[31, "tvm.te.size_var"]], "sqrt() (in module tvm.te)": [[31, "tvm.te.sqrt"]], "subtract() (in module tvm.te)": [[31, "tvm.te.subtract"]], "sum() (in module tvm.te)": [[31, "tvm.te.sum"]], "tag_scope() (in module tvm.te)": [[31, "tvm.te.tag_scope"]], "tan() (in module tvm.te)": [[31, "tvm.te.tan"]], "tanh() (in module tvm.te)": [[31, "tvm.te.tanh"]], "thread_axis() (in module tvm.te)": [[31, "tvm.te.thread_axis"]], "trace() (in module tvm.te)": [[31, "tvm.te.trace"]], "trunc() (in module tvm.te)": [[31, "tvm.te.trunc"]], "truncdiv() (in module tvm.te)": [[31, "tvm.te.truncdiv"]], "truncmod() (in module tvm.te)": [[31, "tvm.te.truncmod"]], "tvm.te": [[31, "module-tvm.te"]], "value_index (tvm.te.tensor property)": [[31, "tvm.te.Tensor.value_index"]], "var() (in module tvm.te)": [[31, "tvm.te.var"]], "oobchecker() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.OOBChecker"]], "apply_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.apply_prim_func_arg_and_result_memory_constraints"]], "calculate_allocated_bytes() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.calculate_allocated_bytes"]], "calculate_constant_bytes() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.calculate_constant_bytes"]], "calculate_workspace_bytes() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.calculate_workspace_bytes"]], "detect_buffer_access_lca() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.detect_buffer_access_lca"]], "estimate_tir_flops() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.estimate_tir_flops"]], "expr_deep_equal() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.expr_deep_equal"]], "find_anchor_block() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.find_anchor_block"]], "get_block_access_region() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.get_block_access_region"]], "get_block_read_write_region() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.get_block_read_write_region"]], "get_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.get_prim_func_arg_and_result_memory_constraints"]], "get_vtcm_compaction_passes() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.get_vtcm_compaction_passes"]], "tvm.tir.analysis.analysis": [[32, "module-tvm.tir.analysis.analysis"]], "undefined_vars() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.undefined_vars"]], "verify_gpu_code() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.verify_gpu_code"]], "verify_memory() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.verify_memory"]], "verify_ssa() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.verify_ssa"]], "verify_well_formed() (in module tvm.tir.analysis.analysis)": [[32, "tvm.tir.analysis.analysis.verify_well_formed"]], "blockrv (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.BlockRV"]], "blockscope (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.BlockScope"]], "depkind (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.DepKind"]], "dependency (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.Dependency"]], "exprrv (in module tvm.tir.schedule)": [[33, "tvm.tir.schedule.ExprRV"]], "instruction (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.Instruction"]], "instructionkind (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.InstructionKind"]], "looprv (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.LoopRV"]], "opaque (tvm.tir.schedule.depkind attribute)": [[33, "tvm.tir.schedule.DepKind.OPAQUE"]], "raw (tvm.tir.schedule.depkind attribute)": [[33, "tvm.tir.schedule.DepKind.RAW"]], "schedule (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.Schedule"]], "scheduledebugmask (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.ScheduleDebugMask"]], "scheduleerror": [[33, "tvm.tir.schedule.ScheduleError"]], "schedulestate (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.ScheduleState"]], "stmtsref (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.StmtSRef"]], "trace (class in tvm.tir.schedule)": [[33, "tvm.tir.schedule.Trace"]], "verify_cached_flags (tvm.tir.schedule.scheduledebugmask attribute)": [[33, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_CACHED_FLAGS"]], "verify_sref_tree (tvm.tir.schedule.scheduledebugmask attribute)": [[33, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_SREF_TREE"]], "war (tvm.tir.schedule.depkind attribute)": [[33, "tvm.tir.schedule.DepKind.WAR"]], "waw (tvm.tir.schedule.depkind attribute)": [[33, "tvm.tir.schedule.DepKind.WAW"]], "add_unit_loop() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.add_unit_loop"]], "annotate() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.annotate"]], "append() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.append"]], "apply_json_to_schedule() (tvm.tir.schedule.trace static method)": [[33, "tvm.tir.schedule.Trace.apply_json_to_schedule"]], "apply_to_schedule() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.apply_to_schedule"]], "as_json() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.as_json"]], "as_python() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.as_python"]], "attrs (tvm.tir.schedule.instruction attribute)": [[33, "tvm.tir.schedule.Instruction.attrs"]], "bind() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.bind"]], "blockize() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.blockize"]], "cache_index() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.cache_index"]], "cache_inplace() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.cache_inplace"]], "cache_read() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.cache_read"]], "cache_write() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.cache_write"]], "can_decompose_padding() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.can_decompose_padding"]], "compute_at() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.compute_at"]], "compute_inline() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.compute_inline"]], "copy() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.copy"]], "decisions (tvm.tir.schedule.trace attribute)": [[33, "tvm.tir.schedule.Trace.decisions"]], "decompose_padding() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.decompose_padding"]], "decompose_reduction() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.decompose_reduction"]], "enter_postproc() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.enter_postproc"]], "fork_seed() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.fork_seed"]], "func_working_on (tvm.tir.schedule.schedule property)": [[33, "tvm.tir.schedule.Schedule.func_working_on"]], "fuse() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.fuse"]], "get() (tvm.tir.schedule.instructionkind static method)": [[33, "tvm.tir.schedule.InstructionKind.get"]], "get() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get"]], "get_block() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get_block"]], "get_block_scope() (tvm.tir.schedule.schedulestate method)": [[33, "tvm.tir.schedule.ScheduleState.get_block_scope"]], "get_child_blocks() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get_child_blocks"]], "get_consumers() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get_consumers"]], "get_decision() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.get_decision"]], "get_deps_by_dst() (tvm.tir.schedule.blockscope method)": [[33, "tvm.tir.schedule.BlockScope.get_deps_by_dst"]], "get_deps_by_src() (tvm.tir.schedule.blockscope method)": [[33, "tvm.tir.schedule.BlockScope.get_deps_by_src"]], "get_loops() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get_loops"]], "get_output_blocks() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get_output_blocks"]], "get_producers() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get_producers"]], "get_sref() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.get_sref"]], "get_sref() (tvm.tir.schedule.schedulestate method)": [[33, "tvm.tir.schedule.ScheduleState.get_sref"]], "inline_mark() (tvm.tir.schedule.stmtsref static method)": [[33, "tvm.tir.schedule.StmtSRef.inline_mark"]], "inputs (tvm.tir.schedule.instruction attribute)": [[33, "tvm.tir.schedule.Instruction.inputs"]], "insts (tvm.tir.schedule.trace attribute)": [[33, "tvm.tir.schedule.Trace.insts"]], "is_pure (tvm.tir.schedule.instructionkind property)": [[33, "tvm.tir.schedule.InstructionKind.is_pure"]], "kind (tvm.tir.schedule.instruction attribute)": [[33, "tvm.tir.schedule.Instruction.kind"]], "loop_partition() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.loop_partition"]], "merge() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.merge"]], "mod (tvm.tir.schedule.schedule property)": [[33, "tvm.tir.schedule.Schedule.mod"]], "name (tvm.tir.schedule.instructionkind attribute)": [[33, "tvm.tir.schedule.InstructionKind.name"]], "outputs (tvm.tir.schedule.instruction attribute)": [[33, "tvm.tir.schedule.Instruction.outputs"]], "pad_einsum() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.pad_einsum"]], "parallel() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.parallel"]], "parent (tvm.tir.schedule.stmtsref property)": [[33, "tvm.tir.schedule.StmtSRef.parent"]], "pop() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.pop"]], "reindex() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.reindex"]], "reindex_cache_read() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.reindex_cache_read"]], "reindex_cache_write() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.reindex_cache_write"]], "remove_rv() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.remove_rv"]], "reorder() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.reorder"]], "reorder_block_iter_var() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.reorder_block_iter_var"]], "replace() (tvm.tir.schedule.schedulestate method)": [[33, "tvm.tir.schedule.ScheduleState.replace"]], "reverse_compute_at() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.reverse_compute_at"]], "reverse_compute_inline() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.reverse_compute_inline"]], "rfactor() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.rfactor"]], "rolling_buffer() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.rolling_buffer"]], "root_mark() (tvm.tir.schedule.stmtsref static method)": [[33, "tvm.tir.schedule.StmtSRef.root_mark"]], "sample_categorical() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.sample_categorical"]], "sample_compute_location() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.sample_compute_location"]], "sample_partitioned_tile() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.sample_partitioned_tile"]], "sample_perfect_tile() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.sample_perfect_tile"]], "seed() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.seed"]], "set_axis_separator() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.set_axis_separator"]], "set_scope() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.set_scope"]], "show() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.show"]], "show() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.show"]], "simplified() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.simplified"]], "split() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.split"]], "state (tvm.tir.schedule.schedule property)": [[33, "tvm.tir.schedule.Schedule.state"]], "stmt (tvm.tir.schedule.stmtsref property)": [[33, "tvm.tir.schedule.StmtSRef.stmt"]], "storage_align() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.storage_align"]], "tensorize() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.tensorize"]], "trace (tvm.tir.schedule.schedule property)": [[33, "tvm.tir.schedule.Schedule.trace"]], "transform_block_layout() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.transform_block_layout"]], "transform_layout() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.transform_layout"]], "tvm.tir.schedule": [[33, "module-tvm.tir.schedule"]], "unannotate() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.unannotate"]], "unroll() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.unroll"]], "unsafe_hide_buffer_access() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.unsafe_hide_buffer_access"]], "unsafe_set_dtype() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.unsafe_set_dtype"]], "vectorize() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.vectorize"]], "with_decision() (tvm.tir.schedule.trace method)": [[33, "tvm.tir.schedule.Trace.with_decision"]], "work_on() (tvm.tir.schedule.schedule method)": [[33, "tvm.tir.schedule.Schedule.work_on"]], "ir_transform() (in module tvm.tir.stmt_functor)": [[34, "tvm.tir.stmt_functor.ir_transform"]], "post_order_visit() (in module tvm.tir.stmt_functor)": [[34, "tvm.tir.stmt_functor.post_order_visit"]], "pre_order_visit() (in module tvm.tir.stmt_functor)": [[34, "tvm.tir.stmt_functor.pre_order_visit"]], "renew_defs() (in module tvm.tir.stmt_functor)": [[34, "tvm.tir.stmt_functor.renew_defs"]], "substitute() (in module tvm.tir.stmt_functor)": [[34, "tvm.tir.stmt_functor.substitute"]], "tvm.tir.stmt_functor": [[34, "module-tvm.tir.stmt_functor"]], "add (class in tvm.tir)": [[35, "tvm.tir.Add"]], "allocate (class in tvm.tir)": [[35, "tvm.tir.Allocate"]], "allocateconst (class in tvm.tir)": [[35, "tvm.tir.AllocateConst"]], "and (class in tvm.tir)": [[35, "tvm.tir.And"]], "any (class in tvm.tir)": [[35, "tvm.tir.Any"]], "assertstmt (class in tvm.tir)": [[35, "tvm.tir.AssertStmt"]], "attrstmt (class in tvm.tir)": [[35, "tvm.tir.AttrStmt"]], "bijectivelayout (class in tvm.tir)": [[35, "tvm.tir.BijectiveLayout"]], "block (class in tvm.tir)": [[35, "tvm.tir.Block"]], "blockdependenceinfo (class in tvm.tir)": [[35, "tvm.tir.BlockDependenceInfo"]], "blockrealize (class in tvm.tir)": [[35, "tvm.tir.BlockRealize"]], "broadcast (class in tvm.tir)": [[35, "tvm.tir.Broadcast"]], "buffer (class in tvm.tir)": [[35, "tvm.tir.Buffer"]], "bufferload (class in tvm.tir)": [[35, "tvm.tir.BufferLoad"]], "bufferrealize (class in tvm.tir)": [[35, "tvm.tir.BufferRealize"]], "bufferregion (class in tvm.tir)": [[35, "tvm.tir.BufferRegion"]], "bufferstore (class in tvm.tir)": [[35, "tvm.tir.BufferStore"]], "call (class in tvm.tir)": [[35, "tvm.tir.Call"]], "calleffectkind (class in tvm.tir)": [[35, "tvm.tir.CallEffectKind"]], "cast (class in tvm.tir)": [[35, "tvm.tir.Cast"]], "commreducer (class in tvm.tir)": [[35, "tvm.tir.CommReducer"]], "dataproducer (class in tvm.tir)": [[35, "tvm.tir.DataProducer"]], "declbuffer (class in tvm.tir)": [[35, "tvm.tir.DeclBuffer"]], "div (class in tvm.tir)": [[35, "tvm.tir.Div"]], "eq (class in tvm.tir)": [[35, "tvm.tir.EQ"]], "evaluate (class in tvm.tir)": [[35, "tvm.tir.Evaluate"]], "floatimm (class in tvm.tir)": [[35, "tvm.tir.FloatImm"]], "floordiv (class in tvm.tir)": [[35, "tvm.tir.FloorDiv"]], "floormod (class in tvm.tir)": [[35, "tvm.tir.FloorMod"]], "for (class in tvm.tir)": [[35, "tvm.tir.For"]], "forkind (class in tvm.tir)": [[35, "tvm.tir.ForKind"]], "ge (class in tvm.tir)": [[35, "tvm.tir.GE"]], "gt (class in tvm.tir)": [[35, "tvm.tir.GT"]], "ifthenelse (class in tvm.tir)": [[35, "tvm.tir.IfThenElse"]], "indexmap (class in tvm.tir)": [[35, "tvm.tir.IndexMap"]], "intimm (class in tvm.tir)": [[35, "tvm.tir.IntImm"]], "itervar (class in tvm.tir)": [[35, "tvm.tir.IterVar"]], "le (class in tvm.tir)": [[35, "tvm.tir.LE"]], "lt (class in tvm.tir)": [[35, "tvm.tir.LT"]], "layout (class in tvm.tir)": [[35, "tvm.tir.Layout"]], "let (class in tvm.tir)": [[35, "tvm.tir.Let"]], "letstmt (class in tvm.tir)": [[35, "tvm.tir.LetStmt"]], "matchbufferregion (class in tvm.tir)": [[35, "tvm.tir.MatchBufferRegion"]], "max (class in tvm.tir)": [[35, "tvm.tir.Max"]], "min (class in tvm.tir)": [[35, "tvm.tir.Min"]], "mod (class in tvm.tir)": [[35, "tvm.tir.Mod"]], "mul (class in tvm.tir)": [[35, "tvm.tir.Mul"]], "ne (class in tvm.tir)": [[35, "tvm.tir.NE"]], "not (class in tvm.tir)": [[35, "tvm.tir.Not"]], "or (class in tvm.tir)": [[35, "tvm.tir.Or"]], "prefetch (class in tvm.tir)": [[35, "tvm.tir.Prefetch"]], "primfunc (class in tvm.tir)": [[35, "tvm.tir.PrimFunc"]], "producerload (class in tvm.tir)": [[35, "tvm.tir.ProducerLoad"]], "producerrealize (class in tvm.tir)": [[35, "tvm.tir.ProducerRealize"]], "producerstore (class in tvm.tir)": [[35, "tvm.tir.ProducerStore"]], "ramp (class in tvm.tir)": [[35, "tvm.tir.Ramp"]], "reduce (class in tvm.tir)": [[35, "tvm.tir.Reduce"]], "select (class in tvm.tir)": [[35, "tvm.tir.Select"]], "seqstmt (class in tvm.tir)": [[35, "tvm.tir.SeqStmt"]], "shuffle (class in tvm.tir)": [[35, "tvm.tir.Shuffle"]], "sizevar (class in tvm.tir)": [[35, "tvm.tir.SizeVar"]], "stmt (class in tvm.tir)": [[35, "tvm.tir.Stmt"]], "stringimm (class in tvm.tir)": [[35, "tvm.tir.StringImm"]], "sub (class in tvm.tir)": [[35, "tvm.tir.Sub"]], "tvmbackendallocworkspace() (in module tvm.tir)": [[35, "tvm.tir.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tvm.tir)": [[35, "tvm.tir.TVMBackendFreeWorkspace"]], "tensorintrin (class in tvm.tir)": [[35, "tvm.tir.TensorIntrin"]], "var (class in tvm.tir)": [[35, "tvm.tir.Var"]], "while (class in tvm.tir)": [[35, "tvm.tir.While"]], "abs() (in module tvm.tir)": [[35, "tvm.tir.abs"]], "access_ptr() (tvm.tir.buffer method)": [[35, "tvm.tir.Buffer.access_ptr"]], "acos() (in module tvm.tir)": [[35, "tvm.tir.acos"]], "acosh() (in module tvm.tir)": [[35, "tvm.tir.acosh"]], "add() (in module tvm.tir)": [[35, "tvm.tir.add"]], "address_of() (in module tvm.tir)": [[35, "tvm.tir.address_of"]], "all() (in module tvm.tir)": [[35, "tvm.tir.all"]], "any() (in module tvm.tir)": [[35, "tvm.tir.any"]], "asin() (in module tvm.tir)": [[35, "tvm.tir.asin"]], "asinh() (in module tvm.tir)": [[35, "tvm.tir.asinh"]], "assume() (in module tvm.tir)": [[35, "tvm.tir.assume"]], "atan() (in module tvm.tir)": [[35, "tvm.tir.atan"]], "atan2() (in module tvm.tir)": [[35, "tvm.tir.atan2"]], "atanh() (in module tvm.tir)": [[35, "tvm.tir.atanh"]], "backward_index() (tvm.tir.bijectivelayout method)": [[35, "tvm.tir.BijectiveLayout.backward_index"]], "backward_shape() (tvm.tir.bijectivelayout method)": [[35, "tvm.tir.BijectiveLayout.backward_shape"]], "bijective_layout() (in module tvm.tir)": [[35, "tvm.tir.bijective_layout"]], "bitwise_and() (in module tvm.tir)": [[35, "tvm.tir.bitwise_and"]], "bitwise_not() (in module tvm.tir)": [[35, "tvm.tir.bitwise_not"]], "bitwise_or() (in module tvm.tir)": [[35, "tvm.tir.bitwise_or"]], "bitwise_xor() (in module tvm.tir)": [[35, "tvm.tir.bitwise_xor"]], "call_cpacked() (in module tvm.tir)": [[35, "tvm.tir.call_cpacked"]], "call_cpacked_lowered() (in module tvm.tir)": [[35, "tvm.tir.call_cpacked_lowered"]], "call_extern() (in module tvm.tir)": [[35, "tvm.tir.call_extern"]], "call_intrin() (in module tvm.tir)": [[35, "tvm.tir.call_intrin"]], "call_llvm_intrin() (in module tvm.tir)": [[35, "tvm.tir.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tvm.tir)": [[35, "tvm.tir.call_llvm_pure_intrin"]], "call_packed() (in module tvm.tir)": [[35, "tvm.tir.call_packed"]], "call_packed_lowered() (in module tvm.tir)": [[35, "tvm.tir.call_packed_lowered"]], "call_pure_extern() (in module tvm.tir)": [[35, "tvm.tir.call_pure_extern"]], "call_tir() (in module tvm.tir)": [[35, "tvm.tir.call_tir"]], "ceil() (in module tvm.tir)": [[35, "tvm.tir.ceil"]], "ceildiv() (in module tvm.tir)": [[35, "tvm.tir.ceildiv"]], "clz() (in module tvm.tir)": [[35, "tvm.tir.clz"]], "comm_reducer() (in module tvm.tir)": [[35, "tvm.tir.comm_reducer"]], "copysign() (in module tvm.tir)": [[35, "tvm.tir.copysign"]], "cos() (in module tvm.tir)": [[35, "tvm.tir.cos"]], "cosh() (in module tvm.tir)": [[35, "tvm.tir.cosh"]], "create_barriers() (in module tvm.tir)": [[35, "tvm.tir.create_barriers"]], "decl_buffer() (in module tvm.tir)": [[35, "tvm.tir.decl_buffer"]], "div() (in module tvm.tir)": [[35, "tvm.tir.div"]], "end_profile_intrinsic() (in module tvm.tir)": [[35, "tvm.tir.end_profile_intrinsic"]], "erf() (in module tvm.tir)": [[35, "tvm.tir.erf"]], "exp() (in module tvm.tir)": [[35, "tvm.tir.exp"]], "exp10() (in module tvm.tir)": [[35, "tvm.tir.exp10"]], "exp2() (in module tvm.tir)": [[35, "tvm.tir.exp2"]], "factor_of() (tvm.tir.layout method)": [[35, "tvm.tir.Layout.factor_of"]], "floor() (in module tvm.tir)": [[35, "tvm.tir.floor"]], "floordiv() (in module tvm.tir)": [[35, "tvm.tir.floordiv"]], "floormod() (in module tvm.tir)": [[35, "tvm.tir.floormod"]], "fmod() (in module tvm.tir)": [[35, "tvm.tir.fmod"]], "forward_index() (tvm.tir.bijectivelayout method)": [[35, "tvm.tir.BijectiveLayout.forward_index"]], "forward_shape() (tvm.tir.bijectivelayout method)": [[35, "tvm.tir.BijectiveLayout.forward_shape"]], "from_func() (tvm.tir.indexmap static method)": [[35, "tvm.tir.IndexMap.from_func"]], "from_func_with_separators() (tvm.tir.indexmap static method)": [[35, "tvm.tir.IndexMap.from_func_with_separators"]], "get() (tvm.tir.tensorintrin static method)": [[35, "tvm.tir.TensorIntrin.get"]], "get_block_scope() (tvm.tir.blockdependenceinfo method)": [[35, "tvm.tir.BlockDependenceInfo.get_block_scope"]], "get_flattened_buffer() (tvm.tir.buffer method)": [[35, "tvm.tir.Buffer.get_flattened_buffer"]], "get_sref() (tvm.tir.blockdependenceinfo method)": [[35, "tvm.tir.BlockDependenceInfo.get_sref"]], "hypot() (in module tvm.tir)": [[35, "tvm.tir.hypot"]], "if_then_else() (in module tvm.tir)": [[35, "tvm.tir.if_then_else"]], "index_of() (tvm.tir.layout method)": [[35, "tvm.tir.Layout.index_of"]], "indexdiv() (in module tvm.tir)": [[35, "tvm.tir.indexdiv"]], "indexmod() (in module tvm.tir)": [[35, "tvm.tir.indexmod"]], "infinity() (in module tvm.tir)": [[35, "tvm.tir.infinity"]], "inverse() (tvm.tir.indexmap method)": [[35, "tvm.tir.IndexMap.inverse"]], "is_equivalent_to() (tvm.tir.indexmap method)": [[35, "tvm.tir.IndexMap.is_equivalent_to"]], "isfinite() (in module tvm.tir)": [[35, "tvm.tir.isfinite"]], "isinf() (in module tvm.tir)": [[35, "tvm.tir.isinf"]], "isnan() (in module tvm.tir)": [[35, "tvm.tir.isnan"]], "isnullptr() (in module tvm.tir)": [[35, "tvm.tir.isnullptr"]], "layout() (in module tvm.tir)": [[35, "tvm.tir.layout"]], "ldexp() (in module tvm.tir)": [[35, "tvm.tir.ldexp"]], "likely() (in module tvm.tir)": [[35, "tvm.tir.likely"]], "log() (in module tvm.tir)": [[35, "tvm.tir.log"]], "log10() (in module tvm.tir)": [[35, "tvm.tir.log10"]], "log1p() (in module tvm.tir)": [[35, "tvm.tir.log1p"]], "log2() (in module tvm.tir)": [[35, "tvm.tir.log2"]], "lookup_param() (in module tvm.tir)": [[35, "tvm.tir.lookup_param"]], "map_indices() (tvm.tir.indexmap method)": [[35, "tvm.tir.IndexMap.map_indices"]], "map_ndarray() (tvm.tir.indexmap method)": [[35, "tvm.tir.IndexMap.map_ndarray"]], "map_shape() (tvm.tir.indexmap method)": [[35, "tvm.tir.IndexMap.map_shape"]], "max() (in module tvm.tir)": [[35, "tvm.tir.max"]], "max_value() (in module tvm.tir)": [[35, "tvm.tir.max_value"]], "min() (in module tvm.tir)": [[35, "tvm.tir.min"]], "min_value() (in module tvm.tir)": [[35, "tvm.tir.min_value"]], "mma_fill() (in module tvm.tir)": [[35, "tvm.tir.mma_fill"]], "mma_store() (in module tvm.tir)": [[35, "tvm.tir.mma_store"]], "multiply() (in module tvm.tir)": [[35, "tvm.tir.multiply"]], "nearbyint() (in module tvm.tir)": [[35, "tvm.tir.nearbyint"]], "nextafter() (in module tvm.tir)": [[35, "tvm.tir.nextafter"]], "non_surjective_inverse() (tvm.tir.indexmap method)": [[35, "tvm.tir.IndexMap.non_surjective_inverse"]], "offset_of() (tvm.tir.buffer method)": [[35, "tvm.tir.Buffer.offset_of"]], "popcount() (in module tvm.tir)": [[35, "tvm.tir.popcount"]], "pow() (in module tvm.tir)": [[35, "tvm.tir.pow"]], "power() (in module tvm.tir)": [[35, "tvm.tir.power"]], "ptx_arrive_barrier() (in module tvm.tir)": [[35, "tvm.tir.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tvm.tir)": [[35, "tvm.tir.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tvm.tir)": [[35, "tvm.tir.ptx_commit_group"]], "ptx_cp_async() (in module tvm.tir)": [[35, "tvm.tir.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tvm.tir)": [[35, "tvm.tir.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tvm.tir)": [[35, "tvm.tir.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tvm.tir)": [[35, "tvm.tir.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tvm.tir)": [[35, "tvm.tir.ptx_ldmatrix"]], "ptx_mma() (in module tvm.tir)": [[35, "tvm.tir.ptx_mma"]], "ptx_mma_sp() (in module tvm.tir)": [[35, "tvm.tir.ptx_mma_sp"]], "ptx_wait_barrier() (in module tvm.tir)": [[35, "tvm.tir.ptx_wait_barrier"]], "ptx_wait_group() (in module tvm.tir)": [[35, "tvm.tir.ptx_wait_group"]], "q_multiply_shift() (in module tvm.tir)": [[35, "tvm.tir.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tvm.tir)": [[35, "tvm.tir.q_multiply_shift_per_axis"]], "register() (tvm.tir.tensorintrin static method)": [[35, "tvm.tir.TensorIntrin.register"]], "reinterpret() (in module tvm.tir)": [[35, "tvm.tir.reinterpret"]], "ret() (in module tvm.tir)": [[35, "tvm.tir.ret"]], "round() (in module tvm.tir)": [[35, "tvm.tir.round"]], "rsqrt() (in module tvm.tir)": [[35, "tvm.tir.rsqrt"]], "scope() (tvm.tir.buffer method)": [[35, "tvm.tir.Buffer.scope"]], "shift_left() (in module tvm.tir)": [[35, "tvm.tir.shift_left"]], "shift_right() (in module tvm.tir)": [[35, "tvm.tir.shift_right"]], "sigmoid() (in module tvm.tir)": [[35, "tvm.tir.sigmoid"]], "sin() (in module tvm.tir)": [[35, "tvm.tir.sin"]], "sinh() (in module tvm.tir)": [[35, "tvm.tir.sinh"]], "specialize() (tvm.tir.primfunc method)": [[35, "tvm.tir.PrimFunc.specialize"]], "sqrt() (in module tvm.tir)": [[35, "tvm.tir.sqrt"]], "start_profile_intrinsic() (in module tvm.tir)": [[35, "tvm.tir.start_profile_intrinsic"]], "stmt_list() (in module tvm.tir)": [[35, "tvm.tir.stmt_list"]], "stmt_seq() (in module tvm.tir)": [[35, "tvm.tir.stmt_seq"]], "subtract() (in module tvm.tir)": [[35, "tvm.tir.subtract"]], "sum() (in module tvm.tir)": [[35, "tvm.tir.sum"]], "tan() (in module tvm.tir)": [[35, "tvm.tir.tan"]], "tanh() (in module tvm.tir)": [[35, "tvm.tir.tanh"]], "trace() (in module tvm.tir)": [[35, "tvm.tir.trace"]], "trunc() (in module tvm.tir)": [[35, "tvm.tir.trunc"]], "truncdiv() (in module tvm.tir)": [[35, "tvm.tir.truncdiv"]], "truncmod() (in module tvm.tir)": [[35, "tvm.tir.truncmod"]], "tvm.tir": [[35, "module-tvm.tir"]], "tvm_access_ptr() (in module tvm.tir)": [[35, "tvm.tir.tvm_access_ptr"]], "tvm_bmma_sync() (in module tvm.tir)": [[35, "tvm.tir.tvm_bmma_sync"]], "tvm_check_return() (in module tvm.tir)": [[35, "tvm.tir.tvm_check_return"]], "tvm_fill_fragment() (in module tvm.tir)": [[35, "tvm.tir.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tvm.tir)": [[35, "tvm.tir.tvm_load_matrix_sync"]], "tvm_mma_sync() (in module tvm.tir)": [[35, "tvm.tir.tvm_mma_sync"]], "tvm_stack_alloca() (in module tvm.tir)": [[35, "tvm.tir.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tvm.tir)": [[35, "tvm.tir.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tvm.tir)": [[35, "tvm.tir.tvm_stack_make_shape"]], "tvm_store_matrix_sync() (in module tvm.tir)": [[35, "tvm.tir.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tvm.tir)": [[35, "tvm.tir.tvm_struct_get"]], "tvm_struct_set() (in module tvm.tir)": [[35, "tvm.tir.tvm_struct_set"]], "tvm_thread_allreduce() (in module tvm.tir)": [[35, "tvm.tir.tvm_thread_allreduce"]], "tvm_throw_last_error() (in module tvm.tir)": [[35, "tvm.tir.tvm_throw_last_error"]], "tvm_tuple() (in module tvm.tir)": [[35, "tvm.tir.tvm_tuple"]], "type_annotation() (in module tvm.tir)": [[35, "tvm.tir.type_annotation"]], "undef() (in module tvm.tir)": [[35, "tvm.tir.undef"]], "vectorcombine() (in module tvm.tir)": [[35, "tvm.tir.vectorcombine"]], "vectorhigh() (in module tvm.tir)": [[35, "tvm.tir.vectorhigh"]], "vectorlow() (in module tvm.tir)": [[35, "tvm.tir.vectorlow"]], "vload() (tvm.tir.buffer method)": [[35, "tvm.tir.Buffer.vload"]], "vstore() (tvm.tir.buffer method)": [[35, "tvm.tir.Buffer.vstore"]], "with_body() (tvm.tir.primfunc method)": [[35, "tvm.tir.PrimFunc.with_body"]], "all (tvm.tir.transform.hoistedconditionals attribute)": [[36, "tvm.tir.transform.HoistedConditionals.All"]], "all (tvm.tir.transform.hoistedletbindings attribute)": [[36, "tvm.tir.transform.HoistedLetBindings.All"]], "annotatedeviceregions() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.AnnotateDeviceRegions"]], "annotateentryfunc() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.AnnotateEntryFunc"]], "apply() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.Apply"]], "applylayouttransforms() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ApplyLayoutTransforms"]], "bf16computelegalize() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.BF16ComputeLegalize"]], "bf16storagelegalize() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.BF16StorageLegalize"]], "bindtarget() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.BindTarget"]], "booleanexpression (tvm.tir.transform.hoistedconditionals attribute)": [[36, "tvm.tir.transform.HoistedConditionals.BooleanExpression"]], "coprocsync() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.CoProcSync"]], "combinecontextcall() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.CombineContextCall"]], "commonsubexprelimtir() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.CommonSubexprElimTIR"]], "compactbufferallocation() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.CompactBufferAllocation"]], "convertblockstoopaque() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ConvertBlocksToOpaque"]], "convertforloopstoserial() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ConvertForLoopsToSerial"]], "convertssa() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ConvertSSA"]], "decoratedevicescope() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.DecorateDeviceScope"]], "defaultgpuschedule() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.DefaultGPUSchedule"]], "extractprimfuncconstants() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ExtractPrimFuncConstants"]], "fp8computelegalize() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.FP8ComputeLegalize"]], "fp8storagelegalize() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.FP8StorageLegalize"]], "filter() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.Filter"]], "flattenbuffer() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.FlattenBuffer"]], "forcenarrowindextoint32() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ForceNarrowIndexToInt32"]], "hoistexpression() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.HoistExpression"]], "hoistifthenelse() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.HoistIfThenElse"]], "hoistedconditionals (class in tvm.tir.transform)": [[36, "tvm.tir.transform.HoistedConditionals"]], "hoistedletbindings (class in tvm.tir.transform)": [[36, "tvm.tir.transform.HoistedLetBindings"]], "ifelseexpr (tvm.tir.transform.hoistedconditionals attribute)": [[36, "tvm.tir.transform.HoistedConditionals.IfElseExpr"]], "ifelsestmt (tvm.tir.transform.hoistedconditionals attribute)": [[36, "tvm.tir.transform.HoistedConditionals.IfElseStmt"]], "inferfragment() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InferFragment"]], "injectcopyintrin() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectCopyIntrin"]], "injectdoublebuffer() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectDoubleBuffer"]], "injectptxasynccopy() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectPTXAsyncCopy"]], "injectpermutedlayout() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectPermutedLayout"]], "injectprefetch() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectPrefetch"]], "injectrollingbuffer() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectRollingBuffer"]], "injectsoftwarepipeline() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectSoftwarePipeline"]], "injectvirtualthread() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InjectVirtualThread"]], "inlineprivatefunctions() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InlinePrivateFunctions"]], "installdebugspans() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InstallDebugSpans"]], "instrumentboundcheckers() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InstrumentBoundCheckers"]], "instrumentprofileintrinsics() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.InstrumentProfileIntrinsics"]], "legalizepackedcalls() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LegalizePackedCalls"]], "letexpr (tvm.tir.transform.hoistedletbindings attribute)": [[36, "tvm.tir.transform.HoistedLetBindings.LetExpr"]], "letstmt (tvm.tir.transform.hoistedletbindings attribute)": [[36, "tvm.tir.transform.HoistedLetBindings.LetStmt"]], "liftattrscope() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LiftAttrScope"]], "liftthreadbinding() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LiftThreadBinding"]], "looppartition() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LoopPartition"]], "lowerautocopy() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerAutoCopy"]], "lowercrossthreadreduction() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerCrossThreadReduction"]], "lowercustomdatatypes() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerCustomDatatypes"]], "lowerdevicekernellaunch() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerDeviceKernelLaunch"]], "lowerdevicestorageaccessinfo() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerDeviceStorageAccessInfo"]], "lowerinitblock() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerInitBlock"]], "lowerintrin() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerIntrin"]], "lowermatchbuffer() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerMatchBuffer"]], "loweropaqueblock() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerOpaqueBlock"]], "lowertvmbuiltin() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerTVMBuiltin"]], "lowerthreadallreduce() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerThreadAllreduce"]], "lowerwarpmemory() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.LowerWarpMemory"]], "makepackedapi() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.MakePackedAPI"]], "makeunpackedapi() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.MakeUnpackedAPI"]], "manifestsharedmemorylocalstage() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ManifestSharedMemoryLocalStage"]], "mergesharedmemoryallocations() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.MergeSharedMemoryAllocations"]], "narrowdatatype() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.NarrowDataType"]], "never (tvm.tir.transform.hoistedconditionals attribute)": [[36, "tvm.tir.transform.HoistedConditionals.Never"]], "never (tvm.tir.transform.hoistedletbindings attribute)": [[36, "tvm.tir.transform.HoistedLetBindings.Never"]], "planandupdatebufferallocationlocation() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.PlanAndUpdateBufferAllocationLocation"]], "pointervaluetyperewrite() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.PointerValueTypeRewrite"]], "primfuncpass (class in tvm.tir.transform)": [[36, "tvm.tir.transform.PrimFuncPass"]], "reducebranchingthroughovercompute() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ReduceBranchingThroughOvercompute"]], "removeassume() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.RemoveAssume"]], "removenoop() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.RemoveNoOp"]], "removestoreundef() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.RemoveStoreUndef"]], "removeweightlayoutrewriteblock() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.RemoveWeightLayoutRewriteBlock"]], "renormalizesplitpattern() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.RenormalizeSplitPattern"]], "requiredbyconditional (tvm.tir.transform.hoistedletbindings attribute)": [[36, "tvm.tir.transform.HoistedLetBindings.RequiredByConditional"]], "rewriteunsafeselect() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.RewriteUnsafeSelect"]], "simplify() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.Simplify"]], "skipassert() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.SkipAssert"]], "splithostdevice() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.SplitHostDevice"]], "storageflatten() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.StorageFlatten"]], "storagerewrite() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.StorageRewrite"]], "textureflatten() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.TextureFlatten"]], "threadsync() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.ThreadSync"]], "transformmmabufferlayout() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.TransformMmaBufferLayout"]], "unifythreadbinding() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.UnifyThreadBinding"]], "unrollloop() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.UnrollLoop"]], "usingblockvar (tvm.tir.transform.hoistedconditionals attribute)": [[36, "tvm.tir.transform.HoistedConditionals.UsingBlockVar"]], "vectorizeloop() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.VectorizeLoop"]], "verifymemory() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.VerifyMemory"]], "verifyvtcmlimit() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.VerifyVTCMLimit"]], "prim_func_pass() (in module tvm.tir.transform)": [[36, "tvm.tir.transform.prim_func_pass"]], "tvm.tir.transform": [[36, "module-tvm.tir.transform"]], "invalidshapeerror": [[37, "tvm.topi.InvalidShapeError"]], "workload (class in tvm.topi.nn)": [[37, "tvm.topi.nn.Workload"]], "abs() (in module tvm.topi)": [[37, "tvm.topi.abs"]], "acos() (in module tvm.topi)": [[37, "tvm.topi.acos"]], "acosh() (in module tvm.topi)": [[37, "tvm.topi.acosh"]], "adaptive_pool() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.adaptive_pool"]], "adaptive_pool3d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.adaptive_pool3d"]], "add() (in module tvm.topi)": [[37, "tvm.topi.add"]], "add() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.add"]], "add_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.add_alter_layout"]], "adv_index() (in module tvm.topi)": [[37, "tvm.topi.adv_index"]], "affine_grid() (in module tvm.topi.image)": [[37, "tvm.topi.image.affine_grid"]], "all() (in module tvm.topi)": [[37, "tvm.topi.all"]], "any() (in module tvm.topi)": [[37, "tvm.topi.any"]], "arange() (in module tvm.topi)": [[37, "tvm.topi.arange"]], "argmax() (in module tvm.topi)": [[37, "tvm.topi.argmax"]], "argmin() (in module tvm.topi)": [[37, "tvm.topi.argmin"]], "argsort() (in module tvm.topi)": [[37, "tvm.topi.argsort"]], "argwhere() (in module tvm.topi)": [[37, "tvm.topi.argwhere"]], "asin() (in module tvm.topi)": [[37, "tvm.topi.asin"]], "asinh() (in module tvm.topi)": [[37, "tvm.topi.asinh"]], "atan() (in module tvm.topi)": [[37, "tvm.topi.atan"]], "atanh() (in module tvm.topi)": [[37, "tvm.topi.atanh"]], "batch_matmul() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.batch_matmul"]], "batch_matmul_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.batch_matmul_legalize"]], "batch_norm() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.batch_norm"]], "batch_to_space_nd() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.batch_to_space_nd"]], "bias_add_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.bias_add_legalize"]], "binarize_pack() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.binarize_pack"]], "binary_dense() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.binary_dense"]], "binary_search() (in module tvm.topi)": [[37, "tvm.topi.binary_search"]], "bitpack() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.bitpack"]], "bitserial_conv2d_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.bitserial_conv2d_legalize"]], "bitserial_conv2d_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.bitserial_conv2d_nchw"]], "bitserial_conv2d_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.bitserial_conv2d_nhwc"]], "bitserial_dense() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.bitserial_dense"]], "bitwise_and() (in module tvm.topi)": [[37, "tvm.topi.bitwise_and"]], "bitwise_not() (in module tvm.topi)": [[37, "tvm.topi.bitwise_not"]], "bitwise_or() (in module tvm.topi)": [[37, "tvm.topi.bitwise_or"]], "bitwise_xor() (in module tvm.topi)": [[37, "tvm.topi.bitwise_xor"]], "broadcast_to() (in module tvm.topi)": [[37, "tvm.topi.broadcast_to"]], "can_convert_multiply_to_intdiv() (in module tvm.topi.image)": [[37, "tvm.topi.image.can_convert_multiply_to_intdiv"]], "cast() (in module tvm.topi)": [[37, "tvm.topi.cast"]], "ceil() (in module tvm.topi)": [[37, "tvm.topi.ceil"]], "ceil_log2() (in module tvm.topi)": [[37, "tvm.topi.ceil_log2"]], "clip() (in module tvm.topi)": [[37, "tvm.topi.clip"]], "collapse_sum() (in module tvm.topi)": [[37, "tvm.topi.collapse_sum"]], "concatenate() (in module tvm.topi)": [[37, "tvm.topi.concatenate"]], "concatenate() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.concatenate"]], "const_vector() (in module tvm.topi)": [[37, "tvm.topi.const_vector"]], "conv() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv"]], "conv1d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv1d"]], "conv1d_ncw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv1d_ncw"]], "conv1d_nwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv1d_nwc"]], "conv1d_transpose_ncw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv1d_transpose_ncw"]], "conv2d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d"]], "conv2d_nchwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_NCHWc"]], "conv2d_nchwc_int8() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_NCHWc_int8"]], "conv2d_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_alter_layout"]], "conv2d_gemm_weight_transform() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_gemm_weight_transform"]], "conv2d_hwcn() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_hwcn"]], "conv2d_infer_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_infer_layout"]], "conv2d_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_legalize"]], "conv2d_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_nchw"]], "conv2d_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_nhwc"]], "conv2d_transpose_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_transpose_alter_layout"]], "conv2d_transpose_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_transpose_legalize"]], "conv2d_transpose_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_transpose_nchw"]], "conv2d_transpose_nchw_preprocess() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_transpose_nchw_preprocess"]], "conv2d_winograd_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_winograd_nchw"]], "conv2d_winograd_nchw_without_weight_transform() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_winograd_nchw_without_weight_transform"]], "conv2d_winograd_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_winograd_nhwc"]], "conv2d_winograd_nhwc_without_weight_transform() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_winograd_nhwc_without_weight_transform"]], "conv2d_winograd_nnpack_weight_transform() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_winograd_nnpack_weight_transform"]], "conv2d_winograd_weight_transform() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv2d_winograd_weight_transform"]], "conv3d_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv3d_alter_layout"]], "conv3d_ncdhw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv3d_ncdhw"]], "conv3d_ndhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv3d_ndhwc"]], "conv3d_transpose_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv3d_transpose_legalize"]], "conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv3d_transpose_ncdhw"]], "conv3d_transpose_ncdhw_preprocess() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv3d_transpose_ncdhw_preprocess"]], "conv3d_winograd_weight_transform() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.conv3d_winograd_weight_transform"]], "correlation_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.correlation_nchw"]], "cos() (in module tvm.topi)": [[37, "tvm.topi.cos"]], "cosh() (in module tvm.topi)": [[37, "tvm.topi.cosh"]], "crop_and_resize() (in module tvm.topi.image)": [[37, "tvm.topi.image.crop_and_resize"]], "csrmm() (in module tvm.topi.sparse)": [[37, "tvm.topi.sparse.csrmm"]], "csrmv() (in module tvm.topi.sparse)": [[37, "tvm.topi.sparse.csrmv"]], "cumprod() (in module tvm.topi)": [[37, "tvm.topi.cumprod"]], "cumsum() (in module tvm.topi)": [[37, "tvm.topi.cumsum"]], "decl_buffer() (in module tvm.topi)": [[37, "tvm.topi.decl_buffer"]], "declaration_conv2d_transpose_impl() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.declaration_conv2d_transpose_impl"]], "declaration_conv3d_transpose_impl() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.declaration_conv3d_transpose_impl"]], "deformable_conv2d_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.deformable_conv2d_nchw"]], "deformable_conv2d_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.deformable_conv2d_nhwc"]], "dense() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.dense"]], "dense() (in module tvm.topi.sparse)": [[37, "tvm.topi.sparse.dense"]], "dense_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.dense_alter_layout"]], "dense_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.dense_legalize"]], "dense_pack() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.dense_pack"]], "depth_to_space() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.depth_to_space"]], "depthwise_conv2d_nchwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.depthwise_conv2d_NCHWc"]], "depthwise_conv2d_backward_input_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.depthwise_conv2d_backward_input_nhwc"]], "depthwise_conv2d_backward_weight_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.depthwise_conv2d_backward_weight_nhwc"]], "depthwise_conv2d_infer_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.depthwise_conv2d_infer_layout"]], "depthwise_conv2d_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.depthwise_conv2d_nchw"]], "depthwise_conv2d_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.depthwise_conv2d_nhwc"]], "dft() (in module tvm.topi)": [[37, "tvm.topi.dft"]], "dilate() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.dilate"]], "dilation2d_nchw() (in module tvm.topi.image)": [[37, "tvm.topi.image.dilation2d_nchw"]], "dilation2d_nhwc() (in module tvm.topi.image)": [[37, "tvm.topi.image.dilation2d_nhwc"]], "dilation_h (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.dilation_h"]], "dilation_w (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.dilation_w"]], "div() (in module tvm.topi)": [[37, "tvm.topi.div"]], "divide() (in module tvm.topi)": [[37, "tvm.topi.divide"]], "dynamic_strided_slice() (in module tvm.topi)": [[37, "tvm.topi.dynamic_strided_slice"]], "einsum() (in module tvm.topi)": [[37, "tvm.topi.einsum"]], "elemwise_sum() (in module tvm.topi)": [[37, "tvm.topi.elemwise_sum"]], "equal() (in module tvm.topi)": [[37, "tvm.topi.equal"]], "equal_const_int() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.equal_const_int"]], "erf() (in module tvm.topi)": [[37, "tvm.topi.erf"]], "erf_legalize() (in module tvm.topi)": [[37, "tvm.topi.erf_legalize"]], "exp() (in module tvm.topi)": [[37, "tvm.topi.exp"]], "expand_dims() (in module tvm.topi)": [[37, "tvm.topi.expand_dims"]], "expand_like() (in module tvm.topi)": [[37, "tvm.topi.expand_like"]], "extern() (in module tvm.topi)": [[37, "tvm.topi.extern"]], "fast_erf() (in module tvm.topi)": [[37, "tvm.topi.fast_erf"]], "fast_exp() (in module tvm.topi)": [[37, "tvm.topi.fast_exp"]], "fast_softmax() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.fast_softmax"]], "fast_tanh() (in module tvm.topi)": [[37, "tvm.topi.fast_tanh"]], "fifo_buffer() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.fifo_buffer"]], "fixed_point_multiply() (in module tvm.topi)": [[37, "tvm.topi.fixed_point_multiply"]], "fixed_point_multiply_per_axis() (in module tvm.topi)": [[37, "tvm.topi.fixed_point_multiply_per_axis"]], "flatten() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.flatten"]], "flip() (in module tvm.topi)": [[37, "tvm.topi.flip"]], "floor() (in module tvm.topi)": [[37, "tvm.topi.floor"]], "floor_divide() (in module tvm.topi)": [[37, "tvm.topi.floor_divide"]], "floor_mod() (in module tvm.topi)": [[37, "tvm.topi.floor_mod"]], "floordiv() (in module tvm.topi)": [[37, "tvm.topi.floordiv"]], "floormod() (in module tvm.topi)": [[37, "tvm.topi.floormod"]], "full() (in module tvm.topi)": [[37, "tvm.topi.full"]], "full_like() (in module tvm.topi)": [[37, "tvm.topi.full_like"]], "gather() (in module tvm.topi)": [[37, "tvm.topi.gather"]], "gather_nd() (in module tvm.topi)": [[37, "tvm.topi.gather_nd"]], "get_1d_indices() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_1d_indices"]], "get_1d_pixel() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_1d_pixel"]], "get_2d_indices() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_2d_indices"]], "get_2d_pixel() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_2d_pixel"]], "get_3d_indices() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_3d_indices"]], "get_3d_pixel() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_3d_pixel"]], "get_closest_index() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_closest_index"]], "get_const_int() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.get_const_int"]], "get_const_tuple() (in module tvm.topi)": [[37, "tvm.topi.get_const_tuple"]], "get_const_tuple() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.get_const_tuple"]], "get_inx() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_inx"]], "get_pad_tuple() (in module tvm.topi.image)": [[37, "tvm.topi.image.get_pad_tuple"]], "get_pad_tuple() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.get_pad_tuple"]], "get_pad_tuple1d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.get_pad_tuple1d"]], "get_pad_tuple3d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.get_pad_tuple3d"]], "get_pad_tuple_generic() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.get_pad_tuple_generic"]], "global_pool() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.global_pool"]], "greater() (in module tvm.topi)": [[37, "tvm.topi.greater"]], "greater_equal() (in module tvm.topi)": [[37, "tvm.topi.greater_equal"]], "grid_sample() (in module tvm.topi.image)": [[37, "tvm.topi.image.grid_sample"]], "group_conv1d_ncw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_conv1d_ncw"]], "group_conv1d_nwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_conv1d_nwc"]], "group_conv1d_transpose_ncw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_conv1d_transpose_ncw"]], "group_conv2d_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_conv2d_nchw"]], "group_conv2d_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_conv2d_nhwc"]], "group_conv2d_transpose_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_conv2d_transpose_nchw"]], "group_conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_conv3d_transpose_ncdhw"]], "group_norm() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.group_norm"]], "height (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.height"]], "hybrid_argwhere_1d() (in module tvm.topi)": [[37, "tvm.topi.hybrid_argwhere_1d"]], "hybrid_argwhere_2d() (in module tvm.topi)": [[37, "tvm.topi.hybrid_argwhere_2d"]], "hybrid_argwhere_3d() (in module tvm.topi)": [[37, "tvm.topi.hybrid_argwhere_3d"]], "hybrid_argwhere_4d() (in module tvm.topi)": [[37, "tvm.topi.hybrid_argwhere_4d"]], "hybrid_argwhere_5d() (in module tvm.topi)": [[37, "tvm.topi.hybrid_argwhere_5d"]], "identity() (in module tvm.topi)": [[37, "tvm.topi.identity"]], "in_dtype (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.in_dtype"]], "in_filter (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.in_filter"]], "instance_norm() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.instance_norm"]], "invert_permutation() (in module tvm.topi)": [[37, "tvm.topi.invert_permutation"]], "isfinite() (in module tvm.topi)": [[37, "tvm.topi.isfinite"]], "isinf() (in module tvm.topi)": [[37, "tvm.topi.isinf"]], "isnan() (in module tvm.topi)": [[37, "tvm.topi.isnan"]], "kernel_h (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.kernel_h"]], "kernel_w (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.kernel_w"]], "layer_norm() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.layer_norm"]], "layout_transform() (in module tvm.topi)": [[37, "tvm.topi.layout_transform"]], "layout_transform() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.layout_transform"]], "leaky_relu() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.leaky_relu"]], "left_shift() (in module tvm.topi)": [[37, "tvm.topi.left_shift"]], "less() (in module tvm.topi)": [[37, "tvm.topi.less"]], "less_equal() (in module tvm.topi)": [[37, "tvm.topi.less_equal"]], "log() (in module tvm.topi)": [[37, "tvm.topi.log"]], "log10() (in module tvm.topi)": [[37, "tvm.topi.log10"]], "log2() (in module tvm.topi)": [[37, "tvm.topi.log2"]], "log_softmax() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.log_softmax"]], "logical_and() (in module tvm.topi)": [[37, "tvm.topi.logical_and"]], "logical_not() (in module tvm.topi)": [[37, "tvm.topi.logical_not"]], "logical_or() (in module tvm.topi)": [[37, "tvm.topi.logical_or"]], "logical_xor() (in module tvm.topi)": [[37, "tvm.topi.logical_xor"]], "lrn() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.lrn"]], "lstm() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.lstm"]], "make_idx() (in module tvm.topi)": [[37, "tvm.topi.make_idx"]], "matmul() (in module tvm.topi)": [[37, "tvm.topi.matmul"]], "matmul() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.matmul"]], "matmul_legalize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.matmul_legalize"]], "matrix_set_diag() (in module tvm.topi)": [[37, "tvm.topi.matrix_set_diag"]], "max() (in module tvm.topi)": [[37, "tvm.topi.max"]], "maximum() (in module tvm.topi)": [[37, "tvm.topi.maximum"]], "meshgrid() (in module tvm.topi)": [[37, "tvm.topi.meshgrid"]], "min() (in module tvm.topi)": [[37, "tvm.topi.min"]], "minimum() (in module tvm.topi)": [[37, "tvm.topi.minimum"]], "mirror_pad() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.mirror_pad"]], "mod() (in module tvm.topi)": [[37, "tvm.topi.mod"]], "multiply() (in module tvm.topi)": [[37, "tvm.topi.multiply"]], "namedtuple() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.namedtuple"]], "nchw_pack_layout() (in module tvm.topi.image)": [[37, "tvm.topi.image.nchw_pack_layout"]], "nchw_xc_layout() (in module tvm.topi.image)": [[37, "tvm.topi.image.nchw_xc_layout"]], "ndarray_size() (in module tvm.topi)": [[37, "tvm.topi.ndarray_size"]], "negative() (in module tvm.topi)": [[37, "tvm.topi.negative"]], "nll_loss() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.nll_loss"]], "not_equal() (in module tvm.topi)": [[37, "tvm.topi.not_equal"]], "one_hot() (in module tvm.topi)": [[37, "tvm.topi.one_hot"]], "out_dtype (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.out_dtype"]], "out_filter (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.out_filter"]], "pad() (in module tvm.topi.image)": [[37, "tvm.topi.image.pad"]], "pad() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.pad"]], "padb (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.padb"]], "padl (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.padl"]], "padr (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.padr"]], "padt (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.padt"]], "pool1d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.pool1d"]], "pool2d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.pool2d"]], "pool3d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.pool3d"]], "pool_grad() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.pool_grad"]], "power() (in module tvm.topi)": [[37, "tvm.topi.power"]], "prelu() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.prelu"]], "prod() (in module tvm.topi)": [[37, "tvm.topi.prod"]], "qnn_conv2d_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.qnn_conv2d_alter_layout"]], "qnn_dense_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.qnn_dense_alter_layout"]], "qnn_requantize_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.qnn_requantize_alter_layout"]], "reduce() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.reduce"]], "reinterpret() (in module tvm.topi)": [[37, "tvm.topi.reinterpret"]], "relu() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.relu"]], "repeat() (in module tvm.topi)": [[37, "tvm.topi.repeat"]], "reshape() (in module tvm.topi)": [[37, "tvm.topi.reshape"]], "resize1d() (in module tvm.topi.image)": [[37, "tvm.topi.image.resize1d"]], "resize2d() (in module tvm.topi.image)": [[37, "tvm.topi.image.resize2d"]], "resize3d() (in module tvm.topi.image)": [[37, "tvm.topi.image.resize3d"]], "reverse_sequence() (in module tvm.topi)": [[37, "tvm.topi.reverse_sequence"]], "right_shift() (in module tvm.topi)": [[37, "tvm.topi.right_shift"]], "rms_norm() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.rms_norm"]], "round() (in module tvm.topi)": [[37, "tvm.topi.round"]], "rsqrt() (in module tvm.topi)": [[37, "tvm.topi.rsqrt"]], "scale_shift_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.scale_shift_nchw"]], "scale_shift_nchwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.scale_shift_nchwc"]], "scale_shift_nhwc() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.scale_shift_nhwc"]], "scanop() (in module tvm.topi)": [[37, "tvm.topi.scanop"]], "scatter_elements() (in module tvm.topi)": [[37, "tvm.topi.scatter_elements"]], "scatter_nd() (in module tvm.topi)": [[37, "tvm.topi.scatter_nd"]], "searchsorted() (in module tvm.topi)": [[37, "tvm.topi.searchsorted"]], "sequence_mask() (in module tvm.topi)": [[37, "tvm.topi.sequence_mask"]], "shape() (in module tvm.topi)": [[37, "tvm.topi.shape"]], "sigmoid() (in module tvm.topi)": [[37, "tvm.topi.sigmoid"]], "sign() (in module tvm.topi)": [[37, "tvm.topi.sign"]], "simplify() (in module tvm.topi.image)": [[37, "tvm.topi.image.simplify"]], "simplify() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.simplify"]], "simulated_dequantize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.simulated_dequantize"]], "simulated_quantize() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.simulated_quantize"]], "sin() (in module tvm.topi)": [[37, "tvm.topi.sin"]], "sinh() (in module tvm.topi)": [[37, "tvm.topi.sinh"]], "sliding_window() (in module tvm.topi)": [[37, "tvm.topi.sliding_window"]], "softmax() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.softmax"]], "softmax_common() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.softmax_common"]], "sort() (in module tvm.topi)": [[37, "tvm.topi.sort"]], "space_to_batch_nd() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.space_to_batch_nd"]], "space_to_depth() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.space_to_depth"]], "sparse_add() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.sparse_add"]], "sparse_conv2d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.sparse_conv2d"]], "sparse_dense() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.sparse_dense"]], "sparse_dense_alter_layout() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.sparse_dense_alter_layout"]], "sparse_dense_sp_lhs() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.sparse_dense_sp_lhs"]], "sparse_dense_sp_rhs() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.sparse_dense_sp_rhs"]], "sparse_reshape() (in module tvm.topi)": [[37, "tvm.topi.sparse_reshape"]], "sparse_to_dense() (in module tvm.topi)": [[37, "tvm.topi.sparse_to_dense"]], "sparse_transpose() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.sparse_transpose"]], "split() (in module tvm.topi)": [[37, "tvm.topi.split"]], "sqrt() (in module tvm.topi)": [[37, "tvm.topi.sqrt"]], "squeeze() (in module tvm.topi)": [[37, "tvm.topi.squeeze"]], "stack() (in module tvm.topi)": [[37, "tvm.topi.stack"]], "stft() (in module tvm.topi)": [[37, "tvm.topi.stft"]], "stride_h (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.stride_h"]], "stride_w (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.stride_w"]], "strided_set() (in module tvm.topi)": [[37, "tvm.topi.strided_set"]], "strided_slice() (in module tvm.topi)": [[37, "tvm.topi.strided_slice"]], "strided_slice() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.strided_slice"]], "subtract() (in module tvm.topi)": [[37, "tvm.topi.subtract"]], "sum() (in module tvm.topi)": [[37, "tvm.topi.sum"]], "take() (in module tvm.topi)": [[37, "tvm.topi.take"]], "take_legalize() (in module tvm.topi)": [[37, "tvm.topi.take_legalize"]], "tan() (in module tvm.topi)": [[37, "tvm.topi.tan"]], "tanh() (in module tvm.topi)": [[37, "tvm.topi.tanh"]], "tensordot() (in module tvm.topi)": [[37, "tvm.topi.tensordot"]], "tile() (in module tvm.topi)": [[37, "tvm.topi.tile"]], "topk() (in module tvm.topi)": [[37, "tvm.topi.topk"]], "transpose() (in module tvm.topi)": [[37, "tvm.topi.transpose"]], "trilu() (in module tvm.topi)": [[37, "tvm.topi.trilu"]], "trunc() (in module tvm.topi)": [[37, "tvm.topi.trunc"]], "try_get_conv2d_sparse_input() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.try_get_conv2d_sparse_input"]], "try_get_sparse_input() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.try_get_sparse_input"]], "tvm.topi": [[37, "module-tvm.topi"]], "tvm.topi.image": [[37, "module-tvm.topi.image"]], "tvm.topi.nn": [[37, "module-tvm.topi.nn"]], "tvm.topi.sparse": [[37, "module-tvm.topi.sparse"]], "unique() (in module tvm.topi)": [[37, "tvm.topi.unique"]], "unpack_nchwc_to_nchw() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.unpack_NCHWc_to_nchw"]], "unravel_index() (in module tvm.topi)": [[37, "tvm.topi.unravel_index"]], "upsampling() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.upsampling"]], "upsampling3d() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.upsampling3d"]], "where() (in module tvm.topi)": [[37, "tvm.topi.where"]], "width (tvm.topi.nn.workload attribute)": [[37, "tvm.topi.nn.Workload.width"]], "winograd_transform_matrices() (in module tvm.topi.nn)": [[37, "tvm.topi.nn.winograd_transform_matrices"]], "within_index() (in module tvm.topi)": [[37, "tvm.topi.within_index"]], "modulepass (class in tvm.transform)": [[38, "tvm.transform.ModulePass"]], "pass (class in tvm.transform)": [[38, "tvm.transform.Pass"]], "passcontext (class in tvm.transform)": [[38, "tvm.transform.PassContext"]], "passinfo (class in tvm.transform)": [[38, "tvm.transform.PassInfo"]], "printir() (in module tvm.transform)": [[38, "tvm.transform.PrintIR"]], "sequential (class in tvm.transform)": [[38, "tvm.transform.Sequential"]], "current() (tvm.transform.passcontext static method)": [[38, "tvm.transform.PassContext.current"]], "get_current_trace() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.get_current_trace"]], "get_trace_stack() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.get_trace_stack"]], "get_trace_stack_size() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.get_trace_stack_size"]], "get_tuning_api_database() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.get_tuning_api_database"]], "inc_num_evals() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.inc_num_evals"]], "info (tvm.transform.pass property)": [[38, "tvm.transform.Pass.info"]], "list_configs() (tvm.transform.passcontext static method)": [[38, "tvm.transform.PassContext.list_configs"]], "module_pass() (in module tvm.transform)": [[38, "tvm.transform.module_pass"]], "override_instruments() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.override_instruments"]], "pop_trace() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.pop_trace"]], "push_trace() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.push_trace"]], "set_num_evals() (tvm.transform.passcontext method)": [[38, "tvm.transform.PassContext.set_num_evals"]], "tvm.transform": [[38, "module-tvm.transform"]]}})