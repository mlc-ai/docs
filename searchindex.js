Search.setIndex({"docnames": ["deep_dive/tensor_ir/abstraction", "deep_dive/tensor_ir/index", "deep_dive/tensor_ir/learning", "deep_dive/tensor_ir/tutorials/creation", "deep_dive/tensor_ir/tutorials/sg_execution_times", "deep_dive/tensor_ir/tutorials/transformation", "get_started/install", "get_started/tutorials/quick_start", "get_started/tutorials/sg_execution_times", "index", "reference/api/dlight", "reference/api/error", "reference/api/index", "reference/api/instrument", "reference/api/ir", "reference/api/meta_schedule", "reference/api/relax/analysis", "reference/api/relax/block_builder", "reference/api/relax/frontend", "reference/api/relax/op", "reference/api/relax/relax", "reference/api/relax/transform", "reference/api/rpc", "reference/api/runtime/disco", "reference/api/runtime/ndarray", "reference/api/runtime/profiling", "reference/api/runtime/relax_vm", "reference/api/runtime/runtime", "reference/api/target", "reference/api/te", "reference/api/tir/analysis", "reference/api/tir/schedule", "reference/api/tir/stmt_functor", "reference/api/tir/tir", "reference/api/tir/transform", "reference/api/topi", "reference/api/transform", "reference/publications"], "filenames": ["deep_dive/tensor_ir/abstraction.rst", "deep_dive/tensor_ir/index.rst", "deep_dive/tensor_ir/learning.rst", "deep_dive/tensor_ir/tutorials/creation.rst", "deep_dive/tensor_ir/tutorials/sg_execution_times.rst", "deep_dive/tensor_ir/tutorials/transformation.rst", "get_started/install.rst", "get_started/tutorials/quick_start.rst", "get_started/tutorials/sg_execution_times.rst", "index.rst", "reference/api/dlight.rst", "reference/api/error.rst", "reference/api/index.rst", "reference/api/instrument.rst", "reference/api/ir.rst", "reference/api/meta_schedule.rst", "reference/api/relax/analysis.rst", "reference/api/relax/block_builder.rst", "reference/api/relax/frontend.rst", "reference/api/relax/op.rst", "reference/api/relax/relax.rst", "reference/api/relax/transform.rst", "reference/api/rpc.rst", "reference/api/runtime/disco.rst", "reference/api/runtime/ndarray.rst", "reference/api/runtime/profiling.rst", "reference/api/runtime/relax_vm.rst", "reference/api/runtime/runtime.rst", "reference/api/target.rst", "reference/api/te.rst", "reference/api/tir/analysis.rst", "reference/api/tir/schedule.rst", "reference/api/tir/stmt_functor.rst", "reference/api/tir/tir.rst", "reference/api/tir/transform.rst", "reference/api/topi.rst", "reference/api/transform.rst", "reference/publications.rst"], "titles": ["Tensor Program Abstraction", "TensorIR", "Understand TensorIR Abstraction", "TensorIR Creation", "Computation times", "Transformation", "Installing Apache TVM Unity", "Quick Start", "Computation times", "\ud83d\udea7 Apache TVM Unity Documentation", "tvm.dlight", "tvm.error", "API Reference", "tvm.instrument", "tvm.ir", "tvm.meta_schedule", "tvm.relax.analysis", "tvm.relax.block_builder", "tvm.relax.frontend", "tvm.relax.op", "tvm.relax", "tvm.relax.transform", "tvm.rpc", "tvm.runtime.disco", "tvm.runtime.ndarray", "tvm.runtime.profiling", "tvm.runtime.relax_vm", "tvm.runtime", "tvm.target", "tvm.te", "tvm.tir.analysis", "tvm.tir.schedule", "tvm.tir.stmt_functor", "tvm.tir", "tvm.tir.transform", "tvm.topi", "tvm.transform", "Publications"], "terms": {"befor": [0, 2, 5, 7, 13, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 30, 31, 32, 34, 35], "we": [0, 2, 3, 5, 7, 11, 14, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "dive": 0, "detail": [0, 2, 11, 16, 17, 19, 20, 21, 26, 27, 31, 33, 35], "let": [0, 2, 3, 5, 7, 14, 30, 33, 34], "": [0, 2, 3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37], "first": [0, 5, 6, 7, 14, 16, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 33, 35], "introduc": [0, 2, 3, 16, 17, 19, 21, 31, 33, 34], "what": [0, 3, 18, 35], "i": [0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "primit": [0, 1, 2, 5, 14, 19, 20, 21, 31], "function": [0, 1, 5, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "ar": [0, 2, 3, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37], "correspond": [0, 2, 7, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 33, 34, 35], "singl": [0, 2, 5, 14, 18, 19, 20, 21, 25, 27, 28, 29, 30, 31, 34, 35], "unit": [0, 2, 14, 16, 17, 18, 19, 27, 28, 31, 33], "comput": [0, 1, 3, 7, 14, 16, 17, 18, 19, 20, 21, 27, 28, 29, 31, 33, 34, 35, 37], "oper": [0, 5, 7, 11, 14, 16, 18, 19, 20, 21, 22, 23, 24, 28, 29, 31, 33, 34, 35, 37], "For": [0, 2, 3, 6, 7, 14, 15, 16, 18, 19, 20, 21, 27, 29, 30, 31, 33, 34, 35], "exampl": [0, 2, 3, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "convolut": [0, 18, 19, 30, 35], "can": [0, 2, 3, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "fuse": [0, 7, 19, 21, 30, 31, 35], "relu": [0, 2, 7, 17, 19, 21, 35], "also": [0, 2, 3, 5, 6, 7, 11, 14, 16, 17, 20, 21, 22, 26, 27, 28, 29, 31, 34, 35, 36], "usual": [0, 7, 18, 21, 25, 33, 34, 35], "typic": [0, 2, 27, 31], "implement": [0, 2, 5, 11, 13, 18, 19, 20, 21, 22, 27, 31, 33, 34, 35, 36, 37], "contain": [0, 2, 7, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "follow": [0, 2, 3, 5, 6, 7, 14, 15, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37], "multi": [0, 16, 19, 21, 22, 23, 33, 34], "dimension": [0, 16, 18, 19, 21, 33, 34, 35], "buffer": [0, 1, 3, 5, 7, 16, 18, 19, 21, 24, 27, 29, 30, 31, 32, 33, 34, 35], "loop": [0, 1, 3, 10, 21, 30, 31, 33, 34], "nest": [0, 2, 3, 16, 18, 20, 21, 26, 30, 31], "drive": 0, "final": [0, 18, 20, 27, 28, 35], "statement": [0, 2, 20, 27, 29, 30, 31, 32, 33, 34, 35], "themselv": 0, "from": [0, 2, 3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "tvm": [0, 1, 2, 3, 5, 37], "script": [0, 2, 3, 5, 7, 17, 18, 21, 27, 29, 31], "import": [0, 3, 5, 6, 17, 18, 21, 22, 27, 28, 29], "tir": [0, 3, 5, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 29, 35], "t": [0, 2, 3, 5, 7, 14, 16, 17, 19, 21, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36], "prim_func": [0, 2, 3, 5, 7, 16, 17, 19, 20, 21, 29, 31, 33], "def": [0, 2, 3, 5, 7, 10, 13, 15, 16, 17, 18, 20, 21, 22, 26, 28, 29, 30, 31, 33, 34, 36], "main": [0, 5, 7, 9, 15, 16, 17, 18, 19, 20, 21, 30, 31, 35], "A": [0, 2, 3, 5, 6, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37], "128": [0, 2, 3, 5, 17, 18, 28, 29, 31], "float32": [0, 2, 3, 5, 7, 14, 16, 17, 18, 19, 20, 21, 24, 27, 31, 33, 34, 35, 36], "b": [0, 2, 3, 5, 6, 16, 17, 18, 19, 21, 27, 29, 31, 33, 34, 35], "c": [0, 2, 3, 5, 6, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 29, 31, 33, 34, 35], "none": [0, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "rang": [0, 2, 3, 5, 7, 14, 16, 19, 21, 29, 31, 33, 34, 35], "block": [0, 1, 3, 5, 7, 10, 14, 15, 16, 17, 19, 20, 21, 22, 27, 28, 29, 30, 31, 33, 34, 35, 36], "vi": [0, 2, 3, 5, 16, 21, 29, 31, 33], "axi": [0, 1, 3, 5, 7, 14, 16, 17, 18, 19, 21, 27, 29, 31, 33, 34, 35], "spatial": [0, 2, 3, 5, 7, 10, 17, 18, 27, 30, 31, 35], "The": [0, 2, 3, 5, 6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "demonstr": [0, 3, 16, 21, 24], "calcul": [0, 14, 18, 19, 30, 33, 35], "wise": [0, 16, 18, 19, 21, 29, 33, 35], "sum": [0, 3, 18, 19, 21, 23, 25, 27, 29, 31, 33, 35], "two": [0, 2, 3, 5, 7, 14, 16, 18, 19, 21, 25, 29, 30, 31, 33, 34, 35, 36], "vector": [0, 16, 19, 28, 29, 31, 33, 34, 35], "accept": [0, 16, 18, 19, 21, 29, 33, 34, 35], "three": [0, 2, 16, 29, 30, 35], "paramet": [0, 1, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "gener": [0, 2, 3, 5, 6, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 33, 34, 35], "one": [0, 1, 2, 3, 7, 14, 15, 16, 18, 19, 20, 21, 26, 27, 30, 31, 33, 34, 35], "output": [0, 3, 5, 7, 14, 16, 17, 18, 19, 20, 21, 25, 26, 27, 29, 30, 31, 33, 35], "incorpor": [0, 2, 3], "solitari": 0, "facilit": [0, 5, 20, 26], "featur": [0, 15, 21, 27, 35], "singular": 0, "crucial": [0, 2, 5], "unabl": 0, "execut": [0, 3, 4, 5, 7, 8, 11, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 31, 33, 34, 36], "arbitrari": [0, 10, 14, 31, 33, 35], "transform": [0, 1, 4, 9, 12, 13, 14, 16, 18, 19, 20, 29, 30, 31, 32, 33, 35], "certain": [0, 11, 19, 21, 31, 33, 35, 36], "reli": [0, 16], "sequenc": [0, 2, 3, 14, 18, 20, 21, 23, 24, 25, 27, 31, 33, 35, 36], "fortun": 0, "major": [0, 27, 33, 35], "focu": 0, "possess": [0, 5], "favor": [0, 3], "properti": [0, 1, 10, 14, 16, 18, 19, 20, 21, 23, 24, 27, 28, 29, 31, 35, 36], "independ": [0, 2], "among": [0, 16], "iter": [0, 1, 3, 10, 15, 16, 18, 19, 21, 25, 29, 31, 33], "instanc": [0, 2, 3, 14, 16, 19, 21, 28, 31, 33, 34, 35, 36], "aforement": [0, 3], "includ": [0, 2, 7, 14, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36], "annot": [0, 3, 7, 14, 16, 17, 19, 20, 21, 27, 31, 33, 34], "signifi": [0, 2], "fundament": [0, 2, 3], "design": [0, 2, 15, 16, 19, 20, 21, 35, 36, 37], "schedul": [0, 1, 3, 10, 12, 14, 15, 19, 21, 28, 29, 34, 35], "mai": [0, 6, 7, 14, 16, 18, 19, 20, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "encompass": [0, 2], "multipl": [0, 2, 5, 14, 16, 18, 19, 21, 25, 27, 29, 30, 31, 33, 34, 35, 36], "opaqu": [0, 16, 20, 30, 31, 34], "intrins": [0, 14, 16, 19, 20, 21, 29, 31, 33, 34, 35], "core": [0, 1, 15, 19, 33], "instruct": [0, 2, 6, 10, 20, 23, 26, 28, 31, 33, 34], "indic": [0, 14, 16, 17, 18, 19, 21, 29, 30, 31, 33, 34, 35, 36], "variabl": [0, 5, 6, 14, 16, 17, 18, 19, 20, 21, 27, 29, 30, 31, 32, 33, 34, 35, 36], "map": [0, 2, 10, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35], "all": [0, 5, 7, 10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36], "while": [0, 3, 6, 13, 18, 19, 20, 22, 31, 33, 35], "thi": [0, 2, 3, 5, 6, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "inform": [0, 1, 7, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 25, 27, 28, 29, 31, 34, 35, 36, 37], "isn": 0, "specif": [0, 2, 3, 7, 11, 14, 15, 16, 18, 19, 20, 21, 27, 28, 29, 31, 33, 34, 35, 36], "prove": [0, 16], "us": [0, 1, 2, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "when": [0, 2, 6, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "consequ": 0, "confid": 0, "parallel": [0, 6, 31, 33, 34], "reorder": [0, 5, 19, 20, 31, 34], "associ": [0, 2, 5, 14, 16, 17, 19, 20, 28, 31, 33, 35, 37], "provid": [0, 2, 5, 6, 7, 10, 14, 16, 17, 18, 19, 20, 21, 23, 27, 29, 33, 34, 35, 36], "travers": 0, "index": [0, 3, 5, 14, 16, 18, 19, 20, 21, 29, 31, 33, 34, 35], "0": [0, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36], "abstract": [1, 3, 7, 9, 14, 15, 20, 37], "apach": [1, 2, 3, 31, 37], "uniti": [1, 3], "stack": [1, 3, 14, 16, 22, 33, 35, 36], "which": [1, 2, 6, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35], "repres": [1, 2, 3, 7, 14, 16, 17, 18, 19, 20, 21, 27, 28, 29, 31, 33, 34, 35], "optim": [1, 5, 13, 14, 15, 18, 19, 21, 31, 34, 35, 36, 37], "tensor": [1, 2, 5, 9, 14, 17, 18, 19, 20, 21, 24, 29, 30, 31, 33, 34, 35, 37], "program": [1, 2, 7, 9, 14, 18, 20, 22, 25, 27, 28, 31, 37], "kei": [1, 2, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 30, 31, 33, 34], "element": [1, 2, 3, 5, 14, 16, 18, 19, 21, 22, 29, 31, 33, 35], "extra": [1, 18, 20, 26, 27, 31, 35], "structur": [1, 11, 14, 15, 16, 18, 19, 20, 21, 24, 27, 29, 30, 31, 33, 35], "understand": [1, 3, 5, 9], "why": 1, "sugar": [1, 27, 31, 35], "ax": [1, 7, 18, 19, 33, 35], "bind": [1, 3, 14, 16, 17, 18, 19, 20, 21, 22, 29, 30, 31, 33, 34, 35], "creation": [1, 4, 9, 18, 33, 35, 36], "creat": [1, 6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "tvmscript": [1, 2, 7, 17, 27, 29, 31], "express": [1, 14, 16, 17, 18, 19, 20, 21, 27, 29, 30, 31, 33, 34, 35], "initi": [1, 3, 17, 18, 20, 22, 23, 26, 27, 29, 33, 35, 36], "tile": [1, 19, 31, 35], "leverag": 1, "local": [1, 3, 6, 7, 15, 16, 20, 21, 22, 31, 33, 34, 35], "rewrit": [1, 20, 21, 34, 35], "reduct": [1, 2, 7, 10, 16, 19, 29, 31, 33, 34, 35], "trace": [1, 7, 15, 18, 29, 31, 33, 36], "standard": [2, 19, 28, 34, 35], "machin": [2, 7, 20, 22, 26, 37], "learn": [2, 10, 37], "compil": [2, 3, 6, 10, 14, 18, 19, 20, 21, 22, 25, 27, 28, 29, 33, 35, 37], "framework": [2, 6, 7], "princip": 2, "object": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36], "depict": 2, "hardwar": 2, "acceler": 2, "option": [2, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "thread": [2, 7, 15, 23, 27, 28, 29, 31, 33, 34], "applic": [2, 5, 10, 14, 16, 19, 20, 35], "special": [2, 15, 16, 18, 21, 28, 29, 31, 33, 35, 36], "memori": [2, 14, 15, 16, 21, 24, 27, 30, 31, 33, 34, 35], "access": [2, 14, 16, 18, 20, 26, 27, 29, 30, 31, 33, 34, 35, 36], "To": [2, 6, 11, 13, 20, 22, 27, 31], "help": [2, 6, 14, 16, 17, 18, 19, 20, 21, 22, 27, 33, 35, 36], "our": [2, 6, 7, 31], "explan": 2, "u": [2, 7, 31], "motiv": 2, "time": [2, 3, 5, 7, 13, 14, 15, 18, 19, 20, 21, 22, 26, 27, 28, 31, 34, 35], "matric": [2, 18, 19, 33, 35], "perform": [2, 5, 7, 16, 18, 19, 21, 23, 24, 25, 29, 31, 33, 34, 35], "step": [2, 5, 7, 19, 27, 31, 35], "y_": [2, 3, 35], "j": [2, 3, 5, 16, 17, 19, 21, 29, 31, 33, 34, 35], "sum_k": [2, 3], "a_": [2, 3], "k": [2, 3, 5, 7, 15, 16, 18, 19, 21, 29, 31, 33, 35, 37], "b_": [2, 3], "c_": 2, "mathbb": 2, "max": [2, 3, 5, 7, 19, 23, 27, 28, 29, 31, 33, 35], "abov": [2, 16, 18, 19, 31, 35], "resembl": 2, "commonli": [2, 21], "seen": [2, 18, 19], "neural": [2, 17, 18, 19, 35, 37], "network": [2, 17, 18, 19, 35, 37], "linear": [2, 7, 17, 18, 19, 35], "layer": [2, 7, 18, 19, 35], "activ": [2, 13, 19, 20, 21, 26, 27, 35], "invok": [2, 7, 19, 20, 21, 22, 26, 27, 31, 34, 36], "nativ": [2, 3], "python": [2, 5, 6, 7, 11, 14, 18, 19, 20, 22, 25, 27, 28, 29, 31, 33], "code": [2, 3, 5, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 31, 33, 34, 35, 36], "numpi": [2, 3, 5, 7, 18, 19, 20, 21, 23, 24, 29, 31, 33, 35], "show": [2, 3, 5, 6, 7, 18, 20, 21, 26, 27, 31], "lnumpy_mm_relu": 2, "np": [2, 3, 5, 7, 15, 18, 19, 20, 21, 26, 31, 33, 35], "ndarrai": [2, 12, 15, 16, 18, 19, 20, 21, 23, 26, 27, 29, 33, 34, 35], "y": [2, 3, 5, 7, 14, 17, 18, 19, 21, 27, 28, 29, 30, 31, 33, 34, 35], "empti": [2, 16, 19, 20, 21, 23, 24, 27, 29, 30, 31, 33, 34, 35, 36], "dtype": [2, 3, 5, 7, 14, 16, 17, 18, 19, 20, 21, 23, 24, 27, 29, 31, 33, 34, 35], "With": [2, 19, 20, 26, 35], "low": [2, 7, 14, 15, 19, 21, 30, 33, 34, 35], "level": [2, 7, 14, 15, 16, 19, 20, 21, 30, 33, 34, 35, 36], "mind": 2, "now": [2, 3, 5, 7, 14, 15, 19, 21, 24, 31, 34, 35, 36], "readi": 2, "below": [2, 6, 13, 18, 19, 20, 26, 27, 29, 31, 33, 34, 35], "mm_relu": [2, 3, 5], "particular": [2, 7, 19, 27, 34, 35], "languag": [2, 3, 5, 29, 31, 37], "call": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36], "domain": [2, 3, 10, 29, 31, 33, 35], "dialect": [2, 3], "embed": [2, 18], "ast": [2, 3, 16, 17, 20, 21, 27, 30, 31, 32], "ir_modul": [2, 3, 5, 7, 15, 17, 21], "class": [2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36], "mymodul": [2, 3, 5, 18], "alloc_buff": [2, 3, 5, 7, 16, 31, 33, 34], "grid": [2, 3, 5, 7, 16, 17, 21, 29, 31, 33, 35], "vj": [2, 3, 5, 16, 21, 29, 31, 33], "vk": [2, 3, 5, 29, 31], "reduc": [2, 3, 5, 7, 19, 21, 23, 29, 31, 33, 34, 35], "init": [2, 3, 5, 6, 7, 16, 29, 30, 31, 33, 34], "next": [2, 7, 15, 33], "invest": 2, "same": [2, 3, 5, 11, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36], "set": [2, 6, 7, 14, 16, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36], "here": [2, 3, 5, 7, 9, 16, 21, 22, 31, 33, 34, 35, 36], "take": [2, 3, 5, 7, 10, 11, 16, 18, 19, 20, 21, 25, 26, 27, 29, 33, 34, 35], "type": [2, 3, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "name": [2, 3, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "shape": [2, 7, 14, 16, 17, 18, 19, 20, 21, 23, 24, 27, 29, 31, 33, 34, 35], "argument": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35], "data": [2, 3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 33, 34, 35, 36], "addit": [2, 5, 14, 16, 18, 19, 20, 21, 22, 27, 28, 29, 31, 33, 35, 36], "possibl": [2, 10, 14, 19, 20, 21, 22, 26, 31, 33, 34, 35], "mlc": [2, 5, 6], "process": [2, 5, 7, 15, 19, 22, 23, 31, 35, 37], "similarli": [2, 19, 20, 28], "intermedi": [2, 7, 19, 20, 21, 27, 31, 35], "result": [2, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "alloc": [2, 14, 16, 19, 21, 30, 31, 33, 34], "There": [2, 7, 14, 29, 30, 31, 33, 35], "direct": [2, 19, 20, 21, 26, 30, 34], "syntact": [2, 21], "write": [2, 3, 5, 7, 10, 14, 16, 17, 20, 21, 22, 30, 31, 33, 34], "signific": 2, "distinct": [2, 19, 31], "li": 2, "an": [2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37], "construct": [2, 3, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 31, 33, 35], "term": [2, 31, 33, 35], "within": [2, 3, 5, 17, 18, 21, 31, 34, 35, 36], "importantli": 2, "more": [2, 3, 6, 7, 11, 13, 14, 16, 18, 19, 20, 21, 26, 27, 30, 31, 33, 34, 35, 36], "than": [2, 5, 14, 16, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36], "It": [2, 5, 6, 7, 15, 16, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 33, 34, 35, 36], "compris": [2, 3], "delin": [2, 3], "around": [2, 34, 35], "them": [2, 7, 14, 16, 19, 21, 23, 31, 34], "line": [2, 14, 25, 27, 34], "declar": [2, 3, 16, 20, 21, 29, 31, 33, 35], "about": [2, 10, 14, 19, 20, 28, 29, 33, 35], "syntax": [2, 3, 7, 27, 29, 31], "block_axi": 2, "axis_typ": 2, "axis_rang": 2, "mapped_valu": 2, "These": [2, 6, 7, 35], "convei": 2, "thei": [2, 14, 16, 18, 19, 20, 21, 26, 27, 29, 31, 34, 35, 36], "specifi": [2, 3, 6, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 31, 32, 33, 34, 35], "origin": [2, 5, 7, 16, 18, 19, 20, 21, 24, 31, 33, 34, 35], "intend": [2, 19, 21, 27, 28, 35], "announc": 2, "delv": [2, 5], "deeper": 2, "relationship": [2, 31], "progress": 2, "meanwhil": 2, "read": [2, 3, 5, 7, 10, 14, 16, 17, 21, 30, 31, 33, 34], "writ": 2, "strictli": [2, 18, 21, 24], "speak": 2, "updat": [2, 5, 6, 14, 15, 16, 17, 19, 20, 21, 29, 31, 34, 35, 36], "label": [2, 18, 19, 35], "being": [2, 3, 13, 14, 16, 17, 19, 20, 21, 26, 27, 31, 33], "don": [2, 21, 22, 36], "requir": [2, 6, 11, 16, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "valu": [2, 3, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35], "anoth": [2, 14, 16, 19, 20, 21, 22, 24, 31, 33, 34], "significantli": 2, "fix": [2, 35], "yield": [2, 5, 18, 19], "point": [2, 7, 14, 16, 19, 20, 23, 28, 31, 33, 34, 35], "locat": [2, 14, 15, 16, 19, 21, 22, 27, 29, 31, 33, 34, 35, 37], "other": [2, 7, 14, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 33, 34, 35], "differ": [2, 3, 5, 6, 7, 14, 19, 20, 21, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36], "refer": [2, 3, 5, 7, 11, 14, 16, 17, 18, 19, 20, 21, 23, 24, 28, 31, 35], "sinc": [2, 16, 27, 34], "directli": [2, 7, 13, 16, 18, 19, 20, 21, 22, 27, 28, 31, 33, 34, 35, 36], "start": [2, 8, 14, 16, 17, 19, 21, 22, 31, 33, 35], "region": [2, 10, 16, 19, 21, 30, 31, 33, 34, 35], "involv": [2, 5, 7, 34], "One": [2, 31], "observ": 2, "make": [2, 7, 11, 14, 16, 21, 33, 34, 35, 36], "self": [2, 7, 13, 15, 16, 18, 19, 20, 21, 24, 27, 28, 34, 36], "come": [2, 16, 19, 21, 29, 33], "suppos": [2, 10, 18, 19, 31, 35], "carri": [2, 29, 35], "out": [2, 6, 7, 10, 15, 17, 18, 19, 21, 29, 30, 31, 33, 34, 35], "extern": [2, 16, 18, 19, 20, 21, 27, 29, 33, 34, 35], "valid": [2, 11, 15, 16, 18, 19, 20, 21, 26, 28, 31, 33, 34, 35], "correct": [2, 5, 7, 16, 19, 21, 22, 31, 33], "error": [2, 5, 12, 14, 16, 18, 19, 20, 21, 26, 28, 29, 30, 31, 33, 35, 36], "becaus": [2, 14, 22, 28, 31, 34, 36], "expect": [2, 14, 19, 21, 33, 34, 35], "size": [2, 3, 5, 14, 16, 18, 19, 20, 21, 27, 28, 29, 30, 31, 33, 34, 35, 36], "onli": [2, 3, 7, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "bound": [2, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31, 33, 34, 35], "127": [2, 31], "wrong": 2, "due": [2, 6, 16, 20, 30], "mismatch": 2, "In": [2, 3, 5, 7, 13, 18, 19, 20, 21, 22, 23, 26, 27, 29, 31, 33, 34, 35, 36], "situat": [2, 21], "where": [2, 3, 7, 10, 14, 16, 18, 19, 20, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36], "each": [2, 3, 5, 7, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "outer": [2, 5, 16, 21, 31, 34, 35], "remap": [2, 3, 5, 7, 14, 16, 17, 19, 20, 21, 29, 30, 31, 33], "ssr": [2, 3, 5, 7, 29, 31], "mean": [2, 5, 7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 33, 35], "equival": [2, 3, 16, 18, 19, 21, 29, 33, 35], "range_of_i": 2, "range_of_j": 2, "range_of_k": 2, "so": [2, 11, 14, 16, 19, 20, 22, 26, 27, 31, 35], "mymodulewithaxisremapsugar": 2, "ss": [2, 3, 5, 7, 16, 17, 21, 29, 31, 33], "tutori": [3, 5, 7, 31], "googl": [3, 5, 7], "colab": [3, 5, 7], "you": [3, 5, 6, 7, 11, 14, 19, 22, 27, 28, 29, 33], "click": [3, 5, 7], "run": [3, 5, 6, 13, 14, 15, 16, 19, 20, 21, 22, 25, 26, 27, 30, 34, 35, 36], "jupyt": [3, 5, 7], "notebook": [3, 5, 7], "section": [3, 5, 7, 11, 14, 16, 18, 19], "method": [3, 7, 10, 13, 15, 16, 17, 18, 19, 20, 24, 27, 28, 31, 33, 35, 36], "presum": 3, "familiar": 3, "concept": 3, "If": [3, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "alreadi": [3, 5, 17, 18], "acquaint": 3, "pleas": [3, 6, 7, 11, 17, 19, 21, 24, 31, 34, 35], "concentr": 3, "standalon": [3, 14, 16], "techniqu": [3, 5, 37], "present": [3, 20, 21, 26, 27, 31, 33, 35, 37], "requisit": [3, 5], "end": [3, 14, 17, 19, 20, 21, 22, 33, 35, 37], "user": [3, 6, 13, 14, 16, 18, 19, 20, 21, 23, 25, 27, 28, 31, 33, 34, 35, 36], "relax": [3, 6, 7, 14, 26, 27, 36], "model": [3, 15, 17, 18, 19, 21, 28], "convert": [3, 7, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 34, 35], "todo": 3, "add": [3, 7, 14, 15, 16, 17, 18, 19, 20, 21, 27, 29, 31, 33, 34, 35], "link": [3, 6, 20, 22, 27, 28, 31, 35], "most": [3, 16, 18, 19, 20, 31, 33, 34], "straightforward": 3, "wai": [3, 5, 7, 16, 21, 29, 33], "via": [3, 5, 6, 14, 20, 22, 25, 26, 27, 29, 31, 33, 35], "emploi": [3, 5, 37], "ensur": [3, 16, 18, 19, 21, 31, 33, 34], "full": [3, 18, 19, 31, 35], "compat": [3, 7, 16, 18, 19, 20, 34, 35], "tool": [3, 18], "like": [3, 7, 14, 16, 18, 19, 21, 24, 25, 27, 28, 29, 33, 34, 35], "auto": [3, 15, 20, 27, 30, 31, 34, 35], "complet": [3, 17, 21, 27, 31, 33], "lint": 3, "cannot": [3, 10, 14, 16, 18, 19, 20, 26, 27, 29, 31, 33, 35], "interpret": [3, 18, 19, 20], "precis": [3, 18, 19, 21, 35], "decor": [3, 7, 10, 13, 15, 21, 22, 29, 34, 36], "extract": [3, 15, 18, 19, 21, 34, 35], "subsequ": [3, 5, 7], "pars": [3, 14, 16, 19], "ir": [3, 5, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 27, 29, 30, 31, 32, 33, 35, 36], "eas": 3, "streamlin": 3, "util": [3, 5, 7, 19, 30, 32], "condens": 3, "abbrevi": 3, "exclud": [3, 19, 35], "whose": [3, 16, 18, 19, 20, 21, 26, 29, 31, 33, 35], "content": [3, 14, 16, 18, 19, 20, 27, 29, 33, 34], "infer": [3, 14, 16, 17, 18, 19, 20, 21, 27, 28, 31, 33, 34, 35], "bodi": [3, 5, 16, 17, 20, 21, 29, 30, 31, 33, 34], "concisemodul": 3, "verifi": [3, 6, 7, 22, 30, 31, 34, 35], "modul": [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 34, 35, 36], "print": [3, 5, 6, 7, 14, 15, 16, 18, 19, 20, 21, 27, 28, 29, 31, 33, 36], "structural_equ": [3, 14, 30], "true": [3, 5, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "despit": 3, "limit": [3, 7, 21, 27, 28, 34, 35], "feasibl": 3, "ascertain": 3, "m": [3, 5, 7, 16, 17, 19, 21, 22, 29, 31, 33, 34, 35, 36], "n": [3, 14, 16, 17, 18, 19, 21, 25, 27, 29, 31, 33, 34, 35], "irmodul": [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 30, 31, 33, 34, 36], "concisemodulefrompython": 3, "cast": [3, 16, 17, 18, 19, 20, 21, 31, 33, 35], "check": [3, 5, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 29, 30, 31, 33, 34, 35], "dynamicshapemodul": 3, "handl": [3, 11, 16, 17, 21, 27, 29, 30, 31, 33, 34, 35, 36], "definit": [3, 13, 14, 15, 16, 19, 20, 21, 27, 32], "int32": [3, 14, 16, 17, 19, 20, 21, 27, 29, 31, 33, 34, 35], "input": [3, 5, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "match_buff": [3, 16, 17, 21, 29, 31, 33], "runtim": [3, 7, 14, 16, 18, 19, 20, 21, 22, 28, 29, 33, 34], "evaluate_dynamic_shap": 3, "lib": [3, 5, 20, 22, 27, 28], "int": [3, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "nd": [3, 5, 7, 18, 19, 20, 24, 29, 33, 34, 35], "arrai": [3, 5, 7, 14, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35], "random": [3, 5, 7, 15, 18, 21, 31, 33, 34, 35], "uniform": [3, 5, 27, 33, 35], "astyp": [3, 5, 7, 18, 19, 33, 35], "zero": [3, 5, 14, 18, 19, 20, 22, 29, 31, 33, 35], "return": [3, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "onc": [3, 6, 13, 16, 32], "dyn_shape_lib": 3, "build": [3, 5, 7, 13, 15, 17, 18, 20, 21, 24, 26, 27, 28, 33, 34, 35], "target": [3, 5, 7, 10, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 31, 33, 34, 35], "llvm": [3, 5, 6, 13, 15, 18, 20, 26, 27, 28, 29, 33, 35], "abl": 3, "4": [3, 5, 16, 18, 19, 21, 27, 28, 31, 33, 34, 35], "64": [3, 15, 31, 33], "1": [3, 5, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37], "0089133": 3, "0676211": 3, "1163464": 3, "4312122": 3, "1066377": 3, "1027626": 3, "5109268": 3, "5382401": 3, "0011591": 3, "1169064": 3, "97465074": 3, "420451": 3, "58543766": 3, "6187949": 3, "8213514": 3, "8639262": 3, "29": 3, "982533": 3, "28": [3, 29], "09605": 3, "224003": 3, "824375": 3, "835365": 3, "31": [3, 15, 35], "045702": 3, "30": 3, "535772": 3, "573008": 3, "27": [3, 35], "534761": 3, "724974": 3, "053572": 3, "32": [3, 5, 17, 29, 33, 34], "15319": 3, "902615": 3, "43098": 3, "620544": 3, "414328": 3, "040413": 3, "35": [3, 37], "50827": 3, "90456": 3, "272364": 3, "591564": 3, "919882": 3, "572327": 3, "591125": 3, "813324": 3, "321638": 3, "261724": 3, "744812": 3, "937199": 3, "33": [3, 35], "447586": 3, "36": 3, "15759": 3, "95418": 3, "812": 3, "679295": 3, "934563": 3, "37": [3, 35], "713467": 3, "often": [3, 35], "disregard": 3, "succinctli": 3, "lead": [3, 31, 33], "pragmat": 3, "te": [3, 17, 18, 19, 20, 33, 35], "becom": [3, 21, 31, 33, 35], "relev": 3, "serv": [3, 19, 22, 31, 35, 36], "through": [3, 20, 21, 26, 27, 28, 31, 34, 36], "api": [3, 7, 9, 14, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 31, 34, 36], "compon": [3, 18, 31, 35], "embodi": 3, "pattern": [3, 7, 16, 21, 31, 33, 34, 35], "re": [3, 21, 24, 29, 31, 32, 33, 35], "address": [3, 14, 16, 21, 22, 27, 31, 33, 37], "convers": [3, 20, 21, 26, 30, 31, 33], "legaci": [3, 28, 31, 34, 35], "ha": [3, 7, 11, 14, 15, 16, 18, 19, 20, 21, 26, 27, 30, 31, 34, 35, 36], "been": [3, 5, 14, 16, 17, 19, 20, 21, 26, 34, 35], "supersed": 3, "last": [3, 14, 18, 19, 21, 29, 31, 33, 35], "subsect": 3, "placehold": [3, 14, 17, 18, 29, 33, 35], "reduce_axi": [3, 29, 31, 33], "lambda": [3, 16, 17, 19, 21, 29, 31, 33, 35], "signatur": [3, 16, 20, 21, 26, 29, 31, 32, 33, 34, 35], "output_shap": [3, 35], "fcomput": [3, 29, 35], "And": [3, 7, 19, 21, 33, 34], "describ": [3, 14, 18, 19, 21, 31, 33, 35], "how": [3, 5, 6, 7, 18, 19, 21, 24, 27, 28, 31, 33, 35], "want": [3, 16, 20, 21, 26, 27, 29, 31, 33, 35, 36], "given": [3, 5, 10, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "encapsul": 3, "upon": [3, 18, 31], "defin": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "formul": 3, "pertin": 3, "interest": [3, 7, 19, 35], "aim": 3, "te_func": [3, 17], "create_prim_func": [3, 29], "with_attr": [3, 14, 16], "global_symbol": [3, 19, 20, 21], "temodul": 3, "func_attr": [3, 5, 7, 17, 21], "noalia": [3, 5, 7, 17, 21], "bool": [3, 5, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "root": [3, 5, 6, 7, 17, 18, 19, 20, 27, 29, 31, 33, 35], "v_i": 3, "v_j": 3, "v_k": [3, 7], "need": [3, 5, 6, 7, 14, 15, 16, 18, 19, 20, 21, 22, 27, 29, 30, 33, 35, 36], "symbol": [3, 6, 7, 14, 16, 17, 19, 20, 21, 26, 27, 29, 31, 33, 34, 35], "var": [3, 10, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36], "dyn_te_func": 3, "dynamictemodul": 3, "var_a": 3, "var_b": 3, "var_c": 3, "k_1": [3, 31], "total": [3, 4, 5, 7, 8, 16, 20, 21, 26, 27, 31], "minut": [3, 5, 7], "123": [3, 4], "second": [3, 5, 7, 15, 16, 18, 19, 20, 21, 22, 26, 27, 30, 31, 33, 35], "download": [3, 5, 7, 22, 28], "sourc": [3, 5, 7, 14, 16, 18, 19, 20, 21, 24, 26, 27, 29, 31, 33, 35], "py": [3, 4, 5, 7, 8, 15, 16, 19, 21, 25, 30, 34], "ipynb": [3, 5, 7], "00": [4, 8], "503": 4, "deep_dive_tensor_ir_tutori": 4, "file": [4, 8, 15, 19, 20, 22, 23, 27, 31, 37], "379": [4, 5], "mb": [4, 8], "tensorir": [4, 5, 7, 9, 29, 31, 37], "interact": [5, 7, 16, 20, 23, 33, 36], "get": [5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 33, 35, 36], "ingredi": 5, "flow": [5, 7, 16, 20, 33], "previou": [5, 7, 35], "have": [5, 7, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 30, 31, 33, 34, 35], "practic": 5, "primarili": 5, "illustr": [5, 31], "rather": [5, 19, 31, 34, 35], "look": [5, 7, 14, 16, 20, 29, 33, 34], "evalu": [5, 7, 19, 20, 26, 27, 31, 33, 35, 36], "a_np": 5, "b_np": 5, "c_np": 5, "a_nd": 5, "b_nd": 5, "c_nd": 5, "mod": [5, 7, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 30, 31, 33, 34, 35, 36], "test": [5, 7, 15, 16, 17, 18, 19, 21, 22, 24, 27, 28, 30, 33, 35], "assert_allclos": [5, 7, 33, 35], "rtol": [5, 7], "1e": [5, 7, 18, 19, 35], "5": [5, 6, 7, 14, 18, 19, 22, 31, 33, 35], "f_timer": 5, "time_evalu": [5, 7, 20, 26, 27], "cpu": [5, 15, 18, 20, 22, 24, 26, 27, 28, 33, 34, 35], "summari": [5, 7, 22], "median": [5, 7], "min": [5, 7, 14, 19, 23, 29, 31, 33, 35], "std": [5, 7, 19, 23], "2": [5, 7, 14, 15, 16, 18, 19, 21, 22, 28, 29, 30, 31, 33, 34, 35, 36, 37], "1440": 5, "0000": [5, 7, 35], "establish": 5, "helper": [5, 18], "sch": [5, 10, 15, 29, 31], "acquir": 5, "its": [5, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 30, 31, 33, 34, 35], "block_i": 5, "get_block": [5, 31], "get_loop": [5, 31], "proce": [5, 32], "modif": 5, "split": [5, 18, 19, 21, 22, 29, 31, 33, 34, 35], "separ": [5, 9, 18, 19, 21, 22, 31, 33, 34, 35], "inner": [5, 17, 31, 35], "length": [5, 14, 16, 18, 19, 21, 27, 31, 33, 35], "procedur": 5, "thu": [5, 14, 19, 35], "inadvert": 5, "twice": 5, "state": [5, 15, 18, 19, 20, 22, 26, 27, 31, 35], "non": [5, 14, 16, 18, 19, 20, 21, 27, 29, 31, 33, 34, 35], "exist": [5, 19, 21, 23, 24, 27, 28, 30, 31, 33, 35, 36], "j0": 5, "j1": 5, "factor": [5, 18, 19, 31, 33, 35], "8": [5, 6, 18, 19, 21, 24, 31, 34, 35], "outcom": [5, 15, 18], "examin": [5, 16, 21, 34], "retain": 5, "j_0": [5, 31], "j_1": [5, 31], "16": [5, 7, 16, 21, 31, 33, 34, 35], "phase": [5, 31], "supplementari": 5, "respect": [5, 18, 19, 21, 33, 35], "action": [5, 20, 26, 29, 33], "6667": 5, "achiev": 5, "variant": [5, 13, 14, 34, 36], "known": [5, 14, 20, 29, 31, 33, 35], "reverse_compute_at": [5, 31], "reloc": 5, "block_c": 5, "ax0": [5, 7, 21, 31], "until": [5, 9, 15, 17, 23, 27], "maintain": [5, 19, 31, 35], "togeth": [5, 7, 20, 26, 35], "amalgam": 5, "form": [5, 10, 16, 19, 20, 21, 28, 29, 30, 31, 34, 35], "remain": [5, 10, 27, 35], "synchron": [5, 21, 23, 24, 27, 33], "segreg": 5, "decompose_reduct": [5, 31], "j_1_init": 5, "y_init": 5, "y_updat": 5, "2617": 5, "manner": [5, 36], "histori": 5, "ve": 5, "see": [5, 6, 11, 13, 15, 16, 17, 19, 20, 21, 22, 26, 27, 29, 31, 33, 34, 35], "apply_trac": 5, "b0": 5, "func_nam": [5, 11, 17, 18, 20, 21, 25, 26, 27, 28, 31, 33], "l1": 5, "l2": [5, 27], "l3": 5, "l4": 5, "l5": 5, "preserve_unit_it": [5, 31], "b6": 5, "preserve_unit_loop": [5, 31], "fals": [5, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36], "b7": 5, "altern": [5, 31], "conjunct": 5, "histor": 5, "commun": [6, 23, 33], "nightli": 6, "develop": [6, 7, 9, 11, 17], "visit": [6, 14, 16, 20, 32], "page": [6, 37], "http": [6, 18, 19, 29, 31, 33, 35, 37], "ai": 6, "recommend": [6, 11, 16, 25, 33], "alwai": [6, 16, 18, 22, 27, 30, 34, 35], "custom": [6, 13, 15, 16, 20, 21, 22, 31, 34, 36], "cmake": 6, "24": [6, 18, 19, 21], "15": [6, 19, 34, 35], "git": 6, "recent": [6, 33], "support": [6, 7, 11, 14, 15, 18, 19, 20, 21, 23, 24, 26, 27, 28, 31, 34, 35, 37], "17": 6, "minimum": [6, 14, 18, 19, 20, 26, 27, 29, 33, 35], "gcc": 6, "7": [6, 18, 19, 31, 34, 35], "clang": 6, "appl": 6, "9": [6, 19, 24, 27, 31, 35], "visual": 6, "studio": 6, "2019": [6, 18, 19], "v16": 6, "conda": 6, "strongli": 6, "ubuntu": 6, "debian": 6, "apt": 6, "repositori": 6, "kitwar": 6, "com": [6, 18, 19, 29, 33], "org": [6, 18, 19, 31, 33, 35, 37], "choos": [6, 7, 20, 26, 27], "clone": [6, 15], "repo": [6, 9], "host": [6, 9, 19, 20, 22, 26, 27, 28, 30, 34], "under": [6, 7, 9, 15, 16, 18, 20, 21, 26, 28, 31], "branch": [6, 9, 20, 21, 29, 31, 33, 34], "recurs": [6, 14, 16, 18, 21, 32], "checkout": 6, "Or": [6, 33], "switch": [6, 31, 36], "after": [6, 7, 13, 14, 15, 16, 18, 19, 20, 21, 26, 27, 31, 32, 33, 34, 35], "flag": [6, 10, 16, 18, 19, 22, 31, 33, 34, 36], "automat": [6, 14, 19, 20, 21, 26, 27, 29, 31, 33, 34, 35, 37], "submodul": [6, 18], "forget": [6, 35], "manual": [6, 19, 29], "directori": [6, 15, 20, 21, 22, 27], "cd": 6, "rm": [6, 18], "rf": [6, 31], "mkdir": 6, "cp": [6, 33], "config": [6, 34, 35, 36], "Then": [6, 7, 16, 19, 21, 33, 36], "control": [6, 16, 18, 19, 20, 23, 27, 28, 33, 34, 35], "default": [6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36], "candid": [6, 15, 31, 34, 36], "releas": [6, 21, 24, 27], "debug": [6, 18, 23, 25, 31], "relwithdebinfo": 6, "echo": 6, "cmake_build_typ": 6, "must": [6, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 31, 33, 35], "use_llvm": 6, "ignor": [6, 15, 16, 18, 19, 21, 28, 29, 33, 35], "libllvm": 6, "static": [6, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 31, 33, 34, 36], "hide_private_symbol": 6, "ON": 6, "gpu": [6, 7, 22, 24, 27, 28, 31, 34, 35], "sdk": [6, 27], "turn": [6, 21, 34], "use_cuda": 6, "off": [6, 21, 34], "use_met": 6, "use_vulkan": 6, "use_opencl": 6, "cubla": 6, "cudnn": 6, "cutlass": [6, 21], "use_cubla": 6, "use_cudnn": 6, "use_cutlass": 6, "enabl": [6, 14, 15, 18, 20, 21, 22, 27, 28, 29, 31, 32, 34, 35], "fvisibl": 6, "hidden": [6, 35], "prevent": 6, "potenti": [6, 15, 16, 20, 26, 31], "conflict": [6, 31], "between": [6, 10, 18, 19, 20, 21, 26, 27, 29, 31, 33, 34, 35], "pytorch": [6, 7, 18, 19, 35], "aris": [6, 21], "ship": 6, "version": [6, 16, 21, 27, 28, 33, 35], "edit": 6, "accordingli": [6, 19, 21, 31, 34], "kick": 6, "command": [6, 23], "nproc": 6, "success": 6, "should": [6, 14, 16, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "produc": [6, 16, 18, 19, 21, 24, 27, 29, 31, 33, 34], "libtvm": [6, 22], "libtvm_runtim": 6, "environ": [6, 14, 16, 20, 22, 27, 28, 34], "pip": 6, "project": [6, 21, 24, 35], "export": [6, 18, 20, 22, 27], "tvm_home": 6, "path": [6, 7, 15, 20, 22, 23, 27, 35], "pythonpath": 6, "e": [6, 10, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 31, 33, 34, 35], "__file__": 6, "ok": 6, "peopl": 7, "who": [7, 31], "new": [7, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "simpl": [7, 18, 19, 21, 22, 31, 32, 36], "thing": [7, 18, 25], "mlp": [7, 15], "try": [7, 10, 18, 20, 21, 31, 33, 34], "real": [7, 14, 21, 35], "jump": 7, "torch": [7, 19], "nn": [7, 17, 21, 29], "mlpmodel": 7, "__init__": [7, 13, 15, 18, 21, 34, 36], "super": [7, 18], "fc1": 7, "784": [7, 17], "256": [7, 27, 31], "relu1": 7, "fc2": 7, "10": [7, 14, 17, 18, 19, 20, 25, 26, 27, 29, 31, 33, 35, 36, 37], "forward": [7, 18, 35], "x": [7, 14, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36], "torch_model": [7, 18], "fx": [7, 18], "frontend": [7, 11, 12], "toolkit": 7, "represent": [7, 18, 19, 24, 27, 28, 30, 33, 35], "huggingfac": 7, "from_fx": [7, 18], "torch_fx_model": 7, "symbolic_trac": [7, 18], "As": 7, "doe": [7, 14, 16, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 33, 34, 35], "onnx": [7, 19, 35], "ourselv": 7, "list": [7, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "tupl": [7, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 31, 33, 35, 36], "combin": [7, 14, 19, 20, 21, 26, 33, 34, 35], "gather": [7, 18, 19, 23, 25, 27, 35], "input_info": [7, 18], "no_grad": [7, 19], "r": [7, 10, 16, 17, 19, 20, 21, 27, 30, 33], "inp_0": 7, "dataflow": [7, 16, 17, 20, 21, 31], "lv": 7, "permute_dim": [7, 18, 19], "metadata": [7, 31, 33, 36], "expr": [7, 14, 16, 17, 18, 19, 20, 21, 27, 29, 31, 32, 33, 35], "constant": [7, 14, 16, 18, 19, 20, 21, 27, 29, 30, 31, 33, 34, 35], "lv1": [7, 17, 19, 21], "matmul": [7, 18, 19, 21, 29, 31, 35], "out_dtyp": [7, 18, 19, 21, 35], "lv2": [7, 19, 21], "lv3": 7, "lv4": 7, "lv5": 7, "lv6": 7, "3": [7, 16, 18, 19, 21, 28, 29, 31, 33, 35, 37], "gv": [7, 17, 36], "omit": [7, 14, 31], "show_meta": [7, 27], "up": [7, 14, 16, 19, 20, 21, 22, 26, 27, 33], "successfulli": [7, 15], "mention": 7, "central": 7, "abil": 7, "hold": [7, 14, 16, 18, 31], "both": [7, 14, 16, 18, 19, 20, 22, 30, 31, 33, 34, 35], "high": [7, 15, 21, 30, 33, 35], "graph": [7, 14, 16, 18, 19, 20, 21, 35], "current": [7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 29, 31, 34, 35, 36], "sole": 7, "consist": [7, 14, 21, 25, 30, 31], "mark": [7, 17, 19, 20, 21, 31, 33, 34], "varieti": 7, "predefin": [7, 14], "simplifi": [7, 21, 31, 34, 35], "usag": [7, 14, 16, 19, 20, 22, 27, 33, 35], "By": [7, 16, 18, 19, 20, 21, 26, 27, 28, 29, 31, 35], "get_pipelin": [7, 20], "order": [7, 14, 15, 16, 18, 19, 20, 21, 25, 27, 29, 30, 31, 32, 35], "legalizeop": [7, 21], "call_tir": [7, 16, 17, 19, 20, 21, 33], "annotatetiroppattern": [7, 21], "fusion": [7, 21, 31, 34], "foldconst": [7, 21, 36], "pass": [7, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36], "fold": [7, 18, 21, 31, 34, 35], "fuseop": [7, 21], "fusetir": [7, 21], "work": [7, 15, 20, 21, 26, 27, 31, 32, 34, 36], "base": [7, 11, 14, 16, 18, 19, 20, 21, 22, 23, 27, 28, 33, 34, 35, 36], "privat": [7, 17], "fused_matmul1_add1": 7, "int64": [7, 16, 17, 19, 21, 33, 35], "param_0": 7, "param_1": 7, "var_t_add_intermedi": 7, "var_matmul_intermedi": 7, "i0": [7, 17, 31], "i1": [7, 17, 29, 31], "v_i0": 7, "v_i1": 7, "ax1": [7, 21, 31], "t_add": [7, 21], "v_ax0": [7, 21], "v_ax1": [7, 21], "fused_matmul_add_relu": 7, "var_compute_intermedi": 7, "cl": [7, 11, 15, 20, 22, 24, 27], "out_sinfo": [7, 19, 20], "chang": [7, 18, 20, 21, 31, 33, 34, 35], "dlight": 7, "cuda": [7, 15, 20, 21, 22, 24, 27, 28, 33, 34], "note": [7, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 31, 33, 35, 36], "dl": 7, "applydefaultschedul": [7, 10], "gemv": [7, 10], "generalreduct": 7, "fallback": 7, "is_schedul": 7, "var_matmul_intermediate_loc": 7, "scope": [7, 14, 15, 16, 17, 18, 19, 20, 21, 24, 29, 30, 31, 33, 34, 35], "var_matmul_intermediate_rf_loc": 7, "ax0_fused_0": 7, "thread_bind": [7, 31, 33], "blockidx": [7, 31, 34], "ax0_fused_1": 7, "threadidx": [7, 27, 31, 34], "ax1_fused_1": 7, "matmul_rf_init": 7, "vax1_fused_1": 7, "v0": [7, 21, 24, 31], "ax1_fused_0": 7, "matmul_rf_upd": 7, "vax1_fused_0": 7, "ax1_fus": 7, "ax0_fused_0_1": 7, "49": 7, "still": [7, 16, 20, 34, 36], "backend": [7, 18, 21, 27, 33, 35, 36], "common": [7, 13, 14, 16, 18, 21, 27, 30, 31, 34, 35, 36], "llm": 7, "would": [7, 14, 16, 20, 21, 27, 35], "improv": 7, "futur": [7, 15, 20], "virtual": [7, 18, 19, 20, 21, 26, 34], "exec": 7, "dev": [7, 17, 20, 22, 24, 25, 26, 27, 28, 33, 35], "devic": [7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34], "str": [7, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "kind": [7, 10, 14, 15, 20, 21, 28, 31, 33], "vm": [7, 20, 21, 23, 26], "virtualmachin": [7, 20, 26], "rand": [7, 21], "tvm_data": [7, 35], "tvm_out": [7, 35], "compar": [7, 14, 16, 21, 24, 30], "torch_out": 7, "atol": 7, "timing_r": [7, 20, 26], "0075": 7, "641": [7, 8], "quick_start": [7, 8], "03": 8, "get_started_tutori": 8, "quick": [8, 9, 24, 27, 29, 33], "github": [9, 18, 19], "merg": [9, 14, 16, 21, 31, 34], "instal": 9, "public": 9, "packag": [10, 15, 20, 26], "effici": [10, 31], "box": [10, 35], "deep": [10, 15, 21, 37], "workload": [10, 15, 35], "rule": [10, 14, 15, 16, 18, 19, 20, 21, 29, 33, 35, 36], "schedulerul": [10, 15], "appli": [10, 13, 15, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35, 36], "primfunc": [10, 15, 16, 17, 19, 20, 21, 25, 29, 30, 31, 32, 33, 34], "blockinfo": 10, "iterinfo": 10, "block_rv": 10, "blockrv": [10, 15, 31], "reduction_block": 10, "dom": [10, 29, 33], "union": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36], "primexpr": [10, 14, 16, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 35], "dom_kind": 10, "ssss": [10, 31], "sssr": 10, "is_elementwis": 10, "whether": [10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36], "elementwis": [10, 19, 35], "trivial": [10, 31], "is_gemm": 10, "gemm": [10, 21, 30], "is_gemv": 10, "is_inject": 10, "inject": [10, 31, 34], "is_reduct": 10, "liter": [10, 15, 19, 20, 33], "o": [10, 18, 21, 24, 27, 35], "loop_rv": 10, "looprv": [10, 31], "thin": [10, 34], "wrapper": [10, 13, 18, 34, 36], "tunabl": 10, "either": [10, 13, 16, 18, 19, 20, 21, 27, 31, 33, 35], "allow": [10, 14, 16, 19, 20, 21, 22, 23, 28, 29, 30, 31, 33, 34, 35], "func": [10, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36], "built": [10, 15, 17, 20, 28, 34], "from_cal": 10, "callabl": [10, 15, 16, 17, 18, 19, 20, 21, 22, 26, 31, 33, 34, 35, 36], "myrul": 10, "my_rul": 10, "do": [10, 11, 14, 15, 16, 18, 19, 20, 21, 22, 27, 28, 29, 31, 32, 33, 34, 35], "someth": [10, 25], "normalize_prim_func": 10, "normal": [10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 26, 27, 31, 33, 35], "try_inlin": 10, "inlin": [10, 29, 31], "mani": [10, 34], "try_inline_contiguous_spati": 10, "block_info": [10, 31], "contigu": [10, 31], "messag": [11, 19, 33], "suggest": [11, 16], "convent": [11, 14, 19, 20, 23, 26, 28, 31, 35], "readabl": [11, 15, 19, 25, 27], "copi": [11, 14, 16, 18, 19, 20, 21, 23, 24, 31, 33, 34, 35], "rais": [11, 14, 15, 16, 18, 20, 28, 30, 31, 33, 35], "guid": [11, 31], "except": [11, 14, 18, 19, 31, 33, 35], "diagnosticerror": 11, "diagnost": 11, "were": 11, "report": [11, 16, 20, 22, 25, 26, 27, 36], "dure": [11, 14, 15, 19, 20, 21, 22, 25, 27, 30, 31, 33, 34, 35, 36], "configur": [11, 20, 25, 27, 34, 36], "render": [11, 13, 19], "internalerror": 11, "msg": [11, 17], "intern": [11, 16, 20, 22, 26, 27, 31, 33, 34, 35, 37], "system": [11, 14, 19, 20, 22, 27, 28, 37], "log": [11, 15, 19, 22, 29, 33, 35], "fatal": 11, "opattributeinvalid": 11, "attribut": [11, 14, 16, 17, 18, 19, 20, 21, 24, 27, 28, 29, 30, 31, 33, 34, 35], "invalid": [11, 35], "format": [11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 31, 33, 35], "attr_nam": [11, 14, 28], "op_nam": [11, 14, 19, 21, 35], "opattributerequir": 11, "found": [11, 14, 15, 16, 19, 30, 33, 35], "opattributeunimpl": 11, "operror": 11, "opnotimpl": 11, "missing_op": 11, "frontend_nam": 11, "rpcerror": 11, "thrown": [11, 18, 19], "remot": [11, 20, 22, 23, 26, 27], "server": [11, 22], "rpc": [11, 12, 15, 20, 26, 27], "rpcsessiontimeouterror": 11, "session": [11, 22, 23], "expir": 11, "tvmerror": [11, 14, 16, 20], "give": [11, 19, 20, 22, 35], "ani": [11, 14, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 31, 33, 34, 35], "register_error": 11, "regist": [11, 14, 15, 17, 19, 20, 21, 22, 23, 27, 28, 31, 33, 36], "recogn": [11, 28], "ffi": 11, "handler": 11, "fregist": [11, 14], "f": [11, 14, 19, 20, 22, 27, 29, 31, 33, 35], "myerror": 11, "runtimeerror": [11, 18], "err_inst": 11, "create_ffi_error": 11, "xyz": 11, "assert": [11, 14, 16, 19, 20, 21, 24, 27, 33, 34, 36], "isinst": [11, 14, 21, 34, 36], "instrument": [12, 20, 26, 34, 36], "relax_vm": 12, "disco": 12, "profil": [12, 13, 15, 20, 26, 27, 33, 34], "topi": [12, 19, 21, 29], "analysi": [12, 14, 15, 19, 21, 31, 34, 36], "stmt_functor": 12, "block_build": 12, "op": [12, 13, 14, 16, 18, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35], "across": [13, 14, 16, 19, 20, 35, 36], "passinstru": [13, 36], "subclass": [13, 15, 18, 27, 35], "pass_instru": 13, "case": [13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 27, 31, 33, 34, 35, 36], "enter_pass_ctx": [13, 36], "exit_pass_ctx": [13, 36], "should_run": 13, "run_before_pass": 13, "run_after_pass": 13, "adjust": [13, 14, 18, 20, 26, 27, 34], "behavior": [13, 19, 21, 27, 29, 31, 32, 33, 34, 35, 36], "enter": 13, "context": [13, 15, 16, 21, 27, 28, 29, 34, 36], "exit": 13, "info": [13, 14, 16, 17, 18, 19, 20, 21, 33, 34, 36], "passinfo": [13, 36], "determin": [13, 16, 19, 21, 30, 31, 33, 35], "skip": [13, 14, 16, 19, 31, 34], "passtiminginstru": 13, "retriev": [13, 15, 30, 31, 33], "string": [13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35], "rtype": [13, 16, 33, 36], "timing_inst": 13, "passcontext": [13, 21, 34, 36], "relay_mod": 13, "relai": [13, 14, 16, 19, 21, 30, 35, 36], "infertyp": 13, "foldscaleaxi": 13, "pi_cl": 13, "pi_class": 13, "skippass": 13, "skip_pass_nam": 13, "uncom": 13, "keyword": [13, 17, 19, 20, 28, 35, 37], "pass_info": 13, "skip_annot": 13, "annotatespan": 13, "explicitli": [14, 27, 31], "attr": [14, 16, 17, 18, 19, 20, 21, 29, 31, 33, 34, 35], "node": [14, 16, 17, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34], "mainli": [14, 19, 21, 31], "side": [14, 16, 18, 19, 20, 23, 27, 30, 31, 34], "alter_layout": [14, 19], "get_int": [14, 19], "get_int_tupl": [14, 19], "get_str": [14, 19], "list_field_info": [14, 19], "field": [14, 16, 18, 19, 20, 26, 33, 35], "attrfieldinfo": [14, 19], "baseexpr": 14, "basefunc": [14, 16, 17], "member": [14, 16, 19, 34, 35, 36], "attr_key_or_dict": 14, "attr_valu": [14, 16], "dict": [14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36], "pair": [14, 21, 27, 31, 35], "attr_map": [14, 16], "dictattr": [14, 16, 19, 20], "param": [14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 29, 33, 34, 35], "without_attr": [14, 16], "attr_kei": [14, 16, 33, 34], "without": [14, 16, 20, 21, 26, 27, 31, 33, 34, 35], "delet": 14, "attrubt": 14, "callingconv": 14, "constantmemorypool": 14, "pool": [14, 19, 35], "constantpoolinfo": 14, "pool_nam": 14, "constant_info_arr": 14, "pool_info_properti": 14, "relat": [14, 16, 19, 22, 31, 34], "ro": 14, "could": [14, 15, 16, 18, 20, 21, 26, 31, 34, 36], "poolinfoproperti": 14, "constructor": [14, 16, 20, 22, 28], "name_hint": [14, 16, 17, 18, 19, 20, 21, 33], "belong_to": 14, "adt": [14, 16], "hint": [14, 16, 17, 18, 19, 20, 21, 29, 31, 33, 34, 35], "globaltypevar": [14, 16], "denot": [14, 19, 20, 21, 30, 35], "belong": [14, 23], "dictionari": [14, 18, 20, 26, 27, 28, 29, 35], "item": [14, 19, 20, 21, 31, 35], "dummyglobalinfo": 14, "envfunc": [14, 16, 20], "global": [14, 15, 16, 17, 19, 20, 21, 23, 27, 28, 31, 33, 34, 35], "serial": [14, 17, 25, 27, 31, 34], "env": [14, 22], "functyp": [14, 30], "arg_typ": 14, "ret_typ": [14, 16, 21, 33, 35], "type_param": 14, "type_constraint": 14, "constraint": [14, 21, 30, 33], "foral": 14, "typevar": 14, "typeconstraint": 14, "globalinfo": [14, 16], "appear": [14, 16, 30, 31, 34, 35], "same_a": [14, 16, 19, 20, 21, 24, 30], "overload": [14, 16, 19, 20, 33], "equal": [14, 15, 16, 18, 19, 20, 21, 24, 27, 33, 35], "typekind": 14, "adthandl": 14, "alias": [14, 19], "act": 14, "globalvar": [14, 16, 17, 19, 20, 31, 33, 36], "type_annot": [14, 16, 19, 33], "store": [14, 15, 16, 19, 28, 31, 33, 34], "astext": [14, 16, 19], "show_meta_data": [14, 16, 19, 36], "text": [14, 16, 18, 19, 20, 22, 27], "meta": [14, 15, 16, 19, 21, 27, 28, 33, 35, 36], "comment": [14, 16, 19], "necessari": [14, 15, 16, 19, 34, 35], "fulli": [14, 16, 18, 19, 30, 33, 35], "howev": [14, 16, 19, 27, 30], "dump": [14, 15, 16, 19, 36], "big": [14, 16, 19, 21], "g": [14, 16, 19, 20, 21, 27, 28, 31, 34, 35], "weight": [14, 15, 16, 18, 19, 21, 34, 35], "type_definit": [14, 16], "global_info": [14, 16], "basic": [14, 16, 34, 35], "from_expr": [14, 16], "type_def": [14, 16], "relayexpr": [14, 16, 17, 18, 19, 20, 21, 33, 35], "global_func": [14, 16], "entri": [14, 16, 18, 19, 21, 27, 34, 35], "wrap": [14, 16, 18, 21, 25, 28, 30, 34, 35], "get_attr": [14, 16], "get_constructor": [14, 16], "tag": [14, 16, 28, 29, 33, 34, 35], "get_global_type_var": [14, 16], "global_type_var": [14, 16], "find": [14, 16, 19, 30, 35], "collect": [14, 16, 23, 25, 27, 28, 31, 34, 35], "get_global_var": [14, 16], "global_var": [14, 16, 33], "insert": [14, 16, 18, 19, 20, 21, 31, 34, 35], "update_func": [14, 16, 17], "update_global_info": [14, 16], "remov": [14, 16, 18, 19, 20, 21, 22, 24, 27, 31, 34, 35], "incompletetyp": 14, "incomplet": 14, "add_argu": 14, "descript": [14, 16, 28, 29], "add_type_rel": 14, "rel_nam": 14, "type_rel_func": 14, "attach": [14, 21, 22, 23, 34], "arg": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 30, 33, 35], "back": [14, 20, 22, 23, 27, 31, 35], "solv": 14, "opaddtyperel": 14, "typereport": 14, "accord": [14, 16, 17, 21, 29, 30, 31, 33, 34, 35], "type_rel": 14, "has_attr": [14, 21], "list_op_nam": 14, "registri": [14, 28, 34], "reset_attr": 14, "reset": [14, 19], "set_attr": 14, "plevel": 14, "prioriti": [14, 19, 21, 22], "set_attrs_type_kei": 14, "set_num_input": 14, "number": [14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36], "set_support_level": 14, "pointertyp": 14, "element_typ": 14, "storage_scop": [14, 19, 31, 33, 34], "pointer": [14, 16, 24, 33, 35], "storag": [14, 16, 19, 21, 30, 31, 33, 34, 35], "poolinfo": 14, "workspacepoolinfo": 14, "size_hint_byt": 14, "clock_frequency_hz": 14, "read_bandwidth_bytes_per_cycl": 14, "write_bandwidth_bytes_per_cycl": 14, "read_latency_cycl": 14, "write_latency_cycl": 14, "target_burst_byt": 14, "restrict": [14, 30], "clock": [14, 27], "frequenc": [14, 18, 27, 35], "hz": 14, "hasn": 14, "bandwidth": 14, "byte": [14, 22, 27, 28, 30, 33, 35], "cycl": [14, 16], "latenc": 14, "burst": 14, "per": [14, 15, 16, 20, 21, 25, 26, 27, 30, 34, 35], "assum": [14, 16, 18, 19, 20, 21, 31, 33, 34, 35], "integ": [14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35], "primtyp": 14, "begin": [14, 16, 17, 18, 19, 33, 35], "span": [14, 16, 18, 19, 20, 21, 27, 29, 33, 34, 35], "otherwis": [14, 15, 16, 18, 19, 20, 21, 27, 28, 30, 31, 33, 34, 35, 36], "itervar": [14, 16, 19, 21, 27, 29, 31, 33, 34, 35], "from_min_ext": 14, "min_valu": [14, 29, 33], "extent": [14, 16, 31, 33, 34], "rng": 14, "checked_typ": 14, "struct_info": [14, 16, 17, 18, 19, 20, 21], "structinfo": [14, 16, 17, 18, 19, 20, 21], "struct": [14, 16, 17, 18, 19, 20, 33], "avail": [14, 15, 17, 18, 21, 22, 23, 27, 28, 35], "relayreftyp": 14, "sequentialspan": 14, "sourcenam": 14, "identifi": [14, 16, 18, 20, 21, 22, 31], "source_nam": 14, "end_lin": 14, "column": [14, 19, 25, 27, 33, 35], "end_column": 14, "lineno": 14, "col_offset": 14, "offset": [14, 16, 18, 19, 31, 33, 35], "tensoraffinetyp": 14, "scale": [14, 18, 19, 35], "zero_point": 14, "quantiz": [14, 35], "datatyp": [14, 18, 19, 20, 27, 34, 35], "space": [14, 15, 18, 19, 21, 27, 33, 34, 35], "x_q": 14, "channel": [14, 18, 19, 33, 35], "tensortyp": [14, 36], "concret": [14, 18], "assign": [14, 18, 20, 23], "concrete_shap": 14, "typeerror": 14, "tupleaffinetyp": 14, "affin": [14, 31, 35], "tupletyp": 14, "referenti": [14, 16], "typecal": 14, "type_cal": 14, "typedata": 14, "header": [14, 36], "type_var": 14, "algebra": [14, 31], "treat": [14, 18, 19, 20, 28], "typerel": 14, "num_input": [14, 20, 21], "fill": [14, 18, 19, 20, 31, 33, 34, 35], "later": [14, 16, 27, 31], "over": [14, 16, 18, 19, 20, 21, 25, 26, 27, 29, 31, 33, 35], "vdevic": [14, 18, 19, 20, 21], "vdevice_id": 14, "memory_scop": [14, 28], "workspacememorypool": 14, "workspac": [14, 21, 30, 33], "rw": [14, 16, 33], "assert_structural_equ": 14, "lh": [14, 16, 19, 20, 21, 29, 30, 31, 33, 35], "rh": [14, 16, 19, 20, 21, 29, 30, 31, 33, 35], "map_free_var": 14, "left": [14, 15, 16, 19, 29, 30, 33, 35], "operand": [14, 16, 19, 29, 30, 33, 35], "shall": 14, "free": [14, 16, 19, 21, 27, 33], "valueerror": [14, 28], "load_json": 14, "json_str": 14, "load": [14, 15, 16, 20, 21, 22, 23, 27, 28, 31, 33], "json": [14, 15, 25, 27, 31], "make_nod": 14, "type_kei": [14, 27], "kwarg": [14, 15, 17, 18, 19, 20, 21, 26, 27, 28, 29], "attrsnod": 14, "creator": 14, "setup": [14, 17, 20], "intimm": [14, 19, 28, 33, 35], "register_intrin_low": 14, "lower": [14, 19, 21, 30, 31, 33, 34, 35], "register_op_attr": 14, "save_json": 14, "save": [14, 15, 18, 19, 20, 26, 27, 31], "dag": 14, "irnod": 14, "condit": [14, 19, 20, 29, 30, 31, 33, 34, 35], "varnod": [14, 20], "occur": [14, 16, 19, 21, 33, 34, 35], "site": [14, 20, 21, 34], "comparison": [14, 16, 19, 21, 30, 33], "structural_hash": 14, "assert_strucural_equ": 14, "hash": [14, 15], "uniqu": [14, 16, 17, 19, 20, 23, 31, 35], "made": [14, 16, 19, 20, 21, 31, 33], "concist": 14, "well": [14, 16, 20, 21, 30, 35, 36], "highli": 14, "rare": [14, 22], "collison": 14, "occurr": [14, 20], "structrual_equ": 14, "infrastructur": [15, 36], "builder": [15, 16, 17, 18, 20], "interfac": [15, 20, 22, 25, 26, 27, 28], "build_input": 15, "builderinput": 15, "builderresult": 15, "build_result": 15, "costmodel": 15, "cost": [15, 20, 21, 26, 27], "xgb": 15, "cost_model": 15, "predict": [15, 19, 35], "tunecontext": 15, "measurecandid": 15, "score": [15, 19], "tune": [15, 21, 28, 34, 36], "measur": [15, 20, 26, 27], "runnerresult": 15, "databas": [15, 21, 36], "commit_tuning_record": 15, "record": [15, 36], "tuningrecord": 15, "commit": [15, 33], "commit_workload": 15, "miss": [15, 18, 33], "search": [15, 21, 22, 27, 31, 34, 35], "ad": [15, 17, 18, 19, 21, 31, 34, 35, 36], "ordered_union": 15, "dump_prun": 15, "destin": [15, 18, 19, 20, 31, 33, 34, 35], "prune": 15, "jsondatabas": [15, 36], "get_all_tuning_record": 15, "tuning_record": 15, "get_top_k": 15, "top_k": 15, "top": [15, 18, 31, 35, 36], "top_k_record": 15, "has_workload": 15, "queri": [15, 18, 19, 27, 31, 33], "workload_nam": 15, "best": [15, 17, 21], "query_ir_modul": 15, "query_schedul": 15, "query_tuning_record": 15, "extractedtask": 15, "task_nam": 15, "dispatch": [15, 20, 28], "task": [15, 21], "featureextractor": 15, "extractor": 15, "extract_from": 15, "measurecallback": 15, "task_schedul": 15, "taskschedul": 15, "task_id": 15, "measure_candid": 15, "builder_result": 15, "runner_result": 15, "callback": [15, 17, 21, 27, 31, 33, 34, 36], "id": [15, 16, 19, 20, 21, 23, 24, 27, 33], "runner": [15, 21], "args_info": 15, "arginfo": 15, "mutat": [15, 19, 20, 31, 32], "explor": 15, "fail": [15, 16, 18, 19, 31], "tensorcor": [15, 34], "hexagon": [15, 22, 24, 28], "float": [15, 16, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33, 35], "postproc": 15, "postprocessor": 15, "post": [15, 16, 20, 32], "wa": [15, 30], "cloned_postproc": 15, "tabl": [15, 17, 25, 27, 31], "timeit": 15, "runner_input": 15, "runnerinput": 15, "runnerfutur": 15, "artifact": [15, 20, 27], "runner_futur": 15, "modifi": [15, 19, 20, 21, 34, 35], "design_spac": 15, "cloned_rul": 15, "searchstrategi": 15, "strategi": 15, "evolutionari": 15, "replai": 15, "generate_measure_candid": 15, "finish": [15, 23, 27, 34], "notify_runner_result": 15, "post_tun": 15, "pre_tun": 15, "max_trial": 15, "num_trials_per_it": 15, "pre": [15, 16, 19, 20, 21, 28, 31, 32, 33], "maximum": [15, 18, 19, 21, 22, 27, 29, 31, 33, 34, 35], "trial": [15, 20, 21, 26], "spacegener": 15, "cloned_sg": 15, "generate_design_spac": 15, "round": [15, 19, 29, 33, 35], "robin": 15, "gradient": [15, 17, 18, 19, 20, 21, 29, 35], "join_running_task": 15, "wait": [15, 23, 33], "join": [15, 25, 27, 35], "next_task_id": 15, "fetch": [15, 20, 23, 26], "print_tuning_statist": 15, "human": [15, 19, 25, 27], "statist": [15, 19, 20], "terminate_task": 15, "termin": [15, 22, 33], "touch_task": 15, "touch": 15, "statu": 15, "task_weight": 15, "max_trials_glob": [15, 21], "max_trials_per_task": [15, 21], "measure_callback": 15, "space_gener": 15, "spacegeneratortyp": 15, "search_strategi": 15, "searchstrategytyp": 15, "rand_stat": 15, "num_thread": [15, 27], "physic": [15, 27], "logic": [15, 18, 19, 35], "logger": 15, "resourc": [15, 22, 33], "schedulefntyp": 15, "blank": 15, "count": [15, 18, 19, 21, 25, 29, 30, 33, 35], "cloned_context": 15, "deleg": 15, "batch": [15, 18, 19, 21, 30, 35], "cleanup": 15, "prepar": 15, "evolutionarysearch": 15, "memorydatabas": 15, "randommodel": 15, "derived_object": 15, "deriv": [15, 16, 19, 20, 30], "register_object": 15, "pyrunn": 15, "_pyrunn": 15, "f_run": 15, "__init_handle_by_constructor__": 15, "_ffi_api": 15, "runnerpyrunn": 15, "_tvm_metadata": [15, 20], "notimplementederror": 15, "localrunn": 15, "is_meta_schedule_en": 15, "tune_task": 15, "work_dir": [15, 21], "module_equ": 15, "buildertyp": 15, "runnertyp": 15, "databasetyp": 15, "costmodeltyp": 15, "callbacklisttyp": 15, "taskschedulertyp": 15, "structuralequ": [15, 30], "raw": [15, 31, 34, 35], "anchor": [15, 30], "varint": 15, "tune_tir": 15, "num_tuning_cor": 15, "seed": [15, 31], "special_spac": 15, "basecheckresult": 16, "fine": 16, "grain": 16, "fail_l0": 16, "intersect": [16, 29, 33], "fail_l1": 16, "failur": 16, "fail_l2": 16, "unknown": [16, 20, 27, 28], "iter_var": [16, 33, 34], "bufferregion": [16, 30, 33], "stmt": [16, 21, 29, 30, 31, 32, 33, 34, 35], "matchbufferregion": [16, 33], "subregion": [16, 33], "match": [16, 17, 18, 20, 21, 22, 28, 31, 33, 34, 35], "layout": [16, 18, 19, 21, 29, 31, 33, 34, 35], "decl_buff": [16, 21, 33, 35], "instead": [16, 19, 20, 21, 24, 27, 29, 31, 33, 34, 35, 36], "document": [16, 33], "access_ptr": [16, 33], "access_mask": [16, 33], "ptr_type": [16, 33], "content_lan": [16, 33], "head": [16, 19, 29, 33], "ptress": [16, 33], "mask": [16, 18, 19, 24, 27, 33, 35], "unless": [16, 30, 33, 35], "lane": [16, 29, 33], "greater": [16, 19, 33, 35], "ptr": [16, 33], "bitmask": [16, 27, 31, 33], "100": [16, 19, 27, 33, 35], "get_flattened_buff": [16, 33], "flatten": [16, 18, 19, 21, 33, 34, 35], "flat": [16, 18, 19, 33, 35], "offset_of": [16, 33], "flattened_indic": [16, 33], "vload": [16, 33], "vstore": [16, 33], "sinfo_arg": [16, 19, 20], "terminologi": [16, 19, 20], "callnod": [16, 19, 20, 21], "call_builtin_with_ctx": [16, 19, 20], "etc": [16, 18, 19, 20, 21, 31, 35, 36], "externfunc": [16, 19, 20, 21], "dataflowblock": [16, 17, 20, 21], "insid": [16, 20, 30, 31, 33, 34], "pure": [16, 19, 20, 21, 31, 33], "effect": [16, 18, 19, 20, 21, 25, 33], "alia": [16, 19, 20, 21, 27, 31, 35], "funcstructinfo": [16, 20], "ret": [16, 17, 18, 19, 20, 21, 24, 26, 33, 34, 35], "puriti": [16, 20, 21], "visibl": [16, 17, 20, 30], "consid": [16, 19, 20, 30, 33, 35], "some": [16, 18, 19, 20, 21, 27, 29, 31, 33, 35, 36], "impur": [16, 20], "opaque_func": [16, 20], "derive_func": [16, 20], "specifici": [16, 20], "simultan": [16, 20], "ret_struct_info": [16, 20], "is_pur": [16, 20, 31], "bind_param": [16, 20], "binding_map": [16, 20, 21], "_np": [16, 20], "replac": [16, 19, 20, 21, 31, 34, 35], "bind_symbolic_var": [16, 20], "create_empti": [16, 20], "indexmap": [16, 19, 21, 31, 33, 34], "initial_indic": [16, 19, 21, 33], "final_indic": [16, 19, 21, 33], "inverse_index_map": [16, 19, 21, 33], "prior": [16, 19, 21, 33, 34], "invers": [16, 19, 21, 33, 35], "fly": [16, 19, 21, 27, 31, 33], "respons": [16, 19, 21, 24, 31, 33, 35], "from_func": [16, 19, 21, 33], "mapping_funct": [16, 19, 21, 33], "ndim": [16, 17, 18, 19, 20, 21, 29, 31, 33, 35], "index_dtyp": [16, 19, 21, 33], "variad": [16, 19, 21, 23, 33], "index_map": [16, 19, 21, 31, 33], "from_func_with_separ": [16, 19, 21, 33], "axis_separ": [16, 19, 21, 31, 33, 35], "throw": [16, 19, 21, 28, 33], "biject": [16, 19, 21, 33], "is_equivalent_to": [16, 19, 21, 33], "other_map": [16, 19, 21, 33], "is_equival": [16, 19, 21, 33], "map_indic": [16, 19, 21, 33], "map_ndarrai": [16, 19, 21, 33], "arr_src": [16, 19, 21, 33], "thie": [16, 19, 21, 33], "arr_dst": [16, 19, 21, 33], "map_shap": [16, 19, 21, 33], "non_surjective_invers": [16, 19, 21, 33], "pad": [16, 18, 19, 21, 31, 33, 35], "predic": [16, 19, 21, 29, 31, 33], "inverse_map": [16, 19, 21, 33], "14": [16, 19, 21, 28, 33, 35, 37], "axis0": [16, 19, 21, 33], "axis2": [16, 19, 21, 33], "intenum": 16, "enum": [16, 27], "buffer_map": [16, 21, 33, 34], "param_map": [16, 21, 33], "mem_copi": [16, 21, 33], "_": [16, 21, 29, 31, 33, 35], "mem_copy_16_16": [16, 21, 33], "with_bodi": [16, 21, 33], "new_bodi": [16, 21, 33], "new_func": [16, 21, 33, 34], "is_base_of": [16, 19, 20], "all_global_var": 16, "df": [16, 17, 32], "all_var": 16, "bound_var": 16, "contains_impure_cal": 16, "own_nam": 16, "defined_symbolic_var": 16, "dedupl": 16, "analyz": [16, 35], "derive_call_ret_struct_info": 16, "func_sinfo": 16, "ctx": [16, 19, 21, 34, 36], "blockbuild": [16, 17, 18, 19, 21], "depend": [16, 18, 19, 21, 22, 25, 27, 31, 33, 34, 35, 36], "detect_recurs": 16, "mutual": 16, "even": [16, 19, 20, 26], "simpli": [16, 27, 29, 32, 33], "group": [16, 18, 19, 20, 21, 33, 35], "itself": [16, 22, 23, 33], "singleton": [16, 18, 19, 27], "erase_to_well_defin": 16, "sinfo": 16, "shape_var_map": 16, "var_map": 16, "eras": [16, 27], "estimate_memory_usag": 16, "estim": [16, 30], "plan": [16, 19, 21, 34], "might": [16, 21, 24], "cross": [16, 18, 19, 22, 27, 28, 34], "accumul": [16, 19, 21, 31, 33, 35], "everi": [16, 19, 20, 21, 26, 31, 34, 35], "alloc_tensor": [16, 19], "alloc_storag": [16, 19], "est": 16, "regard": [16, 19, 31], "free_symbolic_var": 16, "free_var": 16, "varbind": [16, 20, 21], "get_static_typ": 16, "get_var2v": [16, 21], "has_reshape_pattern": 16, "essenti": 16, "reshap": [16, 18, 19, 21, 34, 35], "expand_dim": [16, 19, 21, 35], "squeez": [16, 18, 19, 35], "l_0": 16, "l_1": [16, 31], "l_b": 16, "r_0": [16, 35], "r_1": [16, 35], "r_a": 16, "boolean": [16, 17, 18, 19, 21, 22, 29, 31, 33, 34, 35, 36], "neg": [16, 18, 19, 29, 31, 33, 35], "posit": [16, 18, 19, 22, 27, 29, 31, 33, 34, 35], "whenev": 16, "guarante": [16, 19, 20, 31, 32], "safeti": 16, "name_to_bind": 16, "post_order_visit": [16, 32], "fvisit": [16, 32], "visitor": [16, 20, 32], "remove_all_unus": [16, 20, 21], "unus": [16, 20, 21], "dce": [16, 21], "deadcodeelimin": [16, 21], "struct_info_base_check": 16, "subsum": 16, "struct_info_lca": 16, "unifi": [16, 34], "least": [16, 18, 19, 31], "ancestor": [16, 30, 31], "right": [16, 19, 29, 30, 31, 33, 35], "lca": [16, 30, 31, 34], "suggest_layout_transform": 16, "write_buffer_transform": 16, "tir_vars_in_struct_info": 16, "udchain": 16, "dfb": [16, 20], "chain": [16, 21, 31], "well_form": 16, "check_struct_info": 16, "rx": [17, 18], "tensorstructinfo": [17, 18, 19, 20, 21], "float16": [17, 19, 31, 34], "bb": [17, 18, 19, 21, 33, 35], "lv0": [17, 21], "emit": [17, 18, 20, 21], "multipli": [17, 18, 19, 21, 29, 33, 35], "gv0": [17, 21], "emit_output": 17, "emit_func_output": 17, "input_s": 17, "hidden_s": [17, 18], "output_s": [17, 19, 35], "sequenti": [17, 35, 36], "logsoftmax": 17, "add_func": 17, "gvar": [17, 19, 20], "begin_scop": 17, "seq": [17, 33, 35], "properli": 17, "track": [17, 21, 31, 33], "effort": [17, 21], "deduct": [17, 18, 19], "call_t": [17, 21], "emit_t": 17, "reserv": [17, 19, 24, 27], "primfunc_name_hint": 17, "primfunc_attr": 17, "newli": 17, "call_te_with_grad": 17, "te_grad_nam": [17, 19, 20], "te_grad_kwarg": [17, 19, 20], "call_tir_with_grad": [17, 19, 20], "current_block_is_dataflow": 17, "dataflowscop": 17, "emit_norm": 17, "args_dict": 17, "rx_func": 17, "hello": 17, "var_rxplacehold": 17, "var_rxplaceholder_1": 17, "var_comput": 17, "rxplacehold": 17, "rxplaceholder_1": 17, "x1": [17, 18, 19, 33], "end_scop": 17, "functionscop": 17, "defer": 17, "get_unique_nam": 17, "name_prefix": 17, "prefix": [17, 18, 21, 27, 29, 35], "lookup_bind": [17, 20], "lookup": [17, 18, 20, 26, 27], "binding_table_": 17, "match_cast": 17, "matchcast": [17, 20], "testing_scop": 17, "def_var": 17, "testingscop": 17, "purpos": [17, 19, 21, 23, 33, 34], "updated_func": 17, "auxiliari": [17, 19, 29, 31, 35, 36], "detach_param": 18, "detach": 18, "go": 18, "detached_mod": 18, "params_dict": 18, "conv1d": [18, 19, 35], "in_channel": [18, 19, 35], "out_channel": [18, 19, 35], "kernel_s": [18, 35], "stride": [18, 19, 31, 33, 34, 35], "dilat": [18, 19, 35], "bia": [18, 19, 21, 35], "convtranspose1d": 18, "output_pad": [18, 19, 35], "face": [18, 20, 31], "implicit": [18, 19, 35], "emit_init": 18, "dataflowvar": [18, 20], "num": [18, 33, 36], "dim": [18, 21, 27, 35], "externmodul": 18, "module_spec": 18, "_spec": 18, "externmodulespec": 18, "your": [18, 27, 35], "tree": [18, 21, 31], "regular": [18, 35], "get_extern_func": 18, "funciton": 18, "prebuilt": 18, "ret_func": 18, "ioeffect": 18, "io": 18, "screen": 18, "breakpoint": 18, "print_": 18, "enclos": [18, 31], "kvcach": 18, "init_seq_len": 18, "unit_shap": 18, "append": [18, 19, 21, 31], "new_el": 18, "view": [18, 19, 24], "seq_len": [18, 19, 35], "layernorm": 18, "normalized_shap": 18, "ep": 18, "05": [18, 19, 35], "elementwise_affin": 18, "in_featur": 18, "out_featur": 18, "export_tvm": 18, "spec": [18, 19], "modulespectyp": 18, "jit": [18, 20], "pipelin": [18, 20, 31, 34, 36], "out_format": 18, "just": [18, 19, 20, 21, 34, 35, 36], "load_state_dict": 18, "state_dict": 18, "strict": 18, "descend": [18, 25, 27, 35], "exactli": [18, 31, 35], "whole": [18, 19, 35], "enforc": [18, 31], "missing_kei": 18, "unexpected_kei": 18, "unexpect": [18, 33], "named_paramet": 18, "prepend": [18, 19], "modulelist": 18, "feed": 18, "multilinear": 18, "unbound": [18, 28], "rmsnorm": 18, "epsilon": [18, 19, 35], "norm": [18, 21], "specbuild": 18, "modulespec": 18, "subroutinemixin": 18, "mixin": 18, "_expr": 18, "conveni": [18, 20, 26, 27, 36], "symbolc": 18, "done": [18, 19, 20], "eagerli": 18, "from_const": 18, "from_scalar": 18, "scalar": [18, 19, 21, 29, 33, 34, 35], "dimens": [18, 19, 20, 27, 28, 29, 31, 33, 35], "dynam": [18, 19, 20, 21, 26, 27, 28, 34, 35], "tuplestructinfo": [18, 20], "style": [18, 19, 20, 27, 31, 35], "broadcast": [18, 19, 23, 33, 35], "broadcast_to": [18, 19, 21, 35], "intexpr": 18, "chunk": [18, 19, 31], "along": [18, 19, 31, 35, 36], "piec": 18, "slice": [18, 19, 21, 29, 31, 35], "concat": [18, 19, 33, 35], "concaten": [18, 19, 35], "expand": [18, 19, 31, 35], "1d": [18, 19, 34, 35], "kernel": [18, 19, 22, 29, 34, 35], "convolv": [18, 19], "data_layout": [18, 19, 35], "ncw": [18, 19, 35], "kernel_layout": [18, 19, 35], "oiw": [18, 19, 35], "batch_siz": [18, 19, 33, 35], "width": [18, 19, 33, 35], "kernel_w": [18, 19, 35], "w": [18, 19, 21, 24, 29, 30, 33, 35], "mbox": [18, 19], "sum_": [18, 19, 35], "dx": [18, 19], "semant": [18, 19, 20, 29, 31, 33, 35], "canon": [18, 19, 28], "out_layout": [18, 19, 35], "rate": [18, 19, 35], "divis": [18, 19, 29, 31, 33, 35], "conv1d_transpos": [18, 19], "transpos": [18, 19, 35], "explain": [18, 19], "iow": [18, 19], "in_w": [18, 19], "weight_w": [18, 19], "assur": [18, 19], "out_w": [18, 19], "disambigu": [18, 19], "mix": [18, 19, 21, 35], "conv2d": [18, 19, 21, 29, 30, 35], "2d": [18, 19, 34, 35], "imag": 18, "compos": [18, 21, 33, 35], "sevar": 18, "plane": 18, "h": [18, 19, 35], "filter": [18, 21, 29, 33, 34, 35], "kh": [18, 19, 35], "kw": [18, 19, 35], "sh": 18, "sw": 18, "dh": 18, "dw": 18, "oh": [18, 37], "ow": 18, "divid": [18, 19, 29, 33, 35], "fill_valu": [18, 19, 35], "gelu": [18, 19, 21], "approxim": [18, 19, 35], "gaussian": [18, 19], "erf": [18, 19, 29, 33, 35], "gauss": [18, 19, 29, 33, 35], "tanh": [18, 19, 29, 33, 35], "cdf": 18, "get_default_dtyp": 18, "get_timestep_embed": 18, "embedding_dim": 18, "flip_sin_to_co": 18, "downscale_freq_shift": 18, "max_period": 18, "10000": 18, "timestep": 18, "denois": 18, "diffus": 18, "probabilist": [18, 37], "d": [18, 19, 33, 35, 37], "sine": 18, "cosin": 18, "sinusoid": 18, "sampl": [18, 21, 31, 35], "magnitud": 18, "group_norm": [18, 19, 35], "num_group": [18, 19, 35], "channel_axi": [18, 19, 35], "mini": 18, "paper": [18, 37], "frac": [18, 19], "mathrm": 18, "sqrt": [18, 19, 29, 33, 35], "gamma": [18, 19, 35], "beta": [18, 19, 35], "rms_norm": [18, 19, 35], "small": [18, 19, 35], "squar": [18, 19, 29, 33, 35], "avoid": [18, 19, 20, 26, 27, 31, 35], "groupnorm": 18, "interpol": [18, 19, 35], "scale_factor": 18, "mode": [18, 19, 20, 21, 22, 28, 29, 33, 35, 36], "nearest": [18, 19, 29, 33, 35], "align_corn": [18, 19, 35], "recompute_scale_factor": 18, "antialia": 18, "resiz": [18, 19, 31, 35], "request": [18, 22, 33], "algorithm": [18, 19, 21, 35], "pixel": [18, 19, 35], "recomput": [18, 19, 31], "antialias": 18, "layer_norm": [18, 19, 35], "lei": [18, 19], "ba": [18, 19], "et": [18, 19, 21], "al": [18, 19, 21], "2016": [18, 19, 21], "unlik": [18, 19, 21, 27, 29, 31, 33, 35], "awai": [18, 19], "varianc": [18, 19, 35], "matrix": [18, 19, 21, 33, 35], "latest": [18, 19], "api_specif": [18, 19], "array_api": [18, 19], "html": [18, 19, 31, 33, 35], "x2": [18, 19, 33], "mul": [18, 19, 33, 35], "before_0": 18, "after_0": 18, "before_1": [18, 19], "after_1": [18, 19], "much": [18, 31], "impli": [18, 27], "permut": [18, 19, 34, 35], "revers": [18, 19, 21, 29, 31, 35], "repeat": [18, 19, 20, 26, 27, 31, 35], "repetit": [18, 19, 35], "backward": [18, 19, 35], "remaind": [18, 19, 21, 29, 33], "keep": [18, 19, 21, 27, 31], "At": [18, 19, 31], "6": [18, 19, 31, 35], "That": [18, 19, 31], "sai": [18, 19], "biao": [18, 19], "zhang": [18, 19], "scaled_dot_product_attent": 18, "attn_mask": 18, "is_caus": 18, "dot": 18, "product": [18, 19, 35], "attent": [18, 19, 21], "compliant": 18, "yet": [18, 20, 21, 24, 31], "causal": [18, 19], "silu": [18, 19, 21], "sigmoid": [18, 19, 29, 33, 35], "softmax": [18, 19, 35], "_i": [18, 19], "exp": [18, 19, 29, 33, 35], "x_i": [18, 19], "sum_j": [18, 19], "x_j": [18, 19], "ari": [18, 35], "indices_or_sect": [18, 19, 35], "sub": [18, 20, 21, 31, 33, 35], "subtract": [18, 19, 29, 33, 35], "Its": [18, 19, 29], "mostli": [18, 19], "similar": [18, 19, 21, 22, 31, 35], "doc": [18, 19, 31, 33, 35], "stabl": [18, 19, 20], "cover": [18, 19, 31], "blob": [18, 19, 22], "changelog": [18, 19], "md": [18, 19], "13": [18, 19, 35], "select": [18, 19, 29, 31, 33, 34, 35], "taken": [18, 19, 20, 26], "tensor_expr_op": 18, "tensor_expr_func": 18, "_tir": 18, "triu": [18, 19], "diagon": [18, 19, 35], "upper": [18, 19, 21, 33, 35], "triangular": [18, 19, 35], "part": [18, 19, 21, 27, 31, 35], "unsqueez": [18, 35], "from_onnx": 18, "graphproto": 18, "shape_dict": 18, "dtype_dict": 18, "opset": 18, "keep_params_in_input": 18, "sanitize_input_nam": 18, "protobuf": 18, "v1": [18, 31], "modelproto": 18, "overrid": [18, 20, 21, 26, 28, 33, 36], "autodetect": [18, 28], "sanit": 18, "from_stablehlo": 18, "stablehlo_modul": 18, "mlir": 18, "dynamo_capture_subgraph": 18, "captur": [18, 21, 28, 30], "subgraph": [18, 35], "keep_params_as_input": 18, "translat": [18, 31, 33], "importeroutput": 18, "unwrap_unit_return_tupl": 18, "no_bind_return_tupl": 18, "graphmodul": [18, 27], "unwrap": [18, 21], "place": [18, 19, 20, 23, 31, 34, 35], "tracer": 18, "dynamo": 18, "torch_fx": 18, "_dynamo": 18, "instanti": [18, 35], "input_tensor": [18, 29], "astensor": 18, "randn": 18, "graph_modul": 18, "print_tabular": 18, "tabular": 18, "row": [18, 19, 33, 35], "relax_dynamo": 18, "sent": [18, 19], "adaptivepool2dattr": 19, "adapt": 19, "argmaxargminattr": 19, "argmax": [19, 35], "argmin": [19, 35], "astypeattr": 19, "batchnormattr": 19, "batch_norm": [19, 35], "calltirwithgradattr": 19, "concatattr": 19, "conv2dattr": 19, "conv2dtransposeattr": 19, "conv2d_transpos": [19, 35], "cumsumattr": 19, "cumsum": [19, 29, 35], "type_str": [19, 27], "datatypecod": [19, 27], "dltensor": [19, 20, 23, 24, 26, 27, 33, 34, 35], "dropoutattr": 19, "dropout": [19, 22], "einsumattr": 19, "einsum": [19, 31, 35], "expanddimsattr": 19, "packedfunc": [19, 20, 23, 25, 26, 27, 28, 29, 33, 34, 35], "flipattr": 19, "flip": [19, 35], "floatimm": [19, 33], "initattr": 19, "full_lik": [19, 29, 35], "ones": [19, 20, 21, 34], "ones_lik": 19, "zeros_lik": 19, "layernormattr": 19, "layouttransformattr": 19, "layout_transform": [19, 35], "matmulattr": 19, "permutedimsattr": 19, "pool2dattr": 19, "max_pool2d": 19, "primvalu": [19, 20], "prim": [19, 20], "repeatattr": 19, "resize2dattr": 19, "resize2d": [19, 35], "rxtupl": 19, "shapeexpr": [19, 20], "softmaxattr": 19, "splitattr": 19, "squeezeattr": 19, "statisticalattr": 19, "stridedsliceattr": 19, "strided_slic": [19, 35], "stringimm": [19, 20, 33], "takeattr": 19, "tileattr": 19, "triluattr": 19, "tril": 19, "ab": [19, 29, 33, 35, 36], "absolut": [19, 29, 33, 35], "aco": [19, 29, 33, 35], "arc": [19, 35], "co": [19, 29, 33, 34, 35], "acosh": [19, 29, 33, 35], "cosh": [19, 29, 33, 35], "arang": [19, 35], "evenli": [19, 31, 35], "primexprlik": 19, "interv": [19, 20, 26, 27, 35], "keepdim": [19, 21, 35], "correctli": [19, 20, 31, 34, 35], "against": [19, 29, 33, 35], "asin": [19, 29, 33, 35], "sin": [19, 29, 33, 35], "asinh": [19, 29, 33, 35], "sinh": [19, 29, 33, 35], "assert_op": 19, "format_arg": 19, "atan": [19, 29, 33, 35], "tan": [19, 29, 33, 35], "atanh": [19, 29, 33, 35], "bitwise_and": [19, 33, 35], "bitwis": [19, 33, 35], "AND": [19, 35], "bitwise_not": [19, 33, 35], "NOT": 19, "bitwise_or": [19, 33, 35], "OR": [19, 35], "bitwise_xor": [19, 33, 35], "xor": [19, 33, 35], "call_dps_pack": [19, 20, 21], "pack": [19, 20, 23, 27, 28, 29, 33, 34, 35], "_pure_": [19, 20], "_does_": [19, 20], "those": [19, 20, 21, 31, 35], "call_pure_pack": [19, 20], "though": [19, 20, 26, 34], "know": [19, 20], "_in": [19, 20], "reality_": [19, 20], "caus": [19, 20, 35], "calle": [19, 20], "tir_var": [19, 20], "unpack": [19, 20, 33, 35], "null": [19, 20, 27, 35], "call_tir_inplac": 19, "inplace_indic": 19, "warn": [19, 21, 28], "actual": [19, 22, 27, 34, 35], "safe": [19, 22], "live": 19, "input_indic": 19, "th": [19, 20, 21, 31, 35], "freshli": 19, "ceil": [19, 29, 33, 35], "clip": [19, 35], "collapse_sum_lik": 19, "collapse_target": 19, "summat": [19, 35], "collapse_sum_to": 19, "collaps": [19, 35], "differenti": [19, 21, 29, 35], "cumul": [19, 35], "inclus": 19, "21": 19, "dynamic_strided_slic": [19, 35], "exclus": [19, 35], "dyn_strided_slic": 19, "rank": [19, 31, 35], "subscript": [19, 35], "einstein": [19, 35], "ewise_fma": 19, "x3": 19, "hand": [19, 29, 33, 35], "lie": 19, "preserv": [19, 31], "floor": [19, 29, 33, 35], "floor_divid": [19, 35], "greater_equ": [19, 35], "hint_on_devic": 19, "dst_vdevic": 19, "realizevdevic": [19, 21], "propag": [19, 21], "dst_devic": 19, "invoke_closur": [19, 20, 26], "closur": [19, 20, 26], "vmclosur": [19, 20, 26], "type_arg": 19, "invoke_pure_closur": 19, "isfinit": [19, 29, 33, 35], "finit": [19, 29, 33, 35], "isinf": [19, 29, 33, 35], "infinit": [19, 29, 33, 35], "isnan": [19, 29, 33, 35], "nan": [19, 29, 33, 35], "pad_valu": [19, 31, 34, 35], "less": [19, 20, 26, 35], "less_equ": [19, 35], "incom": 19, "xa": 19, "natur": [19, 20], "logarithm": [19, 35], "logical_and": [19, 35], "logical_not": [19, 35], "logical_or": [19, 35], "logical_xor": [19, 35], "make_closur": 19, "masked_fil": 19, "not_equ": [19, 35], "null_valu": 19, "power": [19, 29, 33, 35], "prod": [19, 23, 35], "py_print": 19, "sep": 19, "sy": 19, "stdout": 19, "flush": [19, 27], "stream": [19, 27], "newlin": 19, "forcibli": 19, "register_gradi": 19, "fgradient": 19, "orig_var": 19, "orig_cal": 19, "output_grad": 19, "partial": [19, 31], "render_object": 19, "val": [19, 21, 33], "ideal": 19, "rsqrt": [19, 29, 33, 35], "reciproc": [19, 29, 33], "scatter_el": [19, 35], "scatter": [19, 23, 35], "shape_of": [19, 20], "shape_to_tensor": 19, "sign": [19, 29, 33, 35], "smaller": [19, 27, 34, 35], "mixtur": 19, "deviat": [19, 35], "assume_inbound": 19, "tensor_to_shap": [19, 21], "l": [19, 22, 29, 33, 35], "promot": [19, 34], "replic": 19, "desir": [19, 20, 21, 26, 35], "rep": [19, 35], "pend": [19, 33], "const": [19, 20, 21, 27, 29, 31, 33, 35], "to_vdevic": 19, "transfer": 19, "heterogen": [19, 28], "sort": [19, 25, 27, 30, 35], "return_index": 19, "return_invers": 19, "return_count": [19, 35], "reconstruct": [19, 31], "ascend": [19, 35], "wrap_param": 19, "adaptive_avg_pool2d": 19, "nchw": [19, 21, 35], "averag": [19, 20, 26, 27], "experiment": [19, 30], "window": [19, 35], "wxh": 19, "height": [19, 33, 35], "output_height": 19, "output_width": 19, "chosen": [19, 28, 35], "causal_mask": 19, "bsnh": 19, "fma": 19, "q": [19, 33, 35], "v": [19, 28, 30, 35], "num_head": 19, "head_dim": 19, "seq_len_kv": 19, "head_dim_v": 19, "topleft": 19, "bottomright": 19, "avg_pool2d": 19, "pool_siz": 19, "ceil_mod": [19, 35], "avarag": 19, "ldot": 19, "slide": [19, 35], "moving_mean": [19, 35], "moving_var": [19, 35], "center": [19, 35], "momentum": [19, 35], "ioff": [19, 35], "szegedi": [19, 35], "2014": [19, 35], "close": [19, 22, 35], "_mean": 19, "_var": 19, "besid": [19, 31, 35], "dataset": 19, "data_mean": 19, "data_var": 19, "train": [19, 21, 35], "running_mean": 19, "running_var": 19, "legal": [19, 21, 34, 35], "stage": [19, 31, 34], "decomposeopsforinfer": [19, 21], "decompos": [19, 21, 31, 35], "decomposeopsfortrain": [19, 21], "oihw": [19, 35], "kernel_h": [19, 35], "dy": 19, "iohw": 19, "data_grad": 19, "out_grad": [19, 35], "in_h": 19, "weight_h": 19, "out_h": 19, "cross_entropy_with_logit": 19, "crossentropi": 19, "logit": 19, "_entropi": 19, "_with": 19, "_logit": 19, "y_i": 19, "sum_i": 19, "cdot": 19, "ground": 19, "truth": 19, "probabl": [19, 31], "p": [19, 35], "unchang": [19, 31], "drop": 19, "gelu_tanh": [19, 21], "pi": 19, "044715": 19, "yuxin": 19, "wu": 19, "leakyrelu": 19, "alpha": [19, 35], "01": 19, "rectifi": 19, "negative_slop": 19, "angl": 19, "slope": [19, 35], "nag": 19, "log_softmax": [19, 35], "_softmax": 19, "max_": 19, "nll_loss": [19, 35], "ignore_index": [19, 35], "likelihood": [19, 35], "loss": [19, 35], "i_1": [19, 31, 35], "i_2": [19, 35], "i_k": [19, 35], "els": [19, 35], "d_1": [19, 35], "d_2": [19, 35], "d_k": [19, 35], "pad_width": [19, 35], "pad_mod": 19, "edg": [19, 35], "before_n": 19, "after_n": 19, "reflect": [19, 24, 27, 33, 35], "constant_valu": 19, "datatypeimm": [19, 20], "runtime_device_index": 19, "stop_lift_param": 19, "consum": [19, 21, 31, 34], "lift": [19, 21, 34], "transform_param": [19, 21], "allreduc": [19, 23, 33], "op_typ": 19, "avg": [19, 23, 35], "broadcast_from_worker0": [19, 23], "worker": [19, 23], "scatter_from_worker0": [19, 23], "num_work": [19, 23], "receiv": [19, 33], "devicemesh": 19, "shapetupl": [19, 24, 27], "device_id": [19, 23, 27, 33], "mesh": 19, "topologi": 19, "placement": 19, "dim_spec": 19, "placementspec": 19, "from_text": 19, "annotate_shard": 19, "device_mesh": 19, "shard": 19, "unmodifi": 19, "redistribut": 19, "avg_pool2d_backward": 19, "end_checkpoint": 19, "checkpoint": [19, 21], "start_checkpoint": 19, "max_pool2d_backward": 19, "nll_loss_backward": 19, "No": [19, 21, 24, 31, 34], "dummi": 19, "entir": [19, 25, 27], "c_cp": 19, "d_cp": 19, "e_out": 19, "take_backward": 19, "roi": [19, 35], "coordinate_transformation_mod": [19, 35], "half_pixel": [19, 35], "rounding_method": [19, 35], "cubic_alpha": 19, "cubic_exclud": 19, "extrapolation_valu": [19, 35], "nearest_neighbor": [19, 35], "cubic": 19, "crop": [19, 35], "start_h": [19, 35], "start_w": [19, 35], "end_h": [19, 35], "end_w": [19, 35], "tf_crop_and_res": [19, 35], "coordin": [19, 35], "asymmetr": [19, 35], "pytorch_half_pixel": [19, 35], "tf_half_pixel_for_nn": [19, 35], "spline": [19, 35], "coeffici": [19, 35], "bicub": [19, 35], "exterior": 19, "outsid": [19, 30, 31, 34, 35], "virtual_device_index": 19, "kill_storag": 19, "kill": [19, 22], "kill_tensor": 19, "namespac": [20, 22, 27, 29, 31, 33, 34], "bindingblock": [20, 21], "dataflowblockrewrit": 20, "root_fn": 20, "immut": 20, "mutated_dfb": 20, "mutated_root_fn": 20, "mutate_irmodul": 20, "old": [20, 31], "is_dfvar": 20, "tmp": 20, "counter": [20, 25], "Being": 20, "remove_unus": 20, "allow_undef": 20, "undefin": [20, 30, 33, 34, 35], "replace_all_us": 20, "old_var": 20, "new_var": 20, "dyntensortyp": 20, "execbuild": 20, "idx": 20, "declare_funct": 20, "vmfunckind": 20, "packed_func": 20, "emit_cal": 20, "dst": [20, 23, 31, 33, 34, 35], "emit_goto": 20, "pc_offset": 20, "goto": 20, "emit_if": 20, "cond": [20, 29, 33], "false_offset": 20, "emit_ret": 20, "param_nam": [20, 33], "vmfuncscop": 20, "imm": 20, "immedi": [20, 21], "as_python": [20, 31], "as_text": 20, "export_librari": [20, 22, 27], "file_nam": [20, 27], "fcompil": [20, 22, 27], "workspace_dir": [20, 27], "librari": [20, 21, 22, 23, 24, 27, 28, 35], "share": [20, 21, 27, 31, 33, 34], "file_list": [20, 27], "temporari": [20, 21, 27], "dir": [20, 22, 27], "ex": [20, 26], "rt_mod": [20, 26], "load_modul": [20, 22, 27], "addon": [20, 27], "runnabl": [20, 27], "nvcc": 20, "everyth": 20, "stat": 20, "exprfunctor": 20, "memoiz": 20, "visit_expr": 20, "true_branch": 20, "false_branch": 20, "popul": 20, "un": 20, "objectstructinfo": 20, "objecttyp": 20, "packedfunctyp": 20, "primstructinfo": 20, "pod": [20, 33], "dtype_or_expr": 20, "pyexprmut": 20, "exprmut": 20, "overwrit": 20, "inherit": 20, "discrib": 20, "expr_functor": 20, "proper": 20, "_pyexprvisitor": 20, "myexprmut": 20, "get_var_remap": 20, "vid": 20, "nullopt": [20, 31], "set_var_remap": 20, "visit_bind": 20, "visitbind": 20, "visit_binding_block": 20, "visitbindingblock": 20, "visit_binding_block_": 20, "visitbindingblock_": 20, "bindingblocknod": 20, "visit_call_": 20, "visitexpr_": 20, "visit_constant_": 20, "constantnod": 20, "visit_data_type_imm_": 20, "datatypeimmnod": 20, "visit_dataflow_block_": 20, "dataflowblocknod": 20, "visit_dataflow_var_": 20, "dataflowvarnod": 20, "visit_dataflow_var_def_": 20, "visitvardef_": 20, "rewritten": [20, 21, 30], "visitexpr": 20, "visit_expr_post_ord": 20, "visit_extern_func_": 20, "externfuncnod": 20, "visit_function_": 20, "functionnod": 20, "visit_global_var_": 20, "globalvarnod": 20, "visit_if_": 20, "ifnod": 20, "visit_match_cast_": 20, "visitbinding_": 20, "matchcastnod": 20, "visit_op_": 20, "opnod": 20, "visit_prim_value_": 20, "primvaluenod": 20, "visit_seq_expr_": 20, "seqexpr": 20, "seqexprnod": 20, "visit_shape_expr_": 20, "shapeexprnod": 20, "visit_span": 20, "visitspan": 20, "visit_string_imm_": 20, "stringimmnod": 20, "visit_tuple_": 20, "tuplenod": 20, "visit_tuple_getitem_": 20, "tuplegetitem": 20, "tuplegetitemnod": 20, "visit_var_": 20, "visit_var_binding_": 20, "varbindingnod": 20, "visit_var_def": 20, "visitvardef": 20, "visit_var_def_": 20, "visit_with_new_scop": 20, "with_struct_info": 20, "pyexprvisitor": 20, "exprvisitor": 20, "myexprvisitor": 20, "shapestructinfo": 20, "shapetyp": 20, "sever": [20, 21, 29, 35], "tuple_valu": 20, "vminstrumentreturnkind": [20, 26], "enumer": [20, 26, 35], "he": 20, "memory_cfg": [20, 26], "get_output": [20, 26], "invoke_st": [20, 26], "earlier": [20, 21, 26], "arbitrili": [20, 26], "set_input": [20, 26], "obtain": [20, 26], "save_funct": [20, 26], "saved_nam": [20, 26], "include_return": [20, 26], "overhead": [20, 26], "overridden": [20, 21, 26, 28], "realli": [20, 26], "confus": [20, 26], "meant": [20, 26], "send": [20, 26], "minim": [20, 21, 24, 26, 35], "set_instru": [20, 26], "func_symbol": [20, 26], "before_run": [20, 26], "ret_valu": [20, 26], "instr": [20, 26], "min_repeat_m": [20, 26, 27], "cooldown_interval_m": [20, 26, 27], "repeats_to_cooldown": [20, 26, 27], "f_preproc": [20, 26, 27], "benchmarkresult": [20, 26, 27], "warm": [20, 26, 27], "discard": [20, 26, 27], "durat": [20, 22, 25, 26, 27], "millisecond": [20, 26, 27], "meet": [20, 26, 27, 34], "fall": [20, 26, 27], "increas": [20, 26, 27, 33, 35], "cooldown": [20, 26, 27], "preprocess": [20, 26, 27, 35], "lazi": [20, 21, 26, 27], "testtimeevalu": [20, 26], "arg0": [20, 26], "arg1": [20, 26], "argn": [20, 26], "fewer": [20, 26], "portion": [20, 26], "func_name_sav": [20, 26], "ftimer": [20, 26, 27], "profileresult": [20, 26, 27], "exec_mod": 20, "bytecod": 20, "system_lib": [20, 22, 27, 28], "driver": [20, 27], "codegen": [20, 21, 28], "stackvm": 20, "detect": [20, 21, 27, 28, 29, 30, 31, 34], "get_shape_of": 20, "allocateworkspac": 21, "enough": [21, 36], "kworkspaces": 21, "alteropimpl": 21, "op_impl_map": 21, "op_buffer_transform": 21, "op_buffer_axis_separ": 21, "operator_nam": 21, "possibli": [21, 31], "op_kind": 21, "attachglobalsymbol": 21, "bindparam": 21, "bindsymbolicvar": 21, "varnam": 21, "bundlemodelparam": 21, "bundl": 21, "paramt": 21, "calltirrewrit": 21, "explicit": [21, 34, 35], "canonicalizebind": 21, "canonic": 21, "z": [21, 27, 29, 31, 33, 34, 35], "elimin": [21, 31], "combineparallelmatmul": 21, "unwant": 21, "convertlayout": 21, "desired_layout": [21, 35], "nhwc": [21, 35], "ohwi": 21, "dfpattern": 21, "dup": 21, "duplic": [21, 31, 32, 35], "extract_matched_expr": 21, "var2val": 21, "autojump": 21, "fork_to": 21, "fork": [21, 22, 31], "attrpattern": 21, "has_dtyp": 21, "datatypepattern": 21, "has_shap": 21, "shapepattern": 21, "is_tupl": 21, "has_typ": 21, "ttype": 21, "typepattern": 21, "connect": [21, 22], "mitig": 21, "gap": 21, "goe": 21, "only_used_bi": 21, "patternseq": 21, "same_shape_a": 21, "sameshapeconstraint": 21, "used_bi": 21, "dataflowblockpass": 21, "entry_funct": 21, "dead": [21, 31], "composit": [21, 31], "tripl": [21, 28], "eliminatecommonsubexpr": [21, 36], "call_onli": 21, "functionpass": [21, 34, 36], "subexpress": 21, "cse": [21, 36], "fewshottun": 21, "valid_count": [21, 35], "benchmark": [21, 34], "few": 21, "shot": 21, "conduct": [21, 31, 34, 36], "metaschedul": [21, 34, 37], "folddataflowblockoutput": 21, "clean": [21, 35], "function_pass": [21, 34], "fuse_opt_level": 21, "substitut": [21, 32, 34], "manipul": [21, 31], "fuseopsbypattern": 21, "fusionpattern": 21, "bind_const": 21, "annotate_codegen": 21, "driven": 21, "higher": [21, 31, 35, 36], "dnnl": 21, "conv2d_relu": 21, "offload": 21, "mergecompositefunct": 21, "larger": [21, 25, 35], "annotation_pattern": 21, "patterncheckcontext": 21, "require_grad": 21, "target_index": 21, "_adjoint": 21, "net": 21, "sublinear": 21, "chen": [21, 37], "tianqi": [21, 37], "adjoint": [21, 29], "main_adjoint": 21, "lv2_adjoint": 21, "lv1_adjoint": 21, "x_adjoint": 21, "y_adjoint": 21, "orig_return_valu": 21, "lambdalift": 21, "lazytransformparam": 21, "demand": 21, "tonondataflow": 21, "removepuritytrack": 21, "customize_legalize_map": 21, "enable_warn": 21, "flegal": 21, "customiz": 21, "own": [21, 24, 31, 33, 35], "legalizefunc": 21, "customize_legalize_add": 21, "t_multipli": 21, "lifttransformparam": 21, "intent": 21, "metascheduleapplydatabas": 21, "deduc": 21, "metascheduletuneirmod": 21, "max_trials_gloabl": 21, "metascheduletunetir": 21, "lightweight": [21, 22, 24], "arthimet": [21, 24], "goal": [21, 24], "asnumpi": [21, 24], "deprec": [21, 24, 27, 28, 31, 34], "copyfrom": [21, 24], "source_arrai": [21, 24], "array_lik": [21, 24], "arr": [21, 24, 33], "copyto": [21, 24], "mem_scop": [21, 24], "np_arr": [21, 24], "ident": [21, 24, 29, 33, 35], "henc": 21, "anf": 21, "checked_type_": 21, "shape_": 21, "optimizelayouttransform": 21, "redund": [21, 34], "matched_expr": 21, "annotated_expr": 21, "matched_bind": 21, "var_usag": 21, "value_to_bound_var": 21, "doesn": [21, 31, 33], "removepuritycheck": 21, "force_pur": 21, "rewritecudagraph": 21, "rewritedataflowreshap": 21, "further": [21, 27, 28, 31, 32], "createview": 21, "runcodegen": 21, "target_opt": 21, "splitcalltirbypattern": 21, "fcodegen": 21, "rest": 21, "matchresult": 21, "staticplanblockmemori": 21, "reus": [21, 22, 31, 35], "amount": [21, 27], "tir_var_upper_bound": 21, "clariti": 21, "1024": 21, "tomixedprecis": 21, "fp16_input_nam": 21, "fp32": [21, 35], "fp16": [21, 35], "conv": [21, 29, 35], "updatevdevic": 21, "new_vdevic": 21, "vmbuiltinlow": 21, "vmshapelow": 21, "emit_err_ctx": 21, "err": 21, "dataflowblock_pass": 21, "pass_func": [21, 34, 36], "opt_level": [21, 34, 36], "traceabl": [21, 34, 36], "create_dataflowblock_pass": 21, "testreplacebind": 21, "56": 21, "new_bind": 21, "transform_dataflowblock": 21, "demo": [21, 34], "new_block": 21, "inputmod": 21, "f1": 21, "block_pass": 21, "updated_mod": [21, 34, 36], "my": [21, 34], "follwo": [21, 36], "create_function_pass": [21, 34], "testreplacefunc": [21, 34], "transform_funct": [21, 34], "f2": 21, "fpass": [21, 30, 34], "upload": 22, "launch": 22, "localsess": 22, "rpcsession": 22, "ran": 22, "popensess": 22, "binari": [22, 27, 29, 33, 35], "popen": 22, "sess": 22, "client": 22, "dev_id": [22, 24, 27], "opencl": [22, 24, 27, 28], "dev_typ": [22, 24, 27], "encod": [22, 35], "temp": 22, "folder": 22, "rel": 22, "bytearrai": [22, 27], "download_linked_modul": 22, "linker": 22, "build_module_with_cross_compil": 22, "tar": [22, 27], "open": 22, "wb": [22, 31], "ext_dev": [22, 24, 27], "extens": [22, 24, 27], "get_funct": [22, 27], "listdir": 22, "token": 22, "metal": [22, 24, 27, 28], "rocm": [22, 24, 27, 28], "wide": [22, 27], "vulkan": [22, 24, 27, 28, 35], "webgpu": [22, 24], "port": 22, "9091": 22, "port_end": 22, "9199": 22, "is_proxi": 22, "tracker_addr": 22, "load_librari": 22, "custom_addr": 22, "silent": 22, "no_fork": 22, "server_init_callback": 22, "reuse_addr": 22, "timeout": 22, "url": [22, 37], "proxi": 22, "tracker": 22, "ip": 22, "forbid": 22, "multiprocess": 22, "socket": 22, "time_wait": 22, "bring": [22, 27], "mypackag": 22, "register_func": [22, 27], "trackersess": 22, "addr": 22, "session_timeout": 22, "max_retri": 22, "session_constructor_arg": 22, "longer": 22, "kept": [22, 35], "aliv": 22, "retri": 22, "request_and_run": 22, "guard": [22, 29, 33], "again": [22, 34], "stateless": 22, "text_summari": 22, "enable_log": 22, "disabl": [22, 28, 31, 36], "server_url": 22, "server_port": 22, "server_kei": 22, "session_constructor": 22, "rpcclientsess": 22, "endpoint": 22, "client_via_proxi": 22, "proxy_server_url": 22, "proxy_server_port": 22, "proxy_server_kei": 22, "internal_url": 22, "internal_port": 22, "internal_kei": 22, "internal_log": 22, "connect_track": 22, "with_minrpc": 22, "compile_func": 22, "posix_popen_serv": 22, "minrpc": 22, "distribut": [23, 31], "dmodul": 23, "dref": 23, "dpackedfunc": 23, "resid": 23, "debug_copy_from": 23, "worker_id": 23, "debug_get_from_remot": 23, "processsess": 23, "pipe": 23, "queue": [23, 35], "variou": [23, 35], "src": [23, 31, 33, 34, 35], "call_pack": [23, 29, 33, 35], "dldatatyp": 23, "dldevic": 23, "return_valu": 23, "unsupport": 23, "copy_from_worker_0": 23, "host_arrai": 23, "remote_arrai": 23, "copy_to_worker_0": 23, "gather_to_worker0": 23, "from_arrai": 23, "to_arrai": 23, "get_global_func": [23, 27], "init_ccl": 23, "ccl": 23, "underli": [23, 24, 37], "nccl": 23, "rccl": 23, "mpi": 23, "load_vm_modul": 23, "sync_worker_0": 23, "threadedsess": 23, "supportsint": 24, "plugin": [24, 27], "from_dlpack": 24, "__dlpack__": 24, "dlpack": [24, 33, 35], "retreiv": 24, "destructor": 24, "destruct": 24, "capsul": 24, "mtl": [24, 27], "numpyasarrai": 24, "np_data": [24, 35], "tvmarrai": 24, "vpi": [24, 27], "simul": [24, 27, 35], "registr": [25, 28], "devicewrapp": 25, "metriccollector": 25, "metric": [25, 27], "percent": 25, "ratio": 25, "device_metr": [25, 27], "csv": [25, 27], "overal": [25, 27], "classmethod": [25, 27], "from_json": [25, 27], "deseri": [25, 27, 31], "aggreg": [25, 27], "col_sum": [25, 27], "frame": [25, 27, 35], "appearancei": [25, 27], "profile_funct": 25, "collector": 25, "warmup_it": 25, "cach": [25, 27, 31, 34, 35], "hit": 25, "flop": [25, 30], "issu": [25, 31], "individu": 25, "entry_nam": 25, "prof": 25, "objectref": [25, 32], "countnod": 25, "durationnod": 25, "percentnod": 25, "device_typ": [27, 28, 33], "strucur": 27, "expos": [27, 31, 33, 34], "mask2str": 27, "str2mask": 27, "dldevicetyp": 27, "tvmdeviceexttyp": 27, "api_vers": 27, "cuda_vers": 27, "vk_header_vers": 27, "compute_vers": 27, "minor": [27, 35], "create_raw_stream": 27, "tvmstreamhandl": 27, "device_nam": 27, "vendor": 27, "driver_vers": 27, "450": 27, "408": 27, "nvidia": [27, 33], "patch": 27, "appropri": [27, 28, 35], "free_raw_stream": 27, "l2_cache_size_byt": 27, "max_clock_r": 27, "khz": 27, "max_shared_memory_per_block": 27, "max_thread_dimens": 27, "max_threads_per_block": 27, "multi_processor_count": 27, "thee": 27, "set_raw_stream": 27, "sync": [27, 34], "job": 27, "texture_spatial_limit": 27, "textur": 27, "warp_siz": 27, "concurr": 27, "regardless": 27, "clear_import": 27, "entry_func": 27, "fpack_import": 27, "mechan": 27, "_cc": 27, "create_shar": 27, "suppli": [27, 29], "object_format": 27, "is_system_lib": 27, "symbol_prefix": 27, "suitabl": [27, 35], "query_import": 27, "get_property_mask": 27, "modulepropertymask": 27, "get_sourc": 27, "fmt": 27, "implements_funct": 27, "has_funct": 27, "eg": [27, 28], "csourcemodul": 27, "import_modul": 27, "imported_modul": 27, "is_binary_serializ": 27, "serializ": 27, "ie": 27, "serialz": 27, "is_dso_export": 27, "dso": 27, "is_runn": 27, "export_shar": 27, "limit_zero_time_iter": 27, "cache_flush_byt": 27, "hang": 27, "objectgener": 27, "asobject": [27, 29], "objectpath": 27, "objectpathpair": 27, "plai": 27, "role": 27, "bridg": 27, "front": [27, 35], "scenario": [27, 34], "exposur": 27, "inspect": 27, "hook": 27, "scriptabl": 27, "ir_prefix": 27, "tir_prefix": 27, "relax_prefix": 27, "module_alia": 27, "buffer_dtyp": 27, "int_dtyp": 27, "float_dtyp": 27, "void": [27, 33], "verbose_expr": 27, "indent_spac": 27, "print_line_numb": 27, "num_context_lin": 27, "syntax_sugar": 27, "show_object_address": 27, "path_to_underlin": 27, "path_to_annot": 27, "obj_to_underlin": 27, "obj_to_annot": 27, "indent": 27, "underlin": 27, "black_format": [27, 31], "highlight": [27, 31], "pygment": [27, 31], "cprint": [27, 31], "formatt": [27, 31], "black": [27, 31], "const_val": 27, "tvm_val": 27, "redirect": 27, "convert_to_object": 27, "codebas": 27, "obj": [27, 30], "suffix": 27, "cc": [27, 35, 37], "load_param_dict": 27, "param_byt": 27, "load_param_dict_from_fil": 27, "load_static_librari": 27, "static_librari": 27, "relink": 27, "save_param_dict": 27, "load_param": 27, "param0": 27, "arr0": 27, "param1": 27, "arr1": 27, "save_param_dict_to_fil": 27, "startup": [27, 28], "dlopen": [27, 28], "ban": [27, 28], "long": [27, 28, 35], "life": 27, "cyle": 27, "codgen": 28, "target_kind": 28, "mtripl": 28, "mcpu": 28, "cpunam": 28, "chip": 28, "architectur": [28, 37], "mattr": 28, "a1": 28, "a2": 28, "a3": 28, "simd": 28, "mabi": 28, "abi": 28, "lp64d": 28, "genericfunc": 28, "ever": 28, "get_packed_func": 28, "key_list": 28, "allow_overrid": 28, "set_default": 28, "arm_cpu": 28, "mali": 28, "intel_graph": 28, "intel": 28, "graphic": 28, "arch": 28, "canon_multi_target": 28, "multi_target": 28, "canon_target": 28, "canon_multi_target_and_host": 28, "target_host": 28, "sm_80": 28, "canon_target_and_host": 28, "canon_target_map_and_host": 28, "target_map": 28, "allow_non": 28, "from_devic": 28, "get_kind_attr": 28, "get_target_device_typ": 28, "list_kind": 28, "max_block_size_x": 28, "max_block_size_i": 28, "max_num_thread": 28, "target_or_curr": 28, "thread_warp_s": 28, "targetkind": 28, "options_from_nam": 28, "kind_nam": 28, "virtualdevic": 28, "arm": 28, "soc": 28, "phone": 28, "board": 28, "bifrost": 28, "1080ti": 28, "sm_61": 28, "generic_func": 28, "fdefault": 28, "fgener": 28, "my_func": 28, "my_func_cuda": 28, "displai": [28, 36], "get_native_generic_func": 28, "cpu_ver": 28, "v68": 28, "Not": [28, 31, 33, 35], "hvx": 28, "llvm_option": 28, "use_qfloat": 28, "qfloat": 28, "use_ieee_fp": 28, "ieee": 28, "num_cor": 28, "vtcm_capac": 28, "vtcm": [28, 30, 34], "capac": 28, "list_tag": 28, "tag_dict": 28, "make_compilation_config": 28, "ctxt": 28, "compilationconfig": 28, "override_native_generic_func": 28, "rasp": 28, "raspberri": 28, "3b": 28, "riscv_cpu": 28, "sifiv": 28, "u54": 28, "risc": 28, "rv64gc": 28, "stm32": 28, "seri": [28, 36, 37], "stm32h7xx": 28, "stm32f4xx": 28, "computeop": 29, "externop": 29, "hybridop": 29, "hybrid": 29, "placeholderop": 29, "scanop": [29, 35], "scan": [29, 35], "scan_axi": 29, "specializedcondit": 29, "corresspond": 29, "value_index": [29, 33], "tensorcomputeop": 29, "tensorslic": 29, "operaton": [29, 33], "experss": [29, 33], "comm_reduc": [29, 33], "fcombin": [29, 33], "fident": [29, 33], "commut": [29, 33, 35], "mysum": [29, 33], "varargs_nam": 29, "vararg": 29, "i2": [29, 31], "index_dtype_overrid": 29, "tir_matmul": 29, "grip": 29, "create_relax_prim_func": 29, "tir_var_list": 29, "create_schedul": [29, 33, 35], "decl_tensor_intrin": 29, "tensor_intrin": [29, 31], "scalar_param": 29, "default_buffer_param": 29, "ins": [29, 35], "reduce_init": 29, "reduce_upd": 29, "compact": [29, 30, 31, 33, 34, 35], "scalar_input": 29, "intrin": [29, 31, 33], "tensorintrin": [29, 31, 33], "div": [29, 33, 35], "truncdiv": [29, 33, 35], "exponenti": [29, 33, 35], "in_buff": [29, 35], "out_buff": [29, 35], "additon": [29, 35], "contrib": [29, 35], "cbla": [29, 35], "extern_primfunc": 29, "before_split": [29, 31], "primexprwithop": [29, 33], "floordiv": [29, 31, 33, 34, 35], "floormod": [29, 31, 33, 34, 35], "fmod": [29, 33], "wrt": [29, 35], "word": 29, "jacobian": 29, "w1": 29, "w2": 29, "z1": 29, "z2": 29, "dw1": 29, "dw2": 29, "jw1": 29, "jw2": 29, "if_then_els": [29, 31, 33, 34], "satisfi": [29, 31, 33, 34], "indexdiv": [29, 33], "advantag": [29, 33], "indexmod": [29, 33], "log10": [29, 33, 35], "log2": [29, 33, 35], "max_r": [29, 33], "max_valu": [29, 33], "min_r": [29, 33], "nearbyint": [29, 33], "faster": [29, 30, 33, 35], "notabl": [29, 33], "wherea": [29, 33], "en": [29, 33], "cpprefer": [29, 33], "cpp": [29, 33], "numer": [29, 33, 35], "math": [29, 33], "popcount": [29, 33], "bit": [29, 31, 33, 34, 35], "expon": [29, 33, 35], "rv": 29, "thread_tag": [29, 33], "state_placehold": 29, "timestamp": 29, "s_state": 29, "s_init": 29, "s_updat": 29, "size_var": 29, "sizevar": [29, 33], "sum_r": [29, 33], "tag_scop": 29, "manger": 29, "tagscop": 29, "compute_relu": 29, "hyperbol": [29, 33, 35], "thread_axi": [29, 31, 33], "trace_act": [29, 33], "default_trace_act": [29, 33], "trunc": [29, 33, 35], "truncat": [29, 33, 35], "closer": [29, 33], "truncmod": [29, 33], "tindex": 29, "oobcheck": 30, "apply_prim_func_arg_and_result_memory_constraint": 30, "relay_func_typ": 30, "arg_and_result_memory_scop": 30, "written": [30, 31], "aka": [30, 31], "dp": 30, "caution": [30, 31], "account": 30, "anystr": 30, "calculate_allocated_byt": 30, "func_or_mod": 30, "calculate_constant_byt": 30, "constant_byte_align": 30, "align": [30, 31, 33, 35], "calculate_workspace_byt": 30, "workspace_byte_align": 30, "detect_buffer_access_lca": 30, "lowest": 30, "bufferload": [30, 31, 33, 34], "bufferstor": [30, 31, 33, 34], "estimate_tir_flop": 30, "stmt_or_mod": 30, "fragment": [30, 33, 34], "expr_deep_equ": 30, "deepli": 30, "arithmet": [30, 34], "simplif": [30, 33, 34], "find_anchor_block": 30, "biggest": 30, "latter": 30, "winograd": [30, 35], "anchor_block": 30, "get_block_access_region": 30, "buffer_var_map": 30, "third": 30, "get_block_read_write_region": 30, "get_prim_func_arg_and_result_memory_constraint": 30, "get_vtcm_compaction_pass": 30, "undefined_var": 30, "verify_gpu_cod": 30, "illeg": [30, 34], "verif": [30, 31], "verify_memori": 30, "verify_ssa": 30, "ssa": [30, 34], "verify_well_form": 30, "assert_mod": 30, "blockscop": [31, 33], "sref": [31, 33], "glossari": 31, "subtre": 31, "leav": 31, "child": 31, "leaf": 31, "get_deps_by_dst": 31, "stmtsref": [31, 33], "get_deps_by_src": 31, "depkind": 31, "waw": 31, "war": 31, "kraw": 31, "exprrv": 31, "instructionkind": 31, "input_rv_typ": 31, "getblock": 31, "attr_typ": 31, "atom": 31, "won": [31, 32], "output_rv_typ": 31, "noth": 31, "functor": [31, 32], "unstructur": 31, "usecas": 31, "moment": 31, "alon": 31, "computeinlin": 31, "debug_mask": 31, "error_render_level": 31, "enable_check": 31, "schedule_primit": 31, "add_unit_loop": 31, "block_or_loop": 31, "new_loop": 31, "before_add_unit_loop": 31, "after_add_unit_loop": 31, "ann_kei": 31, "ann_val": 31, "annotationvaluet": 31, "before_annot": 31, "ann_valu": 31, "after_annot": 31, "block_attr": 31, "vthread": [31, 34], "before_bind": 31, "after_bind": 31, "blockiz": 31, "before_block": 31, "i_0": 31, "set_scop": 31, "after_block": 31, "b_o": 31, "vio": 31, "vjo": 31, "subspac": 31, "cache_index": 31, "cse_thresh": 31, "precomput": [31, 35], "threshold": 31, "cached_block": 31, "cache_inplac": 31, "40": 31, "80": 31, "i3": 31, "block_a": 31, "resize_cache_index": 31, "index_var_0": 31, "index_var_1": 31, "index_0": 31, "index_1": 31, "read_buffer_index": 31, "inplac": 31, "before_cache_inplac": 31, "data_io": 31, "call_extern": [31, 33], "call_impl": 31, "data_io_loc": 31, "cache_read": 31, "consumer_block": 31, "before_cache_read": 31, "block_b": 31, "after_cache_read": 31, "a_loc": 31, "cache_writ": 31, "write_buffer_index": 31, "before_cache_writ": 31, "after_cache_writ": 31, "b_local": 31, "can_decompose_pad": 31, "compute_at": 31, "move": [31, 34], "regener": 31, "induc": 31, "nonneg": 31, "before_compute_at": 31, "after_compute_at": 31, "compute_inlin": 31, "before_inlin": 31, "after_inlin": 31, "untouch": 31, "decompose_pad": 31, "pad_value_block": 31, "before_decompos": 31, "140": 31, "134": 31, "after_decompos": 31, "block_pad_const": 31, "init_block": 31, "ty": 31, "enter_postproc": 31, "postprocess": 31, "fork_se": 31, "func_working_on": 31, "consecut": [31, 34], "fused_loop": 31, "before_fus": 31, "after_fus": 31, "i_j_fus": 31, "16384": 31, "rand_var_or_sref": 31, "work_on": 31, "indexerror": 31, "get_child_block": 31, "get_consum": 31, "parent": [31, 33], "get_output_block": 31, "scope_block": 31, "atleast": 31, "output_block": 31, "get_produc": 31, "get_sref": [31, 33], "rand_var_or_stmt": 31, "depth": [31, 35], "before_merg": 31, "i_m": 31, "pad_einsum": 31, "On": 31, "132": 31, "144": 31, "before_pad_einsum": 31, "c_share": 31, "a_pad": 31, "b_pad": 31, "c_pad": 31, "before_parallel": 31, "after_parallel": 31, "reindex": 31, "reindex_block": 31, "before_reindex": 31, "after_reindex": 31, "a_reindex": 31, "reindex_cache_read": 31, "transform_block_layout": 31, "surround": 31, "before_reindex_cache_read": 31, "after_reindex_cache_read": 31, "reindex_cache_writ": 31, "transform_layout": 31, "before_reindex_cache_writ": 31, "remove_rv": 31, "rand_var": 31, "ordered_loop": 31, "l_2": 31, "l_n": 31, "l_i": 31, "l_": 31, "before_reord": 31, "after_reord": 31, "reorder_block_iter_var": 31, "new_ord": 31, "matmul_after_reorder_block_iter_var": 31, "rss": 31, "before_reverse_compute_at": 31, "after_reverse_compute_at": 31, "reverse_compute_inlin": 31, "rfactor": 31, "factor_axi": 31, "race": 31, "opportun": 31, "pseudocod": 31, "innermost": [31, 35], "b_rf": 31, "rf_block": 31, "before_rfactor": 31, "ii": 31, "vii": 31, "srr": 31, "after_rfactor": 31, "vi2": 31, "sr": 31, "unrol": [31, 34], "outermost": [31, 34], "unari": 31, "plu": 31, "rolling_buff": 31, "roll": [31, 34], "rollabl": 31, "overlap": [31, 35], "circular": 31, "cascad": 31, "before_rolling_buff": 31, "12": [31, 35], "int8": [31, 35], "ax2": 31, "ax3": 31, "ax0_1": 31, "ax1_1": 31, "rv0": 31, "rv1": 31, "rr": 31, "after_rolling_buff": 31, "region_cov": 31, "sample_categor": 31, "prob": 31, "decis": 31, "sample_compute_loc": 31, "sample_partitioned_til": 31, "partition_po": 31, "innerpart_factor": 31, "partit": 31, "sample_perfect_til": 31, "max_innermost_factor": 31, "perfect": 31, "set_axis_separ": 31, "before_set_axis_separ": 31, "buffer_index": 31, "buffer_index_typ": 31, "after_set_axis_separ": 31, "before_set_scop": 31, "after_set_scop": 31, "b_share": 31, "split_loop": 31, "after_split": 31, "schedulest": 31, "storage_align": 31, "friendli": 31, "bank": 31, "before_storage_align": 31, "after_storage_align": 31, "buffer_dim_align": 31, "129": 31, "before_tensor": 31, "k_0": 31, "mma_desc": 31, "offset_factor": [31, 33, 35], "mma_intrin": 31, "tvm_mma_sync": [31, 33], "elem_offset": [31, 33, 34, 35], "test_mma_intrin": 31, "after_tensor": 31, "update_o": 31, "vko": 31, "a_1": 31, "b_1": 31, "c_1": 31, "before_transform_block_layout": 31, "after_transform_block_layout": 31, "assume_injective_transform": 31, "setaxissepar": 31, "transformlayout": 31, "symplif": 31, "precondit": 31, "met": 31, "incorrect": 31, "complic": 31, "caller": 31, "before_transform_layout": 31, "two_elementwise_transformed_intermediate_buff": 31, "unannot": 31, "before_unannot": 31, "after_unannot": 31, "before_unrol": 31, "after_unrol": 31, "unsafe_hide_buffer_access": 31, "buf_typ": 31, "buf_index_arrai": 31, "hide": 31, "unsaf": [31, 34], "spars": [31, 33], "unsafe_set_dtyp": 31, "before_set_dtyp": 31, "set_dtyp": 31, "after_set_dtyp": 31, "before_vector": 31, "after_vector": 31, "scheduledebugmask": 31, "correpsond": [31, 33], "verify_sref_tre": 31, "verify_cached_flag": 31, "affine_bind": 31, "stage_pipelin": 31, "scheduleerror": 31, "happen": [31, 35], "primari": [31, 34], "resort": 31, "prerequisit": 31, "get_block_scop": [31, 33], "block_sref": [31, 33], "src_sref": 31, "tgt_stmt": 31, "blockreal": [31, 33, 34], "block_sref_reus": 31, "closest": [31, 35], "children": [31, 32], "inline_mark": 31, "root_mark": 31, "inst": 31, "far": 31, "roundtripp": 31, "past": 31, "reproduc": 31, "decision_typ": 31, "apply_json_to_schedul": 31, "json_obj": 31, "json_typ": 31, "apply_to_schedul": 31, "remove_postproc": 31, "decision_provid": 31, "onto": 31, "1st": 31, "2nd": 31, "3rd": 31, "4th": 31, "as_json": 31, "py_stmt": 31, "get_decis": 31, "pop": [31, 36], "popped_inst": 31, "with_decis": 31, "ir_transform": 32, "preorder": 32, "postord": 32, "only_en": 32, "pre_order_visit": 32, "renew_def": 32, "vardef": 32, "bufferdef": 32, "deepcopi": 32, "vmap": 32, "buffer_var": 33, "allocateconst": 33, "data_or_idx": 33, "assertstmt": 33, "attrstmt": [33, 34], "bijectivelayout": 33, "bijective_layout": 33, "src_layout": [33, 35], "dst_layout": [33, 35], "backward_index": 33, "src_index": 33, "backward_shap": 33, "src_shape": 33, "forward_index": 33, "dst_index": 33, "forward_shap": 33, "dst_shape": 33, "blockdependenceinfo": 33, "sref2scop": 33, "stmt2ref": 33, "retriv": 33, "iter_valu": [33, 34], "realiz": 33, "block_real": 33, "bufferr": 33, "calleffectkind": 33, "commreduc": 33, "identity_el": 33, "dataproduc": 33, "declbuff": 33, "eq": 33, "loop_var": 33, "min_val": 33, "forkind": 33, "threadbind": 33, "ge": 33, "gt": 33, "ifthenels": [33, 34], "then_cas": 33, "else_cas": 33, "iter_typ": 33, "le": 33, "lt": 33, "primal": 33, "subordin": 33, "nchw16c": [33, 35], "channel_block": [33, 35], "factor_of": 33, "index_of": 33, "letstmt": [33, 34], "ne": 33, "prefetch": [33, 34], "producerload": 33, "producerr": 33, "producerstor": 33, "ramp": 33, "rdom": 33, "true_valu": 33, "false_valu": 33, "seqstmt": 33, "shuffl": 33, "tvmbackendallocworkspac": 33, "nbyte": 33, "dtype_code_hint": 33, "dtype_bits_hint": 33, "tempor": 33, "opengl": 33, "tvmbackendfreeworkspac": 33, "desc": 33, "impl": 33, "allow_miss": 33, "irtyp": 33, "address_of": 33, "buffer_load": 33, "atan2": 33, "arctan2": 33, "call_cpack": 33, "call_cpacked_low": 33, "call_intrin": 33, "call_llvm_intrin": 33, "poistion": 33, "call_llvm_pure_intrin": 33, "tvmarrayhandl": 33, "period": 33, "call_packed_low": 33, "reciev": 33, "call_pure_extern": 33, "ceildiv": 33, "clz": [33, 35], "copysign": 33, "create_barri": 33, "barrier_count": 33, "barrier": 33, "data_align": [33, 35], "buffer_typ": [33, 35], "discuss": [33, 35], "pssed": [33, 35], "auto_broadcast": [33, 35], "m0": [33, 35], "m1": [33, 35], "m2": [33, 35], "n0": [33, 35], "n1": [33, 35], "n2": [33, 35], "o0": [33, 35], "o1": [33, 35], "o2": [33, 35], "fadd": [33, 35], "bcast_add": [33, 35], "veri": [33, 35], "benefit": [33, 35], "end_profile_intrins": 33, "exp10": 33, "exp2": 33, "hypot": 33, "infin": 33, "isnullptr": 33, "nullptr": 33, "layout_str": 33, "ldexp": 33, "log1p": 33, "lookup_param": 33, "mma_fil": 33, "local_s": 33, "local_ptr": 33, "mma": [33, 34], "registor": 33, "mma_stor": 33, "dst_ptr": 33, "src_ptr": 33, "src_offset": 33, "dst_stride": 33, "ptx": 33, "nextaft": 33, "toward": 33, "pow": 33, "ptx_arrive_barri": 33, "barrier_id": 33, "arriv": 33, "mbarrier": 33, "ptx_arrive_barrier_expect_tx": 33, "byte_count": 33, "tx": 33, "expect_tx": 33, "addtion": 33, "async": 33, "transact": 33, "ptx_commit_group": 33, "movement": 33, "ptx_cp_async": 33, "shared_ptr": 33, "shared_offset": 33, "global_ptr": 33, "global_offset": 33, "ptx_cp_async_barri": 33, "ptx_cp_async_bulk": 33, "bulk": 33, "ptx_init_barrier_thread_count": 33, "thread_count": 33, "ptx_ldmatrix": 33, "tran": 33, "local_offset": 33, "smem_ptr": 33, "smem_offset": 33, "warp": [33, 34], "ldmatrix": 33, "b16": 33, "memort": 33, "ptx_mma": 33, "a_layout": 33, "b_layout": 33, "a_dtyp": 33, "b_dtype": 33, "c_dtype": 33, "multiplicand_a": 33, "a_index": 33, "multiplicand_b": 33, "b_index": 33, "c_index": 33, "satur": 33, "col": 33, "multiplicand": 33, "ptx_mma_sp": 33, "meta_index": 33, "sparse_selector": 33, "selector": 33, "ptx_wait_barri": 33, "try_wait": 33, "ptx_wait_group": 33, "uncommit": 33, "q_multiply_shift": 33, "shift": [33, 35], "mathemat": 33, "wikipedia": 33, "wiki": 33, "q_": 33, "number_format": 33, "half": 33, "fraction": [33, 35], "q_multiply_shift_per_axi": 33, "is_lshift_requir": [33, 35], "is_rshift_requir": [33, 35], "reinterpret": [33, 35], "shift_left": 33, "shift_right": 33, "start_profile_intrins": 33, "stmt_list": 33, "stmt_seq": 33, "tvm_access_ptr": 33, "ptype": 33, "rw_mask": 33, "tvm_bmma_sync": 33, "fragment_d": 33, "index_d": 33, "fragment_a": 33, "index_a": 33, "fragment_b": 33, "index_b": 33, "fragment_c": 33, "index_c": 33, "bmma_sync": 33, "bwmma": 33, "tvm_check_return": 33, "return_unexpect": 33, "nested_cal": 33, "tvm_fill_frag": 33, "fill_frag": 33, "wmma": 33, "uintimm": 33, "tvm_load_matrix_sync": 33, "buffer_ptr": 33, "row_major": 33, "column_major": 33, "mma_sync": 33, "tvm_stack_alloca": 33, "dtype_str": 33, "tvm_stack_make_arrai": 33, "arr_dtyp": 33, "elem_offs": 33, "tvm_stack_make_shap": 33, "tvm_store_matrix_sync": 33, "tvm_struct_get": 33, "date": 33, "structtyp": 33, "tvm_struct_set": 33, "tvm_thread_allreduc": 33, "freduce_arg": 33, "threadblock": 33, "tvm_throw_last_error": 33, "tvmgetlasterror": 33, "tvm_tupl": 33, "undef": 33, "vectorcombin": 33, "vec1": 33, "vec2": 33, "vectorhigh": 33, "vec": 33, "vectorlow": 33, "annotatedeviceregion": 34, "ktarget": 34, "annotateentryfunc": 34, "ftransform": 34, "prim_func_pass": 34, "applylayouttransform": 34, "layout_transform_map": 34, "fucntion": 34, "bf16computeleg": 34, "bf16": 34, "bf16storageleg": 34, "u16": 34, "bindtarget": 34, "coprocsync": 34, "processor": 34, "combinecontextcal": 34, "commonsubexprelimtir": 34, "enable_cse_tir": 34, "identify_equiv_term": 34, "compactbufferalloc": 34, "is_strict": 34, "narrow": 34, "skinni": 34, "grow": 34, "convertblockstoopaqu": 34, "convertforloopstoseri": 34, "convertssa": 34, "hoist": 34, "decoratedevicescop": 34, "defaultgpuschedul": 34, "unschedul": 34, "extractprimfuncconst": 34, "unif": 34, "fp8computeleg": 34, "promote_dtype_str": 34, "fp8": 34, "promote_dtyp": 34, "fp8storageleg": 34, "u8": 34, "fcond": 34, "flattenbuff": 34, "forcenarrowindextoint32": 34, "forc": 34, "down": [34, 35], "hoistexpress": 34, "verison": 34, "hoistifthenels": 34, "invari": 34, "elig": 34, "advanc": [34, 37], "support_block_scope_host": 34, "hoistedcondit": 34, "hoistexpressionconfig": 34, "conditional_typ": 34, "bitflag": 34, "booleanexpress": 34, "ifelseexpr": 34, "ifelsestmt": 34, "never": 34, "usingblockvar": 34, "hoistedletbind": 34, "let_binding_typ": 34, "letexpr": 34, "requiredbycondit": 34, "inferfrag": 34, "infom": 34, "injectcopyintrin": 34, "pragma_kei": 34, "fintrin": 34, "pragma": 34, "copyintrin": 34, "pad_befor": [34, 35], "pad_aft": [34, 35], "injectdoublebuff": 34, "doubl": 34, "injectptxasynccopi": 34, "asyncron": 34, "injectpermutedlayout": 34, "injectprefetch": 34, "injectrollingbuff": 34, "injectsoftwarepipelin": 34, "injectvirtualthread": 34, "installdebugspan": 34, "printer": 34, "instrumentboundcheck": 34, "checker": 34, "instrumentprofileintrins": 34, "legalizepackedcal": 34, "tvmvalu": 34, "liftattrscop": 34, "liftthreadbind": 34, "looppartit": 34, "lowerautocopi": 34, "lowercrossthreadreduct": 34, "lowercustomdatatyp": 34, "lowerdevicekernellaunch": 34, "subroutin": 34, "env_thread": 34, "kglobalsymbol": 34, "tvm_call_pack": 34, "lowerdevicestorageaccessinfo": 34, "lowerinitblock": 34, "lowerintrin": 34, "lowermatchbuff": 34, "loweropaqueblock": 34, "lowertvmbuiltin": 34, "builtin": 34, "lowerthreadallreduc": 34, "alleduc": 34, "lowerwarpmemori": 34, "makepackedapi": 34, "primfuncnod": 34, "tvmarg": 34, "tvmretvalu": 34, "buffernod": 34, "makeunpackedapi": 34, "confirm": 34, "manifestsharedmemorylocalstag": 34, "mergedynamicsharedmemoryalloc": 34, "narrowdatatyp": 34, "target_bit": 34, "storageflatten": 34, "planandupdatebufferallocationloc": 34, "exact": 34, "primfuncpass": 34, "reducebranchingthroughovercomput": 34, "overcomput": 34, "removeassum": 34, "removenoop": 34, "removestoreundef": 34, "removeweightlayoutrewriteblock": 34, "skip_ndarray_rewrit": 34, "matter": 34, "mapndarrai": 34, "slow": 34, "sometim": 34, "renormalizesplitpattern": 34, "renorm": 34, "rewriteunsafeselect": 34, "skipassert": 34, "splithostdevic": 34, "cache_line_s": 34, "create_bound_attribut": 34, "storagerewrit": 34, "textureflatten": 34, "threadsync": 34, "transformmmabufferlayout": 34, "unifythreadbind": 34, "consolid": 34, "unrollloop": 34, "vectorizeloop": 34, "enable_vector": 34, "Will": 34, "verifymemori": 34, "verifyvtcmlimit": 34, "inventori": 35, "invalidshapeerror": 35, "templat": 35, "3x3": 35, "adv_index": 35, "stop": 35, "select_last_index": 35, "argsort": 35, "is_ascend": 35, "dshape": 35, "schedule_argsort": 35, "argwher": 35, "binary_search": 35, "ib": 35, "sequence_offset": 35, "search_rang": 35, "sorted_sequ": 35, "linearl": 35, "scipi": 35, "ceil_log2": 35, "spir": 35, "fp64": 35, "a_min": 35, "a_max": 35, "collapse_sum": 35, "target_shap": 35, "a_tupl": 35, "const_vector": 35, "cumprod": 35, "cumproduct": 35, "dft": 35, "re_data": 35, "im_data": 35, "discret": 35, "fourier": 35, "signal": 35, "imaginari": 35, "re_output": 35, "im_output": 35, "comma": 35, "classic": 35, "bracket": 35, "ij": 35, "jk": 35, "ik": 35, "elemwise_sum": 35, "erf_leg": 35, "num_newaxi": 35, "newaxi": 35, "expand_lik": 35, "shape_lik": 35, "19": 35, "new_shape_arrai": 35, "fast_erf": 35, "fast_exp": 35, "fast_tanh": 35, "tangent": 35, "fixed_point_multipli": 35, "fixed_point_multiply_per_axi": 35, "lshift": 35, "rshift": 35, "reveres": 35, "floor_mod": 35, "modulu": 35, "3d": 35, "gather_nd": 35, "get_const_tupl": 35, "in_tupl": 35, "out_tupl": 35, "hybrid_argwhere_1d": 35, "hybrid_argwhere_2d": 35, "hybrid_argwhere_3d": 35, "hybrid_argwhere_4d": 35, "hybrid_argwhere_5d": 35, "invert_permut": 35, "schedule_rul": 35, "left_shift": 35, "make_idx": 35, "meaning": 35, "within_index": 35, "transp_a": 35, "transp_b": 35, "notat": 35, "trans_a": 35, "trans_b": 35, "matrix_set_diag": 35, "right_left": 35, "superdiagon": 35, "subdiagon": 35, "band": 35, "shorter": 35, "max_diag_len": 35, "four": 35, "left_right": 35, "left_left": 35, "right_right": 35, "lapack": 35, "cuspars": 35, "opposit": 35, "meshgrid": 35, "xy": 35, "ndarray_s": 35, "negat": 35, "one_hot": 35, "on_valu": 35, "off_valu": 35, "hot": 35, "repsent": 35, "newshap": 35, "reverse_sequ": 35, "seq_length": 35, "seq_axi": 35, "batch_axi": 35, "right_shift": 35, "binop": 35, "identity_valu": 35, "idx1": 35, "idx2": 35, "five": 35, "choic": 35, "maxim": 35, "scatter_nd": 35, "y_0": 35, "x_m": 35, "x_": 35, "x_0": 35, "x_1": 35, "determint": 35, "searchsort": 35, "monoton": 35, "land": 35, "sequence_mask": 35, "valid_length": 35, "mask_valu": 35, "max_length": 35, "sliding_window": 35, "window_shap": 35, "slid": 35, "sparse_reshap": 35, "sparse_indic": 35, "prev_shap": 35, "new_shap": 35, "new_sparse_indices_shap": 35, "new_shape_shap": 35, "n_dim": 35, "dense_shap": 35, "dens": 35, "new_sparse_indic": 35, "sparse_to_dens": 35, "sparse_valu": 35, "default_valu": 35, "subset": 35, "stft": 35, "n_fft": 35, "hop_length": 35, "win_length": 35, "onesid": 35, "short": 35, "distanc": 35, "neighbor": 35, "conjug": 35, "symmetri": 35, "34": 35, "5000": 35, "8660": 35, "7321": 35, "strided_set": 35, "slice_mod": 35, "sizeof": 35, "batch_dim": 35, "behav": 35, "fast": 35, "sure": 35, "take_leg": 35, "dyn": 35, "topk": 35, "tensordot": 35, "trilu": 35, "is_sort": 35, "num_uniqu": 35, "inverse_indic": 35, "unravel_index": 35, "22": 35, "41": 35, "in_dtyp": 35, "in_filt": 35, "out_filt": 35, "padt": 35, "padl": 35, "padb": 35, "padr": 35, "dilation_h": 35, "dilation_w": 35, "stride_h": 35, "stride_w": 35, "11": 35, "adaptive_pool": 35, "pool_typ": 35, "decid": 35, "nchw16w": 35, "nchw16h": 35, "adaptive_pool3d": 35, "ncdhw": 35, "add_alter_layout": 35, "_attr": 35, "_input": 35, "_tinfo": 35, "_out_typ": 35, "qnn": 35, "tinfo": 35, "out_typ": 35, "batch_matmul": 35, "tensor_a": 35, "tensor_b": 35, "oshap": 35, "transpose_a": 35, "transpose_b": 35, "auto_scheduler_rewritten_layout": 35, "meta_schedule_original_shap": 35, "reason": 35, "nt": 35, "batch_matmul_leg": 35, "defualt": 35, "batch_to_space_nd": 35, "block_shap": 35, "crop_begin_list": 35, "crop_end_list": 35, "spatial_shap": 35, "remaining_shap": 35, "block_siz": 35, "bias_add_leg": 35, "bias_add": 35, "excis": 35, "binarize_pack": 35, "packedinput": 35, "binar": 35, "uint32": 35, "binary_dens": 35, "in_dim": 35, "out_dim": 35, "bitpack": 35, "pack_axi": 35, "bit_axi": 35, "pack_typ": 35, "quantizeinput": 35, "bitseri": 35, "bitserial_conv2d_leg": 35, "bitserial_conv2d_nchw": 35, "activation_bit": 35, "weight_bit": 35, "pack_dtyp": 35, "int16": 35, "unipolar": 35, "in_height": 35, "in_width": 35, "num_filt": 35, "filter_height": 35, "filter_width": 35, "stride_height": 35, "stride_width": 35, "pad_height": 35, "pad_top": 35, "pad_left": 35, "pad_down": 35, "pad_right": 35, "bipolar": 35, "out_height": 35, "out_width": 35, "bitserial_conv2d_nhwc": 35, "bitserial_dens": 35, "data_bit": 35, "inp": 35, "filt": 35, "auto_scheduler_should_rewrite_layout": 35, "nch": 35, "pad_bottom": 35, "dilation_height": 35, "dilation_width": 35, "charact": 35, "hw": 35, "hwd": 35, "hwio": 35, "autoschedul": 35, "nwc": 35, "filter_s": 35, "wio": 35, "laid": 35, "optiona": 35, "unspecifi": 35, "conv1d_ncw": 35, "conv1d_nwc": 35, "conv1d_transpose_ncw": 35, "recov": 35, "conv2d_nchwc": 35, "in_channel_chunk": 35, "in_channel_block": 35, "num_filter_chunk": 35, "num_filter_block": 35, "out_channel_chunk": 35, "out_channel_block": 35, "conv2d_nchwc_int8": 35, "n_elem": 35, "conv2d_alter_layout": 35, "conv2d_gemm_weight_transform": 35, "tile_row": 35, "tile_col": 35, "convgemm": 35, "ci": 35, "conv2d_hwcn": 35, "hwcn": 35, "conv2d_infer_layout": 35, "cfg": 35, "autotvm": 35, "conv2d_leg": 35, "conv2d_nchw": 35, "conv2d_nhwc": 35, "conv2d_transpose_leg": 35, "conv2d_transpose_nchw": 35, "conv2d_transpose_nchw_preprocess": 35, "conv2d_winograd_nchw": 35, "pre_comput": 35, "conv2d_winograd_nchw_without_weight_transform": 35, "conv2d_winograd_nhwc": 35, "conv2d_winograd_nhwc_without_weight_transform": 35, "conv2d_winograd_nnpack_weight_transform": 35, "convolution_algorithm": 35, "nnpack": 35, "conv2d_winograd_weight_transform": 35, "tile_s": 35, "2x2": 35, "4x4": 35, "conv3d_alter_layout": 35, "conv3d": 35, "conv3d_ncdhw": 35, "in_depth": 35, "filter_depth": 35, "strid_depth": 35, "dilation_depth": 35, "out_depth": 35, "conv3d_ndhwc": 35, "meta_schedule_origin_shap": 35, "ndhwc": 35, "stride_depth": 35, "conv3d_transpose_leg": 35, "conv3d_transpose_ncdhw": 35, "conv3d_transpose_ncdhw_preprocess": 35, "conv3d_transpos": 35, "conv3d_winograd_weight_transform": 35, "correlation_nchw": 35, "data1": 35, "data2": 35, "max_displac": 35, "stride1": 35, "stride2": 35, "is_multipli": 35, "correl": 35, "odd": 35, "displac": 35, "neightborhood": 35, "substract": 35, "declaration_conv2d_transpose_impl": 35, "declaration_conv3d_transpose_impl": 35, "deformable_conv2d_nchw": 35, "deformable_group": 35, "deform": 35, "arxiv": 35, "1703": 35, "06211": 35, "deformable_conv2d_nhwc": 35, "matmul_nt": 35, "dense_alter_layout": 35, "dense_leg": 35, "dense_pack": 35, "depth_to_spac": 35, "dcr": 35, "cdr": 35, "interwoven": 35, "tensorflow": 35, "depthwise_conv2d_nchwc": 35, "depthwis": 35, "nchwc": 35, "channel_multipli": 35, "depthwise_conv2d_backward_input_nhwc": 35, "ishap": 35, "depthwise_conv2d_backward_weight_nhwc": 35, "fshape": 35, "depthwise_conv2d_infer_layout": 35, "depthwise_conv2d_nchw": 35, "depthwise_conv2d_nhwc": 35, "hwoi": 35, "dilation_valu": 35, "dilatedinput": 35, "equal_const_int": 35, "fast_softmax": 35, "speed": 35, "fifo_buff": 35, "fifo": 35, "cnn": 35, "indow": 35, "slice_axi": 35, "wavenet": 35, "get_const_int": 35, "out_valu": 35, "get_pad_tupl": 35, "get_pad_tuple1d": 35, "get_pad_tuple3d": 35, "pad_front": 35, "pad_back": 35, "get_pad_tuple_gener": 35, "global_pool": 35, "group_conv1d_ncw": 35, "group_conv1d_nwc": 35, "group_conv2d_nchw": 35, "group_conv2d_nhwc": 35, "group_conv2d_transpose_nchw": 35, "d_0": 35, "d_": 35, "instance_norm": 35, "r_": 35, "len": 35, "axis_k": 35, "r_k": 35, "current_layout": 35, "cnhw": 35, "leaky_relu": 35, "leaki": 35, "lrn": 35, "0001": 35, "75": 35, "normalis": 35, "sum_sqr_up": 35, "lstm": 35, "wi": 35, "wh": 35, "bi": 35, "bh": 35, "h_init": 35, "c_init": 35, "proj": 35, "p_i": 35, "p_f": 35, "p_o": 35, "f_act": 35, "g_act": 35, "h_act": 35, "weight_layout": 35, "ifgo": 35, "hidden_dim": 35, "proj_dim": 35, "cell": 35, "peephol": 35, "gate": 35, "matmul_leg": 35, "mirror_pad": 35, "symmetr": 35, "mirrorpadinput": 35, "mirror": 35, "namedtupl": 35, "typenam": 35, "field_nam": 35, "renam": 35, "__doc__": 35, "docstr": 35, "plain": 35, "_asdict": 35, "_replac": 35, "padinput": 35, "pool1d": 35, "count_include_pad": 35, "ncw16c": 35, "ncw16w": 35, "kernel_width": 35, "pool2d": 35, "kernel_height": 35, "pool3d": 35, "ncdhw16c": 35, "ncdhw16d": 35, "ncdhw16w": 35, "ncdhw16h": 35, "kernel_depth": 35, "six": 35, "pool_grad": 35, "grad": 35, "prelu": 35, "channelis": 35, "pdf": [35, 37], "1502": 35, "01852v1": 35, "qnn_conv2d_alter_layout": 35, "qnn_dense_alter_layout": 35, "qnn_requantize_alter_layout": 35, "requant": 35, "scale_shift_nchw": 35, "scale_shift_nchwc": 35, "channel_chunk": 35, "scale_shift_nhwc": 35, "simulated_dequant": 35, "input_scal": 35, "input_zero_point": 35, "dequant": 35, "mimic": 35, "sqnn_dtype_to_cod": 35, "simulated_quant": 35, "output_scal": 35, "output_zero_point": 35, "softmax_common": 35, "use_fast_exp": 35, "space_to_batch_nd": 35, "space_to_depth": 35, "sparse_add": 35, "dense_data": 35, "sparse_data": 35, "sparse_indptr": 35, "nnz": 35, "csr": 35, "sparse_conv2d": 35, "weight_data": 35, "weight_indic": 35, "weight_indptr": 35, "num_block": 35, "bs_r": 35, "bsr": 35, "bs_c": 35, "sparse_dens": 35, "sparse_lh": 35, "data_data": 35, "data_indic": 35, "data_indptr": 35, "sparse_dense_alter_layout": 35, "amen": 35, "sparse_dense_sp_lh": 35, "sparse_dense_sp_rh": 35, "sparse_transpos": 35, "nonzero": 35, "out_data": 35, "out_indic": 35, "out_indptr": 35, "try_get_conv2d_sparse_input": 35, "searchtask": 35, "task_input": 35, "try_get_sparse_input": 35, "unpack_nchwc_to_nchw": 35, "packed_out": 35, "unpacked_out": 35, "upsampl": 35, "scale_h": 35, "scale_w": 35, "bilinear": 35, "upsampling3d": 35, "scale_d": 35, "trilinear": 35, "winograd_transform_matric": 35, "affine_grid": 35, "1506": 35, "02025": 35, "target_height": 35, "target_width": 35, "can_convert_multiply_to_intdiv": 35, "origin_s": 35, "scaled_s": 35, "crop_and_res": 35, "box_indic": 35, "crop_siz": 35, "num_box": 35, "extrapol": 35, "crop_height": 35, "crop_width": 35, "dilation2d_nchw": 35, "morpholog": 35, "dilation2d_nhwc": 35, "get_1d_indic": 35, "get_1d_pixel": 35, "image_width": 35, "ic": 35, "get_2d_indic": 35, "get_2d_pixel": 35, "image_height": 35, "get_3d_indic": 35, "get_3d_pixel": 35, "image_depth": 35, "get_closest_index": 35, "in_x": 35, "use_int_div": 35, "get_inx": 35, "start_x": 35, "end_x": 35, "grid_sampl": 35, "padding_mod": 35, "boundari": 35, "border": 35, "corner": 35, "bottom": 35, "cooper": 35, "geometr": 35, "extrema": 35, "resolut": 35, "agnost": 35, "nchw_pack_layout": 35, "layout_info": 35, "nchwinic": 35, "nchw_xc_layout": 35, "nchwxc": 35, "resize1d": 35, "bicubic_alpha": 35, "bicubic_exclud": 35, "ncwc": 35, "fdor": 35, "chananel": 35, "resize3d": 35, "start_d": 35, "end_d": 35, "ncdhwc": 35, "csrmm": 35, "routin": 35, "csrndarrai": 35, "csrmv": 35, "xw": 35, "modulepass": 36, "module_pass": 36, "flexibl": 36, "required_pass": 36, "disabled_pass": 36, "trace_stack": 36, "make_trac": 36, "num_ev": 36, "tuning_api_databas": 36, "basi": 36, "Such": 36, "tuning_api": 36, "get_current_trac": 36, "get_trace_stack": 36, "get_trace_stack_s": 36, "get_tuning_api_databas": 36, "inc_num_ev": 36, "increment": 36, "list_config": 36, "override_instru": 36, "pop_trac": 36, "return_curr": 36, "topmost": 36, "push_trac": 36, "push": 36, "set_num_ev": 36, "extend": 36, "printir": 36, "resolv": 36, "sequanti": 36, "transform_modul": 36, "create_module_pass": 36, "custompipelin": 36, "enable_fold": 36, "const_fold": 36, "output_modul": 36, "input_modul": 36, "tp": 36, "new_mod": 36, "outlin": 37, "inproceed": 37, "author": 37, "feng": 37, "siyuan": 37, "hou": 37, "bohan": 37, "jin": 37, "hongyi": 37, "lin": 37, "wuwei": 37, "shao": 37, "junru": 37, "lai": 37, "ruihang": 37, "ye": 37, "zihao": 37, "zheng": 37, "lianmin": 37, "yu": 37, "codi": 37, "hao": 37, "yong": 37, "titl": 37, "year": 37, "2023": 37, "isbn": 37, "9781450399166": 37, "publish": 37, "machineri": 37, "york": 37, "ny": 37, "usa": 37, "doi": 37, "1145": 37, "3575693": 37, "3576933": 37, "booktitl": 37, "proceed": 37, "28th": 37, "acm": 37, "confer": 37, "volum": 37, "804": 37, "817": 37, "numpag": 37, "vancouv": 37, "bc": 37, "canada": 37, "asplo": 37, "zhou": 37, "xiyou": 37, "masuda": 37, "masahiro": 37, "editor": 37, "koyejo": 37, "moham": 37, "agarw": 37, "belgrav": 37, "cho": 37, "35783": 37, "35796": 37, "curran": 37, "inc": 37, "neurip": 37, "paper_fil": 37, "2022": 37, "e894eafae43e68b4c8dfdacf742bcbf3": 37, "thierri": 37, "moreau": 37, "ziheng": 37, "jiang": 37, "eddi": 37, "yan": 37, "haichen": 37, "shen": 37, "meghan": 37, "cowan": 37, "leyuan": 37, "wang": 37, "yuwei": 37, "hu": 37, "lui": 37, "ceze": 37, "carlo": 37, "guestrin": 37, "arvind": 37, "krishnamurthi": 37, "autom": 37, "13th": 37, "usenix": 37, "symposium": 37, "osdi": 37, "18": 37, "2018": 37, "978": 37, "939133": 37, "08": 37, "carlsbad": 37, "ca": 37, "578": 37, "594": 37, "www": 37, "osdi18": 37, "month": 37, "oct": 37}, "objects": {"tvm": [[10, 0, 0, "-", "dlight"], [11, 0, 0, "-", "error"], [13, 0, 0, "-", "instrument"], [14, 0, 0, "-", "ir"], [15, 0, 0, "-", "meta_schedule"], [22, 0, 0, "-", "rpc"], [27, 0, 0, "-", "runtime"], [28, 0, 0, "-", "target"], [29, 0, 0, "-", "te"], [33, 0, 0, "-", "tir"], [36, 0, 0, "-", "transform"]], "tvm.dlight": [[10, 1, 1, "", "ApplyDefaultSchedule"], [10, 1, 1, "", "BlockInfo"], [10, 1, 1, "", "IterInfo"], [10, 1, 1, "", "ScheduleRule"], [10, 4, 1, "", "normalize_prim_func"], [10, 4, 1, "", "try_inline"], [10, 4, 1, "", "try_inline_contiguous_spatial"]], "tvm.dlight.BlockInfo": [[10, 2, 1, "", "dom"], [10, 2, 1, "", "dom_kind"], [10, 2, 1, "", "is_elementwise"], [10, 2, 1, "", "is_gemm"], [10, 2, 1, "", "is_gemv"], [10, 2, 1, "", "is_injective"], [10, 2, 1, "", "is_reduction"]], "tvm.dlight.IterInfo": [[10, 3, 1, "", "dom"]], "tvm.dlight.ScheduleRule": [[10, 2, 1, "", "apply"], [10, 2, 1, "", "from_callable"]], "tvm.error": [[11, 5, 1, "", "DiagnosticError"], [11, 5, 1, "", "InternalError"], [11, 5, 1, "", "OpAttributeInvalid"], [11, 5, 1, "", "OpAttributeRequired"], [11, 5, 1, "", "OpAttributeUnImplemented"], [11, 5, 1, "", "OpError"], [11, 5, 1, "", "OpNotImplemented"], [11, 5, 1, "", "RPCError"], [11, 5, 1, "", "RPCSessionTimeoutError"], [11, 5, 1, "", "TVMError"], [11, 4, 1, "", "register_error"]], "tvm.instrument": [[13, 1, 1, "", "PassInstrument"], [13, 1, 1, "", "PassTimingInstrument"], [13, 4, 1, "", "pass_instrument"]], "tvm.instrument.PassInstrument": [[13, 2, 1, "", "enter_pass_ctx"], [13, 2, 1, "", "exit_pass_ctx"], [13, 2, 1, "", "run_after_pass"], [13, 2, 1, "", "run_before_pass"], [13, 2, 1, "", "should_run"]], "tvm.instrument.PassTimingInstrument": [[13, 2, 1, "", "render"]], "tvm.ir": [[14, 1, 1, "", "Array"], [14, 1, 1, "", "Attrs"], [14, 1, 1, "", "BaseExpr"], [14, 1, 1, "", "BaseFunc"], [14, 1, 1, "", "CallingConv"], [14, 1, 1, "", "ConstantMemoryPools"], [14, 1, 1, "", "ConstantPoolInfo"], [14, 1, 1, "", "Constructor"], [14, 1, 1, "", "DictAttrs"], [14, 1, 1, "", "DummyGlobalInfo"], [14, 1, 1, "", "EnvFunc"], [14, 1, 1, "", "FuncType"], [14, 1, 1, "", "GlobalInfo"], [14, 1, 1, "", "GlobalTypeVar"], [14, 1, 1, "", "GlobalVar"], [14, 1, 1, "", "IRModule"], [14, 1, 1, "", "IncompleteType"], [14, 1, 1, "", "Map"], [14, 1, 1, "", "Node"], [14, 1, 1, "", "Op"], [14, 1, 1, "", "PointerType"], [14, 1, 1, "", "PoolInfo"], [14, 1, 1, "", "PoolInfoProperties"], [14, 1, 1, "", "PrimExpr"], [14, 1, 1, "", "PrimType"], [14, 1, 1, "", "Range"], [14, 1, 1, "", "RelayExpr"], [14, 1, 1, "", "RelayRefType"], [14, 1, 1, "", "SequentialSpan"], [14, 1, 1, "", "SourceName"], [14, 1, 1, "", "Span"], [14, 1, 1, "", "TensorAffineType"], [14, 1, 1, "", "TensorType"], [14, 1, 1, "", "TupleAffineType"], [14, 1, 1, "", "TupleType"], [14, 1, 1, "", "Type"], [14, 1, 1, "", "TypeCall"], [14, 1, 1, "", "TypeConstraint"], [14, 1, 1, "", "TypeData"], [14, 1, 1, "", "TypeKind"], [14, 1, 1, "", "TypeRelation"], [14, 1, 1, "", "TypeVar"], [14, 1, 1, "", "VDevice"], [14, 1, 1, "", "WorkspaceMemoryPools"], [14, 1, 1, "", "WorkspacePoolInfo"], [14, 4, 1, "", "assert_structural_equal"], [14, 4, 1, "", "load_json"], [14, 4, 1, "", "make_node"], [14, 4, 1, "", "register_intrin_lowering"], [14, 4, 1, "", "register_op_attr"], [14, 4, 1, "", "save_json"], [14, 4, 1, "", "structural_equal"], [14, 4, 1, "", "structural_hash"]], "tvm.ir.Attrs": [[14, 2, 1, "", "get_int"], [14, 2, 1, "", "get_int_tuple"], [14, 2, 1, "", "get_str"], [14, 2, 1, "", "keys"], [14, 2, 1, "", "list_field_info"]], "tvm.ir.BaseFunc": [[14, 3, 1, "", "attrs"], [14, 2, 1, "", "with_attr"], [14, 2, 1, "", "with_attrs"], [14, 2, 1, "", "without_attr"]], "tvm.ir.DictAttrs": [[14, 2, 1, "", "items"], [14, 2, 1, "", "keys"]], "tvm.ir.EnvFunc": [[14, 2, 1, "", "get"]], "tvm.ir.GlobalInfo": [[14, 2, 1, "", "same_as"]], "tvm.ir.GlobalVar": [[14, 2, 1, "", "astext"]], "tvm.ir.IRModule": [[14, 2, 1, "", "astext"], [14, 2, 1, "", "from_expr"], [14, 2, 1, "", "get_attr"], [14, 2, 1, "", "get_constructor"], [14, 2, 1, "", "get_global_type_var"], [14, 2, 1, "", "get_global_type_vars"], [14, 2, 1, "", "get_global_var"], [14, 2, 1, "", "get_global_vars"], [14, 2, 1, "", "update"], [14, 2, 1, "", "update_func"], [14, 2, 1, "", "update_global_info"], [14, 2, 1, "", "with_attr"], [14, 2, 1, "", "with_attrs"], [14, 2, 1, "", "without_attr"]], "tvm.ir.Map": [[14, 2, 1, "", "get"], [14, 2, 1, "", "items"]], "tvm.ir.Op": [[14, 2, 1, "", "add_argument"], [14, 2, 1, "", "add_type_rel"], [14, 2, 1, "", "astext"], [14, 2, 1, "", "get"], [14, 2, 1, "", "get_attr"], [14, 2, 1, "", "has_attr"], [14, 2, 1, "", "list_op_names"], [14, 2, 1, "", "reset_attr"], [14, 2, 1, "", "set_attr"], [14, 2, 1, "", "set_attrs_type_key"], [14, 2, 1, "", "set_num_inputs"], [14, 2, 1, "", "set_support_level"]], "tvm.ir.Range": [[14, 2, 1, "", "from_min_extent"]], "tvm.ir.RelayExpr": [[14, 3, 1, "", "checked_type"], [14, 3, 1, "", "struct_info"]], "tvm.ir.TensorType": [[14, 3, 1, "", "concrete_shape"]], "tvm.ir.Type": [[14, 2, 1, "", "same_as"]], "tvm.meta_schedule": [[15, 1, 1, "", "Builder"], [15, 1, 1, "", "CostModel"], [15, 1, 1, "", "Database"], [15, 1, 1, "", "ExtractedTask"], [15, 1, 1, "", "FeatureExtractor"], [15, 1, 1, "", "MeasureCallback"], [15, 1, 1, "", "MeasureCandidate"], [15, 1, 1, "", "Mutator"], [15, 1, 1, "", "Postproc"], [15, 1, 1, "", "Profiler"], [15, 1, 1, "", "Runner"], [15, 1, 1, "", "ScheduleRule"], [15, 1, 1, "", "SearchStrategy"], [15, 1, 1, "", "SpaceGenerator"], [15, 1, 1, "", "TaskScheduler"], [15, 1, 1, "", "TuneContext"], [15, 4, 1, "", "derived_object"], [15, 4, 1, "", "is_meta_schedule_enabled"], [15, 4, 1, "", "tune_tasks"], [15, 4, 1, "", "tune_tir"]], "tvm.meta_schedule.Builder": [[15, 2, 1, "", "build"], [15, 2, 1, "", "create"]], "tvm.meta_schedule.CostModel": [[15, 2, 1, "", "create"], [15, 2, 1, "", "load"], [15, 2, 1, "", "predict"], [15, 2, 1, "", "save"], [15, 2, 1, "", "update"]], "tvm.meta_schedule.Database": [[15, 2, 1, "", "commit_tuning_record"], [15, 2, 1, "", "commit_workload"], [15, 2, 1, "", "create"], [15, 2, 1, "", "current"], [15, 2, 1, "", "dump_pruned"], [15, 2, 1, "", "get_all_tuning_records"], [15, 2, 1, "", "get_top_k"], [15, 2, 1, "", "has_workload"], [15, 2, 1, "", "query"], [15, 2, 1, "", "query_ir_module"], [15, 2, 1, "", "query_schedule"], [15, 2, 1, "", "query_tuning_record"]], "tvm.meta_schedule.FeatureExtractor": [[15, 2, 1, "", "create"], [15, 2, 1, "", "extract_from"]], "tvm.meta_schedule.MeasureCallback": [[15, 2, 1, "", "apply"], [15, 2, 1, "", "create"]], "tvm.meta_schedule.Mutator": [[15, 2, 1, "", "apply"], [15, 2, 1, "", "clone"], [15, 2, 1, "", "create"]], "tvm.meta_schedule.Postproc": [[15, 2, 1, "", "apply"], [15, 2, 1, "", "clone"], [15, 2, 1, "", "create"]], "tvm.meta_schedule.Profiler": [[15, 2, 1, "", "current"], [15, 2, 1, "", "get"], [15, 2, 1, "", "table"], [15, 2, 1, "", "timeit"]], "tvm.meta_schedule.Runner": [[15, 2, 1, "", "create"], [15, 2, 1, "", "run"]], "tvm.meta_schedule.ScheduleRule": [[15, 2, 1, "", "apply"], [15, 2, 1, "", "clone"], [15, 2, 1, "", "create"]], "tvm.meta_schedule.SearchStrategy": [[15, 2, 1, "", "clone"], [15, 2, 1, "", "create"], [15, 2, 1, "", "generate_measure_candidates"], [15, 2, 1, "", "notify_runner_results"], [15, 2, 1, "", "post_tuning"], [15, 2, 1, "", "pre_tuning"]], "tvm.meta_schedule.SpaceGenerator": [[15, 2, 1, "", "clone"], [15, 2, 1, "", "create"], [15, 2, 1, "", "generate_design_space"]], "tvm.meta_schedule.TaskScheduler": [[15, 2, 1, "", "create"], [15, 2, 1, "", "join_running_task"], [15, 2, 1, "", "next_task_id"], [15, 2, 1, "", "print_tuning_statistics"], [15, 2, 1, "", "terminate_task"], [15, 2, 1, "", "touch_task"], [15, 2, 1, "", "tune"]], "tvm.meta_schedule.TuneContext": [[15, 2, 1, "", "clone"], [15, 2, 1, "", "generate_design_space"], [15, 2, 1, "", "generate_measure_candidates"], [15, 2, 1, "", "notify_runner_results"], [15, 2, 1, "", "post_tuning"], [15, 2, 1, "", "pre_tuning"]], "tvm.relax": [[16, 0, 0, "-", "analysis"], [17, 0, 0, "-", "block_builder"], [18, 0, 0, "-", "frontend"], [19, 0, 0, "-", "op"], [21, 0, 0, "-", "transform"]], "tvm.relax.analysis": [[16, 1, 1, "", "BaseCheckResult"], [16, 1, 1, "", "Binding"], [16, 1, 1, "", "Block"], [16, 1, 1, "", "Buffer"], [16, 1, 1, "", "Call"], [16, 1, 1, "", "DataflowBlock"], [16, 6, 1, "", "Expr"], [16, 1, 1, "", "FuncStructInfo"], [16, 1, 1, "", "Function"], [16, 1, 1, "", "GlobalVar"], [16, 1, 1, "", "IRModule"], [16, 1, 1, "", "IndexMap"], [16, 1, 1, "", "IntEnum"], [16, 1, 1, "", "PrimFunc"], [16, 1, 1, "", "StructInfo"], [16, 1, 1, "", "Type"], [16, 1, 1, "", "Var"], [16, 4, 1, "", "all_global_vars"], [16, 4, 1, "", "all_vars"], [16, 4, 1, "", "bound_vars"], [16, 4, 1, "", "contains_impure_call"], [16, 4, 1, "", "defined_symbolic_vars"], [16, 4, 1, "", "derive_call_ret_struct_info"], [16, 4, 1, "", "detect_recursion"], [16, 4, 1, "", "erase_to_well_defined"], [16, 4, 1, "", "estimate_memory_usage"], [16, 4, 1, "", "free_symbolic_vars"], [16, 4, 1, "", "free_vars"], [16, 4, 1, "", "get_static_type"], [16, 4, 1, "", "get_var2val"], [16, 4, 1, "", "has_reshape_pattern"], [16, 4, 1, "", "name_to_binding"], [16, 4, 1, "", "post_order_visit"], [16, 4, 1, "", "remove_all_unused"], [16, 4, 1, "", "struct_info_base_check"], [16, 4, 1, "", "struct_info_lca"], [16, 4, 1, "", "suggest_layout_transforms"], [16, 4, 1, "", "tir_vars_in_struct_info"], [16, 4, 1, "", "udchain"], [16, 4, 1, "", "well_formed"]], "tvm.relax.analysis.Buffer": [[16, 2, 1, "", "access_ptr"], [16, 2, 1, "", "get_flattened_buffer"], [16, 2, 1, "", "offset_of"], [16, 2, 1, "", "scope"], [16, 2, 1, "", "vload"], [16, 2, 1, "", "vstore"]], "tvm.relax.analysis.FuncStructInfo": [[16, 2, 1, "", "opaque_func"]], "tvm.relax.analysis.Function": [[16, 2, 1, "", "bind_params"], [16, 2, 1, "", "bind_symbolic_vars"], [16, 2, 1, "", "create_empty"]], "tvm.relax.analysis.GlobalVar": [[16, 2, 1, "", "astext"]], "tvm.relax.analysis.IRModule": [[16, 2, 1, "", "astext"], [16, 2, 1, "", "from_expr"], [16, 2, 1, "", "get_attr"], [16, 2, 1, "", "get_constructor"], [16, 2, 1, "", "get_global_type_var"], [16, 2, 1, "", "get_global_type_vars"], [16, 2, 1, "", "get_global_var"], [16, 2, 1, "", "get_global_vars"], [16, 2, 1, "", "update"], [16, 2, 1, "", "update_func"], [16, 2, 1, "", "update_global_info"], [16, 2, 1, "", "with_attr"], [16, 2, 1, "", "with_attrs"], [16, 2, 1, "", "without_attr"]], "tvm.relax.analysis.IndexMap": [[16, 2, 1, "", "from_func"], [16, 2, 1, "", "from_func_with_separators"], [16, 2, 1, "", "inverse"], [16, 2, 1, "", "is_equivalent_to"], [16, 2, 1, "", "map_indices"], [16, 2, 1, "", "map_ndarray"], [16, 2, 1, "", "map_shape"], [16, 2, 1, "", "non_surjective_inverse"]], "tvm.relax.analysis.PrimFunc": [[16, 2, 1, "", "specialize"], [16, 2, 1, "", "with_body"]], "tvm.relax.analysis.StructInfo": [[16, 2, 1, "", "is_base_of"], [16, 2, 1, "", "same_as"]], "tvm.relax.analysis.Type": [[16, 2, 1, "", "same_as"]], "tvm.relax.analysis.Var": [[16, 3, 1, "", "name_hint"]], "tvm.relax.block_builder": [[17, 1, 1, "", "BlockBuilder"], [17, 1, 1, "", "DataflowScope"], [17, 1, 1, "", "FunctionScope"], [17, 1, 1, "", "TestingScope"]], "tvm.relax.block_builder.BlockBuilder": [[17, 2, 1, "", "add_func"], [17, 2, 1, "", "begin_scope"], [17, 2, 1, "", "call_te"], [17, 2, 1, "", "call_te_with_grad"], [17, 2, 1, "", "current"], [17, 2, 1, "", "current_block_is_dataflow"], [17, 2, 1, "", "dataflow"], [17, 2, 1, "", "emit"], [17, 2, 1, "", "emit_func_output"], [17, 2, 1, "", "emit_normalized"], [17, 2, 1, "", "emit_output"], [17, 2, 1, "", "emit_te"], [17, 2, 1, "", "end_scope"], [17, 2, 1, "", "function"], [17, 2, 1, "", "get"], [17, 2, 1, "", "get_unique_name"], [17, 2, 1, "", "lookup_binding"], [17, 2, 1, "", "match_cast"], [17, 2, 1, "", "normalize"], [17, 2, 1, "", "testing_scope"], [17, 2, 1, "", "update_func"]], "tvm.relax.frontend": [[18, 4, 1, "", "detach_params"], [18, 0, 0, "-", "onnx"], [18, 0, 0, "-", "stablehlo"], [18, 0, 0, "-", "torch"]], "tvm.relax.frontend.onnx": [[18, 4, 1, "", "from_onnx"]], "tvm.relax.frontend.stablehlo": [[18, 4, 1, "", "from_stablehlo"]], "tvm.relax.frontend.torch": [[18, 4, 1, "", "dynamo_capture_subgraphs"], [18, 4, 1, "", "from_fx"], [18, 4, 1, "", "relax_dynamo"]], "tvm.relax.op": [[19, 1, 1, "", "AdaptivePool2DAttrs"], [19, 1, 1, "", "ArgmaxArgminAttrs"], [19, 1, 1, "", "AstypeAttrs"], [19, 1, 1, "", "Attrs"], [19, 1, 1, "", "BatchNormAttrs"], [19, 1, 1, "", "Call"], [19, 1, 1, "", "CallTIRWithGradAttrs"], [19, 1, 1, "", "ConcatAttrs"], [19, 1, 1, "", "Conv2DAttrs"], [19, 1, 1, "", "Conv2DTransposeAttrs"], [19, 1, 1, "", "CumsumAttrs"], [19, 1, 1, "", "DataType"], [19, 1, 1, "", "DataTypeCode"], [19, 1, 1, "", "DropoutAttrs"], [19, 1, 1, "", "EinsumAttrs"], [19, 1, 1, "", "ExpandDimsAttrs"], [19, 6, 1, "", "Expr"], [19, 1, 1, "", "ExternFunc"], [19, 1, 1, "", "FlipAttrs"], [19, 1, 1, "", "FloatImm"], [19, 1, 1, "", "GlobalVar"], [19, 1, 1, "", "IndexMap"], [19, 1, 1, "", "InitAttrs"], [19, 1, 1, "", "IntImm"], [19, 1, 1, "", "LayerNormAttrs"], [19, 1, 1, "", "LayoutTransformAttrs"], [19, 1, 1, "", "MatmulAttrs"], [19, 1, 1, "", "Object"], [19, 1, 1, "", "PermuteDimsAttrs"], [19, 1, 1, "", "Pool2DAttrs"], [19, 1, 1, "", "PrimExpr"], [19, 1, 1, "", "PrimValue"], [19, 1, 1, "", "RepeatAttrs"], [19, 1, 1, "", "Resize2DAttrs"], [19, 6, 1, "", "RxTuple"], [19, 1, 1, "", "ShapeExpr"], [19, 1, 1, "", "SoftmaxAttrs"], [19, 1, 1, "", "SplitAttrs"], [19, 1, 1, "", "SqueezeAttrs"], [19, 1, 1, "", "StatisticalAttrs"], [19, 1, 1, "", "StridedSliceAttrs"], [19, 1, 1, "", "StringImm"], [19, 1, 1, "", "StructInfo"], [19, 1, 1, "", "TakeAttrs"], [19, 1, 1, "", "TensorStructInfo"], [19, 1, 1, "", "TileAttrs"], [19, 1, 1, "", "TriluAttrs"], [19, 1, 1, "", "Var"], [19, 4, 1, "", "abs"], [19, 4, 1, "", "acos"], [19, 4, 1, "", "acosh"], [19, 4, 1, "", "add"], [19, 4, 1, "", "arange"], [19, 4, 1, "", "argmax"], [19, 4, 1, "", "argmin"], [19, 4, 1, "", "asin"], [19, 4, 1, "", "asinh"], [19, 4, 1, "", "assert_op"], [19, 4, 1, "", "astype"], [19, 4, 1, "", "atan"], [19, 4, 1, "", "atanh"], [19, 4, 1, "", "bitwise_and"], [19, 4, 1, "", "bitwise_not"], [19, 4, 1, "", "bitwise_or"], [19, 4, 1, "", "bitwise_xor"], [19, 4, 1, "", "broadcast_to"], [19, 0, 0, "-", "builtin"], [19, 4, 1, "", "call_builtin_with_ctx"], [19, 4, 1, "", "call_dps_packed"], [19, 4, 1, "", "call_pure_packed"], [19, 4, 1, "", "call_tir"], [19, 4, 1, "", "call_tir_inplace"], [19, 4, 1, "", "call_tir_with_grad"], [19, 0, 0, "-", "ccl"], [19, 4, 1, "", "ceil"], [19, 4, 1, "", "clip"], [19, 4, 1, "", "collapse_sum_like"], [19, 4, 1, "", "collapse_sum_to"], [19, 4, 1, "", "concat"], [19, 4, 1, "", "cos"], [19, 4, 1, "", "cosh"], [19, 4, 1, "", "cumsum"], [19, 0, 0, "-", "distributed"], [19, 4, 1, "", "divide"], [19, 4, 1, "", "dynamic_strided_slice"], [19, 4, 1, "", "einsum"], [19, 4, 1, "", "equal"], [19, 4, 1, "", "erf"], [19, 4, 1, "", "ewise_fma"], [19, 4, 1, "", "exp"], [19, 4, 1, "", "expand_dims"], [19, 4, 1, "", "flatten"], [19, 4, 1, "", "flip"], [19, 4, 1, "", "floor"], [19, 4, 1, "", "floor_divide"], [19, 4, 1, "", "full"], [19, 4, 1, "", "full_like"], [19, 0, 0, "-", "grad"], [19, 4, 1, "", "greater"], [19, 4, 1, "", "greater_equal"], [19, 4, 1, "", "hint_on_device"], [19, 0, 0, "-", "image"], [19, 4, 1, "", "invoke_closure"], [19, 4, 1, "", "invoke_pure_closure"], [19, 4, 1, "", "isfinite"], [19, 4, 1, "", "isinf"], [19, 4, 1, "", "isnan"], [19, 4, 1, "", "layout_transform"], [19, 4, 1, "", "less"], [19, 4, 1, "", "less_equal"], [19, 4, 1, "", "linear"], [19, 4, 1, "", "log"], [19, 4, 1, "", "logical_and"], [19, 4, 1, "", "logical_not"], [19, 4, 1, "", "logical_or"], [19, 4, 1, "", "logical_xor"], [19, 4, 1, "", "make_closure"], [19, 4, 1, "", "masked_fill"], [19, 4, 1, "", "matmul"], [19, 4, 1, "", "max"], [19, 4, 1, "", "maximum"], [19, 4, 1, "", "mean"], [19, 0, 0, "-", "memory"], [19, 4, 1, "", "min"], [19, 4, 1, "", "minimum"], [19, 4, 1, "", "multiply"], [19, 4, 1, "", "negative"], [19, 0, 0, "-", "nn"], [19, 4, 1, "", "not_equal"], [19, 4, 1, "", "null_value"], [19, 4, 1, "", "ones"], [19, 4, 1, "", "ones_like"], [19, 0, 0, "-", "op_attrs"], [19, 4, 1, "", "permute_dims"], [19, 4, 1, "", "power"], [19, 4, 1, "", "print"], [19, 4, 1, "", "prod"], [19, 4, 1, "", "py_print"], [19, 4, 1, "", "register_gradient"], [19, 4, 1, "", "render_object"], [19, 4, 1, "", "repeat"], [19, 4, 1, "", "reshape"], [19, 4, 1, "", "round"], [19, 4, 1, "", "rsqrt"], [19, 4, 1, "", "scatter_elements"], [19, 4, 1, "", "shape_of"], [19, 4, 1, "", "shape_to_tensor"], [19, 4, 1, "", "sigmoid"], [19, 4, 1, "", "sign"], [19, 4, 1, "", "sin"], [19, 4, 1, "", "sinh"], [19, 4, 1, "", "split"], [19, 4, 1, "", "sqrt"], [19, 4, 1, "", "square"], [19, 4, 1, "", "squeeze"], [19, 4, 1, "", "std"], [19, 4, 1, "", "strided_slice"], [19, 4, 1, "", "subtract"], [19, 4, 1, "", "sum"], [19, 4, 1, "", "take"], [19, 4, 1, "", "tan"], [19, 4, 1, "", "tanh"], [19, 4, 1, "", "tensor_to_shape"], [19, 4, 1, "", "tile"], [19, 4, 1, "", "to_vdevice"], [19, 4, 1, "", "tril"], [19, 4, 1, "", "triu"], [19, 4, 1, "", "unique"], [19, 4, 1, "", "variance"], [19, 4, 1, "", "where"], [19, 4, 1, "", "wrap_param"], [19, 4, 1, "", "zeros"], [19, 4, 1, "", "zeros_like"]], "tvm.relax.op.Attrs": [[19, 2, 1, "", "get_int"], [19, 2, 1, "", "get_int_tuple"], [19, 2, 1, "", "get_str"], [19, 2, 1, "", "keys"], [19, 2, 1, "", "list_field_info"]], "tvm.relax.op.GlobalVar": [[19, 2, 1, "", "astext"]], "tvm.relax.op.IndexMap": [[19, 2, 1, "", "from_func"], [19, 2, 1, "", "from_func_with_separators"], [19, 2, 1, "", "inverse"], [19, 2, 1, "", "is_equivalent_to"], [19, 2, 1, "", "map_indices"], [19, 2, 1, "", "map_ndarray"], [19, 2, 1, "", "map_shape"], [19, 2, 1, "", "non_surjective_inverse"]], "tvm.relax.op.StructInfo": [[19, 2, 1, "", "is_base_of"], [19, 2, 1, "", "same_as"]], "tvm.relax.op.Var": [[19, 3, 1, "", "name_hint"]], "tvm.relax.op.builtin": [[19, 1, 1, "", "Call"], [19, 1, 1, "", "DataTypeImm"], [19, 6, 1, "", "Expr"], [19, 1, 1, "", "PrimValue"], [19, 4, 1, "", "alloc_tensor"], [19, 4, 1, "", "stop_lift_params"]], "tvm.relax.op.ccl": [[19, 6, 1, "", "Expr"], [19, 4, 1, "", "allreduce"], [19, 4, 1, "", "broadcast_from_worker0"], [19, 4, 1, "", "scatter_from_worker0"]], "tvm.relax.op.distributed": [[19, 1, 1, "", "DeviceMesh"], [19, 6, 1, "", "Expr"], [19, 1, 1, "", "Placement"], [19, 4, 1, "", "annotate_sharding"], [19, 4, 1, "", "redistribute"]], "tvm.relax.op.distributed.Placement": [[19, 2, 1, "", "from_text"]], "tvm.relax.op.grad": [[19, 6, 1, "", "Expr"], [19, 4, 1, "", "avg_pool2d_backward"], [19, 4, 1, "", "end_checkpoint"], [19, 4, 1, "", "max_pool2d_backward"], [19, 4, 1, "", "nll_loss_backward"], [19, 4, 1, "", "no_grad"], [19, 4, 1, "", "start_checkpoint"], [19, 4, 1, "", "take_backward"]], "tvm.relax.op.image": [[19, 1, 1, "", "DataType"], [19, 6, 1, "", "Expr"], [19, 1, 1, "", "PrimExpr"], [19, 1, 1, "", "ShapeExpr"], [19, 4, 1, "", "resize2d"]], "tvm.relax.op.memory": [[19, 1, 1, "", "Call"], [19, 1, 1, "", "DataTypeImm"], [19, 6, 1, "", "Expr"], [19, 1, 1, "", "PrimValue"], [19, 1, 1, "", "StringImm"], [19, 4, 1, "", "alloc_storage"], [19, 4, 1, "", "alloc_tensor"], [19, 4, 1, "", "kill_storage"], [19, 4, 1, "", "kill_tensor"]], "tvm.relax.op.nn": [[19, 1, 1, "", "DataType"], [19, 6, 1, "", "Expr"], [19, 1, 1, "", "FloatImm"], [19, 4, 1, "", "adaptive_avg_pool2d"], [19, 4, 1, "", "attention"], [19, 4, 1, "", "avg_pool2d"], [19, 4, 1, "", "batch_norm"], [19, 4, 1, "", "const"], [19, 4, 1, "", "conv1d"], [19, 4, 1, "", "conv1d_transpose"], [19, 4, 1, "", "conv2d"], [19, 4, 1, "", "conv2d_transpose"], [19, 4, 1, "", "cross_entropy_with_logits"], [19, 4, 1, "", "dropout"], [19, 4, 1, "", "gelu"], [19, 4, 1, "", "gelu_tanh"], [19, 4, 1, "", "group_norm"], [19, 4, 1, "", "layer_norm"], [19, 4, 1, "", "leakyrelu"], [19, 4, 1, "", "log_softmax"], [19, 4, 1, "", "max_pool2d"], [19, 4, 1, "", "nll_loss"], [19, 4, 1, "", "pad"], [19, 4, 1, "", "relu"], [19, 4, 1, "", "rms_norm"], [19, 4, 1, "", "silu"], [19, 4, 1, "", "softmax"]], "tvm.relax.op.op_attrs": [[19, 1, 1, "", "AdaptivePool2DAttrs"], [19, 1, 1, "", "ArgmaxArgminAttrs"], [19, 1, 1, "", "AstypeAttrs"], [19, 1, 1, "", "BatchNormAttrs"], [19, 1, 1, "", "CallTIRWithGradAttrs"], [19, 1, 1, "", "ConcatAttrs"], [19, 1, 1, "", "Conv2DAttrs"], [19, 1, 1, "", "Conv2DTransposeAttrs"], [19, 1, 1, "", "CumsumAttrs"], [19, 1, 1, "", "DropoutAttrs"], [19, 1, 1, "", "EinsumAttrs"], [19, 1, 1, "", "ExpandDimsAttrs"], [19, 1, 1, "", "FlipAttrs"], [19, 1, 1, "", "InitAttrs"], [19, 1, 1, "", "LayerNormAttrs"], [19, 1, 1, "", "LayoutTransformAttrs"], [19, 1, 1, "", "MatmulAttrs"], [19, 1, 1, "", "PermuteDimsAttrs"], [19, 1, 1, "", "Pool2DAttrs"], [19, 1, 1, "", "RepeatAttrs"], [19, 1, 1, "", "Resize2DAttrs"], [19, 1, 1, "", "SoftmaxAttrs"], [19, 1, 1, "", "SplitAttrs"], [19, 1, 1, "", "SqueezeAttrs"], [19, 1, 1, "", "StatisticalAttrs"], [19, 1, 1, "", "StridedSliceAttrs"], [19, 1, 1, "", "TakeAttrs"], [19, 1, 1, "", "TileAttrs"], [19, 1, 1, "", "TriluAttrs"]], "tvm.relax.transform": [[21, 4, 1, "", "AllocateWorkspace"], [21, 4, 1, "", "AlterOpImpl"], [21, 4, 1, "", "AnnotateTIROpPattern"], [21, 4, 1, "", "AttachGlobalSymbol"], [21, 4, 1, "", "BindParams"], [21, 4, 1, "", "BindSymbolicVars"], [21, 4, 1, "", "BundleModelParams"], [21, 4, 1, "", "CallTIRRewrite"], [21, 4, 1, "", "CanonicalizeBindings"], [21, 4, 1, "", "CombineParallelMatmul"], [21, 4, 1, "", "ConvertLayout"], [21, 1, 1, "", "DFPattern"], [21, 1, 1, "", "DataflowBlockPass"], [21, 4, 1, "", "DeadCodeElimination"], [21, 4, 1, "", "DecomposeOpsForInference"], [21, 4, 1, "", "DecomposeOpsForTraining"], [21, 4, 1, "", "EliminateCommonSubexpr"], [21, 6, 1, "", "Expr"], [21, 4, 1, "", "FewShotTuning"], [21, 4, 1, "", "FoldConstant"], [21, 4, 1, "", "FoldDataflowBlockOutput"], [21, 1, 1, "", "FunctionPass"], [21, 4, 1, "", "FuseOps"], [21, 4, 1, "", "FuseOpsByPattern"], [21, 4, 1, "", "FuseTIR"], [21, 1, 1, "", "FusionPattern"], [21, 4, 1, "", "Gradient"], [21, 1, 1, "", "IndexMap"], [21, 4, 1, "", "LambdaLift"], [21, 1, 1, "", "LazyTransformParams"], [21, 4, 1, "", "LegalizeOps"], [21, 4, 1, "", "LiftTransformParams"], [21, 4, 1, "", "MergeCompositeFunctions"], [21, 4, 1, "", "MetaScheduleApplyDatabase"], [21, 4, 1, "", "MetaScheduleTuneIRMod"], [21, 4, 1, "", "MetaScheduleTuneTIR"], [21, 1, 1, "", "NDArray"], [21, 4, 1, "", "Normalize"], [21, 1, 1, "", "Object"], [21, 1, 1, "", "OptimizeLayoutTransform"], [21, 1, 1, "", "PatternCheckContext"], [21, 1, 1, "", "PrimFunc"], [21, 4, 1, "", "RealizeVDevice"], [21, 4, 1, "", "RemovePurityChecking"], [21, 4, 1, "", "RewriteCUDAGraph"], [21, 4, 1, "", "RewriteDataflowReshape"], [21, 4, 1, "", "RunCodegen"], [21, 4, 1, "", "SplitCallTIRByPattern"], [21, 4, 1, "", "StaticPlanBlockMemory"], [21, 4, 1, "", "ToMixedPrecision"], [21, 4, 1, "", "ToNonDataflow"], [21, 4, 1, "", "UpdateVDevice"], [21, 4, 1, "", "VMBuiltinLower"], [21, 4, 1, "", "VMShapeLower"], [21, 1, 1, "", "Var"], [21, 4, 1, "", "dataflowblock_pass"], [21, 4, 1, "", "function_pass"]], "tvm.relax.transform.DFPattern": [[21, 2, 1, "", "dup"], [21, 2, 1, "", "extract_matched_expr"], [21, 2, 1, "", "fork_to"], [21, 2, 1, "", "has_attr"], [21, 2, 1, "", "has_dtype"], [21, 2, 1, "", "has_shape"], [21, 2, 1, "", "has_type"], [21, 2, 1, "", "match"], [21, 2, 1, "", "only_used_by"], [21, 2, 1, "", "same_shape_as"], [21, 2, 1, "", "used_by"]], "tvm.relax.transform.IndexMap": [[21, 2, 1, "", "from_func"], [21, 2, 1, "", "from_func_with_separators"], [21, 2, 1, "", "inverse"], [21, 2, 1, "", "is_equivalent_to"], [21, 2, 1, "", "map_indices"], [21, 2, 1, "", "map_ndarray"], [21, 2, 1, "", "map_shape"], [21, 2, 1, "", "non_surjective_inverse"]], "tvm.relax.transform.NDArray": [[21, 2, 1, "", "asnumpy"], [21, 2, 1, "", "copyfrom"], [21, 2, 1, "", "copyto"], [21, 3, 1, "", "device"], [21, 3, 1, "", "dtype"], [21, 2, 1, "", "numpy"], [21, 2, 1, "", "same_as"]], "tvm.relax.transform.PrimFunc": [[21, 2, 1, "", "specialize"], [21, 2, 1, "", "with_body"]], "tvm.relax.transform.Var": [[21, 3, 1, "", "name_hint"]], "tvm.rpc": [[22, 1, 1, "", "LocalSession"], [22, 1, 1, "", "PopenSession"], [22, 1, 1, "", "RPCSession"], [22, 1, 1, "", "Server"], [22, 1, 1, "", "TrackerSession"], [22, 4, 1, "", "connect"], [22, 4, 1, "", "connect_tracker"], [22, 4, 1, "", "with_minrpc"]], "tvm.rpc.RPCSession": [[22, 2, 1, "", "cl"], [22, 2, 1, "", "cpu"], [22, 2, 1, "", "cuda"], [22, 2, 1, "", "device"], [22, 2, 1, "", "download"], [22, 2, 1, "", "download_linked_module"], [22, 2, 1, "", "ext_dev"], [22, 2, 1, "", "get_function"], [22, 2, 1, "", "hexagon"], [22, 2, 1, "", "listdir"], [22, 2, 1, "", "load_module"], [22, 2, 1, "", "metal"], [22, 2, 1, "", "remove"], [22, 2, 1, "", "rocm"], [22, 2, 1, "", "system_lib"], [22, 2, 1, "", "upload"], [22, 2, 1, "", "vulkan"], [22, 2, 1, "", "webgpu"]], "tvm.rpc.Server": [[22, 2, 1, "", "terminate"]], "tvm.rpc.TrackerSession": [[22, 2, 1, "", "close"], [22, 2, 1, "", "request"], [22, 2, 1, "", "request_and_run"], [22, 2, 1, "", "summary"], [22, 2, 1, "", "text_summary"]], "tvm.runtime": [[27, 1, 1, "", "DataType"], [27, 1, 1, "", "DataTypeCode"], [27, 1, 1, "", "Device"], [27, 1, 1, "", "Module"], [27, 1, 1, "", "Object"], [27, 1, 1, "", "ObjectGeneric"], [27, 1, 1, "", "ObjectPath"], [27, 1, 1, "", "ObjectPathPair"], [27, 1, 1, "", "PackedFunc"], [27, 1, 1, "", "Report"], [27, 1, 1, "", "Scriptable"], [27, 1, 1, "", "ShapeTuple"], [27, 1, 1, "", "String"], [27, 4, 1, "", "cl"], [27, 4, 1, "", "const"], [27, 4, 1, "", "convert"], [27, 4, 1, "", "convert_to_object"], [27, 4, 1, "", "cpu"], [27, 4, 1, "", "cuda"], [27, 4, 1, "", "device"], [23, 0, 0, "-", "disco"], [27, 4, 1, "", "enabled"], [27, 4, 1, "", "ext_dev"], [27, 4, 1, "", "gpu"], [27, 4, 1, "", "load_module"], [27, 4, 1, "", "load_param_dict"], [27, 4, 1, "", "load_param_dict_from_file"], [27, 4, 1, "", "load_static_library"], [27, 4, 1, "", "metal"], [27, 4, 1, "", "mtl"], [24, 0, 0, "-", "ndarray"], [27, 4, 1, "", "num_threads"], [27, 4, 1, "", "opencl"], [25, 0, 0, "-", "profiling"], [26, 0, 0, "-", "relax_vm"], [27, 4, 1, "", "rocm"], [27, 4, 1, "", "save_param_dict"], [27, 4, 1, "", "save_param_dict_to_file"], [27, 4, 1, "", "system_lib"], [27, 4, 1, "", "vpi"], [27, 4, 1, "", "vulkan"]], "tvm.runtime.Device": [[27, 3, 1, "", "api_version"], [27, 3, 1, "", "compute_version"], [27, 2, 1, "", "create_raw_stream"], [27, 3, 1, "", "device_name"], [27, 3, 1, "", "driver_version"], [27, 3, 1, "", "exist"], [27, 2, 1, "", "free_raw_stream"], [27, 3, 1, "", "l2_cache_size_bytes"], [27, 3, 1, "", "max_clock_rate"], [27, 3, 1, "", "max_shared_memory_per_block"], [27, 3, 1, "", "max_thread_dimensions"], [27, 3, 1, "", "max_threads_per_block"], [27, 3, 1, "", "multi_processor_count"], [27, 2, 1, "", "set_raw_stream"], [27, 2, 1, "", "sync"], [27, 2, 1, "", "texture_spatial_limit"], [27, 3, 1, "", "warp_size"]], "tvm.runtime.Module": [[27, 2, 1, "", "clear_imports"], [27, 3, 1, "", "entry_func"], [27, 2, 1, "", "export_library"], [27, 3, 1, "", "format"], [27, 2, 1, "", "get_function"], [27, 2, 1, "", "get_property_mask"], [27, 2, 1, "", "get_source"], [27, 2, 1, "", "implements_function"], [27, 2, 1, "", "import_module"], [27, 3, 1, "", "imported_modules"], [27, 3, 1, "", "is_binary_serializable"], [27, 3, 1, "", "is_dso_exportable"], [27, 3, 1, "", "is_runnable"], [27, 2, 1, "", "save"], [27, 2, 1, "", "time_evaluator"], [27, 3, 1, "", "type_key"]], "tvm.runtime.ObjectGeneric": [[27, 2, 1, "", "asobject"]], "tvm.runtime.Report": [[27, 6, 1, "", "calls"], [27, 2, 1, "", "csv"], [27, 6, 1, "", "device_metrics"], [27, 2, 1, "", "from_json"], [27, 2, 1, "", "json"], [27, 2, 1, "", "table"]], "tvm.runtime.Scriptable": [[27, 2, 1, "", "script"], [27, 2, 1, "", "show"]], "tvm.runtime.disco": [[23, 1, 1, "", "DModule"], [23, 1, 1, "", "DPackedFunc"], [23, 1, 1, "", "DRef"], [23, 1, 1, "", "ProcessSession"], [23, 1, 1, "", "Session"], [23, 1, 1, "", "ThreadedSession"]], "tvm.runtime.disco.DRef": [[23, 2, 1, "", "debug_copy_from"], [23, 2, 1, "", "debug_get_from_remote"], [23, 3, 1, "", "session"]], "tvm.runtime.disco.Session": [[23, 2, 1, "", "allreduce"], [23, 2, 1, "", "broadcast_from_worker0"], [23, 2, 1, "", "call_packed"], [23, 2, 1, "", "copy_from_worker_0"], [23, 2, 1, "", "copy_to_worker_0"], [23, 2, 1, "", "empty"], [23, 2, 1, "", "gather_to_worker0"], [23, 2, 1, "", "get_global_func"], [23, 2, 1, "", "init_ccl"], [23, 2, 1, "", "load_vm_module"], [23, 2, 1, "", "scatter_from_worker0"], [23, 2, 1, "", "sync_worker_0"]], "tvm.runtime.ndarray": [[24, 1, 1, "", "NDArray"], [24, 4, 1, "", "array"], [24, 4, 1, "", "cl"], [24, 4, 1, "", "cpu"], [24, 4, 1, "", "cuda"], [24, 4, 1, "", "device"], [24, 4, 1, "", "empty"], [24, 4, 1, "", "ext_dev"], [24, 4, 1, "", "from_dlpack"], [24, 4, 1, "", "gpu"], [24, 4, 1, "", "hexagon"], [24, 4, 1, "", "metal"], [24, 4, 1, "", "mtl"], [24, 4, 1, "", "numpyasarray"], [24, 4, 1, "", "opencl"], [24, 4, 1, "", "rocm"], [24, 4, 1, "", "vpi"], [24, 4, 1, "", "vulkan"], [24, 4, 1, "", "webgpu"]], "tvm.runtime.ndarray.NDArray": [[24, 2, 1, "", "asnumpy"], [24, 2, 1, "", "copyfrom"], [24, 2, 1, "", "copyto"], [24, 3, 1, "", "device"], [24, 3, 1, "", "dtype"], [24, 2, 1, "", "numpy"], [24, 2, 1, "", "same_as"]], "tvm.runtime.profiling": [[25, 1, 1, "", "Count"], [25, 1, 1, "", "DeviceWrapper"], [25, 1, 1, "", "Duration"], [25, 1, 1, "", "MetricCollector"], [25, 1, 1, "", "Percent"], [25, 1, 1, "", "Ratio"], [25, 1, 1, "", "Report"], [25, 4, 1, "", "profile_function"]], "tvm.runtime.profiling.Report": [[25, 6, 1, "", "calls"], [25, 2, 1, "", "csv"], [25, 6, 1, "", "device_metrics"], [25, 2, 1, "", "from_json"], [25, 2, 1, "", "json"], [25, 2, 1, "", "table"]], "tvm.runtime.relax_vm": [[26, 1, 1, "", "VMInstrumentReturnKind"], [26, 1, 1, "", "VirtualMachine"]], "tvm.runtime.relax_vm.VirtualMachine": [[26, 2, 1, "", "get_outputs"], [26, 2, 1, "", "invoke_closure"], [26, 2, 1, "", "invoke_stateful"], [26, 2, 1, "", "profile"], [26, 2, 1, "", "save_function"], [26, 2, 1, "", "set_input"], [26, 2, 1, "", "set_instrument"], [26, 2, 1, "", "time_evaluator"]], "tvm.target": [[28, 1, 1, "", "GenericFunc"], [28, 1, 1, "", "Target"], [28, 1, 1, "", "TargetKind"], [28, 1, 1, "", "VirtualDevice"], [28, 4, 1, "", "arm_cpu"], [28, 4, 1, "", "bifrost"], [28, 4, 1, "", "create"], [28, 4, 1, "", "cuda"], [28, 4, 1, "", "generic_func"], [28, 4, 1, "", "get_native_generic_func"], [28, 4, 1, "", "hexagon"], [28, 4, 1, "", "intel_graphics"], [28, 4, 1, "", "list_tags"], [28, 4, 1, "", "make_compilation_config"], [28, 4, 1, "", "mali"], [28, 4, 1, "", "override_native_generic_func"], [28, 4, 1, "", "rasp"], [28, 4, 1, "", "riscv_cpu"], [28, 4, 1, "", "rocm"], [28, 4, 1, "", "stm32"]], "tvm.target.GenericFunc": [[28, 2, 1, "", "get_packed_func"], [28, 2, 1, "", "register"], [28, 2, 1, "", "set_default"]], "tvm.target.Target": [[28, 3, 1, "", "arch"], [28, 2, 1, "", "canon_multi_target"], [28, 2, 1, "", "canon_multi_target_and_host"], [28, 2, 1, "", "canon_target"], [28, 2, 1, "", "canon_target_and_host"], [28, 2, 1, "", "canon_target_map_and_host"], [28, 2, 1, "", "current"], [28, 2, 1, "", "from_device"], [28, 2, 1, "", "get_kind_attr"], [28, 2, 1, "", "get_target_device_type"], [28, 2, 1, "", "list_kinds"], [28, 3, 1, "", "mattr"], [28, 3, 1, "", "max_block_size_x"], [28, 3, 1, "", "max_block_size_y"], [28, 3, 1, "", "max_num_threads"], [28, 3, 1, "", "mcpu"], [28, 3, 1, "", "model"], [28, 2, 1, "", "target_or_current"], [28, 3, 1, "", "thread_warp_size"]], "tvm.target.TargetKind": [[28, 3, 1, "", "options"], [28, 2, 1, "", "options_from_name"]], "tvm.te": [[29, 1, 1, "", "ComputeOp"], [29, 1, 1, "", "ExternOp"], [29, 1, 1, "", "HybridOp"], [29, 1, 1, "", "PlaceholderOp"], [29, 1, 1, "", "ScanOp"], [29, 1, 1, "", "SpecializedCondition"], [29, 1, 1, "", "Tensor"], [29, 1, 1, "", "TensorComputeOp"], [29, 1, 1, "", "TensorSlice"], [29, 4, 1, "", "abs"], [29, 4, 1, "", "acos"], [29, 4, 1, "", "acosh"], [29, 4, 1, "", "add"], [29, 4, 1, "", "all"], [29, 4, 1, "", "any"], [29, 4, 1, "", "asin"], [29, 4, 1, "", "asinh"], [29, 4, 1, "", "atan"], [29, 4, 1, "", "atanh"], [29, 4, 1, "", "ceil"], [29, 4, 1, "", "comm_reducer"], [29, 4, 1, "", "compute"], [29, 4, 1, "", "const"], [29, 4, 1, "", "cos"], [29, 4, 1, "", "cosh"], [29, 4, 1, "", "create_prim_func"], [29, 4, 1, "", "create_relax_prim_func"], [29, 4, 1, "", "create_schedule"], [29, 4, 1, "", "decl_tensor_intrin"], [29, 4, 1, "", "div"], [29, 4, 1, "", "erf"], [29, 4, 1, "", "exp"], [29, 4, 1, "", "extern"], [29, 4, 1, "", "extern_primfunc"], [29, 4, 1, "", "floor"], [29, 4, 1, "", "floordiv"], [29, 4, 1, "", "floormod"], [29, 4, 1, "", "fmod"], [29, 4, 1, "", "gradient"], [29, 4, 1, "", "if_then_else"], [29, 4, 1, "", "indexdiv"], [29, 4, 1, "", "indexmod"], [29, 4, 1, "", "isfinite"], [29, 4, 1, "", "isinf"], [29, 4, 1, "", "isnan"], [29, 4, 1, "", "log"], [29, 4, 1, "", "log10"], [29, 4, 1, "", "log2"], [29, 4, 1, "", "max"], [29, 4, 1, "", "max_value"], [29, 4, 1, "", "min"], [29, 4, 1, "", "min_value"], [29, 4, 1, "", "multiply"], [29, 4, 1, "", "nearbyint"], [29, 4, 1, "", "placeholder"], [29, 4, 1, "", "popcount"], [29, 4, 1, "", "power"], [29, 4, 1, "", "reduce_axis"], [29, 4, 1, "", "round"], [29, 4, 1, "", "rsqrt"], [29, 4, 1, "", "scan"], [29, 4, 1, "", "sigmoid"], [29, 4, 1, "", "sin"], [29, 4, 1, "", "sinh"], [29, 4, 1, "", "size_var"], [29, 4, 1, "", "sqrt"], [29, 4, 1, "", "subtract"], [29, 4, 1, "", "sum"], [29, 4, 1, "", "tag_scope"], [29, 4, 1, "", "tan"], [29, 4, 1, "", "tanh"], [29, 4, 1, "", "thread_axis"], [29, 4, 1, "", "trace"], [29, 4, 1, "", "trunc"], [29, 4, 1, "", "truncdiv"], [29, 4, 1, "", "truncmod"], [29, 4, 1, "", "var"]], "tvm.te.HybridOp": [[29, 3, 1, "", "axis"]], "tvm.te.ScanOp": [[29, 3, 1, "", "scan_axis"]], "tvm.te.SpecializedCondition": [[29, 2, 1, "", "current"]], "tvm.te.Tensor": [[29, 3, 1, "", "axis"], [29, 3, 1, "", "ndim"], [29, 3, 1, "", "op"], [29, 3, 1, "", "shape"], [29, 3, 1, "", "value_index"]], "tvm.te.TensorSlice": [[29, 2, 1, "", "asobject"], [29, 3, 1, "", "dtype"]], "tvm.tir": [[33, 1, 1, "", "Add"], [33, 1, 1, "", "Allocate"], [33, 1, 1, "", "AllocateConst"], [33, 1, 1, "", "And"], [33, 1, 1, "", "Any"], [33, 1, 1, "", "AssertStmt"], [33, 1, 1, "", "AttrStmt"], [33, 1, 1, "", "BijectiveLayout"], [33, 1, 1, "", "Block"], [33, 1, 1, "", "BlockDependenceInfo"], [33, 1, 1, "", "BlockRealize"], [33, 1, 1, "", "Broadcast"], [33, 1, 1, "", "Buffer"], [33, 1, 1, "", "BufferLoad"], [33, 1, 1, "", "BufferRealize"], [33, 1, 1, "", "BufferRegion"], [33, 1, 1, "", "BufferStore"], [33, 1, 1, "", "Call"], [33, 1, 1, "", "CallEffectKind"], [33, 1, 1, "", "Cast"], [33, 1, 1, "", "CommReducer"], [33, 1, 1, "", "DataProducer"], [33, 1, 1, "", "DeclBuffer"], [33, 1, 1, "", "Div"], [33, 1, 1, "", "EQ"], [33, 1, 1, "", "Evaluate"], [33, 1, 1, "", "FloatImm"], [33, 1, 1, "", "FloorDiv"], [33, 1, 1, "", "FloorMod"], [33, 1, 1, "", "For"], [33, 1, 1, "", "ForKind"], [33, 1, 1, "", "GE"], [33, 1, 1, "", "GT"], [33, 1, 1, "", "IfThenElse"], [33, 1, 1, "", "IndexMap"], [33, 1, 1, "", "IntImm"], [33, 1, 1, "", "IterVar"], [33, 1, 1, "", "LE"], [33, 1, 1, "", "LT"], [33, 1, 1, "", "Layout"], [33, 1, 1, "", "Let"], [33, 1, 1, "", "LetStmt"], [33, 1, 1, "", "MatchBufferRegion"], [33, 1, 1, "", "Max"], [33, 1, 1, "", "Min"], [33, 1, 1, "", "Mod"], [33, 1, 1, "", "Mul"], [33, 1, 1, "", "NE"], [33, 1, 1, "", "Not"], [33, 1, 1, "", "Or"], [33, 1, 1, "", "Prefetch"], [33, 1, 1, "", "PrimFunc"], [33, 1, 1, "", "ProducerLoad"], [33, 1, 1, "", "ProducerRealize"], [33, 1, 1, "", "ProducerStore"], [33, 1, 1, "", "Ramp"], [33, 1, 1, "", "Reduce"], [33, 1, 1, "", "Select"], [33, 1, 1, "", "SeqStmt"], [33, 1, 1, "", "Shuffle"], [33, 1, 1, "", "SizeVar"], [33, 1, 1, "", "Stmt"], [33, 1, 1, "", "StringImm"], [33, 1, 1, "", "Sub"], [33, 4, 1, "", "TVMBackendAllocWorkspace"], [33, 4, 1, "", "TVMBackendFreeWorkspace"], [33, 1, 1, "", "TensorIntrin"], [33, 1, 1, "", "Var"], [33, 1, 1, "", "While"], [33, 4, 1, "", "abs"], [33, 4, 1, "", "acos"], [33, 4, 1, "", "acosh"], [33, 4, 1, "", "add"], [33, 4, 1, "", "address_of"], [33, 4, 1, "", "all"], [33, 4, 1, "", "any"], [33, 4, 1, "", "asin"], [33, 4, 1, "", "asinh"], [33, 4, 1, "", "assume"], [33, 4, 1, "", "atan"], [33, 4, 1, "", "atan2"], [33, 4, 1, "", "atanh"], [33, 4, 1, "", "bijective_layout"], [33, 4, 1, "", "bitwise_and"], [33, 4, 1, "", "bitwise_not"], [33, 4, 1, "", "bitwise_or"], [33, 4, 1, "", "bitwise_xor"], [33, 4, 1, "", "call_cpacked"], [33, 4, 1, "", "call_cpacked_lowered"], [33, 4, 1, "", "call_extern"], [33, 4, 1, "", "call_intrin"], [33, 4, 1, "", "call_llvm_intrin"], [33, 4, 1, "", "call_llvm_pure_intrin"], [33, 4, 1, "", "call_packed"], [33, 4, 1, "", "call_packed_lowered"], [33, 4, 1, "", "call_pure_extern"], [33, 4, 1, "", "call_tir"], [33, 4, 1, "", "ceil"], [33, 4, 1, "", "ceildiv"], [33, 4, 1, "", "clz"], [33, 4, 1, "", "comm_reducer"], [33, 4, 1, "", "copysign"], [33, 4, 1, "", "cos"], [33, 4, 1, "", "cosh"], [33, 4, 1, "", "create_barriers"], [33, 4, 1, "", "decl_buffer"], [33, 4, 1, "", "div"], [33, 4, 1, "", "end_profile_intrinsic"], [33, 4, 1, "", "erf"], [33, 4, 1, "", "exp"], [33, 4, 1, "", "exp10"], [33, 4, 1, "", "exp2"], [33, 4, 1, "", "floor"], [33, 4, 1, "", "floordiv"], [33, 4, 1, "", "floormod"], [33, 4, 1, "", "fmod"], [33, 4, 1, "", "hypot"], [33, 4, 1, "", "if_then_else"], [33, 4, 1, "", "indexdiv"], [33, 4, 1, "", "indexmod"], [33, 4, 1, "", "infinity"], [33, 4, 1, "", "isfinite"], [33, 4, 1, "", "isinf"], [33, 4, 1, "", "isnan"], [33, 4, 1, "", "isnullptr"], [33, 4, 1, "", "layout"], [33, 4, 1, "", "ldexp"], [33, 4, 1, "", "likely"], [33, 4, 1, "", "log"], [33, 4, 1, "", "log10"], [33, 4, 1, "", "log1p"], [33, 4, 1, "", "log2"], [33, 4, 1, "", "lookup_param"], [33, 4, 1, "", "max"], [33, 4, 1, "", "max_value"], [33, 4, 1, "", "min"], [33, 4, 1, "", "min_value"], [33, 4, 1, "", "mma_fill"], [33, 4, 1, "", "mma_store"], [33, 4, 1, "", "multiply"], [33, 4, 1, "", "nearbyint"], [33, 4, 1, "", "nextafter"], [33, 4, 1, "", "popcount"], [33, 4, 1, "", "pow"], [33, 4, 1, "", "power"], [33, 4, 1, "", "ptx_arrive_barrier"], [33, 4, 1, "", "ptx_arrive_barrier_expect_tx"], [33, 4, 1, "", "ptx_commit_group"], [33, 4, 1, "", "ptx_cp_async"], [33, 4, 1, "", "ptx_cp_async_barrier"], [33, 4, 1, "", "ptx_cp_async_bulk"], [33, 4, 1, "", "ptx_init_barrier_thread_count"], [33, 4, 1, "", "ptx_ldmatrix"], [33, 4, 1, "", "ptx_mma"], [33, 4, 1, "", "ptx_mma_sp"], [33, 4, 1, "", "ptx_wait_barrier"], [33, 4, 1, "", "ptx_wait_group"], [33, 4, 1, "", "q_multiply_shift"], [33, 4, 1, "", "q_multiply_shift_per_axis"], [33, 4, 1, "", "reinterpret"], [33, 4, 1, "", "ret"], [33, 4, 1, "", "round"], [33, 4, 1, "", "rsqrt"], [31, 0, 0, "-", "schedule"], [33, 4, 1, "", "shift_left"], [33, 4, 1, "", "shift_right"], [33, 4, 1, "", "sigmoid"], [33, 4, 1, "", "sin"], [33, 4, 1, "", "sinh"], [33, 4, 1, "", "sqrt"], [33, 4, 1, "", "start_profile_intrinsic"], [32, 0, 0, "-", "stmt_functor"], [33, 4, 1, "", "stmt_list"], [33, 4, 1, "", "stmt_seq"], [33, 4, 1, "", "subtract"], [33, 4, 1, "", "sum"], [33, 4, 1, "", "tan"], [33, 4, 1, "", "tanh"], [33, 4, 1, "", "trace"], [34, 0, 0, "-", "transform"], [33, 4, 1, "", "trunc"], [33, 4, 1, "", "truncdiv"], [33, 4, 1, "", "truncmod"], [33, 4, 1, "", "tvm_access_ptr"], [33, 4, 1, "", "tvm_bmma_sync"], [33, 4, 1, "", "tvm_check_return"], [33, 4, 1, "", "tvm_fill_fragment"], [33, 4, 1, "", "tvm_load_matrix_sync"], [33, 4, 1, "", "tvm_mma_sync"], [33, 4, 1, "", "tvm_stack_alloca"], [33, 4, 1, "", "tvm_stack_make_array"], [33, 4, 1, "", "tvm_stack_make_shape"], [33, 4, 1, "", "tvm_store_matrix_sync"], [33, 4, 1, "", "tvm_struct_get"], [33, 4, 1, "", "tvm_struct_set"], [33, 4, 1, "", "tvm_thread_allreduce"], [33, 4, 1, "", "tvm_throw_last_error"], [33, 4, 1, "", "tvm_tuple"], [33, 4, 1, "", "type_annotation"], [33, 4, 1, "", "undef"], [33, 4, 1, "", "vectorcombine"], [33, 4, 1, "", "vectorhigh"], [33, 4, 1, "", "vectorlow"]], "tvm.tir.BijectiveLayout": [[33, 2, 1, "", "backward_index"], [33, 2, 1, "", "backward_shape"], [33, 2, 1, "", "forward_index"], [33, 2, 1, "", "forward_shape"]], "tvm.tir.BlockDependenceInfo": [[33, 2, 1, "", "get_block_scope"], [33, 2, 1, "", "get_sref"]], "tvm.tir.Buffer": [[33, 2, 1, "", "access_ptr"], [33, 2, 1, "", "get_flattened_buffer"], [33, 2, 1, "", "offset_of"], [33, 2, 1, "", "scope"], [33, 2, 1, "", "vload"], [33, 2, 1, "", "vstore"]], "tvm.tir.IndexMap": [[33, 2, 1, "", "from_func"], [33, 2, 1, "", "from_func_with_separators"], [33, 2, 1, "", "inverse"], [33, 2, 1, "", "is_equivalent_to"], [33, 2, 1, "", "map_indices"], [33, 2, 1, "", "map_ndarray"], [33, 2, 1, "", "map_shape"], [33, 2, 1, "", "non_surjective_inverse"]], "tvm.tir.Layout": [[33, 2, 1, "", "factor_of"], [33, 2, 1, "", "index_of"]], "tvm.tir.PrimFunc": [[33, 2, 1, "", "specialize"], [33, 2, 1, "", "with_body"]], "tvm.tir.TensorIntrin": [[33, 2, 1, "", "get"], [33, 2, 1, "", "register"]], "tvm.tir.analysis": [[30, 0, 0, "-", "analysis"]], "tvm.tir.analysis.analysis": [[30, 4, 1, "", "OOBChecker"], [30, 4, 1, "", "apply_prim_func_arg_and_result_memory_constraints"], [30, 4, 1, "", "calculate_allocated_bytes"], [30, 4, 1, "", "calculate_constant_bytes"], [30, 4, 1, "", "calculate_workspace_bytes"], [30, 4, 1, "", "detect_buffer_access_lca"], [30, 4, 1, "", "estimate_tir_flops"], [30, 4, 1, "", "expr_deep_equal"], [30, 4, 1, "", "find_anchor_block"], [30, 4, 1, "", "get_block_access_region"], [30, 4, 1, "", "get_block_read_write_region"], [30, 4, 1, "", "get_prim_func_arg_and_result_memory_constraints"], [30, 4, 1, "", "get_vtcm_compaction_passes"], [30, 4, 1, "", "undefined_vars"], [30, 4, 1, "", "verify_gpu_code"], [30, 4, 1, "", "verify_memory"], [30, 4, 1, "", "verify_ssa"], [30, 4, 1, "", "verify_well_formed"]], "tvm.tir.schedule": [[31, 1, 1, "", "BlockRV"], [31, 1, 1, "", "BlockScope"], [31, 1, 1, "", "DepKind"], [31, 1, 1, "", "Dependency"], [31, 6, 1, "", "ExprRV"], [31, 1, 1, "", "Instruction"], [31, 1, 1, "", "InstructionKind"], [31, 1, 1, "", "LoopRV"], [31, 1, 1, "", "Schedule"], [31, 1, 1, "", "ScheduleDebugMask"], [31, 5, 1, "", "ScheduleError"], [31, 1, 1, "", "ScheduleState"], [31, 1, 1, "", "StmtSRef"], [31, 1, 1, "", "Trace"]], "tvm.tir.schedule.BlockScope": [[31, 2, 1, "", "get_deps_by_dst"], [31, 2, 1, "", "get_deps_by_src"]], "tvm.tir.schedule.DepKind": [[31, 6, 1, "", "OPAQUE"], [31, 6, 1, "", "RAW"], [31, 6, 1, "", "WAR"], [31, 6, 1, "", "WAW"]], "tvm.tir.schedule.Instruction": [[31, 6, 1, "", "attrs"], [31, 6, 1, "", "inputs"], [31, 6, 1, "", "kind"], [31, 6, 1, "", "outputs"]], "tvm.tir.schedule.InstructionKind": [[31, 2, 1, "", "get"], [31, 3, 1, "", "is_pure"], [31, 6, 1, "", "name"]], "tvm.tir.schedule.Schedule": [[31, 2, 1, "", "add_unit_loop"], [31, 2, 1, "", "annotate"], [31, 2, 1, "", "bind"], [31, 2, 1, "", "blockize"], [31, 2, 1, "", "cache_index"], [31, 2, 1, "", "cache_inplace"], [31, 2, 1, "", "cache_read"], [31, 2, 1, "", "cache_write"], [31, 2, 1, "", "can_decompose_padding"], [31, 2, 1, "", "compute_at"], [31, 2, 1, "", "compute_inline"], [31, 2, 1, "", "copy"], [31, 2, 1, "", "decompose_padding"], [31, 2, 1, "", "decompose_reduction"], [31, 2, 1, "", "enter_postproc"], [31, 2, 1, "", "fork_seed"], [31, 3, 1, "", "func_working_on"], [31, 2, 1, "", "fuse"], [31, 2, 1, "", "get"], [31, 2, 1, "", "get_block"], [31, 2, 1, "", "get_child_blocks"], [31, 2, 1, "", "get_consumers"], [31, 2, 1, "", "get_loops"], [31, 2, 1, "", "get_output_blocks"], [31, 2, 1, "", "get_producers"], [31, 2, 1, "", "get_sref"], [31, 2, 1, "", "merge"], [31, 3, 1, "", "mod"], [31, 2, 1, "", "pad_einsum"], [31, 2, 1, "", "parallel"], [31, 2, 1, "", "reindex"], [31, 2, 1, "", "reindex_cache_read"], [31, 2, 1, "", "reindex_cache_write"], [31, 2, 1, "", "remove_rv"], [31, 2, 1, "", "reorder"], [31, 2, 1, "", "reorder_block_iter_var"], [31, 2, 1, "", "reverse_compute_at"], [31, 2, 1, "", "reverse_compute_inline"], [31, 2, 1, "", "rfactor"], [31, 2, 1, "", "rolling_buffer"], [31, 2, 1, "", "sample_categorical"], [31, 2, 1, "", "sample_compute_location"], [31, 2, 1, "", "sample_partitioned_tile"], [31, 2, 1, "", "sample_perfect_tile"], [31, 2, 1, "", "seed"], [31, 2, 1, "", "set_axis_separator"], [31, 2, 1, "", "set_scope"], [31, 2, 1, "", "show"], [31, 2, 1, "", "split"], [31, 3, 1, "", "state"], [31, 2, 1, "", "storage_align"], [31, 2, 1, "", "tensorize"], [31, 3, 1, "", "trace"], [31, 2, 1, "", "transform_block_layout"], [31, 2, 1, "", "transform_layout"], [31, 2, 1, "", "unannotate"], [31, 2, 1, "", "unroll"], [31, 2, 1, "", "unsafe_hide_buffer_access"], [31, 2, 1, "", "unsafe_set_dtype"], [31, 2, 1, "", "vectorize"], [31, 2, 1, "", "work_on"]], "tvm.tir.schedule.ScheduleDebugMask": [[31, 6, 1, "", "VERIFY_CACHED_FLAGS"], [31, 6, 1, "", "VERIFY_SREF_TREE"]], "tvm.tir.schedule.ScheduleState": [[31, 2, 1, "", "get_block_scope"], [31, 2, 1, "", "get_sref"], [31, 2, 1, "", "replace"]], "tvm.tir.schedule.StmtSRef": [[31, 2, 1, "", "inline_mark"], [31, 3, 1, "", "parent"], [31, 2, 1, "", "root_mark"], [31, 3, 1, "", "stmt"]], "tvm.tir.schedule.Trace": [[31, 2, 1, "", "append"], [31, 2, 1, "", "apply_json_to_schedule"], [31, 2, 1, "", "apply_to_schedule"], [31, 2, 1, "", "as_json"], [31, 2, 1, "", "as_python"], [31, 6, 1, "", "decisions"], [31, 2, 1, "", "get_decision"], [31, 6, 1, "", "insts"], [31, 2, 1, "", "pop"], [31, 2, 1, "", "show"], [31, 2, 1, "", "simplified"], [31, 2, 1, "", "with_decision"]], "tvm.tir.stmt_functor": [[32, 4, 1, "", "ir_transform"], [32, 4, 1, "", "post_order_visit"], [32, 4, 1, "", "pre_order_visit"], [32, 4, 1, "", "renew_defs"], [32, 4, 1, "", "substitute"]], "tvm.tir.transform": [[34, 4, 1, "", "AnnotateDeviceRegions"], [34, 4, 1, "", "AnnotateEntryFunc"], [34, 4, 1, "", "Apply"], [34, 4, 1, "", "ApplyLayoutTransforms"], [34, 4, 1, "", "BF16ComputeLegalize"], [34, 4, 1, "", "BF16StorageLegalize"], [34, 4, 1, "", "BindTarget"], [34, 4, 1, "", "CoProcSync"], [34, 4, 1, "", "CombineContextCall"], [34, 4, 1, "", "CommonSubexprElimTIR"], [34, 4, 1, "", "CompactBufferAllocation"], [34, 4, 1, "", "ConvertBlocksToOpaque"], [34, 4, 1, "", "ConvertForLoopsToSerial"], [34, 4, 1, "", "ConvertSSA"], [34, 4, 1, "", "DecorateDeviceScope"], [34, 4, 1, "", "DefaultGPUSchedule"], [34, 4, 1, "", "ExtractPrimFuncConstants"], [34, 4, 1, "", "FP8ComputeLegalize"], [34, 4, 1, "", "FP8StorageLegalize"], [34, 4, 1, "", "Filter"], [34, 4, 1, "", "FlattenBuffer"], [34, 4, 1, "", "ForceNarrowIndexToInt32"], [34, 4, 1, "", "HoistExpression"], [34, 4, 1, "", "HoistIfThenElse"], [34, 1, 1, "", "HoistedConditionals"], [34, 1, 1, "", "HoistedLetBindings"], [34, 4, 1, "", "InferFragment"], [34, 4, 1, "", "InjectCopyIntrin"], [34, 4, 1, "", "InjectDoubleBuffer"], [34, 4, 1, "", "InjectPTXAsyncCopy"], [34, 4, 1, "", "InjectPermutedLayout"], [34, 4, 1, "", "InjectPrefetch"], [34, 4, 1, "", "InjectRollingBuffer"], [34, 4, 1, "", "InjectSoftwarePipeline"], [34, 4, 1, "", "InjectVirtualThread"], [34, 4, 1, "", "InstallDebugSpans"], [34, 4, 1, "", "InstrumentBoundCheckers"], [34, 4, 1, "", "InstrumentProfileIntrinsics"], [34, 4, 1, "", "LegalizePackedCalls"], [34, 4, 1, "", "LiftAttrScope"], [34, 4, 1, "", "LiftThreadBinding"], [34, 4, 1, "", "LoopPartition"], [34, 4, 1, "", "LowerAutoCopy"], [34, 4, 1, "", "LowerCrossThreadReduction"], [34, 4, 1, "", "LowerCustomDatatypes"], [34, 4, 1, "", "LowerDeviceKernelLaunch"], [34, 4, 1, "", "LowerDeviceStorageAccessInfo"], [34, 4, 1, "", "LowerInitBlock"], [34, 4, 1, "", "LowerIntrin"], [34, 4, 1, "", "LowerMatchBuffer"], [34, 4, 1, "", "LowerOpaqueBlock"], [34, 4, 1, "", "LowerTVMBuiltin"], [34, 4, 1, "", "LowerThreadAllreduce"], [34, 4, 1, "", "LowerWarpMemory"], [34, 4, 1, "", "MakePackedAPI"], [34, 4, 1, "", "MakeUnpackedAPI"], [34, 4, 1, "", "ManifestSharedMemoryLocalStage"], [34, 4, 1, "", "MergeDynamicSharedMemoryAllocations"], [34, 4, 1, "", "NarrowDataType"], [34, 4, 1, "", "PlanAndUpdateBufferAllocationLocation"], [34, 1, 1, "", "PrimFuncPass"], [34, 4, 1, "", "ReduceBranchingThroughOvercompute"], [34, 4, 1, "", "RemoveAssume"], [34, 4, 1, "", "RemoveNoOp"], [34, 4, 1, "", "RemoveStoreUndef"], [34, 4, 1, "", "RemoveWeightLayoutRewriteBlock"], [34, 4, 1, "", "RenormalizeSplitPattern"], [34, 4, 1, "", "RewriteUnsafeSelect"], [34, 4, 1, "", "Simplify"], [34, 4, 1, "", "SkipAssert"], [34, 4, 1, "", "SplitHostDevice"], [34, 4, 1, "", "StorageFlatten"], [34, 4, 1, "", "StorageRewrite"], [34, 4, 1, "", "TextureFlatten"], [34, 4, 1, "", "ThreadSync"], [34, 4, 1, "", "TransformMmaBufferLayout"], [34, 4, 1, "", "UnifyThreadBinding"], [34, 4, 1, "", "UnrollLoop"], [34, 4, 1, "", "VectorizeLoop"], [34, 4, 1, "", "VerifyMemory"], [34, 4, 1, "", "VerifyVTCMLimit"], [34, 4, 1, "", "prim_func_pass"]], "tvm.tir.transform.HoistedConditionals": [[34, 6, 1, "", "All"], [34, 6, 1, "", "BooleanExpression"], [34, 6, 1, "", "IfElseExpr"], [34, 6, 1, "", "IfElseStmt"], [34, 6, 1, "", "Never"], [34, 6, 1, "", "UsingBlockVar"]], "tvm.tir.transform.HoistedLetBindings": [[34, 6, 1, "", "All"], [34, 6, 1, "", "LetExpr"], [34, 6, 1, "", "LetStmt"], [34, 6, 1, "", "Never"], [34, 6, 1, "", "RequiredByConditional"]], "tvm.topi": [[35, 0, 0, "-", "image"], [35, 0, 0, "-", "nn"], [35, 0, 0, "-", "sparse"]], "tvm.topi.image": [[35, 4, 1, "", "affine_grid"], [35, 4, 1, "", "can_convert_multiply_to_intdiv"], [35, 4, 1, "", "crop_and_resize"], [35, 4, 1, "", "dilation2d_nchw"], [35, 4, 1, "", "dilation2d_nhwc"], [35, 4, 1, "", "get_1d_indices"], [35, 4, 1, "", "get_1d_pixel"], [35, 4, 1, "", "get_2d_indices"], [35, 4, 1, "", "get_2d_pixel"], [35, 4, 1, "", "get_3d_indices"], [35, 4, 1, "", "get_3d_pixel"], [35, 4, 1, "", "get_closest_index"], [35, 4, 1, "", "get_inx"], [35, 4, 1, "", "get_pad_tuple"], [35, 4, 1, "", "grid_sample"], [35, 4, 1, "", "nchw_pack_layout"], [35, 4, 1, "", "nchw_xc_layout"], [35, 4, 1, "", "pad"], [35, 4, 1, "", "resize1d"], [35, 4, 1, "", "resize2d"], [35, 4, 1, "", "resize3d"], [35, 4, 1, "", "simplify"]], "tvm.topi.nn": [[35, 1, 1, "", "Workload"], [35, 4, 1, "", "adaptive_pool"], [35, 4, 1, "", "adaptive_pool3d"], [35, 4, 1, "", "add_alter_layout"], [35, 4, 1, "", "batch_matmul"], [35, 4, 1, "", "batch_matmul_legalize"], [35, 4, 1, "", "batch_norm"], [35, 4, 1, "", "batch_to_space_nd"], [35, 4, 1, "", "bias_add_legalize"], [35, 4, 1, "", "binarize_pack"], [35, 4, 1, "", "binary_dense"], [35, 4, 1, "", "bitpack"], [35, 4, 1, "", "bitserial_conv2d_legalize"], [35, 4, 1, "", "bitserial_conv2d_nchw"], [35, 4, 1, "", "bitserial_conv2d_nhwc"], [35, 4, 1, "", "bitserial_dense"], [35, 4, 1, "", "concatenate"], [35, 4, 1, "", "conv"], [35, 4, 1, "", "conv1d"], [35, 4, 1, "", "conv1d_ncw"], [35, 4, 1, "", "conv1d_nwc"], [35, 4, 1, "", "conv1d_transpose_ncw"], [35, 4, 1, "", "conv2d"], [35, 4, 1, "", "conv2d_NCHWc"], [35, 4, 1, "", "conv2d_NCHWc_int8"], [35, 4, 1, "", "conv2d_alter_layout"], [35, 4, 1, "", "conv2d_gemm_weight_transform"], [35, 4, 1, "", "conv2d_hwcn"], [35, 4, 1, "", "conv2d_infer_layout"], [35, 4, 1, "", "conv2d_legalize"], [35, 4, 1, "", "conv2d_nchw"], [35, 4, 1, "", "conv2d_nhwc"], [35, 4, 1, "", "conv2d_transpose_legalize"], [35, 4, 1, "", "conv2d_transpose_nchw"], [35, 4, 1, "", "conv2d_transpose_nchw_preprocess"], [35, 4, 1, "", "conv2d_winograd_nchw"], [35, 4, 1, "", "conv2d_winograd_nchw_without_weight_transform"], [35, 4, 1, "", "conv2d_winograd_nhwc"], [35, 4, 1, "", "conv2d_winograd_nhwc_without_weight_transform"], [35, 4, 1, "", "conv2d_winograd_nnpack_weight_transform"], [35, 4, 1, "", "conv2d_winograd_weight_transform"], [35, 4, 1, "", "conv3d_alter_layout"], [35, 4, 1, "", "conv3d_ncdhw"], [35, 4, 1, "", "conv3d_ndhwc"], [35, 4, 1, "", "conv3d_transpose_legalize"], [35, 4, 1, "", "conv3d_transpose_ncdhw"], [35, 4, 1, "", "conv3d_transpose_ncdhw_preprocess"], [35, 4, 1, "", "conv3d_winograd_weight_transform"], [35, 4, 1, "", "correlation_nchw"], [35, 4, 1, "", "declaration_conv2d_transpose_impl"], [35, 4, 1, "", "declaration_conv3d_transpose_impl"], [35, 4, 1, "", "deformable_conv2d_nchw"], [35, 4, 1, "", "deformable_conv2d_nhwc"], [35, 4, 1, "", "dense"], [35, 4, 1, "", "dense_alter_layout"], [35, 4, 1, "", "dense_legalize"], [35, 4, 1, "", "dense_pack"], [35, 4, 1, "", "depth_to_space"], [35, 4, 1, "", "depthwise_conv2d_NCHWc"], [35, 4, 1, "", "depthwise_conv2d_backward_input_nhwc"], [35, 4, 1, "", "depthwise_conv2d_backward_weight_nhwc"], [35, 4, 1, "", "depthwise_conv2d_infer_layout"], [35, 4, 1, "", "depthwise_conv2d_nchw"], [35, 4, 1, "", "depthwise_conv2d_nhwc"], [35, 4, 1, "", "dilate"], [35, 4, 1, "", "equal_const_int"], [35, 4, 1, "", "fast_softmax"], [35, 4, 1, "", "fifo_buffer"], [35, 4, 1, "", "flatten"], [35, 4, 1, "", "get_const_int"], [35, 4, 1, "", "get_const_tuple"], [35, 4, 1, "", "get_pad_tuple"], [35, 4, 1, "", "get_pad_tuple1d"], [35, 4, 1, "", "get_pad_tuple3d"], [35, 4, 1, "", "get_pad_tuple_generic"], [35, 4, 1, "", "global_pool"], [35, 4, 1, "", "group_conv1d_ncw"], [35, 4, 1, "", "group_conv1d_nwc"], [35, 4, 1, "", "group_conv2d_nchw"], [35, 4, 1, "", "group_conv2d_nhwc"], [35, 4, 1, "", "group_conv2d_transpose_nchw"], [35, 4, 1, "", "group_norm"], [35, 4, 1, "", "instance_norm"], [35, 4, 1, "", "layer_norm"], [35, 4, 1, "", "layout_transform"], [35, 4, 1, "", "leaky_relu"], [35, 4, 1, "", "log_softmax"], [35, 4, 1, "", "lrn"], [35, 4, 1, "", "lstm"], [35, 4, 1, "", "matmul"], [35, 4, 1, "", "matmul_legalize"], [35, 4, 1, "", "mirror_pad"], [35, 4, 1, "", "namedtuple"], [35, 4, 1, "", "nll_loss"], [35, 4, 1, "", "pad"], [35, 4, 1, "", "pool1d"], [35, 4, 1, "", "pool2d"], [35, 4, 1, "", "pool3d"], [35, 4, 1, "", "pool_grad"], [35, 4, 1, "", "prelu"], [35, 4, 1, "", "qnn_conv2d_alter_layout"], [35, 4, 1, "", "qnn_dense_alter_layout"], [35, 4, 1, "", "qnn_requantize_alter_layout"], [35, 4, 1, "", "reduce"], [35, 4, 1, "", "relu"], [35, 4, 1, "", "rms_norm"], [35, 4, 1, "", "scale_shift_nchw"], [35, 4, 1, "", "scale_shift_nchwc"], [35, 4, 1, "", "scale_shift_nhwc"], [35, 4, 1, "", "simplify"], [35, 4, 1, "", "simulated_dequantize"], [35, 4, 1, "", "simulated_quantize"], [35, 4, 1, "", "softmax"], [35, 4, 1, "", "softmax_common"], [35, 4, 1, "", "space_to_batch_nd"], [35, 4, 1, "", "space_to_depth"], [35, 4, 1, "", "sparse_add"], [35, 4, 1, "", "sparse_conv2d"], [35, 4, 1, "", "sparse_dense"], [35, 4, 1, "", "sparse_dense_alter_layout"], [35, 4, 1, "", "sparse_dense_sp_lhs"], [35, 4, 1, "", "sparse_dense_sp_rhs"], [35, 4, 1, "", "sparse_transpose"], [35, 4, 1, "", "strided_slice"], [35, 4, 1, "", "try_get_conv2d_sparse_input"], [35, 4, 1, "", "try_get_sparse_input"], [35, 4, 1, "", "unpack_NCHWc_to_nchw"], [35, 4, 1, "", "upsampling"], [35, 4, 1, "", "upsampling3d"], [35, 4, 1, "", "winograd_transform_matrices"]], "tvm.topi.nn.Workload": [[35, 6, 1, "", "dilation_h"], [35, 6, 1, "", "dilation_w"], [35, 6, 1, "", "height"], [35, 6, 1, "", "in_dtype"], [35, 6, 1, "", "in_filter"], [35, 6, 1, "", "kernel_h"], [35, 6, 1, "", "kernel_w"], [35, 6, 1, "", "out_dtype"], [35, 6, 1, "", "out_filter"], [35, 6, 1, "", "padb"], [35, 6, 1, "", "padl"], [35, 6, 1, "", "padr"], [35, 6, 1, "", "padt"], [35, 6, 1, "", "stride_h"], [35, 6, 1, "", "stride_w"], [35, 6, 1, "", "width"]], "tvm.topi.sparse": [[35, 4, 1, "", "csrmm"], [35, 4, 1, "", "csrmv"], [35, 4, 1, "", "dense"]], "tvm.transform": [[36, 1, 1, "", "ModulePass"], [36, 1, 1, "", "Pass"], [36, 1, 1, "", "PassContext"], [36, 1, 1, "", "PassInfo"], [36, 4, 1, "", "PrintIR"], [36, 1, 1, "", "Sequential"], [36, 4, 1, "", "module_pass"]], "tvm.transform.Pass": [[36, 3, 1, "", "info"]], "tvm.transform.PassContext": [[36, 2, 1, "", "current"], [36, 2, 1, "", "get_current_trace"], [36, 2, 1, "", "get_trace_stack"], [36, 2, 1, "", "get_trace_stack_size"], [36, 2, 1, "", "get_tuning_api_database"], [36, 2, 1, "", "inc_num_evals"], [36, 2, 1, "", "list_configs"], [36, 2, 1, "", "override_instruments"], [36, 2, 1, "", "pop_trace"], [36, 2, 1, "", "push_trace"], [36, 2, 1, "", "set_num_evals"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"tensor": [0, 3, 7], "program": 0, "abstract": [0, 2], "kei": 0, "element": 0, "extra": [0, 2], "structur": 0, "tensorir": [0, 1, 2, 3], "understand": 2, "function": [2, 3, 7], "paramet": 2, "buffer": 2, "loop": [2, 5], "iter": 2, "comput": [2, 4, 8], "block": 2, "axi": 2, "properti": 2, "why": 2, "inform": 2, "sugar": [2, 3], "ax": 2, "bind": 2, "creation": 3, "creat": 3, "us": 3, "tvmscript": 3, "standard": 3, "format": 3, "concis": 3, "syntact": 3, "interact": 3, "python": 3, "variabl": 3, "dynam": 3, "shape": 3, "express": 3, "static": 3, "time": [4, 8], "transform": [5, 7, 21, 34, 36], "initi": 5, "schedul": [5, 31], "tile": 5, "leverag": 5, "local": 5, "rewrit": 5, "reduct": 5, "trace": 5, "instal": 6, "apach": [6, 7, 9], "tvm": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "uniti": [6, 7, 9], "tabl": 6, "content": 6, "option": 6, "1": 6, "prebuilt": 6, "packag": 6, "2": 6, "build": 6, "from": 6, "sourc": 6, "step": 6, "depend": 6, "get": [6, 9], "github": 6, "3": 6, "configur": 6, "4": 6, "valid": 6, "quick": 7, "start": [7, 9], "prepar": 7, "neural": 7, "network": 7, "model": 7, "import": 7, "The": 7, "appli": 7, "optim": 7, "compil": 7, "run": 7, "document": 9, "deep": 9, "dive": 9, "refer": [9, 12], "dlight": [10, 12], "error": 11, "api": 12, "runtim": [12, 23, 24, 25, 26, 27], "te": [12, 29], "tir": [12, 30, 31, 32, 33, 34], "meta_schedul": [12, 15], "relax": [12, 16, 17, 18, 19, 20, 21], "misc": 12, "instrument": 13, "ir": 14, "analysi": [16, 30], "block_build": 17, "frontend": 18, "nn": [18, 19, 35], "onnx": 18, "stablehlo": 18, "torch": 18, "op": 19, "builtin": 19, "ccl": 19, "distribut": 19, "grad": 19, "imag": [19, 35], "memori": 19, "op_attr": 19, "rpc": 22, "disco": 23, "ndarrai": 24, "profil": 25, "relax_vm": 26, "target": 28, "stmt_functor": 32, "topi": 35, "spars": 35, "public": 37}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Tensor Program Abstraction": [[0, "tensor-program-abstraction"]], "Key Elements of Tensor Programs": [[0, "key-elements-of-tensor-programs"]], "Extra Structure in TensorIR": [[0, "extra-structure-in-tensorir"]], "TensorIR": [[1, "tensorir"]], "Understand TensorIR Abstraction": [[2, "understand-tensorir-abstraction"]], "Function Parameters and Buffers": [[2, "function-parameters-and-buffers"]], "Loop Iterations": [[2, "loop-iterations"]], "Computational Block": [[2, "computational-block"]], "Block Axis Properties": [[2, "block-axis-properties"]], "Why Extra Information in Block": [[2, "why-extra-information-in-block"]], "Sugars for Block Axes Binding": [[2, "sugars-for-block-axes-binding"]], "TensorIR Creation": [[3, "tensorir-creation"]], "Create TensorIR using TVMScript": [[3, "create-tensorir-using-tvmscript"]], "Standard Format": [[3, "standard-format"]], "Concise with Syntactic Sugar": [[3, "concise-with-syntactic-sugar"]], "Interactive with Python Variables": [[3, "interactive-with-python-variables"]], "TensorIR Function with Dynamic Shapes": [[3, "tensorir-function-with-dynamic-shapes"]], "Create TensorIR using Tensor Expression": [[3, "create-tensorir-using-tensor-expression"]], "Create Static-Shape Functions": [[3, "create-static-shape-functions"]], "Create Dynamic-Shape Functions": [[3, "create-dynamic-shape-functions"]], "Computation times": [[4, "computation-times"], [8, "computation-times"]], "Transformation": [[5, "transformation"]], "Initialization Schedule": [[5, "initialization-schedule"]], "Loop Tiling": [[5, "loop-tiling"]], "Leverage Localities": [[5, "leverage-localities"]], "Rewrite Reduction": [[5, "rewrite-reduction"]], "Trace the Transformation": [[5, "trace-the-transformation"]], "Installing Apache TVM Unity": [[6, "installing-apache-tvm-unity"]], "Table of Contents": [[6, "table-of-contents"]], "Option 1. Prebuilt Package": [[6, "option-1-prebuilt-package"]], "Option 2. Build from Source": [[6, "option-2-build-from-source"]], "Step 1. Install Dependencies": [[6, "step-1-install-dependencies"]], "Step 2. Get Source from Github": [[6, "step-2-get-source-from-github"]], "Step 3. Configure and Build": [[6, "step-3-configure-and-build"]], "Step 4. Validate Installation": [[6, "step-4-validate-installation"]], "Quick Start": [[7, "quick-start"]], "Prepare the Neural Network Model": [[7, "prepare-the-neural-network-model"]], "Import Model into Apache TVM Unity": [[7, "import-model-into-apache-tvm-unity"]], "Transform The Model": [[7, "transform-the-model"]], "Apply Optimization Transforms": [[7, "apply-optimization-transforms"]], "Tensor Function Optimization": [[7, "tensor-function-optimization"]], "Compile and Run": [[7, "compile-and-run"]], "\ud83d\udea7 Apache TVM Unity Documentation": [[9, "apache-tvm-unity-documentation"]], "Get Started": [[9, null]], "Deep Dive": [[9, null]], "References": [[9, null]], "tvm.dlight": [[10, "module-tvm.dlight"], [12, null]], "tvm.error": [[11, "module-tvm.error"]], "API Reference": [[12, "api-reference"]], "tvm": [[12, null]], "tvm.runtime": [[12, null], [27, "module-tvm.runtime"]], "tvm.te": [[12, null], [29, "tvm-te"]], "tvm.tir": [[12, null], [33, "module-tvm.tir"]], "tvm.meta_schedule": [[12, null], [15, "module-tvm.meta_schedule"]], "tvm.relax": [[12, null], [20, "tvm-relax"]], "Misc": [[12, null]], "tvm.instrument": [[13, "module-tvm.instrument"]], "tvm.ir": [[14, "module-tvm.ir"]], "tvm.relax.analysis": [[16, "module-tvm.relax.analysis"]], "tvm.relax.block_builder": [[17, "module-tvm.relax.block_builder"]], "tvm.relax.frontend": [[18, "module-tvm.relax.frontend"]], "tvm.relax.frontend.nn": [[18, "tvm-relax-frontend-nn"]], "tvm.relax.frontend.onnx": [[18, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[18, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[18, "module-tvm.relax.frontend.torch"]], "tvm.relax.op": [[19, "tvm-relax-op"], [19, "id1"]], "tvm.relax.op.nn": [[19, "module-tvm.relax.op.nn"]], "tvm.relax.op.builtin": [[19, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[19, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[19, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[19, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[19, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[19, "module-tvm.relax.op.memory"]], "tvm.relax.op.op_attrs": [[19, "module-tvm.relax.op.op_attrs"]], "tvm.relax.transform": [[21, "module-tvm.relax.transform"]], "tvm.rpc": [[22, "module-tvm.rpc"]], "tvm.runtime.disco": [[23, "module-tvm.runtime.disco"]], "tvm.runtime.ndarray": [[24, "module-tvm.runtime.ndarray"]], "tvm.runtime.profiling": [[25, "module-tvm.runtime.profiling"]], "tvm.runtime.relax_vm": [[26, "module-tvm.runtime.relax_vm"]], "tvm.target": [[28, "module-tvm.target"]], "tvm.tir.analysis": [[30, "module-tvm.tir.analysis.analysis"]], "tvm.tir.schedule": [[31, "module-tvm.tir.schedule"]], "tvm.tir.stmt_functor": [[32, "module-tvm.tir.stmt_functor"]], "tvm.tir.transform": [[34, "module-tvm.tir.transform"]], "tvm.topi": [[35, "tvm-topi"], [35, "id1"]], "tvm.topi.nn": [[35, "module-tvm.topi.nn"]], "tvm.topi.image": [[35, "module-tvm.topi.image"]], "tvm.topi.sparse": [[35, "module-tvm.topi.sparse"]], "tvm.transform": [[36, "module-tvm.transform"]], "Publications": [[37, "publications"]]}, "indexentries": {"applydefaultschedule (class in tvm.dlight)": [[10, "tvm.dlight.ApplyDefaultSchedule"]], "blockinfo (class in tvm.dlight)": [[10, "tvm.dlight.BlockInfo"]], "iterinfo (class in tvm.dlight)": [[10, "tvm.dlight.IterInfo"]], "schedulerule (class in tvm.dlight)": [[10, "tvm.dlight.ScheduleRule"]], "apply() (tvm.dlight.schedulerule method)": [[10, "tvm.dlight.ScheduleRule.apply"]], "dom (tvm.dlight.iterinfo property)": [[10, "tvm.dlight.IterInfo.dom"]], "dom() (tvm.dlight.blockinfo method)": [[10, "tvm.dlight.BlockInfo.dom"]], "dom_kind() (tvm.dlight.blockinfo method)": [[10, "tvm.dlight.BlockInfo.dom_kind"]], "from_callable() (tvm.dlight.schedulerule static method)": [[10, "tvm.dlight.ScheduleRule.from_callable"]], "is_elementwise() (tvm.dlight.blockinfo method)": [[10, "tvm.dlight.BlockInfo.is_elementwise"]], "is_gemm() (tvm.dlight.blockinfo method)": [[10, "tvm.dlight.BlockInfo.is_gemm"]], "is_gemv() (tvm.dlight.blockinfo method)": [[10, "tvm.dlight.BlockInfo.is_gemv"]], "is_injective() (tvm.dlight.blockinfo method)": [[10, "tvm.dlight.BlockInfo.is_injective"]], "is_reduction() (tvm.dlight.blockinfo method)": [[10, "tvm.dlight.BlockInfo.is_reduction"]], "module": [[10, "module-tvm.dlight"], [11, "module-tvm.error"], [13, "module-tvm.instrument"], [14, "module-tvm.ir"], [15, "module-tvm.meta_schedule"], [16, "module-tvm.relax.analysis"], [17, "module-tvm.relax.block_builder"], [18, "module-tvm.relax.frontend"], [18, "module-tvm.relax.frontend.onnx"], [18, "module-tvm.relax.frontend.stablehlo"], [18, "module-tvm.relax.frontend.torch"], [19, "module-tvm.relax.op"], [19, "module-tvm.relax.op.builtin"], [19, "module-tvm.relax.op.ccl"], [19, "module-tvm.relax.op.distributed"], [19, "module-tvm.relax.op.grad"], [19, "module-tvm.relax.op.image"], [19, "module-tvm.relax.op.memory"], [19, "module-tvm.relax.op.nn"], [19, "module-tvm.relax.op.op_attrs"], [21, "module-tvm.relax.transform"], [22, "module-tvm.rpc"], [23, "module-tvm.runtime.disco"], [24, "module-tvm.runtime.ndarray"], [25, "module-tvm.runtime.profiling"], [26, "module-tvm.runtime.relax_vm"], [27, "module-tvm.runtime"], [28, "module-tvm.target"], [29, "module-tvm.te"], [30, "module-tvm.tir.analysis.analysis"], [31, "module-tvm.tir.schedule"], [32, "module-tvm.tir.stmt_functor"], [33, "module-tvm.tir"], [34, "module-tvm.tir.transform"], [35, "module-tvm.topi.image"], [35, "module-tvm.topi.nn"], [35, "module-tvm.topi.sparse"], [36, "module-tvm.transform"]], "normalize_prim_func() (in module tvm.dlight)": [[10, "tvm.dlight.normalize_prim_func"]], "try_inline() (in module tvm.dlight)": [[10, "tvm.dlight.try_inline"]], "try_inline_contiguous_spatial() (in module tvm.dlight)": [[10, "tvm.dlight.try_inline_contiguous_spatial"]], "tvm.dlight": [[10, "module-tvm.dlight"]], "diagnosticerror": [[11, "tvm.error.DiagnosticError"]], "internalerror": [[11, "tvm.error.InternalError"]], "opattributeinvalid": [[11, "tvm.error.OpAttributeInvalid"]], "opattributerequired": [[11, "tvm.error.OpAttributeRequired"]], "opattributeunimplemented": [[11, "tvm.error.OpAttributeUnImplemented"]], "operror": [[11, "tvm.error.OpError"]], "opnotimplemented": [[11, "tvm.error.OpNotImplemented"]], "rpcerror": [[11, "tvm.error.RPCError"]], "rpcsessiontimeouterror": [[11, "tvm.error.RPCSessionTimeoutError"]], "tvmerror": [[11, "tvm.error.TVMError"]], "register_error() (in module tvm.error)": [[11, "tvm.error.register_error"]], "tvm.error": [[11, "module-tvm.error"]], "passinstrument (class in tvm.instrument)": [[13, "tvm.instrument.PassInstrument"]], "passtiminginstrument (class in tvm.instrument)": [[13, "tvm.instrument.PassTimingInstrument"]], "enter_pass_ctx() (tvm.instrument.passinstrument method)": [[13, "tvm.instrument.PassInstrument.enter_pass_ctx"]], "exit_pass_ctx() (tvm.instrument.passinstrument method)": [[13, "tvm.instrument.PassInstrument.exit_pass_ctx"]], "pass_instrument() (in module tvm.instrument)": [[13, "tvm.instrument.pass_instrument"]], "render() (tvm.instrument.passtiminginstrument static method)": [[13, "tvm.instrument.PassTimingInstrument.render"]], "run_after_pass() (tvm.instrument.passinstrument method)": [[13, "tvm.instrument.PassInstrument.run_after_pass"]], "run_before_pass() (tvm.instrument.passinstrument method)": [[13, "tvm.instrument.PassInstrument.run_before_pass"]], "should_run() (tvm.instrument.passinstrument method)": [[13, "tvm.instrument.PassInstrument.should_run"]], "tvm.instrument": [[13, "module-tvm.instrument"]], "array (class in tvm.ir)": [[14, "tvm.ir.Array"]], "attrs (class in tvm.ir)": [[14, "tvm.ir.Attrs"]], "baseexpr (class in tvm.ir)": [[14, "tvm.ir.BaseExpr"]], "basefunc (class in tvm.ir)": [[14, "tvm.ir.BaseFunc"]], "callingconv (class in tvm.ir)": [[14, "tvm.ir.CallingConv"]], "constantmemorypools (class in tvm.ir)": [[14, "tvm.ir.ConstantMemoryPools"]], "constantpoolinfo (class in tvm.ir)": [[14, "tvm.ir.ConstantPoolInfo"]], "constructor (class in tvm.ir)": [[14, "tvm.ir.Constructor"]], "dictattrs (class in tvm.ir)": [[14, "tvm.ir.DictAttrs"]], "dummyglobalinfo (class in tvm.ir)": [[14, "tvm.ir.DummyGlobalInfo"]], "envfunc (class in tvm.ir)": [[14, "tvm.ir.EnvFunc"]], "functype (class in tvm.ir)": [[14, "tvm.ir.FuncType"]], "globalinfo (class in tvm.ir)": [[14, "tvm.ir.GlobalInfo"]], "globaltypevar (class in tvm.ir)": [[14, "tvm.ir.GlobalTypeVar"]], "globalvar (class in tvm.ir)": [[14, "tvm.ir.GlobalVar"]], "irmodule (class in tvm.ir)": [[14, "tvm.ir.IRModule"]], "incompletetype (class in tvm.ir)": [[14, "tvm.ir.IncompleteType"]], "map (class in tvm.ir)": [[14, "tvm.ir.Map"]], "node (class in tvm.ir)": [[14, "tvm.ir.Node"]], "op (class in tvm.ir)": [[14, "tvm.ir.Op"]], "pointertype (class in tvm.ir)": [[14, "tvm.ir.PointerType"]], "poolinfo (class in tvm.ir)": [[14, "tvm.ir.PoolInfo"]], "poolinfoproperties (class in tvm.ir)": [[14, "tvm.ir.PoolInfoProperties"]], "primexpr (class in tvm.ir)": [[14, "tvm.ir.PrimExpr"]], "primtype (class in tvm.ir)": [[14, "tvm.ir.PrimType"]], "range (class in tvm.ir)": [[14, "tvm.ir.Range"]], "relayexpr (class in tvm.ir)": [[14, "tvm.ir.RelayExpr"]], "relayreftype (class in tvm.ir)": [[14, "tvm.ir.RelayRefType"]], "sequentialspan (class in tvm.ir)": [[14, "tvm.ir.SequentialSpan"]], "sourcename (class in tvm.ir)": [[14, "tvm.ir.SourceName"]], "span (class in tvm.ir)": [[14, "tvm.ir.Span"]], "tensoraffinetype (class in tvm.ir)": [[14, "tvm.ir.TensorAffineType"]], "tensortype (class in tvm.ir)": [[14, "tvm.ir.TensorType"]], "tupleaffinetype (class in tvm.ir)": [[14, "tvm.ir.TupleAffineType"]], "tupletype (class in tvm.ir)": [[14, "tvm.ir.TupleType"]], "type (class in tvm.ir)": [[14, "tvm.ir.Type"]], "typecall (class in tvm.ir)": [[14, "tvm.ir.TypeCall"]], "typeconstraint (class in tvm.ir)": [[14, "tvm.ir.TypeConstraint"]], "typedata (class in tvm.ir)": [[14, "tvm.ir.TypeData"]], "typekind (class in tvm.ir)": [[14, "tvm.ir.TypeKind"]], "typerelation (class in tvm.ir)": [[14, "tvm.ir.TypeRelation"]], "typevar (class in tvm.ir)": [[14, "tvm.ir.TypeVar"]], "vdevice (class in tvm.ir)": [[14, "tvm.ir.VDevice"]], "workspacememorypools (class in tvm.ir)": [[14, "tvm.ir.WorkspaceMemoryPools"]], "workspacepoolinfo (class in tvm.ir)": [[14, "tvm.ir.WorkspacePoolInfo"]], "add_argument() (tvm.ir.op method)": [[14, "tvm.ir.Op.add_argument"]], "add_type_rel() (tvm.ir.op method)": [[14, "tvm.ir.Op.add_type_rel"]], "assert_structural_equal() (in module tvm.ir)": [[14, "tvm.ir.assert_structural_equal"]], "astext() (tvm.ir.globalvar method)": [[14, "tvm.ir.GlobalVar.astext"]], "astext() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.astext"]], "astext() (tvm.ir.op method)": [[14, "tvm.ir.Op.astext"]], "attrs (tvm.ir.basefunc property)": [[14, "tvm.ir.BaseFunc.attrs"]], "checked_type (tvm.ir.relayexpr property)": [[14, "tvm.ir.RelayExpr.checked_type"]], "concrete_shape (tvm.ir.tensortype property)": [[14, "tvm.ir.TensorType.concrete_shape"]], "from_expr() (tvm.ir.irmodule static method)": [[14, "tvm.ir.IRModule.from_expr"]], "from_min_extent() (tvm.ir.range static method)": [[14, "tvm.ir.Range.from_min_extent"]], "get() (tvm.ir.envfunc static method)": [[14, "tvm.ir.EnvFunc.get"]], "get() (tvm.ir.map method)": [[14, "tvm.ir.Map.get"]], "get() (tvm.ir.op static method)": [[14, "tvm.ir.Op.get"]], "get_attr() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.get_attr"]], "get_attr() (tvm.ir.op method)": [[14, "tvm.ir.Op.get_attr"]], "get_constructor() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.get_constructor"]], "get_global_type_var() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.get_global_type_var"]], "get_global_type_vars() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.get_global_type_vars"]], "get_global_var() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.get_global_var"]], "get_global_vars() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.get_global_vars"]], "get_int() (tvm.ir.attrs method)": [[14, "tvm.ir.Attrs.get_int"]], "get_int_tuple() (tvm.ir.attrs method)": [[14, "tvm.ir.Attrs.get_int_tuple"]], "get_str() (tvm.ir.attrs method)": [[14, "tvm.ir.Attrs.get_str"]], "has_attr() (tvm.ir.op method)": [[14, "tvm.ir.Op.has_attr"]], "items() (tvm.ir.dictattrs method)": [[14, "tvm.ir.DictAttrs.items"]], "items() (tvm.ir.map method)": [[14, "tvm.ir.Map.items"]], "keys() (tvm.ir.attrs method)": [[14, "tvm.ir.Attrs.keys"]], "keys() (tvm.ir.dictattrs method)": [[14, "tvm.ir.DictAttrs.keys"]], "list_field_info() (tvm.ir.attrs method)": [[14, "tvm.ir.Attrs.list_field_info"]], "list_op_names() (tvm.ir.op static method)": [[14, "tvm.ir.Op.list_op_names"]], "load_json() (in module tvm.ir)": [[14, "tvm.ir.load_json"]], "make_node() (in module tvm.ir)": [[14, "tvm.ir.make_node"]], "register_intrin_lowering() (in module tvm.ir)": [[14, "tvm.ir.register_intrin_lowering"]], "register_op_attr() (in module tvm.ir)": [[14, "tvm.ir.register_op_attr"]], "reset_attr() (tvm.ir.op method)": [[14, "tvm.ir.Op.reset_attr"]], "same_as() (tvm.ir.globalinfo method)": [[14, "tvm.ir.GlobalInfo.same_as"]], "same_as() (tvm.ir.type method)": [[14, "tvm.ir.Type.same_as"]], "save_json() (in module tvm.ir)": [[14, "tvm.ir.save_json"]], "set_attr() (tvm.ir.op method)": [[14, "tvm.ir.Op.set_attr"]], "set_attrs_type_key() (tvm.ir.op method)": [[14, "tvm.ir.Op.set_attrs_type_key"]], "set_num_inputs() (tvm.ir.op method)": [[14, "tvm.ir.Op.set_num_inputs"]], "set_support_level() (tvm.ir.op method)": [[14, "tvm.ir.Op.set_support_level"]], "struct_info (tvm.ir.relayexpr property)": [[14, "tvm.ir.RelayExpr.struct_info"]], "structural_equal() (in module tvm.ir)": [[14, "tvm.ir.structural_equal"]], "structural_hash() (in module tvm.ir)": [[14, "tvm.ir.structural_hash"]], "tvm.ir": [[14, "module-tvm.ir"]], "update() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.update"]], "update_func() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.update_func"]], "update_global_info() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.update_global_info"]], "with_attr() (tvm.ir.basefunc method)": [[14, "tvm.ir.BaseFunc.with_attr"]], "with_attr() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.with_attr"]], "with_attrs() (tvm.ir.basefunc method)": [[14, "tvm.ir.BaseFunc.with_attrs"]], "with_attrs() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.with_attrs"]], "without_attr() (tvm.ir.basefunc method)": [[14, "tvm.ir.BaseFunc.without_attr"]], "without_attr() (tvm.ir.irmodule method)": [[14, "tvm.ir.IRModule.without_attr"]], "builder (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.Builder"]], "costmodel (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.CostModel"]], "database (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.Database"]], "extractedtask (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.ExtractedTask"]], "featureextractor (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.FeatureExtractor"]], "measurecallback (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.MeasureCallback"]], "measurecandidate (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.MeasureCandidate"]], "mutator (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.Mutator"]], "postproc (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.Postproc"]], "profiler (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.Profiler"]], "runner (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.Runner"]], "schedulerule (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.ScheduleRule"]], "searchstrategy (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.SearchStrategy"]], "spacegenerator (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.SpaceGenerator"]], "taskscheduler (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.TaskScheduler"]], "tunecontext (class in tvm.meta_schedule)": [[15, "tvm.meta_schedule.TuneContext"]], "apply() (tvm.meta_schedule.measurecallback method)": [[15, "tvm.meta_schedule.MeasureCallback.apply"]], "apply() (tvm.meta_schedule.mutator method)": [[15, "tvm.meta_schedule.Mutator.apply"]], "apply() (tvm.meta_schedule.postproc method)": [[15, "tvm.meta_schedule.Postproc.apply"]], "apply() (tvm.meta_schedule.schedulerule method)": [[15, "tvm.meta_schedule.ScheduleRule.apply"]], "build() (tvm.meta_schedule.builder method)": [[15, "tvm.meta_schedule.Builder.build"]], "clone() (tvm.meta_schedule.mutator method)": [[15, "tvm.meta_schedule.Mutator.clone"]], "clone() (tvm.meta_schedule.postproc method)": [[15, "tvm.meta_schedule.Postproc.clone"]], "clone() (tvm.meta_schedule.schedulerule method)": [[15, "tvm.meta_schedule.ScheduleRule.clone"]], "clone() (tvm.meta_schedule.searchstrategy method)": [[15, "tvm.meta_schedule.SearchStrategy.clone"]], "clone() (tvm.meta_schedule.spacegenerator method)": [[15, "tvm.meta_schedule.SpaceGenerator.clone"]], "clone() (tvm.meta_schedule.tunecontext method)": [[15, "tvm.meta_schedule.TuneContext.clone"]], "commit_tuning_record() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.commit_tuning_record"]], "commit_workload() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.commit_workload"]], "create() (tvm.meta_schedule.builder static method)": [[15, "tvm.meta_schedule.Builder.create"]], "create() (tvm.meta_schedule.costmodel static method)": [[15, "tvm.meta_schedule.CostModel.create"]], "create() (tvm.meta_schedule.database static method)": [[15, "tvm.meta_schedule.Database.create"]], "create() (tvm.meta_schedule.featureextractor static method)": [[15, "tvm.meta_schedule.FeatureExtractor.create"]], "create() (tvm.meta_schedule.measurecallback static method)": [[15, "tvm.meta_schedule.MeasureCallback.create"]], "create() (tvm.meta_schedule.mutator static method)": [[15, "tvm.meta_schedule.Mutator.create"]], "create() (tvm.meta_schedule.postproc static method)": [[15, "tvm.meta_schedule.Postproc.create"]], "create() (tvm.meta_schedule.runner static method)": [[15, "tvm.meta_schedule.Runner.create"]], "create() (tvm.meta_schedule.schedulerule static method)": [[15, "tvm.meta_schedule.ScheduleRule.create"]], "create() (tvm.meta_schedule.searchstrategy static method)": [[15, "tvm.meta_schedule.SearchStrategy.create"]], "create() (tvm.meta_schedule.spacegenerator static method)": [[15, "tvm.meta_schedule.SpaceGenerator.create"]], "create() (tvm.meta_schedule.taskscheduler static method)": [[15, "tvm.meta_schedule.TaskScheduler.create"]], "current() (tvm.meta_schedule.database static method)": [[15, "tvm.meta_schedule.Database.current"]], "current() (tvm.meta_schedule.profiler static method)": [[15, "tvm.meta_schedule.Profiler.current"]], "derived_object() (in module tvm.meta_schedule)": [[15, "tvm.meta_schedule.derived_object"]], "dump_pruned() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.dump_pruned"]], "extract_from() (tvm.meta_schedule.featureextractor method)": [[15, "tvm.meta_schedule.FeatureExtractor.extract_from"]], "generate_design_space() (tvm.meta_schedule.spacegenerator method)": [[15, "tvm.meta_schedule.SpaceGenerator.generate_design_space"]], "generate_design_space() (tvm.meta_schedule.tunecontext method)": [[15, "tvm.meta_schedule.TuneContext.generate_design_space"]], "generate_measure_candidates() (tvm.meta_schedule.searchstrategy method)": [[15, "tvm.meta_schedule.SearchStrategy.generate_measure_candidates"]], "generate_measure_candidates() (tvm.meta_schedule.tunecontext method)": [[15, "tvm.meta_schedule.TuneContext.generate_measure_candidates"]], "get() (tvm.meta_schedule.profiler method)": [[15, "tvm.meta_schedule.Profiler.get"]], "get_all_tuning_records() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.get_all_tuning_records"]], "get_top_k() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.get_top_k"]], "has_workload() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.has_workload"]], "is_meta_schedule_enabled() (in module tvm.meta_schedule)": [[15, "tvm.meta_schedule.is_meta_schedule_enabled"]], "join_running_task() (tvm.meta_schedule.taskscheduler method)": [[15, "tvm.meta_schedule.TaskScheduler.join_running_task"]], "load() (tvm.meta_schedule.costmodel method)": [[15, "tvm.meta_schedule.CostModel.load"]], "next_task_id() (tvm.meta_schedule.taskscheduler method)": [[15, "tvm.meta_schedule.TaskScheduler.next_task_id"]], "notify_runner_results() (tvm.meta_schedule.searchstrategy method)": [[15, "tvm.meta_schedule.SearchStrategy.notify_runner_results"]], "notify_runner_results() (tvm.meta_schedule.tunecontext method)": [[15, "tvm.meta_schedule.TuneContext.notify_runner_results"]], "post_tuning() (tvm.meta_schedule.searchstrategy method)": [[15, "tvm.meta_schedule.SearchStrategy.post_tuning"]], "post_tuning() (tvm.meta_schedule.tunecontext method)": [[15, "tvm.meta_schedule.TuneContext.post_tuning"]], "pre_tuning() (tvm.meta_schedule.searchstrategy method)": [[15, "tvm.meta_schedule.SearchStrategy.pre_tuning"]], "pre_tuning() (tvm.meta_schedule.tunecontext method)": [[15, "tvm.meta_schedule.TuneContext.pre_tuning"]], "predict() (tvm.meta_schedule.costmodel method)": [[15, "tvm.meta_schedule.CostModel.predict"]], "print_tuning_statistics() (tvm.meta_schedule.taskscheduler method)": [[15, "tvm.meta_schedule.TaskScheduler.print_tuning_statistics"]], "query() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.query"]], "query_ir_module() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.query_ir_module"]], "query_schedule() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.query_schedule"]], "query_tuning_record() (tvm.meta_schedule.database method)": [[15, "tvm.meta_schedule.Database.query_tuning_record"]], "run() (tvm.meta_schedule.runner method)": [[15, "tvm.meta_schedule.Runner.run"]], "save() (tvm.meta_schedule.costmodel method)": [[15, "tvm.meta_schedule.CostModel.save"]], "table() (tvm.meta_schedule.profiler method)": [[15, "tvm.meta_schedule.Profiler.table"]], "terminate_task() (tvm.meta_schedule.taskscheduler method)": [[15, "tvm.meta_schedule.TaskScheduler.terminate_task"]], "timeit() (tvm.meta_schedule.profiler static method)": [[15, "tvm.meta_schedule.Profiler.timeit"]], "touch_task() (tvm.meta_schedule.taskscheduler method)": [[15, "tvm.meta_schedule.TaskScheduler.touch_task"]], "tune() (tvm.meta_schedule.taskscheduler method)": [[15, "tvm.meta_schedule.TaskScheduler.tune"]], "tune_tasks() (in module tvm.meta_schedule)": [[15, "tvm.meta_schedule.tune_tasks"]], "tune_tir() (in module tvm.meta_schedule)": [[15, "tvm.meta_schedule.tune_tir"]], "tvm.meta_schedule": [[15, "module-tvm.meta_schedule"]], "update() (tvm.meta_schedule.costmodel method)": [[15, "tvm.meta_schedule.CostModel.update"]], "basecheckresult (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.BaseCheckResult"]], "binding (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.Binding"]], "block (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.Block"]], "buffer (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.Buffer"]], "call (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.Call"]], "dataflowblock (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.DataflowBlock"]], "expr (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.Expr"]], "funcstructinfo (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.FuncStructInfo"]], "function (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.Function"]], "globalvar (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.GlobalVar"]], "irmodule (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.IRModule"]], "indexmap (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.IndexMap"]], "intenum (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.IntEnum"]], "primfunc (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.PrimFunc"]], "structinfo (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.StructInfo"]], "type (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.Type"]], "var (class in tvm.relax.analysis)": [[16, "tvm.relax.analysis.Var"]], "access_ptr() (tvm.relax.analysis.buffer method)": [[16, "tvm.relax.analysis.Buffer.access_ptr"]], "all_global_vars() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.all_global_vars"]], "all_vars() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.all_vars"]], "astext() (tvm.relax.analysis.globalvar method)": [[16, "tvm.relax.analysis.GlobalVar.astext"]], "astext() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.astext"]], "bind_params() (tvm.relax.analysis.function method)": [[16, "tvm.relax.analysis.Function.bind_params"]], "bind_symbolic_vars() (tvm.relax.analysis.function method)": [[16, "tvm.relax.analysis.Function.bind_symbolic_vars"]], "bound_vars() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.bound_vars"]], "contains_impure_call() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.contains_impure_call"]], "create_empty() (tvm.relax.analysis.function static method)": [[16, "tvm.relax.analysis.Function.create_empty"]], "defined_symbolic_vars() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.defined_symbolic_vars"]], "derive_call_ret_struct_info() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.derive_call_ret_struct_info"]], "detect_recursion() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.detect_recursion"]], "erase_to_well_defined() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.erase_to_well_defined"]], "estimate_memory_usage() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.estimate_memory_usage"]], "free_symbolic_vars() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.free_symbolic_vars"]], "free_vars() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.free_vars"]], "from_expr() (tvm.relax.analysis.irmodule static method)": [[16, "tvm.relax.analysis.IRModule.from_expr"]], "from_func() (tvm.relax.analysis.indexmap static method)": [[16, "tvm.relax.analysis.IndexMap.from_func"]], "from_func_with_separators() (tvm.relax.analysis.indexmap static method)": [[16, "tvm.relax.analysis.IndexMap.from_func_with_separators"]], "get_attr() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.get_attr"]], "get_constructor() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.get_constructor"]], "get_flattened_buffer() (tvm.relax.analysis.buffer method)": [[16, "tvm.relax.analysis.Buffer.get_flattened_buffer"]], "get_global_type_var() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.get_global_type_var"]], "get_global_type_vars() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.get_global_type_vars"]], "get_global_var() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.get_global_var"]], "get_global_vars() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.get_global_vars"]], "get_static_type() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.get_static_type"]], "get_var2val() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.get_var2val"]], "has_reshape_pattern() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.has_reshape_pattern"]], "inverse() (tvm.relax.analysis.indexmap method)": [[16, "tvm.relax.analysis.IndexMap.inverse"]], "is_base_of() (tvm.relax.analysis.structinfo method)": [[16, "tvm.relax.analysis.StructInfo.is_base_of"]], "is_equivalent_to() (tvm.relax.analysis.indexmap method)": [[16, "tvm.relax.analysis.IndexMap.is_equivalent_to"]], "map_indices() (tvm.relax.analysis.indexmap method)": [[16, "tvm.relax.analysis.IndexMap.map_indices"]], "map_ndarray() (tvm.relax.analysis.indexmap method)": [[16, "tvm.relax.analysis.IndexMap.map_ndarray"]], "map_shape() (tvm.relax.analysis.indexmap method)": [[16, "tvm.relax.analysis.IndexMap.map_shape"]], "name_hint (tvm.relax.analysis.var property)": [[16, "tvm.relax.analysis.Var.name_hint"]], "name_to_binding() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.name_to_binding"]], "non_surjective_inverse() (tvm.relax.analysis.indexmap method)": [[16, "tvm.relax.analysis.IndexMap.non_surjective_inverse"]], "offset_of() (tvm.relax.analysis.buffer method)": [[16, "tvm.relax.analysis.Buffer.offset_of"]], "opaque_func() (tvm.relax.analysis.funcstructinfo static method)": [[16, "tvm.relax.analysis.FuncStructInfo.opaque_func"]], "post_order_visit() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.post_order_visit"]], "remove_all_unused() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.remove_all_unused"]], "same_as() (tvm.relax.analysis.structinfo method)": [[16, "tvm.relax.analysis.StructInfo.same_as"]], "same_as() (tvm.relax.analysis.type method)": [[16, "tvm.relax.analysis.Type.same_as"]], "scope() (tvm.relax.analysis.buffer method)": [[16, "tvm.relax.analysis.Buffer.scope"]], "specialize() (tvm.relax.analysis.primfunc method)": [[16, "tvm.relax.analysis.PrimFunc.specialize"]], "struct_info_base_check() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.struct_info_base_check"]], "struct_info_lca() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.struct_info_lca"]], "suggest_layout_transforms() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.suggest_layout_transforms"]], "tir_vars_in_struct_info() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.tir_vars_in_struct_info"]], "tvm.relax.analysis": [[16, "module-tvm.relax.analysis"]], "udchain() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.udchain"]], "update() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.update"]], "update_func() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.update_func"]], "update_global_info() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.update_global_info"]], "vload() (tvm.relax.analysis.buffer method)": [[16, "tvm.relax.analysis.Buffer.vload"]], "vstore() (tvm.relax.analysis.buffer method)": [[16, "tvm.relax.analysis.Buffer.vstore"]], "well_formed() (in module tvm.relax.analysis)": [[16, "tvm.relax.analysis.well_formed"]], "with_attr() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.with_attr"]], "with_attrs() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.with_attrs"]], "with_body() (tvm.relax.analysis.primfunc method)": [[16, "tvm.relax.analysis.PrimFunc.with_body"]], "without_attr() (tvm.relax.analysis.irmodule method)": [[16, "tvm.relax.analysis.IRModule.without_attr"]], "blockbuilder (class in tvm.relax.block_builder)": [[17, "tvm.relax.block_builder.BlockBuilder"]], "dataflowscope (class in tvm.relax.block_builder)": [[17, "tvm.relax.block_builder.DataflowScope"]], "functionscope (class in tvm.relax.block_builder)": [[17, "tvm.relax.block_builder.FunctionScope"]], "testingscope (class in tvm.relax.block_builder)": [[17, "tvm.relax.block_builder.TestingScope"]], "add_func() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.add_func"]], "begin_scope() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.begin_scope"]], "call_te() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.call_te"]], "call_te_with_grad() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.call_te_with_grad"]], "current() (tvm.relax.block_builder.blockbuilder static method)": [[17, "tvm.relax.block_builder.BlockBuilder.current"]], "current_block_is_dataflow() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.current_block_is_dataflow"]], "dataflow() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.dataflow"]], "emit() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.emit"]], "emit_func_output() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.emit_func_output"]], "emit_normalized() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.emit_normalized"]], "emit_output() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.emit_output"]], "emit_te() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.emit_te"]], "end_scope() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.end_scope"]], "function() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.function"]], "get() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.get"]], "get_unique_name() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.get_unique_name"]], "lookup_binding() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.lookup_binding"]], "match_cast() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.match_cast"]], "normalize() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.normalize"]], "testing_scope() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.testing_scope"]], "tvm.relax.block_builder": [[17, "module-tvm.relax.block_builder"]], "update_func() (tvm.relax.block_builder.blockbuilder method)": [[17, "tvm.relax.block_builder.BlockBuilder.update_func"]], "detach_params() (in module tvm.relax.frontend)": [[18, "tvm.relax.frontend.detach_params"]], "dynamo_capture_subgraphs() (in module tvm.relax.frontend.torch)": [[18, "tvm.relax.frontend.torch.dynamo_capture_subgraphs"]], "from_fx() (in module tvm.relax.frontend.torch)": [[18, "tvm.relax.frontend.torch.from_fx"]], "from_onnx() (in module tvm.relax.frontend.onnx)": [[18, "tvm.relax.frontend.onnx.from_onnx"]], "from_stablehlo() (in module tvm.relax.frontend.stablehlo)": [[18, "tvm.relax.frontend.stablehlo.from_stablehlo"]], "relax_dynamo() (in module tvm.relax.frontend.torch)": [[18, "tvm.relax.frontend.torch.relax_dynamo"]], "tvm.relax.frontend": [[18, "module-tvm.relax.frontend"]], "tvm.relax.frontend.onnx": [[18, "module-tvm.relax.frontend.onnx"]], "tvm.relax.frontend.stablehlo": [[18, "module-tvm.relax.frontend.stablehlo"]], "tvm.relax.frontend.torch": [[18, "module-tvm.relax.frontend.torch"]], "adaptivepool2dattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.AdaptivePool2DAttrs"]], "adaptivepool2dattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.AdaptivePool2DAttrs"]], "argmaxargminattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.ArgmaxArgminAttrs"]], "argmaxargminattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.ArgmaxArgminAttrs"]], "astypeattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.AstypeAttrs"]], "astypeattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.AstypeAttrs"]], "attrs (class in tvm.relax.op)": [[19, "tvm.relax.op.Attrs"]], "batchnormattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.BatchNormAttrs"]], "batchnormattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.BatchNormAttrs"]], "call (class in tvm.relax.op)": [[19, "tvm.relax.op.Call"]], "call (class in tvm.relax.op.builtin)": [[19, "tvm.relax.op.builtin.Call"]], "call (class in tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.Call"]], "calltirwithgradattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.CallTIRWithGradAttrs"]], "calltirwithgradattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.CallTIRWithGradAttrs"]], "concatattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.ConcatAttrs"]], "concatattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.ConcatAttrs"]], "conv2dattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.Conv2DAttrs"]], "conv2dattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.Conv2DAttrs"]], "conv2dtransposeattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.Conv2DTransposeAttrs"]], "conv2dtransposeattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.Conv2DTransposeAttrs"]], "cumsumattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.CumsumAttrs"]], "cumsumattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.CumsumAttrs"]], "datatype (class in tvm.relax.op)": [[19, "tvm.relax.op.DataType"]], "datatype (class in tvm.relax.op.image)": [[19, "tvm.relax.op.image.DataType"]], "datatype (class in tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.DataType"]], "datatypecode (class in tvm.relax.op)": [[19, "tvm.relax.op.DataTypeCode"]], "datatypeimm (class in tvm.relax.op.builtin)": [[19, "tvm.relax.op.builtin.DataTypeImm"]], "datatypeimm (class in tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.DataTypeImm"]], "devicemesh (class in tvm.relax.op.distributed)": [[19, "tvm.relax.op.distributed.DeviceMesh"]], "dropoutattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.DropoutAttrs"]], "dropoutattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.DropoutAttrs"]], "einsumattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.EinsumAttrs"]], "einsumattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.EinsumAttrs"]], "expanddimsattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.ExpandDimsAttrs"]], "expanddimsattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.ExpandDimsAttrs"]], "expr (in module tvm.relax.op)": [[19, "tvm.relax.op.Expr"]], "expr (in module tvm.relax.op.builtin)": [[19, "tvm.relax.op.builtin.Expr"]], "expr (in module tvm.relax.op.ccl)": [[19, "tvm.relax.op.ccl.Expr"]], "expr (in module tvm.relax.op.distributed)": [[19, "tvm.relax.op.distributed.Expr"]], "expr (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.Expr"]], "expr (in module tvm.relax.op.image)": [[19, "tvm.relax.op.image.Expr"]], "expr (in module tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.Expr"]], "expr (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.Expr"]], "externfunc (class in tvm.relax.op)": [[19, "tvm.relax.op.ExternFunc"]], "flipattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.FlipAttrs"]], "flipattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.FlipAttrs"]], "floatimm (class in tvm.relax.op)": [[19, "tvm.relax.op.FloatImm"]], "floatimm (class in tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.FloatImm"]], "globalvar (class in tvm.relax.op)": [[19, "tvm.relax.op.GlobalVar"]], "indexmap (class in tvm.relax.op)": [[19, "tvm.relax.op.IndexMap"]], "initattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.InitAttrs"]], "initattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.InitAttrs"]], "intimm (class in tvm.relax.op)": [[19, "tvm.relax.op.IntImm"]], "layernormattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.LayerNormAttrs"]], "layernormattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.LayerNormAttrs"]], "layouttransformattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.LayoutTransformAttrs"]], "layouttransformattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.LayoutTransformAttrs"]], "matmulattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.MatmulAttrs"]], "matmulattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.MatmulAttrs"]], "object (class in tvm.relax.op)": [[19, "tvm.relax.op.Object"]], "permutedimsattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.PermuteDimsAttrs"]], "permutedimsattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.PermuteDimsAttrs"]], "placement (class in tvm.relax.op.distributed)": [[19, "tvm.relax.op.distributed.Placement"]], "pool2dattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.Pool2DAttrs"]], "pool2dattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.Pool2DAttrs"]], "primexpr (class in tvm.relax.op)": [[19, "tvm.relax.op.PrimExpr"]], "primexpr (class in tvm.relax.op.image)": [[19, "tvm.relax.op.image.PrimExpr"]], "primvalue (class in tvm.relax.op)": [[19, "tvm.relax.op.PrimValue"]], "primvalue (class in tvm.relax.op.builtin)": [[19, "tvm.relax.op.builtin.PrimValue"]], "primvalue (class in tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.PrimValue"]], "repeatattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.RepeatAttrs"]], "repeatattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.RepeatAttrs"]], "resize2dattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.Resize2DAttrs"]], "resize2dattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.Resize2DAttrs"]], "rxtuple (in module tvm.relax.op)": [[19, "tvm.relax.op.RxTuple"]], "shapeexpr (class in tvm.relax.op)": [[19, "tvm.relax.op.ShapeExpr"]], "shapeexpr (class in tvm.relax.op.image)": [[19, "tvm.relax.op.image.ShapeExpr"]], "softmaxattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.SoftmaxAttrs"]], "softmaxattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.SoftmaxAttrs"]], "splitattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.SplitAttrs"]], "splitattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.SplitAttrs"]], "squeezeattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.SqueezeAttrs"]], "squeezeattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.SqueezeAttrs"]], "statisticalattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.StatisticalAttrs"]], "statisticalattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.StatisticalAttrs"]], "stridedsliceattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.StridedSliceAttrs"]], "stridedsliceattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.StridedSliceAttrs"]], "stringimm (class in tvm.relax.op)": [[19, "tvm.relax.op.StringImm"]], "stringimm (class in tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.StringImm"]], "structinfo (class in tvm.relax.op)": [[19, "tvm.relax.op.StructInfo"]], "takeattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.TakeAttrs"]], "takeattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.TakeAttrs"]], "tensorstructinfo (class in tvm.relax.op)": [[19, "tvm.relax.op.TensorStructInfo"]], "tileattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.TileAttrs"]], "tileattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.TileAttrs"]], "triluattrs (class in tvm.relax.op)": [[19, "tvm.relax.op.TriluAttrs"]], "triluattrs (class in tvm.relax.op.op_attrs)": [[19, "tvm.relax.op.op_attrs.TriluAttrs"]], "var (class in tvm.relax.op)": [[19, "tvm.relax.op.Var"]], "abs() (in module tvm.relax.op)": [[19, "tvm.relax.op.abs"]], "acos() (in module tvm.relax.op)": [[19, "tvm.relax.op.acos"]], "acosh() (in module tvm.relax.op)": [[19, "tvm.relax.op.acosh"]], "adaptive_avg_pool2d() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.adaptive_avg_pool2d"]], "add() (in module tvm.relax.op)": [[19, "tvm.relax.op.add"]], "alloc_storage() (in module tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.alloc_storage"]], "alloc_tensor() (in module tvm.relax.op.builtin)": [[19, "tvm.relax.op.builtin.alloc_tensor"]], "alloc_tensor() (in module tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.alloc_tensor"]], "allreduce() (in module tvm.relax.op.ccl)": [[19, "tvm.relax.op.ccl.allreduce"]], "annotate_sharding() (in module tvm.relax.op.distributed)": [[19, "tvm.relax.op.distributed.annotate_sharding"]], "arange() (in module tvm.relax.op)": [[19, "tvm.relax.op.arange"]], "argmax() (in module tvm.relax.op)": [[19, "tvm.relax.op.argmax"]], "argmin() (in module tvm.relax.op)": [[19, "tvm.relax.op.argmin"]], "asin() (in module tvm.relax.op)": [[19, "tvm.relax.op.asin"]], "asinh() (in module tvm.relax.op)": [[19, "tvm.relax.op.asinh"]], "assert_op() (in module tvm.relax.op)": [[19, "tvm.relax.op.assert_op"]], "astext() (tvm.relax.op.globalvar method)": [[19, "tvm.relax.op.GlobalVar.astext"]], "astype() (in module tvm.relax.op)": [[19, "tvm.relax.op.astype"]], "atan() (in module tvm.relax.op)": [[19, "tvm.relax.op.atan"]], "atanh() (in module tvm.relax.op)": [[19, "tvm.relax.op.atanh"]], "attention() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.attention"]], "avg_pool2d() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.avg_pool2d"]], "avg_pool2d_backward() (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.avg_pool2d_backward"]], "batch_norm() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.batch_norm"]], "bitwise_and() (in module tvm.relax.op)": [[19, "tvm.relax.op.bitwise_and"]], "bitwise_not() (in module tvm.relax.op)": [[19, "tvm.relax.op.bitwise_not"]], "bitwise_or() (in module tvm.relax.op)": [[19, "tvm.relax.op.bitwise_or"]], "bitwise_xor() (in module tvm.relax.op)": [[19, "tvm.relax.op.bitwise_xor"]], "broadcast_from_worker0() (in module tvm.relax.op.ccl)": [[19, "tvm.relax.op.ccl.broadcast_from_worker0"]], "broadcast_to() (in module tvm.relax.op)": [[19, "tvm.relax.op.broadcast_to"]], "call_builtin_with_ctx() (in module tvm.relax.op)": [[19, "tvm.relax.op.call_builtin_with_ctx"]], "call_dps_packed() (in module tvm.relax.op)": [[19, "tvm.relax.op.call_dps_packed"]], "call_pure_packed() (in module tvm.relax.op)": [[19, "tvm.relax.op.call_pure_packed"]], "call_tir() (in module tvm.relax.op)": [[19, "tvm.relax.op.call_tir"]], "call_tir_inplace() (in module tvm.relax.op)": [[19, "tvm.relax.op.call_tir_inplace"]], "call_tir_with_grad() (in module tvm.relax.op)": [[19, "tvm.relax.op.call_tir_with_grad"]], "ceil() (in module tvm.relax.op)": [[19, "tvm.relax.op.ceil"]], "clip() (in module tvm.relax.op)": [[19, "tvm.relax.op.clip"]], "collapse_sum_like() (in module tvm.relax.op)": [[19, "tvm.relax.op.collapse_sum_like"]], "collapse_sum_to() (in module tvm.relax.op)": [[19, "tvm.relax.op.collapse_sum_to"]], "concat() (in module tvm.relax.op)": [[19, "tvm.relax.op.concat"]], "const() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.const"]], "conv1d() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.conv1d"]], "conv1d_transpose() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.conv1d_transpose"]], "conv2d() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.conv2d"]], "conv2d_transpose() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.conv2d_transpose"]], "cos() (in module tvm.relax.op)": [[19, "tvm.relax.op.cos"]], "cosh() (in module tvm.relax.op)": [[19, "tvm.relax.op.cosh"]], "cross_entropy_with_logits() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.cross_entropy_with_logits"]], "cumsum() (in module tvm.relax.op)": [[19, "tvm.relax.op.cumsum"]], "divide() (in module tvm.relax.op)": [[19, "tvm.relax.op.divide"]], "dropout() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.dropout"]], "dynamic_strided_slice() (in module tvm.relax.op)": [[19, "tvm.relax.op.dynamic_strided_slice"]], "einsum() (in module tvm.relax.op)": [[19, "tvm.relax.op.einsum"]], "end_checkpoint() (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.end_checkpoint"]], "equal() (in module tvm.relax.op)": [[19, "tvm.relax.op.equal"]], "erf() (in module tvm.relax.op)": [[19, "tvm.relax.op.erf"]], "ewise_fma() (in module tvm.relax.op)": [[19, "tvm.relax.op.ewise_fma"]], "exp() (in module tvm.relax.op)": [[19, "tvm.relax.op.exp"]], "expand_dims() (in module tvm.relax.op)": [[19, "tvm.relax.op.expand_dims"]], "flatten() (in module tvm.relax.op)": [[19, "tvm.relax.op.flatten"]], "flip() (in module tvm.relax.op)": [[19, "tvm.relax.op.flip"]], "floor() (in module tvm.relax.op)": [[19, "tvm.relax.op.floor"]], "floor_divide() (in module tvm.relax.op)": [[19, "tvm.relax.op.floor_divide"]], "from_func() (tvm.relax.op.indexmap static method)": [[19, "tvm.relax.op.IndexMap.from_func"]], "from_func_with_separators() (tvm.relax.op.indexmap static method)": [[19, "tvm.relax.op.IndexMap.from_func_with_separators"]], "from_text() (tvm.relax.op.distributed.placement static method)": [[19, "tvm.relax.op.distributed.Placement.from_text"]], "full() (in module tvm.relax.op)": [[19, "tvm.relax.op.full"]], "full_like() (in module tvm.relax.op)": [[19, "tvm.relax.op.full_like"]], "gelu() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.gelu"]], "gelu_tanh() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.gelu_tanh"]], "get_int() (tvm.relax.op.attrs method)": [[19, "tvm.relax.op.Attrs.get_int"]], "get_int_tuple() (tvm.relax.op.attrs method)": [[19, "tvm.relax.op.Attrs.get_int_tuple"]], "get_str() (tvm.relax.op.attrs method)": [[19, "tvm.relax.op.Attrs.get_str"]], "greater() (in module tvm.relax.op)": [[19, "tvm.relax.op.greater"]], "greater_equal() (in module tvm.relax.op)": [[19, "tvm.relax.op.greater_equal"]], "group_norm() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.group_norm"]], "hint_on_device() (in module tvm.relax.op)": [[19, "tvm.relax.op.hint_on_device"]], "inverse() (tvm.relax.op.indexmap method)": [[19, "tvm.relax.op.IndexMap.inverse"]], "invoke_closure() (in module tvm.relax.op)": [[19, "tvm.relax.op.invoke_closure"]], "invoke_pure_closure() (in module tvm.relax.op)": [[19, "tvm.relax.op.invoke_pure_closure"]], "is_base_of() (tvm.relax.op.structinfo method)": [[19, "tvm.relax.op.StructInfo.is_base_of"]], "is_equivalent_to() (tvm.relax.op.indexmap method)": [[19, "tvm.relax.op.IndexMap.is_equivalent_to"]], "isfinite() (in module tvm.relax.op)": [[19, "tvm.relax.op.isfinite"]], "isinf() (in module tvm.relax.op)": [[19, "tvm.relax.op.isinf"]], "isnan() (in module tvm.relax.op)": [[19, "tvm.relax.op.isnan"]], "keys() (tvm.relax.op.attrs method)": [[19, "tvm.relax.op.Attrs.keys"]], "kill_storage() (in module tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.kill_storage"]], "kill_tensor() (in module tvm.relax.op.memory)": [[19, "tvm.relax.op.memory.kill_tensor"]], "layer_norm() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.layer_norm"]], "layout_transform() (in module tvm.relax.op)": [[19, "tvm.relax.op.layout_transform"]], "leakyrelu() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.leakyrelu"]], "less() (in module tvm.relax.op)": [[19, "tvm.relax.op.less"]], "less_equal() (in module tvm.relax.op)": [[19, "tvm.relax.op.less_equal"]], "linear() (in module tvm.relax.op)": [[19, "tvm.relax.op.linear"]], "list_field_info() (tvm.relax.op.attrs method)": [[19, "tvm.relax.op.Attrs.list_field_info"]], "log() (in module tvm.relax.op)": [[19, "tvm.relax.op.log"]], "log_softmax() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.log_softmax"]], "logical_and() (in module tvm.relax.op)": [[19, "tvm.relax.op.logical_and"]], "logical_not() (in module tvm.relax.op)": [[19, "tvm.relax.op.logical_not"]], "logical_or() (in module tvm.relax.op)": [[19, "tvm.relax.op.logical_or"]], "logical_xor() (in module tvm.relax.op)": [[19, "tvm.relax.op.logical_xor"]], "make_closure() (in module tvm.relax.op)": [[19, "tvm.relax.op.make_closure"]], "map_indices() (tvm.relax.op.indexmap method)": [[19, "tvm.relax.op.IndexMap.map_indices"]], "map_ndarray() (tvm.relax.op.indexmap method)": [[19, "tvm.relax.op.IndexMap.map_ndarray"]], "map_shape() (tvm.relax.op.indexmap method)": [[19, "tvm.relax.op.IndexMap.map_shape"]], "masked_fill() (in module tvm.relax.op)": [[19, "tvm.relax.op.masked_fill"]], "matmul() (in module tvm.relax.op)": [[19, "tvm.relax.op.matmul"]], "max() (in module tvm.relax.op)": [[19, "tvm.relax.op.max"]], "max_pool2d() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.max_pool2d"]], "max_pool2d_backward() (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.max_pool2d_backward"]], "maximum() (in module tvm.relax.op)": [[19, "tvm.relax.op.maximum"]], "mean() (in module tvm.relax.op)": [[19, "tvm.relax.op.mean"]], "min() (in module tvm.relax.op)": [[19, "tvm.relax.op.min"]], "minimum() (in module tvm.relax.op)": [[19, "tvm.relax.op.minimum"]], "multiply() (in module tvm.relax.op)": [[19, "tvm.relax.op.multiply"]], "name_hint (tvm.relax.op.var property)": [[19, "tvm.relax.op.Var.name_hint"]], "negative() (in module tvm.relax.op)": [[19, "tvm.relax.op.negative"]], "nll_loss() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.nll_loss"]], "nll_loss_backward() (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.nll_loss_backward"]], "no_grad() (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.no_grad"]], "non_surjective_inverse() (tvm.relax.op.indexmap method)": [[19, "tvm.relax.op.IndexMap.non_surjective_inverse"]], "not_equal() (in module tvm.relax.op)": [[19, "tvm.relax.op.not_equal"]], "null_value() (in module tvm.relax.op)": [[19, "tvm.relax.op.null_value"]], "ones() (in module tvm.relax.op)": [[19, "tvm.relax.op.ones"]], "ones_like() (in module tvm.relax.op)": [[19, "tvm.relax.op.ones_like"]], "pad() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.pad"]], "permute_dims() (in module tvm.relax.op)": [[19, "tvm.relax.op.permute_dims"]], "power() (in module tvm.relax.op)": [[19, "tvm.relax.op.power"]], "print() (in module tvm.relax.op)": [[19, "tvm.relax.op.print"]], "prod() (in module tvm.relax.op)": [[19, "tvm.relax.op.prod"]], "py_print() (in module tvm.relax.op)": [[19, "tvm.relax.op.py_print"]], "redistribute() (in module tvm.relax.op.distributed)": [[19, "tvm.relax.op.distributed.redistribute"]], "register_gradient() (in module tvm.relax.op)": [[19, "tvm.relax.op.register_gradient"]], "relu() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.relu"]], "render_object() (in module tvm.relax.op)": [[19, "tvm.relax.op.render_object"]], "repeat() (in module tvm.relax.op)": [[19, "tvm.relax.op.repeat"]], "reshape() (in module tvm.relax.op)": [[19, "tvm.relax.op.reshape"]], "resize2d() (in module tvm.relax.op.image)": [[19, "tvm.relax.op.image.resize2d"]], "rms_norm() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.rms_norm"]], "round() (in module tvm.relax.op)": [[19, "tvm.relax.op.round"]], "rsqrt() (in module tvm.relax.op)": [[19, "tvm.relax.op.rsqrt"]], "same_as() (tvm.relax.op.structinfo method)": [[19, "tvm.relax.op.StructInfo.same_as"]], "scatter_elements() (in module tvm.relax.op)": [[19, "tvm.relax.op.scatter_elements"]], "scatter_from_worker0() (in module tvm.relax.op.ccl)": [[19, "tvm.relax.op.ccl.scatter_from_worker0"]], "shape_of() (in module tvm.relax.op)": [[19, "tvm.relax.op.shape_of"]], "shape_to_tensor() (in module tvm.relax.op)": [[19, "tvm.relax.op.shape_to_tensor"]], "sigmoid() (in module tvm.relax.op)": [[19, "tvm.relax.op.sigmoid"]], "sign() (in module tvm.relax.op)": [[19, "tvm.relax.op.sign"]], "silu() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.silu"]], "sin() (in module tvm.relax.op)": [[19, "tvm.relax.op.sin"]], "sinh() (in module tvm.relax.op)": [[19, "tvm.relax.op.sinh"]], "softmax() (in module tvm.relax.op.nn)": [[19, "tvm.relax.op.nn.softmax"]], "split() (in module tvm.relax.op)": [[19, "tvm.relax.op.split"]], "sqrt() (in module tvm.relax.op)": [[19, "tvm.relax.op.sqrt"]], "square() (in module tvm.relax.op)": [[19, "tvm.relax.op.square"]], "squeeze() (in module tvm.relax.op)": [[19, "tvm.relax.op.squeeze"]], "start_checkpoint() (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.start_checkpoint"]], "std() (in module tvm.relax.op)": [[19, "tvm.relax.op.std"]], "stop_lift_params() (in module tvm.relax.op.builtin)": [[19, "tvm.relax.op.builtin.stop_lift_params"]], "strided_slice() (in module tvm.relax.op)": [[19, "tvm.relax.op.strided_slice"]], "subtract() (in module tvm.relax.op)": [[19, "tvm.relax.op.subtract"]], "sum() (in module tvm.relax.op)": [[19, "tvm.relax.op.sum"]], "take() (in module tvm.relax.op)": [[19, "tvm.relax.op.take"]], "take_backward() (in module tvm.relax.op.grad)": [[19, "tvm.relax.op.grad.take_backward"]], "tan() (in module tvm.relax.op)": [[19, "tvm.relax.op.tan"]], "tanh() (in module tvm.relax.op)": [[19, "tvm.relax.op.tanh"]], "tensor_to_shape() (in module tvm.relax.op)": [[19, "tvm.relax.op.tensor_to_shape"]], "tile() (in module tvm.relax.op)": [[19, "tvm.relax.op.tile"]], "to_vdevice() (in module tvm.relax.op)": [[19, "tvm.relax.op.to_vdevice"]], "tril() (in module tvm.relax.op)": [[19, "tvm.relax.op.tril"]], "triu() (in module tvm.relax.op)": [[19, "tvm.relax.op.triu"]], "tvm.relax.op": [[19, "module-tvm.relax.op"]], "tvm.relax.op.builtin": [[19, "module-tvm.relax.op.builtin"]], "tvm.relax.op.ccl": [[19, "module-tvm.relax.op.ccl"]], "tvm.relax.op.distributed": [[19, "module-tvm.relax.op.distributed"]], "tvm.relax.op.grad": [[19, "module-tvm.relax.op.grad"]], "tvm.relax.op.image": [[19, "module-tvm.relax.op.image"]], "tvm.relax.op.memory": [[19, "module-tvm.relax.op.memory"]], "tvm.relax.op.nn": [[19, "module-tvm.relax.op.nn"]], "tvm.relax.op.op_attrs": [[19, "module-tvm.relax.op.op_attrs"]], "unique() (in module tvm.relax.op)": [[19, "tvm.relax.op.unique"]], "variance() (in module tvm.relax.op)": [[19, "tvm.relax.op.variance"]], "where() (in module tvm.relax.op)": [[19, "tvm.relax.op.where"]], "wrap_param() (in module tvm.relax.op)": [[19, "tvm.relax.op.wrap_param"]], "zeros() (in module tvm.relax.op)": [[19, "tvm.relax.op.zeros"]], "zeros_like() (in module tvm.relax.op)": [[19, "tvm.relax.op.zeros_like"]], "allocateworkspace() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.AllocateWorkspace"]], "alteropimpl() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.AlterOpImpl"]], "annotatetiroppattern() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.AnnotateTIROpPattern"]], "attachglobalsymbol() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.AttachGlobalSymbol"]], "bindparams() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.BindParams"]], "bindsymbolicvars() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.BindSymbolicVars"]], "bundlemodelparams() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.BundleModelParams"]], "calltirrewrite() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.CallTIRRewrite"]], "canonicalizebindings() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.CanonicalizeBindings"]], "combineparallelmatmul() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.CombineParallelMatmul"]], "convertlayout() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.ConvertLayout"]], "dfpattern (class in tvm.relax.transform)": [[21, "tvm.relax.transform.DFPattern"]], "dataflowblockpass (class in tvm.relax.transform)": [[21, "tvm.relax.transform.DataflowBlockPass"]], "deadcodeelimination() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.DeadCodeElimination"]], "decomposeopsforinference() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.DecomposeOpsForInference"]], "decomposeopsfortraining() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.DecomposeOpsForTraining"]], "eliminatecommonsubexpr() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.EliminateCommonSubexpr"]], "expr (in module tvm.relax.transform)": [[21, "tvm.relax.transform.Expr"]], "fewshottuning() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.FewShotTuning"]], "foldconstant() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.FoldConstant"]], "folddataflowblockoutput() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.FoldDataflowBlockOutput"]], "functionpass (class in tvm.relax.transform)": [[21, "tvm.relax.transform.FunctionPass"]], "fuseops() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.FuseOps"]], "fuseopsbypattern() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.FuseOpsByPattern"]], "fusetir() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.FuseTIR"]], "fusionpattern (class in tvm.relax.transform)": [[21, "tvm.relax.transform.FusionPattern"]], "gradient() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.Gradient"]], "indexmap (class in tvm.relax.transform)": [[21, "tvm.relax.transform.IndexMap"]], "lambdalift() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.LambdaLift"]], "lazytransformparams (class in tvm.relax.transform)": [[21, "tvm.relax.transform.LazyTransformParams"]], "legalizeops() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.LegalizeOps"]], "lifttransformparams() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.LiftTransformParams"]], "mergecompositefunctions() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.MergeCompositeFunctions"]], "metascheduleapplydatabase() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.MetaScheduleApplyDatabase"]], "metascheduletuneirmod() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.MetaScheduleTuneIRMod"]], "metascheduletunetir() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.MetaScheduleTuneTIR"]], "ndarray (class in tvm.relax.transform)": [[21, "tvm.relax.transform.NDArray"]], "normalize() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.Normalize"]], "object (class in tvm.relax.transform)": [[21, "tvm.relax.transform.Object"]], "optimizelayouttransform (class in tvm.relax.transform)": [[21, "tvm.relax.transform.OptimizeLayoutTransform"]], "patterncheckcontext (class in tvm.relax.transform)": [[21, "tvm.relax.transform.PatternCheckContext"]], "primfunc (class in tvm.relax.transform)": [[21, "tvm.relax.transform.PrimFunc"]], "realizevdevice() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.RealizeVDevice"]], "removepuritychecking() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.RemovePurityChecking"]], "rewritecudagraph() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.RewriteCUDAGraph"]], "rewritedataflowreshape() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.RewriteDataflowReshape"]], "runcodegen() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.RunCodegen"]], "splitcalltirbypattern() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.SplitCallTIRByPattern"]], "staticplanblockmemory() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.StaticPlanBlockMemory"]], "tomixedprecision() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.ToMixedPrecision"]], "tonondataflow() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.ToNonDataflow"]], "updatevdevice() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.UpdateVDevice"]], "vmbuiltinlower() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.VMBuiltinLower"]], "vmshapelower() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.VMShapeLower"]], "var (class in tvm.relax.transform)": [[21, "tvm.relax.transform.Var"]], "asnumpy() (tvm.relax.transform.ndarray method)": [[21, "tvm.relax.transform.NDArray.asnumpy"]], "copyfrom() (tvm.relax.transform.ndarray method)": [[21, "tvm.relax.transform.NDArray.copyfrom"]], "copyto() (tvm.relax.transform.ndarray method)": [[21, "tvm.relax.transform.NDArray.copyto"]], "dataflowblock_pass() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.dataflowblock_pass"]], "device (tvm.relax.transform.ndarray property)": [[21, "tvm.relax.transform.NDArray.device"]], "dtype (tvm.relax.transform.ndarray property)": [[21, "tvm.relax.transform.NDArray.dtype"]], "dup() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.dup"]], "extract_matched_expr() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.extract_matched_expr"]], "fork_to() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.fork_to"]], "from_func() (tvm.relax.transform.indexmap static method)": [[21, "tvm.relax.transform.IndexMap.from_func"]], "from_func_with_separators() (tvm.relax.transform.indexmap static method)": [[21, "tvm.relax.transform.IndexMap.from_func_with_separators"]], "function_pass() (in module tvm.relax.transform)": [[21, "tvm.relax.transform.function_pass"]], "has_attr() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.has_attr"]], "has_dtype() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.has_dtype"]], "has_shape() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.has_shape"]], "has_type() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.has_type"]], "inverse() (tvm.relax.transform.indexmap method)": [[21, "tvm.relax.transform.IndexMap.inverse"]], "is_equivalent_to() (tvm.relax.transform.indexmap method)": [[21, "tvm.relax.transform.IndexMap.is_equivalent_to"]], "map_indices() (tvm.relax.transform.indexmap method)": [[21, "tvm.relax.transform.IndexMap.map_indices"]], "map_ndarray() (tvm.relax.transform.indexmap method)": [[21, "tvm.relax.transform.IndexMap.map_ndarray"]], "map_shape() (tvm.relax.transform.indexmap method)": [[21, "tvm.relax.transform.IndexMap.map_shape"]], "match() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.match"]], "name_hint (tvm.relax.transform.var property)": [[21, "tvm.relax.transform.Var.name_hint"]], "non_surjective_inverse() (tvm.relax.transform.indexmap method)": [[21, "tvm.relax.transform.IndexMap.non_surjective_inverse"]], "numpy() (tvm.relax.transform.ndarray method)": [[21, "tvm.relax.transform.NDArray.numpy"]], "only_used_by() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.only_used_by"]], "same_as() (tvm.relax.transform.ndarray method)": [[21, "tvm.relax.transform.NDArray.same_as"]], "same_shape_as() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.same_shape_as"]], "specialize() (tvm.relax.transform.primfunc method)": [[21, "tvm.relax.transform.PrimFunc.specialize"]], "tvm.relax.transform": [[21, "module-tvm.relax.transform"]], "used_by() (tvm.relax.transform.dfpattern method)": [[21, "tvm.relax.transform.DFPattern.used_by"]], "with_body() (tvm.relax.transform.primfunc method)": [[21, "tvm.relax.transform.PrimFunc.with_body"]], "localsession (class in tvm.rpc)": [[22, "tvm.rpc.LocalSession"]], "popensession (class in tvm.rpc)": [[22, "tvm.rpc.PopenSession"]], "rpcsession (class in tvm.rpc)": [[22, "tvm.rpc.RPCSession"]], "server (class in tvm.rpc)": [[22, "tvm.rpc.Server"]], "trackersession (class in tvm.rpc)": [[22, "tvm.rpc.TrackerSession"]], "cl() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.cl"]], "close() (tvm.rpc.trackersession method)": [[22, "tvm.rpc.TrackerSession.close"]], "connect() (in module tvm.rpc)": [[22, "tvm.rpc.connect"]], "connect_tracker() (in module tvm.rpc)": [[22, "tvm.rpc.connect_tracker"]], "cpu() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.cpu"]], "cuda() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.cuda"]], "device() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.device"]], "download() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.download"]], "download_linked_module() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.download_linked_module"]], "ext_dev() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.ext_dev"]], "get_function() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.get_function"]], "hexagon() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.hexagon"]], "listdir() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.listdir"]], "load_module() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.load_module"]], "metal() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.metal"]], "remove() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.remove"]], "request() (tvm.rpc.trackersession method)": [[22, "tvm.rpc.TrackerSession.request"]], "request_and_run() (tvm.rpc.trackersession method)": [[22, "tvm.rpc.TrackerSession.request_and_run"]], "rocm() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.rocm"]], "summary() (tvm.rpc.trackersession method)": [[22, "tvm.rpc.TrackerSession.summary"]], "system_lib() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.system_lib"]], "terminate() (tvm.rpc.server method)": [[22, "tvm.rpc.Server.terminate"]], "text_summary() (tvm.rpc.trackersession method)": [[22, "tvm.rpc.TrackerSession.text_summary"]], "tvm.rpc": [[22, "module-tvm.rpc"]], "upload() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.upload"]], "vulkan() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.vulkan"]], "webgpu() (tvm.rpc.rpcsession method)": [[22, "tvm.rpc.RPCSession.webgpu"]], "with_minrpc() (in module tvm.rpc)": [[22, "tvm.rpc.with_minrpc"]], "dmodule (class in tvm.runtime.disco)": [[23, "tvm.runtime.disco.DModule"]], "dpackedfunc (class in tvm.runtime.disco)": [[23, "tvm.runtime.disco.DPackedFunc"]], "dref (class in tvm.runtime.disco)": [[23, "tvm.runtime.disco.DRef"]], "processsession (class in tvm.runtime.disco)": [[23, "tvm.runtime.disco.ProcessSession"]], "session (class in tvm.runtime.disco)": [[23, "tvm.runtime.disco.Session"]], "threadedsession (class in tvm.runtime.disco)": [[23, "tvm.runtime.disco.ThreadedSession"]], "allreduce() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.allreduce"]], "broadcast_from_worker0() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.broadcast_from_worker0"]], "call_packed() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.call_packed"]], "copy_from_worker_0() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.copy_from_worker_0"]], "copy_to_worker_0() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.copy_to_worker_0"]], "debug_copy_from() (tvm.runtime.disco.dref method)": [[23, "tvm.runtime.disco.DRef.debug_copy_from"]], "debug_get_from_remote() (tvm.runtime.disco.dref method)": [[23, "tvm.runtime.disco.DRef.debug_get_from_remote"]], "empty() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.empty"]], "gather_to_worker0() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.gather_to_worker0"]], "get_global_func() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.get_global_func"]], "init_ccl() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.init_ccl"]], "load_vm_module() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.load_vm_module"]], "scatter_from_worker0() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.scatter_from_worker0"]], "session (tvm.runtime.disco.dref property)": [[23, "tvm.runtime.disco.DRef.session"]], "sync_worker_0() (tvm.runtime.disco.session method)": [[23, "tvm.runtime.disco.Session.sync_worker_0"]], "tvm.runtime.disco": [[23, "module-tvm.runtime.disco"]], "ndarray (class in tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.NDArray"]], "array() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.array"]], "asnumpy() (tvm.runtime.ndarray.ndarray method)": [[24, "tvm.runtime.ndarray.NDArray.asnumpy"]], "cl() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.cl"]], "copyfrom() (tvm.runtime.ndarray.ndarray method)": [[24, "tvm.runtime.ndarray.NDArray.copyfrom"]], "copyto() (tvm.runtime.ndarray.ndarray method)": [[24, "tvm.runtime.ndarray.NDArray.copyto"]], "cpu() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.cpu"]], "cuda() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.cuda"]], "device (tvm.runtime.ndarray.ndarray property)": [[24, "tvm.runtime.ndarray.NDArray.device"]], "device() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.device"]], "dtype (tvm.runtime.ndarray.ndarray property)": [[24, "tvm.runtime.ndarray.NDArray.dtype"]], "empty() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.empty"]], "ext_dev() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.ext_dev"]], "from_dlpack() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.from_dlpack"]], "gpu() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.gpu"]], "hexagon() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.hexagon"]], "metal() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.metal"]], "mtl() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.mtl"]], "numpy() (tvm.runtime.ndarray.ndarray method)": [[24, "tvm.runtime.ndarray.NDArray.numpy"]], "numpyasarray() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.numpyasarray"]], "opencl() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.opencl"]], "rocm() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.rocm"]], "same_as() (tvm.runtime.ndarray.ndarray method)": [[24, "tvm.runtime.ndarray.NDArray.same_as"]], "tvm.runtime.ndarray": [[24, "module-tvm.runtime.ndarray"]], "vpi() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.vpi"]], "vulkan() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.vulkan"]], "webgpu() (in module tvm.runtime.ndarray)": [[24, "tvm.runtime.ndarray.webgpu"]], "count (class in tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.Count"]], "devicewrapper (class in tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.DeviceWrapper"]], "duration (class in tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.Duration"]], "metriccollector (class in tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.MetricCollector"]], "percent (class in tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.Percent"]], "ratio (class in tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.Ratio"]], "report (class in tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.Report"]], "calls (tvm.runtime.profiling.report attribute)": [[25, "tvm.runtime.profiling.Report.calls"]], "csv() (tvm.runtime.profiling.report method)": [[25, "tvm.runtime.profiling.Report.csv"]], "device_metrics (tvm.runtime.profiling.report attribute)": [[25, "tvm.runtime.profiling.Report.device_metrics"]], "from_json() (tvm.runtime.profiling.report class method)": [[25, "tvm.runtime.profiling.Report.from_json"]], "json() (tvm.runtime.profiling.report method)": [[25, "tvm.runtime.profiling.Report.json"]], "profile_function() (in module tvm.runtime.profiling)": [[25, "tvm.runtime.profiling.profile_function"]], "table() (tvm.runtime.profiling.report method)": [[25, "tvm.runtime.profiling.Report.table"]], "tvm.runtime.profiling": [[25, "module-tvm.runtime.profiling"]], "vminstrumentreturnkind (class in tvm.runtime.relax_vm)": [[26, "tvm.runtime.relax_vm.VMInstrumentReturnKind"]], "virtualmachine (class in tvm.runtime.relax_vm)": [[26, "tvm.runtime.relax_vm.VirtualMachine"]], "get_outputs() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.get_outputs"]], "invoke_closure() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.invoke_closure"]], "invoke_stateful() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.invoke_stateful"]], "profile() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.profile"]], "save_function() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.save_function"]], "set_input() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.set_input"]], "set_instrument() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.set_instrument"]], "time_evaluator() (tvm.runtime.relax_vm.virtualmachine method)": [[26, "tvm.runtime.relax_vm.VirtualMachine.time_evaluator"]], "tvm.runtime.relax_vm": [[26, "module-tvm.runtime.relax_vm"]], "datatype (class in tvm.runtime)": [[27, "tvm.runtime.DataType"]], "datatypecode (class in tvm.runtime)": [[27, "tvm.runtime.DataTypeCode"]], "device (class in tvm.runtime)": [[27, "tvm.runtime.Device"]], "module (class in tvm.runtime)": [[27, "tvm.runtime.Module"]], "object (class in tvm.runtime)": [[27, "tvm.runtime.Object"]], "objectgeneric (class in tvm.runtime)": [[27, "tvm.runtime.ObjectGeneric"]], "objectpath (class in tvm.runtime)": [[27, "tvm.runtime.ObjectPath"]], "objectpathpair (class in tvm.runtime)": [[27, "tvm.runtime.ObjectPathPair"]], "packedfunc (class in tvm.runtime)": [[27, "tvm.runtime.PackedFunc"]], "report (class in tvm.runtime)": [[27, "tvm.runtime.Report"]], "scriptable (class in tvm.runtime)": [[27, "tvm.runtime.Scriptable"]], "shapetuple (class in tvm.runtime)": [[27, "tvm.runtime.ShapeTuple"]], "string (class in tvm.runtime)": [[27, "tvm.runtime.String"]], "api_version (tvm.runtime.device property)": [[27, "tvm.runtime.Device.api_version"]], "asobject() (tvm.runtime.objectgeneric method)": [[27, "tvm.runtime.ObjectGeneric.asobject"]], "calls (tvm.runtime.report attribute)": [[27, "tvm.runtime.Report.calls"]], "cl() (in module tvm.runtime)": [[27, "tvm.runtime.cl"]], "clear_imports() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.clear_imports"]], "compute_version (tvm.runtime.device property)": [[27, "tvm.runtime.Device.compute_version"]], "const() (in module tvm.runtime)": [[27, "tvm.runtime.const"]], "convert() (in module tvm.runtime)": [[27, "tvm.runtime.convert"]], "convert_to_object() (in module tvm.runtime)": [[27, "tvm.runtime.convert_to_object"]], "cpu() (in module tvm.runtime)": [[27, "tvm.runtime.cpu"]], "create_raw_stream() (tvm.runtime.device method)": [[27, "tvm.runtime.Device.create_raw_stream"]], "csv() (tvm.runtime.report method)": [[27, "tvm.runtime.Report.csv"]], "cuda() (in module tvm.runtime)": [[27, "tvm.runtime.cuda"]], "device() (in module tvm.runtime)": [[27, "tvm.runtime.device"]], "device_metrics (tvm.runtime.report attribute)": [[27, "tvm.runtime.Report.device_metrics"]], "device_name (tvm.runtime.device property)": [[27, "tvm.runtime.Device.device_name"]], "driver_version (tvm.runtime.device property)": [[27, "tvm.runtime.Device.driver_version"]], "enabled() (in module tvm.runtime)": [[27, "tvm.runtime.enabled"]], "entry_func (tvm.runtime.module property)": [[27, "tvm.runtime.Module.entry_func"]], "exist (tvm.runtime.device property)": [[27, "tvm.runtime.Device.exist"]], "export_library() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.export_library"]], "ext_dev() (in module tvm.runtime)": [[27, "tvm.runtime.ext_dev"]], "format (tvm.runtime.module property)": [[27, "tvm.runtime.Module.format"]], "free_raw_stream() (tvm.runtime.device method)": [[27, "tvm.runtime.Device.free_raw_stream"]], "from_json() (tvm.runtime.report class method)": [[27, "tvm.runtime.Report.from_json"]], "get_function() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.get_function"]], "get_property_mask() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.get_property_mask"]], "get_source() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.get_source"]], "gpu() (in module tvm.runtime)": [[27, "tvm.runtime.gpu"]], "implements_function() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.implements_function"]], "import_module() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.import_module"]], "imported_modules (tvm.runtime.module property)": [[27, "tvm.runtime.Module.imported_modules"]], "is_binary_serializable (tvm.runtime.module property)": [[27, "tvm.runtime.Module.is_binary_serializable"]], "is_dso_exportable (tvm.runtime.module property)": [[27, "tvm.runtime.Module.is_dso_exportable"]], "is_runnable (tvm.runtime.module property)": [[27, "tvm.runtime.Module.is_runnable"]], "json() (tvm.runtime.report method)": [[27, "tvm.runtime.Report.json"]], "l2_cache_size_bytes (tvm.runtime.device property)": [[27, "tvm.runtime.Device.l2_cache_size_bytes"]], "load_module() (in module tvm.runtime)": [[27, "tvm.runtime.load_module"]], "load_param_dict() (in module tvm.runtime)": [[27, "tvm.runtime.load_param_dict"]], "load_param_dict_from_file() (in module tvm.runtime)": [[27, "tvm.runtime.load_param_dict_from_file"]], "load_static_library() (in module tvm.runtime)": [[27, "tvm.runtime.load_static_library"]], "max_clock_rate (tvm.runtime.device property)": [[27, "tvm.runtime.Device.max_clock_rate"]], "max_shared_memory_per_block (tvm.runtime.device property)": [[27, "tvm.runtime.Device.max_shared_memory_per_block"]], "max_thread_dimensions (tvm.runtime.device property)": [[27, "tvm.runtime.Device.max_thread_dimensions"]], "max_threads_per_block (tvm.runtime.device property)": [[27, "tvm.runtime.Device.max_threads_per_block"]], "metal() (in module tvm.runtime)": [[27, "tvm.runtime.metal"]], "mtl() (in module tvm.runtime)": [[27, "tvm.runtime.mtl"]], "multi_processor_count (tvm.runtime.device property)": [[27, "tvm.runtime.Device.multi_processor_count"]], "num_threads() (in module tvm.runtime)": [[27, "tvm.runtime.num_threads"]], "opencl() (in module tvm.runtime)": [[27, "tvm.runtime.opencl"]], "rocm() (in module tvm.runtime)": [[27, "tvm.runtime.rocm"]], "save() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.save"]], "save_param_dict() (in module tvm.runtime)": [[27, "tvm.runtime.save_param_dict"]], "save_param_dict_to_file() (in module tvm.runtime)": [[27, "tvm.runtime.save_param_dict_to_file"]], "script() (tvm.runtime.scriptable method)": [[27, "tvm.runtime.Scriptable.script"]], "set_raw_stream() (tvm.runtime.device method)": [[27, "tvm.runtime.Device.set_raw_stream"]], "show() (tvm.runtime.scriptable method)": [[27, "tvm.runtime.Scriptable.show"]], "sync() (tvm.runtime.device method)": [[27, "tvm.runtime.Device.sync"]], "system_lib() (in module tvm.runtime)": [[27, "tvm.runtime.system_lib"]], "table() (tvm.runtime.report method)": [[27, "tvm.runtime.Report.table"]], "texture_spatial_limit() (tvm.runtime.device method)": [[27, "tvm.runtime.Device.texture_spatial_limit"]], "time_evaluator() (tvm.runtime.module method)": [[27, "tvm.runtime.Module.time_evaluator"]], "tvm.runtime": [[27, "module-tvm.runtime"]], "type_key (tvm.runtime.module property)": [[27, "tvm.runtime.Module.type_key"]], "vpi() (in module tvm.runtime)": [[27, "tvm.runtime.vpi"]], "vulkan() (in module tvm.runtime)": [[27, "tvm.runtime.vulkan"]], "warp_size (tvm.runtime.device property)": [[27, "tvm.runtime.Device.warp_size"]], "genericfunc (class in tvm.target)": [[28, "tvm.target.GenericFunc"]], "target (class in tvm.target)": [[28, "tvm.target.Target"]], "targetkind (class in tvm.target)": [[28, "tvm.target.TargetKind"]], "virtualdevice (class in tvm.target)": [[28, "tvm.target.VirtualDevice"]], "arch (tvm.target.target property)": [[28, "tvm.target.Target.arch"]], "arm_cpu() (in module tvm.target)": [[28, "tvm.target.arm_cpu"]], "bifrost() (in module tvm.target)": [[28, "tvm.target.bifrost"]], "canon_multi_target() (tvm.target.target static method)": [[28, "tvm.target.Target.canon_multi_target"]], "canon_multi_target_and_host() (tvm.target.target static method)": [[28, "tvm.target.Target.canon_multi_target_and_host"]], "canon_target() (tvm.target.target static method)": [[28, "tvm.target.Target.canon_target"]], "canon_target_and_host() (tvm.target.target static method)": [[28, "tvm.target.Target.canon_target_and_host"]], "canon_target_map_and_host() (tvm.target.target static method)": [[28, "tvm.target.Target.canon_target_map_and_host"]], "create() (in module tvm.target)": [[28, "tvm.target.create"]], "cuda() (in module tvm.target)": [[28, "tvm.target.cuda"]], "current() (tvm.target.target static method)": [[28, "tvm.target.Target.current"]], "from_device() (tvm.target.target static method)": [[28, "tvm.target.Target.from_device"]], "generic_func() (in module tvm.target)": [[28, "tvm.target.generic_func"]], "get_kind_attr() (tvm.target.target method)": [[28, "tvm.target.Target.get_kind_attr"]], "get_native_generic_func() (in module tvm.target)": [[28, "tvm.target.get_native_generic_func"]], "get_packed_func() (tvm.target.genericfunc method)": [[28, "tvm.target.GenericFunc.get_packed_func"]], "get_target_device_type() (tvm.target.target method)": [[28, "tvm.target.Target.get_target_device_type"]], "hexagon() (in module tvm.target)": [[28, "tvm.target.hexagon"]], "intel_graphics() (in module tvm.target)": [[28, "tvm.target.intel_graphics"]], "list_kinds() (tvm.target.target static method)": [[28, "tvm.target.Target.list_kinds"]], "list_tags() (in module tvm.target)": [[28, "tvm.target.list_tags"]], "make_compilation_config() (in module tvm.target)": [[28, "tvm.target.make_compilation_config"]], "mali() (in module tvm.target)": [[28, "tvm.target.mali"]], "mattr (tvm.target.target property)": [[28, "tvm.target.Target.mattr"]], "max_block_size_x (tvm.target.target property)": [[28, "tvm.target.Target.max_block_size_x"]], "max_block_size_y (tvm.target.target property)": [[28, "tvm.target.Target.max_block_size_y"]], "max_num_threads (tvm.target.target property)": [[28, "tvm.target.Target.max_num_threads"]], "mcpu (tvm.target.target property)": [[28, "tvm.target.Target.mcpu"]], "model (tvm.target.target property)": [[28, "tvm.target.Target.model"]], "options (tvm.target.targetkind property)": [[28, "tvm.target.TargetKind.options"]], "options_from_name() (tvm.target.targetkind static method)": [[28, "tvm.target.TargetKind.options_from_name"]], "override_native_generic_func() (in module tvm.target)": [[28, "tvm.target.override_native_generic_func"]], "rasp() (in module tvm.target)": [[28, "tvm.target.rasp"]], "register() (tvm.target.genericfunc method)": [[28, "tvm.target.GenericFunc.register"]], "riscv_cpu() (in module tvm.target)": [[28, "tvm.target.riscv_cpu"]], "rocm() (in module tvm.target)": [[28, "tvm.target.rocm"]], "set_default() (tvm.target.genericfunc method)": [[28, "tvm.target.GenericFunc.set_default"]], "stm32() (in module tvm.target)": [[28, "tvm.target.stm32"]], "target_or_current() (tvm.target.target static method)": [[28, "tvm.target.Target.target_or_current"]], "thread_warp_size (tvm.target.target property)": [[28, "tvm.target.Target.thread_warp_size"]], "tvm.target": [[28, "module-tvm.target"]], "computeop (class in tvm.te)": [[29, "tvm.te.ComputeOp"]], "externop (class in tvm.te)": [[29, "tvm.te.ExternOp"]], "hybridop (class in tvm.te)": [[29, "tvm.te.HybridOp"]], "placeholderop (class in tvm.te)": [[29, "tvm.te.PlaceholderOp"]], "scanop (class in tvm.te)": [[29, "tvm.te.ScanOp"]], "specializedcondition (class in tvm.te)": [[29, "tvm.te.SpecializedCondition"]], "tensor (class in tvm.te)": [[29, "tvm.te.Tensor"]], "tensorcomputeop (class in tvm.te)": [[29, "tvm.te.TensorComputeOp"]], "tensorslice (class in tvm.te)": [[29, "tvm.te.TensorSlice"]], "abs() (in module tvm.te)": [[29, "tvm.te.abs"]], "acos() (in module tvm.te)": [[29, "tvm.te.acos"]], "acosh() (in module tvm.te)": [[29, "tvm.te.acosh"]], "add() (in module tvm.te)": [[29, "tvm.te.add"]], "all() (in module tvm.te)": [[29, "tvm.te.all"]], "any() (in module tvm.te)": [[29, "tvm.te.any"]], "asin() (in module tvm.te)": [[29, "tvm.te.asin"]], "asinh() (in module tvm.te)": [[29, "tvm.te.asinh"]], "asobject() (tvm.te.tensorslice method)": [[29, "tvm.te.TensorSlice.asobject"]], "atan() (in module tvm.te)": [[29, "tvm.te.atan"]], "atanh() (in module tvm.te)": [[29, "tvm.te.atanh"]], "axis (tvm.te.hybridop property)": [[29, "tvm.te.HybridOp.axis"]], "axis (tvm.te.tensor property)": [[29, "tvm.te.Tensor.axis"]], "ceil() (in module tvm.te)": [[29, "tvm.te.ceil"]], "comm_reducer() (in module tvm.te)": [[29, "tvm.te.comm_reducer"]], "compute() (in module tvm.te)": [[29, "tvm.te.compute"]], "const() (in module tvm.te)": [[29, "tvm.te.const"]], "cos() (in module tvm.te)": [[29, "tvm.te.cos"]], "cosh() (in module tvm.te)": [[29, "tvm.te.cosh"]], "create_prim_func() (in module tvm.te)": [[29, "tvm.te.create_prim_func"]], "create_relax_prim_func() (in module tvm.te)": [[29, "tvm.te.create_relax_prim_func"]], "create_schedule() (in module tvm.te)": [[29, "tvm.te.create_schedule"]], "current() (tvm.te.specializedcondition static method)": [[29, "tvm.te.SpecializedCondition.current"]], "decl_tensor_intrin() (in module tvm.te)": [[29, "tvm.te.decl_tensor_intrin"]], "div() (in module tvm.te)": [[29, "tvm.te.div"]], "dtype (tvm.te.tensorslice property)": [[29, "tvm.te.TensorSlice.dtype"]], "erf() (in module tvm.te)": [[29, "tvm.te.erf"]], "exp() (in module tvm.te)": [[29, "tvm.te.exp"]], "extern() (in module tvm.te)": [[29, "tvm.te.extern"]], "extern_primfunc() (in module tvm.te)": [[29, "tvm.te.extern_primfunc"]], "floor() (in module tvm.te)": [[29, "tvm.te.floor"]], "floordiv() (in module tvm.te)": [[29, "tvm.te.floordiv"]], "floormod() (in module tvm.te)": [[29, "tvm.te.floormod"]], "fmod() (in module tvm.te)": [[29, "tvm.te.fmod"]], "gradient() (in module tvm.te)": [[29, "tvm.te.gradient"]], "if_then_else() (in module tvm.te)": [[29, "tvm.te.if_then_else"]], "indexdiv() (in module tvm.te)": [[29, "tvm.te.indexdiv"]], "indexmod() (in module tvm.te)": [[29, "tvm.te.indexmod"]], "isfinite() (in module tvm.te)": [[29, "tvm.te.isfinite"]], "isinf() (in module tvm.te)": [[29, "tvm.te.isinf"]], "isnan() (in module tvm.te)": [[29, "tvm.te.isnan"]], "log() (in module tvm.te)": [[29, "tvm.te.log"]], "log10() (in module tvm.te)": [[29, "tvm.te.log10"]], "log2() (in module tvm.te)": [[29, "tvm.te.log2"]], "max() (in module tvm.te)": [[29, "tvm.te.max"]], "max_value() (in module tvm.te)": [[29, "tvm.te.max_value"]], "min() (in module tvm.te)": [[29, "tvm.te.min"]], "min_value() (in module tvm.te)": [[29, "tvm.te.min_value"]], "multiply() (in module tvm.te)": [[29, "tvm.te.multiply"]], "ndim (tvm.te.tensor property)": [[29, "tvm.te.Tensor.ndim"]], "nearbyint() (in module tvm.te)": [[29, "tvm.te.nearbyint"]], "op (tvm.te.tensor property)": [[29, "tvm.te.Tensor.op"]], "placeholder() (in module tvm.te)": [[29, "tvm.te.placeholder"]], "popcount() (in module tvm.te)": [[29, "tvm.te.popcount"]], "power() (in module tvm.te)": [[29, "tvm.te.power"]], "reduce_axis() (in module tvm.te)": [[29, "tvm.te.reduce_axis"]], "round() (in module tvm.te)": [[29, "tvm.te.round"]], "rsqrt() (in module tvm.te)": [[29, "tvm.te.rsqrt"]], "scan() (in module tvm.te)": [[29, "tvm.te.scan"]], "scan_axis (tvm.te.scanop property)": [[29, "tvm.te.ScanOp.scan_axis"]], "shape (tvm.te.tensor property)": [[29, "tvm.te.Tensor.shape"]], "sigmoid() (in module tvm.te)": [[29, "tvm.te.sigmoid"]], "sin() (in module tvm.te)": [[29, "tvm.te.sin"]], "sinh() (in module tvm.te)": [[29, "tvm.te.sinh"]], "size_var() (in module tvm.te)": [[29, "tvm.te.size_var"]], "sqrt() (in module tvm.te)": [[29, "tvm.te.sqrt"]], "subtract() (in module tvm.te)": [[29, "tvm.te.subtract"]], "sum() (in module tvm.te)": [[29, "tvm.te.sum"]], "tag_scope() (in module tvm.te)": [[29, "tvm.te.tag_scope"]], "tan() (in module tvm.te)": [[29, "tvm.te.tan"]], "tanh() (in module tvm.te)": [[29, "tvm.te.tanh"]], "thread_axis() (in module tvm.te)": [[29, "tvm.te.thread_axis"]], "trace() (in module tvm.te)": [[29, "tvm.te.trace"]], "trunc() (in module tvm.te)": [[29, "tvm.te.trunc"]], "truncdiv() (in module tvm.te)": [[29, "tvm.te.truncdiv"]], "truncmod() (in module tvm.te)": [[29, "tvm.te.truncmod"]], "tvm.te": [[29, "module-tvm.te"]], "value_index (tvm.te.tensor property)": [[29, "tvm.te.Tensor.value_index"]], "var() (in module tvm.te)": [[29, "tvm.te.var"]], "oobchecker() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.OOBChecker"]], "apply_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.apply_prim_func_arg_and_result_memory_constraints"]], "calculate_allocated_bytes() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.calculate_allocated_bytes"]], "calculate_constant_bytes() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.calculate_constant_bytes"]], "calculate_workspace_bytes() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.calculate_workspace_bytes"]], "detect_buffer_access_lca() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.detect_buffer_access_lca"]], "estimate_tir_flops() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.estimate_tir_flops"]], "expr_deep_equal() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.expr_deep_equal"]], "find_anchor_block() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.find_anchor_block"]], "get_block_access_region() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.get_block_access_region"]], "get_block_read_write_region() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.get_block_read_write_region"]], "get_prim_func_arg_and_result_memory_constraints() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.get_prim_func_arg_and_result_memory_constraints"]], "get_vtcm_compaction_passes() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.get_vtcm_compaction_passes"]], "tvm.tir.analysis.analysis": [[30, "module-tvm.tir.analysis.analysis"]], "undefined_vars() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.undefined_vars"]], "verify_gpu_code() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.verify_gpu_code"]], "verify_memory() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.verify_memory"]], "verify_ssa() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.verify_ssa"]], "verify_well_formed() (in module tvm.tir.analysis.analysis)": [[30, "tvm.tir.analysis.analysis.verify_well_formed"]], "blockrv (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.BlockRV"]], "blockscope (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.BlockScope"]], "depkind (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.DepKind"]], "dependency (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.Dependency"]], "exprrv (in module tvm.tir.schedule)": [[31, "tvm.tir.schedule.ExprRV"]], "instruction (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.Instruction"]], "instructionkind (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.InstructionKind"]], "looprv (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.LoopRV"]], "opaque (tvm.tir.schedule.depkind attribute)": [[31, "tvm.tir.schedule.DepKind.OPAQUE"]], "raw (tvm.tir.schedule.depkind attribute)": [[31, "tvm.tir.schedule.DepKind.RAW"]], "schedule (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.Schedule"]], "scheduledebugmask (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.ScheduleDebugMask"]], "scheduleerror": [[31, "tvm.tir.schedule.ScheduleError"]], "schedulestate (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.ScheduleState"]], "stmtsref (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.StmtSRef"]], "trace (class in tvm.tir.schedule)": [[31, "tvm.tir.schedule.Trace"]], "verify_cached_flags (tvm.tir.schedule.scheduledebugmask attribute)": [[31, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_CACHED_FLAGS"]], "verify_sref_tree (tvm.tir.schedule.scheduledebugmask attribute)": [[31, "tvm.tir.schedule.ScheduleDebugMask.VERIFY_SREF_TREE"]], "war (tvm.tir.schedule.depkind attribute)": [[31, "tvm.tir.schedule.DepKind.WAR"]], "waw (tvm.tir.schedule.depkind attribute)": [[31, "tvm.tir.schedule.DepKind.WAW"]], "add_unit_loop() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.add_unit_loop"]], "annotate() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.annotate"]], "append() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.append"]], "apply_json_to_schedule() (tvm.tir.schedule.trace static method)": [[31, "tvm.tir.schedule.Trace.apply_json_to_schedule"]], "apply_to_schedule() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.apply_to_schedule"]], "as_json() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.as_json"]], "as_python() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.as_python"]], "attrs (tvm.tir.schedule.instruction attribute)": [[31, "tvm.tir.schedule.Instruction.attrs"]], "bind() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.bind"]], "blockize() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.blockize"]], "cache_index() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.cache_index"]], "cache_inplace() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.cache_inplace"]], "cache_read() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.cache_read"]], "cache_write() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.cache_write"]], "can_decompose_padding() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.can_decompose_padding"]], "compute_at() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.compute_at"]], "compute_inline() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.compute_inline"]], "copy() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.copy"]], "decisions (tvm.tir.schedule.trace attribute)": [[31, "tvm.tir.schedule.Trace.decisions"]], "decompose_padding() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.decompose_padding"]], "decompose_reduction() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.decompose_reduction"]], "enter_postproc() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.enter_postproc"]], "fork_seed() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.fork_seed"]], "func_working_on (tvm.tir.schedule.schedule property)": [[31, "tvm.tir.schedule.Schedule.func_working_on"]], "fuse() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.fuse"]], "get() (tvm.tir.schedule.instructionkind static method)": [[31, "tvm.tir.schedule.InstructionKind.get"]], "get() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get"]], "get_block() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get_block"]], "get_block_scope() (tvm.tir.schedule.schedulestate method)": [[31, "tvm.tir.schedule.ScheduleState.get_block_scope"]], "get_child_blocks() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get_child_blocks"]], "get_consumers() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get_consumers"]], "get_decision() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.get_decision"]], "get_deps_by_dst() (tvm.tir.schedule.blockscope method)": [[31, "tvm.tir.schedule.BlockScope.get_deps_by_dst"]], "get_deps_by_src() (tvm.tir.schedule.blockscope method)": [[31, "tvm.tir.schedule.BlockScope.get_deps_by_src"]], "get_loops() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get_loops"]], "get_output_blocks() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get_output_blocks"]], "get_producers() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get_producers"]], "get_sref() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.get_sref"]], "get_sref() (tvm.tir.schedule.schedulestate method)": [[31, "tvm.tir.schedule.ScheduleState.get_sref"]], "inline_mark() (tvm.tir.schedule.stmtsref static method)": [[31, "tvm.tir.schedule.StmtSRef.inline_mark"]], "inputs (tvm.tir.schedule.instruction attribute)": [[31, "tvm.tir.schedule.Instruction.inputs"]], "insts (tvm.tir.schedule.trace attribute)": [[31, "tvm.tir.schedule.Trace.insts"]], "is_pure (tvm.tir.schedule.instructionkind property)": [[31, "tvm.tir.schedule.InstructionKind.is_pure"]], "kind (tvm.tir.schedule.instruction attribute)": [[31, "tvm.tir.schedule.Instruction.kind"]], "merge() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.merge"]], "mod (tvm.tir.schedule.schedule property)": [[31, "tvm.tir.schedule.Schedule.mod"]], "name (tvm.tir.schedule.instructionkind attribute)": [[31, "tvm.tir.schedule.InstructionKind.name"]], "outputs (tvm.tir.schedule.instruction attribute)": [[31, "tvm.tir.schedule.Instruction.outputs"]], "pad_einsum() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.pad_einsum"]], "parallel() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.parallel"]], "parent (tvm.tir.schedule.stmtsref property)": [[31, "tvm.tir.schedule.StmtSRef.parent"]], "pop() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.pop"]], "reindex() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.reindex"]], "reindex_cache_read() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.reindex_cache_read"]], "reindex_cache_write() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.reindex_cache_write"]], "remove_rv() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.remove_rv"]], "reorder() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.reorder"]], "reorder_block_iter_var() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.reorder_block_iter_var"]], "replace() (tvm.tir.schedule.schedulestate method)": [[31, "tvm.tir.schedule.ScheduleState.replace"]], "reverse_compute_at() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.reverse_compute_at"]], "reverse_compute_inline() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.reverse_compute_inline"]], "rfactor() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.rfactor"]], "rolling_buffer() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.rolling_buffer"]], "root_mark() (tvm.tir.schedule.stmtsref static method)": [[31, "tvm.tir.schedule.StmtSRef.root_mark"]], "sample_categorical() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.sample_categorical"]], "sample_compute_location() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.sample_compute_location"]], "sample_partitioned_tile() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.sample_partitioned_tile"]], "sample_perfect_tile() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.sample_perfect_tile"]], "seed() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.seed"]], "set_axis_separator() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.set_axis_separator"]], "set_scope() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.set_scope"]], "show() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.show"]], "show() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.show"]], "simplified() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.simplified"]], "split() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.split"]], "state (tvm.tir.schedule.schedule property)": [[31, "tvm.tir.schedule.Schedule.state"]], "stmt (tvm.tir.schedule.stmtsref property)": [[31, "tvm.tir.schedule.StmtSRef.stmt"]], "storage_align() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.storage_align"]], "tensorize() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.tensorize"]], "trace (tvm.tir.schedule.schedule property)": [[31, "tvm.tir.schedule.Schedule.trace"]], "transform_block_layout() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.transform_block_layout"]], "transform_layout() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.transform_layout"]], "tvm.tir.schedule": [[31, "module-tvm.tir.schedule"]], "unannotate() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.unannotate"]], "unroll() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.unroll"]], "unsafe_hide_buffer_access() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.unsafe_hide_buffer_access"]], "unsafe_set_dtype() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.unsafe_set_dtype"]], "vectorize() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.vectorize"]], "with_decision() (tvm.tir.schedule.trace method)": [[31, "tvm.tir.schedule.Trace.with_decision"]], "work_on() (tvm.tir.schedule.schedule method)": [[31, "tvm.tir.schedule.Schedule.work_on"]], "ir_transform() (in module tvm.tir.stmt_functor)": [[32, "tvm.tir.stmt_functor.ir_transform"]], "post_order_visit() (in module tvm.tir.stmt_functor)": [[32, "tvm.tir.stmt_functor.post_order_visit"]], "pre_order_visit() (in module tvm.tir.stmt_functor)": [[32, "tvm.tir.stmt_functor.pre_order_visit"]], "renew_defs() (in module tvm.tir.stmt_functor)": [[32, "tvm.tir.stmt_functor.renew_defs"]], "substitute() (in module tvm.tir.stmt_functor)": [[32, "tvm.tir.stmt_functor.substitute"]], "tvm.tir.stmt_functor": [[32, "module-tvm.tir.stmt_functor"]], "add (class in tvm.tir)": [[33, "tvm.tir.Add"]], "allocate (class in tvm.tir)": [[33, "tvm.tir.Allocate"]], "allocateconst (class in tvm.tir)": [[33, "tvm.tir.AllocateConst"]], "and (class in tvm.tir)": [[33, "tvm.tir.And"]], "any (class in tvm.tir)": [[33, "tvm.tir.Any"]], "assertstmt (class in tvm.tir)": [[33, "tvm.tir.AssertStmt"]], "attrstmt (class in tvm.tir)": [[33, "tvm.tir.AttrStmt"]], "bijectivelayout (class in tvm.tir)": [[33, "tvm.tir.BijectiveLayout"]], "block (class in tvm.tir)": [[33, "tvm.tir.Block"]], "blockdependenceinfo (class in tvm.tir)": [[33, "tvm.tir.BlockDependenceInfo"]], "blockrealize (class in tvm.tir)": [[33, "tvm.tir.BlockRealize"]], "broadcast (class in tvm.tir)": [[33, "tvm.tir.Broadcast"]], "buffer (class in tvm.tir)": [[33, "tvm.tir.Buffer"]], "bufferload (class in tvm.tir)": [[33, "tvm.tir.BufferLoad"]], "bufferrealize (class in tvm.tir)": [[33, "tvm.tir.BufferRealize"]], "bufferregion (class in tvm.tir)": [[33, "tvm.tir.BufferRegion"]], "bufferstore (class in tvm.tir)": [[33, "tvm.tir.BufferStore"]], "call (class in tvm.tir)": [[33, "tvm.tir.Call"]], "calleffectkind (class in tvm.tir)": [[33, "tvm.tir.CallEffectKind"]], "cast (class in tvm.tir)": [[33, "tvm.tir.Cast"]], "commreducer (class in tvm.tir)": [[33, "tvm.tir.CommReducer"]], "dataproducer (class in tvm.tir)": [[33, "tvm.tir.DataProducer"]], "declbuffer (class in tvm.tir)": [[33, "tvm.tir.DeclBuffer"]], "div (class in tvm.tir)": [[33, "tvm.tir.Div"]], "eq (class in tvm.tir)": [[33, "tvm.tir.EQ"]], "evaluate (class in tvm.tir)": [[33, "tvm.tir.Evaluate"]], "floatimm (class in tvm.tir)": [[33, "tvm.tir.FloatImm"]], "floordiv (class in tvm.tir)": [[33, "tvm.tir.FloorDiv"]], "floormod (class in tvm.tir)": [[33, "tvm.tir.FloorMod"]], "for (class in tvm.tir)": [[33, "tvm.tir.For"]], "forkind (class in tvm.tir)": [[33, "tvm.tir.ForKind"]], "ge (class in tvm.tir)": [[33, "tvm.tir.GE"]], "gt (class in tvm.tir)": [[33, "tvm.tir.GT"]], "ifthenelse (class in tvm.tir)": [[33, "tvm.tir.IfThenElse"]], "indexmap (class in tvm.tir)": [[33, "tvm.tir.IndexMap"]], "intimm (class in tvm.tir)": [[33, "tvm.tir.IntImm"]], "itervar (class in tvm.tir)": [[33, "tvm.tir.IterVar"]], "le (class in tvm.tir)": [[33, "tvm.tir.LE"]], "lt (class in tvm.tir)": [[33, "tvm.tir.LT"]], "layout (class in tvm.tir)": [[33, "tvm.tir.Layout"]], "let (class in tvm.tir)": [[33, "tvm.tir.Let"]], "letstmt (class in tvm.tir)": [[33, "tvm.tir.LetStmt"]], "matchbufferregion (class in tvm.tir)": [[33, "tvm.tir.MatchBufferRegion"]], "max (class in tvm.tir)": [[33, "tvm.tir.Max"]], "min (class in tvm.tir)": [[33, "tvm.tir.Min"]], "mod (class in tvm.tir)": [[33, "tvm.tir.Mod"]], "mul (class in tvm.tir)": [[33, "tvm.tir.Mul"]], "ne (class in tvm.tir)": [[33, "tvm.tir.NE"]], "not (class in tvm.tir)": [[33, "tvm.tir.Not"]], "or (class in tvm.tir)": [[33, "tvm.tir.Or"]], "prefetch (class in tvm.tir)": [[33, "tvm.tir.Prefetch"]], "primfunc (class in tvm.tir)": [[33, "tvm.tir.PrimFunc"]], "producerload (class in tvm.tir)": [[33, "tvm.tir.ProducerLoad"]], "producerrealize (class in tvm.tir)": [[33, "tvm.tir.ProducerRealize"]], "producerstore (class in tvm.tir)": [[33, "tvm.tir.ProducerStore"]], "ramp (class in tvm.tir)": [[33, "tvm.tir.Ramp"]], "reduce (class in tvm.tir)": [[33, "tvm.tir.Reduce"]], "select (class in tvm.tir)": [[33, "tvm.tir.Select"]], "seqstmt (class in tvm.tir)": [[33, "tvm.tir.SeqStmt"]], "shuffle (class in tvm.tir)": [[33, "tvm.tir.Shuffle"]], "sizevar (class in tvm.tir)": [[33, "tvm.tir.SizeVar"]], "stmt (class in tvm.tir)": [[33, "tvm.tir.Stmt"]], "stringimm (class in tvm.tir)": [[33, "tvm.tir.StringImm"]], "sub (class in tvm.tir)": [[33, "tvm.tir.Sub"]], "tvmbackendallocworkspace() (in module tvm.tir)": [[33, "tvm.tir.TVMBackendAllocWorkspace"]], "tvmbackendfreeworkspace() (in module tvm.tir)": [[33, "tvm.tir.TVMBackendFreeWorkspace"]], "tensorintrin (class in tvm.tir)": [[33, "tvm.tir.TensorIntrin"]], "var (class in tvm.tir)": [[33, "tvm.tir.Var"]], "while (class in tvm.tir)": [[33, "tvm.tir.While"]], "abs() (in module tvm.tir)": [[33, "tvm.tir.abs"]], "access_ptr() (tvm.tir.buffer method)": [[33, "tvm.tir.Buffer.access_ptr"]], "acos() (in module tvm.tir)": [[33, "tvm.tir.acos"]], "acosh() (in module tvm.tir)": [[33, "tvm.tir.acosh"]], "add() (in module tvm.tir)": [[33, "tvm.tir.add"]], "address_of() (in module tvm.tir)": [[33, "tvm.tir.address_of"]], "all() (in module tvm.tir)": [[33, "tvm.tir.all"]], "any() (in module tvm.tir)": [[33, "tvm.tir.any"]], "asin() (in module tvm.tir)": [[33, "tvm.tir.asin"]], "asinh() (in module tvm.tir)": [[33, "tvm.tir.asinh"]], "assume() (in module tvm.tir)": [[33, "tvm.tir.assume"]], "atan() (in module tvm.tir)": [[33, "tvm.tir.atan"]], "atan2() (in module tvm.tir)": [[33, "tvm.tir.atan2"]], "atanh() (in module tvm.tir)": [[33, "tvm.tir.atanh"]], "backward_index() (tvm.tir.bijectivelayout method)": [[33, "tvm.tir.BijectiveLayout.backward_index"]], "backward_shape() (tvm.tir.bijectivelayout method)": [[33, "tvm.tir.BijectiveLayout.backward_shape"]], "bijective_layout() (in module tvm.tir)": [[33, "tvm.tir.bijective_layout"]], "bitwise_and() (in module tvm.tir)": [[33, "tvm.tir.bitwise_and"]], "bitwise_not() (in module tvm.tir)": [[33, "tvm.tir.bitwise_not"]], "bitwise_or() (in module tvm.tir)": [[33, "tvm.tir.bitwise_or"]], "bitwise_xor() (in module tvm.tir)": [[33, "tvm.tir.bitwise_xor"]], "call_cpacked() (in module tvm.tir)": [[33, "tvm.tir.call_cpacked"]], "call_cpacked_lowered() (in module tvm.tir)": [[33, "tvm.tir.call_cpacked_lowered"]], "call_extern() (in module tvm.tir)": [[33, "tvm.tir.call_extern"]], "call_intrin() (in module tvm.tir)": [[33, "tvm.tir.call_intrin"]], "call_llvm_intrin() (in module tvm.tir)": [[33, "tvm.tir.call_llvm_intrin"]], "call_llvm_pure_intrin() (in module tvm.tir)": [[33, "tvm.tir.call_llvm_pure_intrin"]], "call_packed() (in module tvm.tir)": [[33, "tvm.tir.call_packed"]], "call_packed_lowered() (in module tvm.tir)": [[33, "tvm.tir.call_packed_lowered"]], "call_pure_extern() (in module tvm.tir)": [[33, "tvm.tir.call_pure_extern"]], "call_tir() (in module tvm.tir)": [[33, "tvm.tir.call_tir"]], "ceil() (in module tvm.tir)": [[33, "tvm.tir.ceil"]], "ceildiv() (in module tvm.tir)": [[33, "tvm.tir.ceildiv"]], "clz() (in module tvm.tir)": [[33, "tvm.tir.clz"]], "comm_reducer() (in module tvm.tir)": [[33, "tvm.tir.comm_reducer"]], "copysign() (in module tvm.tir)": [[33, "tvm.tir.copysign"]], "cos() (in module tvm.tir)": [[33, "tvm.tir.cos"]], "cosh() (in module tvm.tir)": [[33, "tvm.tir.cosh"]], "create_barriers() (in module tvm.tir)": [[33, "tvm.tir.create_barriers"]], "decl_buffer() (in module tvm.tir)": [[33, "tvm.tir.decl_buffer"]], "div() (in module tvm.tir)": [[33, "tvm.tir.div"]], "end_profile_intrinsic() (in module tvm.tir)": [[33, "tvm.tir.end_profile_intrinsic"]], "erf() (in module tvm.tir)": [[33, "tvm.tir.erf"]], "exp() (in module tvm.tir)": [[33, "tvm.tir.exp"]], "exp10() (in module tvm.tir)": [[33, "tvm.tir.exp10"]], "exp2() (in module tvm.tir)": [[33, "tvm.tir.exp2"]], "factor_of() (tvm.tir.layout method)": [[33, "tvm.tir.Layout.factor_of"]], "floor() (in module tvm.tir)": [[33, "tvm.tir.floor"]], "floordiv() (in module tvm.tir)": [[33, "tvm.tir.floordiv"]], "floormod() (in module tvm.tir)": [[33, "tvm.tir.floormod"]], "fmod() (in module tvm.tir)": [[33, "tvm.tir.fmod"]], "forward_index() (tvm.tir.bijectivelayout method)": [[33, "tvm.tir.BijectiveLayout.forward_index"]], "forward_shape() (tvm.tir.bijectivelayout method)": [[33, "tvm.tir.BijectiveLayout.forward_shape"]], "from_func() (tvm.tir.indexmap static method)": [[33, "tvm.tir.IndexMap.from_func"]], "from_func_with_separators() (tvm.tir.indexmap static method)": [[33, "tvm.tir.IndexMap.from_func_with_separators"]], "get() (tvm.tir.tensorintrin static method)": [[33, "tvm.tir.TensorIntrin.get"]], "get_block_scope() (tvm.tir.blockdependenceinfo method)": [[33, "tvm.tir.BlockDependenceInfo.get_block_scope"]], "get_flattened_buffer() (tvm.tir.buffer method)": [[33, "tvm.tir.Buffer.get_flattened_buffer"]], "get_sref() (tvm.tir.blockdependenceinfo method)": [[33, "tvm.tir.BlockDependenceInfo.get_sref"]], "hypot() (in module tvm.tir)": [[33, "tvm.tir.hypot"]], "if_then_else() (in module tvm.tir)": [[33, "tvm.tir.if_then_else"]], "index_of() (tvm.tir.layout method)": [[33, "tvm.tir.Layout.index_of"]], "indexdiv() (in module tvm.tir)": [[33, "tvm.tir.indexdiv"]], "indexmod() (in module tvm.tir)": [[33, "tvm.tir.indexmod"]], "infinity() (in module tvm.tir)": [[33, "tvm.tir.infinity"]], "inverse() (tvm.tir.indexmap method)": [[33, "tvm.tir.IndexMap.inverse"]], "is_equivalent_to() (tvm.tir.indexmap method)": [[33, "tvm.tir.IndexMap.is_equivalent_to"]], "isfinite() (in module tvm.tir)": [[33, "tvm.tir.isfinite"]], "isinf() (in module tvm.tir)": [[33, "tvm.tir.isinf"]], "isnan() (in module tvm.tir)": [[33, "tvm.tir.isnan"]], "isnullptr() (in module tvm.tir)": [[33, "tvm.tir.isnullptr"]], "layout() (in module tvm.tir)": [[33, "tvm.tir.layout"]], "ldexp() (in module tvm.tir)": [[33, "tvm.tir.ldexp"]], "likely() (in module tvm.tir)": [[33, "tvm.tir.likely"]], "log() (in module tvm.tir)": [[33, "tvm.tir.log"]], "log10() (in module tvm.tir)": [[33, "tvm.tir.log10"]], "log1p() (in module tvm.tir)": [[33, "tvm.tir.log1p"]], "log2() (in module tvm.tir)": [[33, "tvm.tir.log2"]], "lookup_param() (in module tvm.tir)": [[33, "tvm.tir.lookup_param"]], "map_indices() (tvm.tir.indexmap method)": [[33, "tvm.tir.IndexMap.map_indices"]], "map_ndarray() (tvm.tir.indexmap method)": [[33, "tvm.tir.IndexMap.map_ndarray"]], "map_shape() (tvm.tir.indexmap method)": [[33, "tvm.tir.IndexMap.map_shape"]], "max() (in module tvm.tir)": [[33, "tvm.tir.max"]], "max_value() (in module tvm.tir)": [[33, "tvm.tir.max_value"]], "min() (in module tvm.tir)": [[33, "tvm.tir.min"]], "min_value() (in module tvm.tir)": [[33, "tvm.tir.min_value"]], "mma_fill() (in module tvm.tir)": [[33, "tvm.tir.mma_fill"]], "mma_store() (in module tvm.tir)": [[33, "tvm.tir.mma_store"]], "multiply() (in module tvm.tir)": [[33, "tvm.tir.multiply"]], "nearbyint() (in module tvm.tir)": [[33, "tvm.tir.nearbyint"]], "nextafter() (in module tvm.tir)": [[33, "tvm.tir.nextafter"]], "non_surjective_inverse() (tvm.tir.indexmap method)": [[33, "tvm.tir.IndexMap.non_surjective_inverse"]], "offset_of() (tvm.tir.buffer method)": [[33, "tvm.tir.Buffer.offset_of"]], "popcount() (in module tvm.tir)": [[33, "tvm.tir.popcount"]], "pow() (in module tvm.tir)": [[33, "tvm.tir.pow"]], "power() (in module tvm.tir)": [[33, "tvm.tir.power"]], "ptx_arrive_barrier() (in module tvm.tir)": [[33, "tvm.tir.ptx_arrive_barrier"]], "ptx_arrive_barrier_expect_tx() (in module tvm.tir)": [[33, "tvm.tir.ptx_arrive_barrier_expect_tx"]], "ptx_commit_group() (in module tvm.tir)": [[33, "tvm.tir.ptx_commit_group"]], "ptx_cp_async() (in module tvm.tir)": [[33, "tvm.tir.ptx_cp_async"]], "ptx_cp_async_barrier() (in module tvm.tir)": [[33, "tvm.tir.ptx_cp_async_barrier"]], "ptx_cp_async_bulk() (in module tvm.tir)": [[33, "tvm.tir.ptx_cp_async_bulk"]], "ptx_init_barrier_thread_count() (in module tvm.tir)": [[33, "tvm.tir.ptx_init_barrier_thread_count"]], "ptx_ldmatrix() (in module tvm.tir)": [[33, "tvm.tir.ptx_ldmatrix"]], "ptx_mma() (in module tvm.tir)": [[33, "tvm.tir.ptx_mma"]], "ptx_mma_sp() (in module tvm.tir)": [[33, "tvm.tir.ptx_mma_sp"]], "ptx_wait_barrier() (in module tvm.tir)": [[33, "tvm.tir.ptx_wait_barrier"]], "ptx_wait_group() (in module tvm.tir)": [[33, "tvm.tir.ptx_wait_group"]], "q_multiply_shift() (in module tvm.tir)": [[33, "tvm.tir.q_multiply_shift"]], "q_multiply_shift_per_axis() (in module tvm.tir)": [[33, "tvm.tir.q_multiply_shift_per_axis"]], "register() (tvm.tir.tensorintrin static method)": [[33, "tvm.tir.TensorIntrin.register"]], "reinterpret() (in module tvm.tir)": [[33, "tvm.tir.reinterpret"]], "ret() (in module tvm.tir)": [[33, "tvm.tir.ret"]], "round() (in module tvm.tir)": [[33, "tvm.tir.round"]], "rsqrt() (in module tvm.tir)": [[33, "tvm.tir.rsqrt"]], "scope() (tvm.tir.buffer method)": [[33, "tvm.tir.Buffer.scope"]], "shift_left() (in module tvm.tir)": [[33, "tvm.tir.shift_left"]], "shift_right() (in module tvm.tir)": [[33, "tvm.tir.shift_right"]], "sigmoid() (in module tvm.tir)": [[33, "tvm.tir.sigmoid"]], "sin() (in module tvm.tir)": [[33, "tvm.tir.sin"]], "sinh() (in module tvm.tir)": [[33, "tvm.tir.sinh"]], "specialize() (tvm.tir.primfunc method)": [[33, "tvm.tir.PrimFunc.specialize"]], "sqrt() (in module tvm.tir)": [[33, "tvm.tir.sqrt"]], "start_profile_intrinsic() (in module tvm.tir)": [[33, "tvm.tir.start_profile_intrinsic"]], "stmt_list() (in module tvm.tir)": [[33, "tvm.tir.stmt_list"]], "stmt_seq() (in module tvm.tir)": [[33, "tvm.tir.stmt_seq"]], "subtract() (in module tvm.tir)": [[33, "tvm.tir.subtract"]], "sum() (in module tvm.tir)": [[33, "tvm.tir.sum"]], "tan() (in module tvm.tir)": [[33, "tvm.tir.tan"]], "tanh() (in module tvm.tir)": [[33, "tvm.tir.tanh"]], "trace() (in module tvm.tir)": [[33, "tvm.tir.trace"]], "trunc() (in module tvm.tir)": [[33, "tvm.tir.trunc"]], "truncdiv() (in module tvm.tir)": [[33, "tvm.tir.truncdiv"]], "truncmod() (in module tvm.tir)": [[33, "tvm.tir.truncmod"]], "tvm.tir": [[33, "module-tvm.tir"]], "tvm_access_ptr() (in module tvm.tir)": [[33, "tvm.tir.tvm_access_ptr"]], "tvm_bmma_sync() (in module tvm.tir)": [[33, "tvm.tir.tvm_bmma_sync"]], "tvm_check_return() (in module tvm.tir)": [[33, "tvm.tir.tvm_check_return"]], "tvm_fill_fragment() (in module tvm.tir)": [[33, "tvm.tir.tvm_fill_fragment"]], "tvm_load_matrix_sync() (in module tvm.tir)": [[33, "tvm.tir.tvm_load_matrix_sync"]], "tvm_mma_sync() (in module tvm.tir)": [[33, "tvm.tir.tvm_mma_sync"]], "tvm_stack_alloca() (in module tvm.tir)": [[33, "tvm.tir.tvm_stack_alloca"]], "tvm_stack_make_array() (in module tvm.tir)": [[33, "tvm.tir.tvm_stack_make_array"]], "tvm_stack_make_shape() (in module tvm.tir)": [[33, "tvm.tir.tvm_stack_make_shape"]], "tvm_store_matrix_sync() (in module tvm.tir)": [[33, "tvm.tir.tvm_store_matrix_sync"]], "tvm_struct_get() (in module tvm.tir)": [[33, "tvm.tir.tvm_struct_get"]], "tvm_struct_set() (in module tvm.tir)": [[33, "tvm.tir.tvm_struct_set"]], "tvm_thread_allreduce() (in module tvm.tir)": [[33, "tvm.tir.tvm_thread_allreduce"]], "tvm_throw_last_error() (in module tvm.tir)": [[33, "tvm.tir.tvm_throw_last_error"]], "tvm_tuple() (in module tvm.tir)": [[33, "tvm.tir.tvm_tuple"]], "type_annotation() (in module tvm.tir)": [[33, "tvm.tir.type_annotation"]], "undef() (in module tvm.tir)": [[33, "tvm.tir.undef"]], "vectorcombine() (in module tvm.tir)": [[33, "tvm.tir.vectorcombine"]], "vectorhigh() (in module tvm.tir)": [[33, "tvm.tir.vectorhigh"]], "vectorlow() (in module tvm.tir)": [[33, "tvm.tir.vectorlow"]], "vload() (tvm.tir.buffer method)": [[33, "tvm.tir.Buffer.vload"]], "vstore() (tvm.tir.buffer method)": [[33, "tvm.tir.Buffer.vstore"]], "with_body() (tvm.tir.primfunc method)": [[33, "tvm.tir.PrimFunc.with_body"]], "all (tvm.tir.transform.hoistedconditionals attribute)": [[34, "tvm.tir.transform.HoistedConditionals.All"]], "all (tvm.tir.transform.hoistedletbindings attribute)": [[34, "tvm.tir.transform.HoistedLetBindings.All"]], "annotatedeviceregions() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.AnnotateDeviceRegions"]], "annotateentryfunc() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.AnnotateEntryFunc"]], "apply() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.Apply"]], "applylayouttransforms() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ApplyLayoutTransforms"]], "bf16computelegalize() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.BF16ComputeLegalize"]], "bf16storagelegalize() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.BF16StorageLegalize"]], "bindtarget() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.BindTarget"]], "booleanexpression (tvm.tir.transform.hoistedconditionals attribute)": [[34, "tvm.tir.transform.HoistedConditionals.BooleanExpression"]], "coprocsync() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.CoProcSync"]], "combinecontextcall() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.CombineContextCall"]], "commonsubexprelimtir() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.CommonSubexprElimTIR"]], "compactbufferallocation() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.CompactBufferAllocation"]], "convertblockstoopaque() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ConvertBlocksToOpaque"]], "convertforloopstoserial() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ConvertForLoopsToSerial"]], "convertssa() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ConvertSSA"]], "decoratedevicescope() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.DecorateDeviceScope"]], "defaultgpuschedule() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.DefaultGPUSchedule"]], "extractprimfuncconstants() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ExtractPrimFuncConstants"]], "fp8computelegalize() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.FP8ComputeLegalize"]], "fp8storagelegalize() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.FP8StorageLegalize"]], "filter() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.Filter"]], "flattenbuffer() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.FlattenBuffer"]], "forcenarrowindextoint32() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ForceNarrowIndexToInt32"]], "hoistexpression() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.HoistExpression"]], "hoistifthenelse() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.HoistIfThenElse"]], "hoistedconditionals (class in tvm.tir.transform)": [[34, "tvm.tir.transform.HoistedConditionals"]], "hoistedletbindings (class in tvm.tir.transform)": [[34, "tvm.tir.transform.HoistedLetBindings"]], "ifelseexpr (tvm.tir.transform.hoistedconditionals attribute)": [[34, "tvm.tir.transform.HoistedConditionals.IfElseExpr"]], "ifelsestmt (tvm.tir.transform.hoistedconditionals attribute)": [[34, "tvm.tir.transform.HoistedConditionals.IfElseStmt"]], "inferfragment() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InferFragment"]], "injectcopyintrin() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectCopyIntrin"]], "injectdoublebuffer() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectDoubleBuffer"]], "injectptxasynccopy() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectPTXAsyncCopy"]], "injectpermutedlayout() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectPermutedLayout"]], "injectprefetch() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectPrefetch"]], "injectrollingbuffer() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectRollingBuffer"]], "injectsoftwarepipeline() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectSoftwarePipeline"]], "injectvirtualthread() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InjectVirtualThread"]], "installdebugspans() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InstallDebugSpans"]], "instrumentboundcheckers() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InstrumentBoundCheckers"]], "instrumentprofileintrinsics() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.InstrumentProfileIntrinsics"]], "legalizepackedcalls() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LegalizePackedCalls"]], "letexpr (tvm.tir.transform.hoistedletbindings attribute)": [[34, "tvm.tir.transform.HoistedLetBindings.LetExpr"]], "letstmt (tvm.tir.transform.hoistedletbindings attribute)": [[34, "tvm.tir.transform.HoistedLetBindings.LetStmt"]], "liftattrscope() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LiftAttrScope"]], "liftthreadbinding() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LiftThreadBinding"]], "looppartition() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LoopPartition"]], "lowerautocopy() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerAutoCopy"]], "lowercrossthreadreduction() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerCrossThreadReduction"]], "lowercustomdatatypes() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerCustomDatatypes"]], "lowerdevicekernellaunch() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerDeviceKernelLaunch"]], "lowerdevicestorageaccessinfo() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerDeviceStorageAccessInfo"]], "lowerinitblock() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerInitBlock"]], "lowerintrin() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerIntrin"]], "lowermatchbuffer() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerMatchBuffer"]], "loweropaqueblock() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerOpaqueBlock"]], "lowertvmbuiltin() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerTVMBuiltin"]], "lowerthreadallreduce() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerThreadAllreduce"]], "lowerwarpmemory() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.LowerWarpMemory"]], "makepackedapi() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.MakePackedAPI"]], "makeunpackedapi() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.MakeUnpackedAPI"]], "manifestsharedmemorylocalstage() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ManifestSharedMemoryLocalStage"]], "mergedynamicsharedmemoryallocations() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.MergeDynamicSharedMemoryAllocations"]], "narrowdatatype() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.NarrowDataType"]], "never (tvm.tir.transform.hoistedconditionals attribute)": [[34, "tvm.tir.transform.HoistedConditionals.Never"]], "never (tvm.tir.transform.hoistedletbindings attribute)": [[34, "tvm.tir.transform.HoistedLetBindings.Never"]], "planandupdatebufferallocationlocation() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.PlanAndUpdateBufferAllocationLocation"]], "primfuncpass (class in tvm.tir.transform)": [[34, "tvm.tir.transform.PrimFuncPass"]], "reducebranchingthroughovercompute() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ReduceBranchingThroughOvercompute"]], "removeassume() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.RemoveAssume"]], "removenoop() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.RemoveNoOp"]], "removestoreundef() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.RemoveStoreUndef"]], "removeweightlayoutrewriteblock() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.RemoveWeightLayoutRewriteBlock"]], "renormalizesplitpattern() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.RenormalizeSplitPattern"]], "requiredbyconditional (tvm.tir.transform.hoistedletbindings attribute)": [[34, "tvm.tir.transform.HoistedLetBindings.RequiredByConditional"]], "rewriteunsafeselect() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.RewriteUnsafeSelect"]], "simplify() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.Simplify"]], "skipassert() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.SkipAssert"]], "splithostdevice() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.SplitHostDevice"]], "storageflatten() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.StorageFlatten"]], "storagerewrite() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.StorageRewrite"]], "textureflatten() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.TextureFlatten"]], "threadsync() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.ThreadSync"]], "transformmmabufferlayout() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.TransformMmaBufferLayout"]], "unifythreadbinding() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.UnifyThreadBinding"]], "unrollloop() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.UnrollLoop"]], "usingblockvar (tvm.tir.transform.hoistedconditionals attribute)": [[34, "tvm.tir.transform.HoistedConditionals.UsingBlockVar"]], "vectorizeloop() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.VectorizeLoop"]], "verifymemory() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.VerifyMemory"]], "verifyvtcmlimit() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.VerifyVTCMLimit"]], "prim_func_pass() (in module tvm.tir.transform)": [[34, "tvm.tir.transform.prim_func_pass"]], "tvm.tir.transform": [[34, "module-tvm.tir.transform"]], "workload (class in tvm.topi.nn)": [[35, "tvm.topi.nn.Workload"]], "adaptive_pool() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.adaptive_pool"]], "adaptive_pool3d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.adaptive_pool3d"]], "add_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.add_alter_layout"]], "affine_grid() (in module tvm.topi.image)": [[35, "tvm.topi.image.affine_grid"]], "batch_matmul() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.batch_matmul"]], "batch_matmul_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.batch_matmul_legalize"]], "batch_norm() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.batch_norm"]], "batch_to_space_nd() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.batch_to_space_nd"]], "bias_add_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.bias_add_legalize"]], "binarize_pack() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.binarize_pack"]], "binary_dense() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.binary_dense"]], "bitpack() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.bitpack"]], "bitserial_conv2d_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.bitserial_conv2d_legalize"]], "bitserial_conv2d_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.bitserial_conv2d_nchw"]], "bitserial_conv2d_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.bitserial_conv2d_nhwc"]], "bitserial_dense() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.bitserial_dense"]], "can_convert_multiply_to_intdiv() (in module tvm.topi.image)": [[35, "tvm.topi.image.can_convert_multiply_to_intdiv"]], "concatenate() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.concatenate"]], "conv() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv"]], "conv1d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv1d"]], "conv1d_ncw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv1d_ncw"]], "conv1d_nwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv1d_nwc"]], "conv1d_transpose_ncw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv1d_transpose_ncw"]], "conv2d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d"]], "conv2d_nchwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_NCHWc"]], "conv2d_nchwc_int8() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_NCHWc_int8"]], "conv2d_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_alter_layout"]], "conv2d_gemm_weight_transform() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_gemm_weight_transform"]], "conv2d_hwcn() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_hwcn"]], "conv2d_infer_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_infer_layout"]], "conv2d_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_legalize"]], "conv2d_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_nchw"]], "conv2d_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_nhwc"]], "conv2d_transpose_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_transpose_legalize"]], "conv2d_transpose_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_transpose_nchw"]], "conv2d_transpose_nchw_preprocess() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_transpose_nchw_preprocess"]], "conv2d_winograd_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_winograd_nchw"]], "conv2d_winograd_nchw_without_weight_transform() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_winograd_nchw_without_weight_transform"]], "conv2d_winograd_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_winograd_nhwc"]], "conv2d_winograd_nhwc_without_weight_transform() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_winograd_nhwc_without_weight_transform"]], "conv2d_winograd_nnpack_weight_transform() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_winograd_nnpack_weight_transform"]], "conv2d_winograd_weight_transform() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv2d_winograd_weight_transform"]], "conv3d_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv3d_alter_layout"]], "conv3d_ncdhw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv3d_ncdhw"]], "conv3d_ndhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv3d_ndhwc"]], "conv3d_transpose_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv3d_transpose_legalize"]], "conv3d_transpose_ncdhw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv3d_transpose_ncdhw"]], "conv3d_transpose_ncdhw_preprocess() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv3d_transpose_ncdhw_preprocess"]], "conv3d_winograd_weight_transform() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.conv3d_winograd_weight_transform"]], "correlation_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.correlation_nchw"]], "crop_and_resize() (in module tvm.topi.image)": [[35, "tvm.topi.image.crop_and_resize"]], "csrmm() (in module tvm.topi.sparse)": [[35, "tvm.topi.sparse.csrmm"]], "csrmv() (in module tvm.topi.sparse)": [[35, "tvm.topi.sparse.csrmv"]], "declaration_conv2d_transpose_impl() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.declaration_conv2d_transpose_impl"]], "declaration_conv3d_transpose_impl() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.declaration_conv3d_transpose_impl"]], "deformable_conv2d_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.deformable_conv2d_nchw"]], "deformable_conv2d_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.deformable_conv2d_nhwc"]], "dense() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.dense"]], "dense() (in module tvm.topi.sparse)": [[35, "tvm.topi.sparse.dense"]], "dense_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.dense_alter_layout"]], "dense_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.dense_legalize"]], "dense_pack() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.dense_pack"]], "depth_to_space() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.depth_to_space"]], "depthwise_conv2d_nchwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.depthwise_conv2d_NCHWc"]], "depthwise_conv2d_backward_input_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.depthwise_conv2d_backward_input_nhwc"]], "depthwise_conv2d_backward_weight_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.depthwise_conv2d_backward_weight_nhwc"]], "depthwise_conv2d_infer_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.depthwise_conv2d_infer_layout"]], "depthwise_conv2d_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.depthwise_conv2d_nchw"]], "depthwise_conv2d_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.depthwise_conv2d_nhwc"]], "dilate() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.dilate"]], "dilation2d_nchw() (in module tvm.topi.image)": [[35, "tvm.topi.image.dilation2d_nchw"]], "dilation2d_nhwc() (in module tvm.topi.image)": [[35, "tvm.topi.image.dilation2d_nhwc"]], "dilation_h (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.dilation_h"]], "dilation_w (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.dilation_w"]], "equal_const_int() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.equal_const_int"]], "fast_softmax() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.fast_softmax"]], "fifo_buffer() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.fifo_buffer"]], "flatten() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.flatten"]], "get_1d_indices() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_1d_indices"]], "get_1d_pixel() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_1d_pixel"]], "get_2d_indices() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_2d_indices"]], "get_2d_pixel() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_2d_pixel"]], "get_3d_indices() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_3d_indices"]], "get_3d_pixel() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_3d_pixel"]], "get_closest_index() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_closest_index"]], "get_const_int() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.get_const_int"]], "get_const_tuple() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.get_const_tuple"]], "get_inx() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_inx"]], "get_pad_tuple() (in module tvm.topi.image)": [[35, "tvm.topi.image.get_pad_tuple"]], "get_pad_tuple() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.get_pad_tuple"]], "get_pad_tuple1d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.get_pad_tuple1d"]], "get_pad_tuple3d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.get_pad_tuple3d"]], "get_pad_tuple_generic() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.get_pad_tuple_generic"]], "global_pool() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.global_pool"]], "grid_sample() (in module tvm.topi.image)": [[35, "tvm.topi.image.grid_sample"]], "group_conv1d_ncw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.group_conv1d_ncw"]], "group_conv1d_nwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.group_conv1d_nwc"]], "group_conv2d_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.group_conv2d_nchw"]], "group_conv2d_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.group_conv2d_nhwc"]], "group_conv2d_transpose_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.group_conv2d_transpose_nchw"]], "group_norm() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.group_norm"]], "height (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.height"]], "in_dtype (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.in_dtype"]], "in_filter (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.in_filter"]], "instance_norm() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.instance_norm"]], "kernel_h (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.kernel_h"]], "kernel_w (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.kernel_w"]], "layer_norm() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.layer_norm"]], "layout_transform() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.layout_transform"]], "leaky_relu() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.leaky_relu"]], "log_softmax() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.log_softmax"]], "lrn() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.lrn"]], "lstm() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.lstm"]], "matmul() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.matmul"]], "matmul_legalize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.matmul_legalize"]], "mirror_pad() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.mirror_pad"]], "namedtuple() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.namedtuple"]], "nchw_pack_layout() (in module tvm.topi.image)": [[35, "tvm.topi.image.nchw_pack_layout"]], "nchw_xc_layout() (in module tvm.topi.image)": [[35, "tvm.topi.image.nchw_xc_layout"]], "nll_loss() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.nll_loss"]], "out_dtype (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.out_dtype"]], "out_filter (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.out_filter"]], "pad() (in module tvm.topi.image)": [[35, "tvm.topi.image.pad"]], "pad() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.pad"]], "padb (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.padb"]], "padl (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.padl"]], "padr (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.padr"]], "padt (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.padt"]], "pool1d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.pool1d"]], "pool2d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.pool2d"]], "pool3d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.pool3d"]], "pool_grad() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.pool_grad"]], "prelu() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.prelu"]], "qnn_conv2d_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.qnn_conv2d_alter_layout"]], "qnn_dense_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.qnn_dense_alter_layout"]], "qnn_requantize_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.qnn_requantize_alter_layout"]], "reduce() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.reduce"]], "relu() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.relu"]], "resize1d() (in module tvm.topi.image)": [[35, "tvm.topi.image.resize1d"]], "resize2d() (in module tvm.topi.image)": [[35, "tvm.topi.image.resize2d"]], "resize3d() (in module tvm.topi.image)": [[35, "tvm.topi.image.resize3d"]], "rms_norm() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.rms_norm"]], "scale_shift_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.scale_shift_nchw"]], "scale_shift_nchwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.scale_shift_nchwc"]], "scale_shift_nhwc() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.scale_shift_nhwc"]], "simplify() (in module tvm.topi.image)": [[35, "tvm.topi.image.simplify"]], "simplify() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.simplify"]], "simulated_dequantize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.simulated_dequantize"]], "simulated_quantize() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.simulated_quantize"]], "softmax() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.softmax"]], "softmax_common() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.softmax_common"]], "space_to_batch_nd() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.space_to_batch_nd"]], "space_to_depth() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.space_to_depth"]], "sparse_add() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.sparse_add"]], "sparse_conv2d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.sparse_conv2d"]], "sparse_dense() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.sparse_dense"]], "sparse_dense_alter_layout() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.sparse_dense_alter_layout"]], "sparse_dense_sp_lhs() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.sparse_dense_sp_lhs"]], "sparse_dense_sp_rhs() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.sparse_dense_sp_rhs"]], "sparse_transpose() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.sparse_transpose"]], "stride_h (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.stride_h"]], "stride_w (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.stride_w"]], "strided_slice() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.strided_slice"]], "try_get_conv2d_sparse_input() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.try_get_conv2d_sparse_input"]], "try_get_sparse_input() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.try_get_sparse_input"]], "tvm.topi.image": [[35, "module-tvm.topi.image"]], "tvm.topi.nn": [[35, "module-tvm.topi.nn"]], "tvm.topi.sparse": [[35, "module-tvm.topi.sparse"]], "unpack_nchwc_to_nchw() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.unpack_NCHWc_to_nchw"]], "upsampling() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.upsampling"]], "upsampling3d() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.upsampling3d"]], "width (tvm.topi.nn.workload attribute)": [[35, "tvm.topi.nn.Workload.width"]], "winograd_transform_matrices() (in module tvm.topi.nn)": [[35, "tvm.topi.nn.winograd_transform_matrices"]], "modulepass (class in tvm.transform)": [[36, "tvm.transform.ModulePass"]], "pass (class in tvm.transform)": [[36, "tvm.transform.Pass"]], "passcontext (class in tvm.transform)": [[36, "tvm.transform.PassContext"]], "passinfo (class in tvm.transform)": [[36, "tvm.transform.PassInfo"]], "printir() (in module tvm.transform)": [[36, "tvm.transform.PrintIR"]], "sequential (class in tvm.transform)": [[36, "tvm.transform.Sequential"]], "current() (tvm.transform.passcontext static method)": [[36, "tvm.transform.PassContext.current"]], "get_current_trace() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.get_current_trace"]], "get_trace_stack() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.get_trace_stack"]], "get_trace_stack_size() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.get_trace_stack_size"]], "get_tuning_api_database() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.get_tuning_api_database"]], "inc_num_evals() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.inc_num_evals"]], "info (tvm.transform.pass property)": [[36, "tvm.transform.Pass.info"]], "list_configs() (tvm.transform.passcontext static method)": [[36, "tvm.transform.PassContext.list_configs"]], "module_pass() (in module tvm.transform)": [[36, "tvm.transform.module_pass"]], "override_instruments() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.override_instruments"]], "pop_trace() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.pop_trace"]], "push_trace() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.push_trace"]], "set_num_evals() (tvm.transform.passcontext method)": [[36, "tvm.transform.PassContext.set_num_evals"]], "tvm.transform": [[36, "module-tvm.transform"]]}})